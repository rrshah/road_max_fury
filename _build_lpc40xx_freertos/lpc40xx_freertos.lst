
_build_lpc40xx_freertos/lpc40xx_freertos.elf:     file format elf32-littlearm
_build_lpc40xx_freertos/lpc40xx_freertos.elf
architecture: armv7e-m, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x0000010d

Program Header:
    LOAD off    0x00010000 vaddr 0x00000000 paddr 0x00000000 align 2**16
         filesz 0x00001b64 memsz 0x00001b64 flags r-x
    LOAD off    0x00020000 vaddr 0x10000000 paddr 0x00001b64 align 2**16
         filesz 0x0000016c memsz 0x0000016c flags rw-
    LOAD off    0x0002016c vaddr 0x1000016c paddr 0x1000016c align 2**16
         filesz 0x00000000 memsz 0x00000154 flags rw-
private flags = 5000400: [Version5 EABI] [hard-float ABI]

Sections:
Idx Name             Size      VMA       LMA       File off  Algn  Flags
  0 .text            00001b64  00000000  00000000  00010000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data            0000016c  10000000  00001b64  00020000  2**2  CONTENTS, ALLOC, LOAD, DATA
  2 .data_RAM2       00000000  20000000  20000000  0002016c  2**2  CONTENTS
  3 .bss             00000154  1000016c  1000016c  0002016c  2**2  ALLOC
  4 .uninit_RESERVED 00000000  10000000  10000000  0002016c  2**2  CONTENTS
  5 .noinit_RAM2     00000000  20000000  20000000  0002016c  2**2  CONTENTS
  6 .noinit          00000000  100002c0  100002c0  0002016c  2**2  CONTENTS
  7 .debug_info      0000c6be  00000000  00000000  0002016c  2**0  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev    000028e2  00000000  00000000  0002c82a  2**0  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges   00000698  00000000  00000000  0002f10c  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges    00000b90  00000000  00000000  0002f7a4  2**0  CONTENTS, READONLY, DEBUGGING
 11 .debug_line      00006403  00000000  00000000  00030334  2**0  CONTENTS, READONLY, DEBUGGING
 12 .debug_str       0000342e  00000000  00000000  00036737  2**0  CONTENTS, READONLY, DEBUGGING
 13 .comment         00000076  00000000  00000000  00039b65  2**0  CONTENTS, READONLY
 14 .ARM.attributes  00000032  00000000  00000000  00039bdb  2**0  CONTENTS, READONLY
 15 .debug_frame     000012b0  00000000  00000000  00039c10  2**2  CONTENTS, READONLY, DEBUGGING
 16 .debug_loc       00004cb8  00000000  00000000  0003aec0  2**0  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
10000000 l    d  .data	00000000 .data
20000000 l    d  .data_RAM2	00000000 .data_RAM2
1000016c l    d  .bss	00000000 .bss
10000000 l    d  .uninit_RESERVED	00000000 .uninit_RESERVED
20000000 l    d  .noinit_RAM2	00000000 .noinit_RAM2
100002c0 l    d  .noinit	00000000 .noinit
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 interrupt_vector_table.c
00000128 l     F .text	00000002 halt
00000000 l    df *ABS*	00000000 entry_point.c
00000000 l    df *ABS*	00000000 main.c
0000012a l     F .text	0000003c switch_task
00000166 l     F .text	00000060 led_task
1000016c l     O .bss	00000010 led_i.7878
1000017c l     O .bss	00000010 led_x.7880
1000018c l     O .bss	00000010 switch_i.7879
1000019c l     O .bss	00000010 switch_x.7881
00000000 l    df *ABS*	00000000 rtos_hooks.c
00000000 l    df *ABS*	00000000 list.c
00000000 l    df *ABS*	00000000 queue.c
00000384 l     F .text	00000016 prvIsQueueEmpty
0000039a l     F .text	0000006a prvCopyDataToQueue
00000404 l     F .text	0000004a prvNotifyQueueSetContainer
0000044e l     F .text	0000002a prvCopyDataFromQueue
00000478 l     F .text	0000007e prvUnlockQueue
00000000 l    df *ABS*	00000000 tasks.c
000008bc l     F .text	00000028 prvIdleTask
000008e4 l     F .text	00000024 prvResetNextTaskUnblockTime
00000908 l     F .text	0000008c prvAddCurrentTaskToDelayedList
100001b8 l     O .bss	00000004 pxDelayedTaskList
100001bc l     O .bss	00000004 pxOverflowDelayedTaskList
100001c0 l     O .bss	00000064 pxReadyTasksLists
10000224 l     O .bss	00000004 uxCurrentNumberOfTasks
10000228 l     O .bss	00000004 uxPendedTicks
1000022c l     O .bss	00000004 uxSchedulerSuspended
10000230 l     O .bss	00000004 uxTaskNumber
10000234 l     O .bss	00000004 uxTopReadyPriority
10000238 l     O .bss	00000014 xDelayedTaskList1
1000024c l     O .bss	00000014 xDelayedTaskList2
10000260 l     O .bss	00000004 xIdleTaskHandle
10000264 l     O .bss	00000004 xNextTaskUnblockTime
10000268 l     O .bss	00000004 xNumOfOverflows
1000026c l     O .bss	00000014 xPendingReadyList
10000280 l     O .bss	00000004 xSchedulerRunning
10000284 l     O .bss	00000014 xSuspendedTaskList
10000298 l     O .bss	00000004 xTickCount
1000029c l     O .bss	00000004 xYieldPending
00000000 l    df *ABS*	00000000 heap_3.c
00000000 l    df *ABS*	00000000 port.c
0000116c l     F .text	00000020 prvTaskExitError
0000118c l     F .text	00000022 prvPortStartFirstTask
000011b4 l     F .text	0000000e vPortEnableVFP
00001220 l       .text	00000000 pxCurrentTCBConst2
000012c0 l       .text	00000000 pxCurrentTCBConst
10000000 l     O .data	00000004 uxCriticalNesting
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 ram.c
00000000 l    df *ABS*	00000000 startup.c
00000000 l    df *ABS*	00000000 syscall.c
100002a0 l     O .bss	00000004 current_heap_base_ptr.5383
00000000 l    df *ABS*	00000000 gpio.c
00000000 l    df *ABS*	00000000 gpio_lab.c
00001b20 l     O .text	00000018 gpio_regs_pointers
00000000 l    df *ABS*	00000000 hw_timer.c
00001b38 l     O .text	00000020 hw_timers
00000000 l    df *ABS*	00000000 lpc_peripherals.c
000015b4 l     F .text	00000002 lpc_peripheral__halt_handler
10000004 l     O .data	000000a4 lpc_peripheral__isr_registrations
00001b58 l     O .text	00000009 lpc_peripheral_pconp_bit_map
00000000 l    df *ABS*	00000000 uart.c
0000161c l     F .text	00000094 uart__isr_common
000016b0 l     F .text	0000000c uart3_isr
000016bc l     F .text	0000000c uart2_isr
000016c8 l     F .text	0000000c uart1_isr
000016d4 l     F .text	0000000c uart0_isr
100000a8 l     O .data	00000060 uarts
00000000 l    df *ABS*	00000000 sys_time.c
00001858 l     F .text	00000014 sys_time__1sec_isr
100002a4 l     O .bss	00000004 sys_time__sec_counter
00000000 l    df *ABS*	00000000 uart_printf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 memcpy-stub.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 lock.c
00000000 l    df *ABS*	00000000 impure.c
1000010c l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 reent.c
000017a8 g     F .text	00000068 uart__put
00001244 g     F .text	00000014 vPortExitCritical
0000010c g       .text	00000000 bss_section_table_end
100002b4 g     O .bss	00000001 __lock___atexit_recursive_mutex
00000000         *UND*	00000000  _printf_float
0000186c g     F .text	00000028 sys_time__init
00000000 g       *ABS*	00000000 __vectors_start__
00001574 g     F .text	0000002c hw_timer__enable_match_isr_and_reset
00001a98 g     F .text	0000000c __malloc_unlock
100001b0 g     O .bss	00000004 xSemaphore_x
100002b5 g     O .bss	00000001 __lock___arc4random_mutex
20000000 g       *ABS*	00000000 __base_RAM2
000006ac g     F .text	00000080 xQueueGenericSendFromISR
00001b64 g       .text	00000000 __exidx_end
000015f4 g     F .text	00000028 lpc_peripheral__enable_interrupt
100001b4 g     O .bss	00000004 pxCurrentTCB
100002b0 g     O .bss	00000004 errno
00001b64 g       .text	00000000 _etext
100001ac g     O .bss	00000004 xSemaphore_i
000016fc g     F .text	00000064 uart__init
00080000 g       *ABS*	00000000 __top_MFlash512
00001370 g     F .text	00000040 clock__initialize_system_clock_96mhz
00000ef4 g     F .text	00000018 vTaskInternalSetTimeOutState
00001810 g     F .text	00000048 uart__polled_put
00001320 g     F .text	00000048 xPortStartScheduler
000018e0 g     F .text	0000001c memcpy
00000e64 g     F .text	00000020 vTaskPlaceOnEventList
000012f0  w    F .text	00000030 vPortSetupTimerInterrupt
000013b0 g     F .text	00000044 ram__init_data
000012c4 g     F .text	0000002c xPortSysTickHandler
100002c0 g       .noinit	00000000 _noinit
00001152 g     F .text	0000001a vPortFree
0000072c g     F .text	00000128 xQueueSemaphoreTake
20000000 g       .data_RAM2	00000000 __end_data_RAM2
000018c0 g     F .text	00000010 malloc
10010000 g       *ABS*	00000000 __top_RAM
00001260 g     F .text	00000064 xPortPendSVHandler
10000000 g       *ABS*	00000000 __base_RamLoc64
0000031e g     F .text	00000018 vListInsertEnd
00000000 g       *ABS*	00000000 __base_MFlash512
10010000 g       *ABS*	00000000 StackTop
20000000 g       .uninit_RESERVED	00000000 _bbss_peripheral
00001a5c g     F .text	00000020 _sbrk_r
000000fc g       .text	00000000 bss_section_table
000014a4 g     F .text	0000001e gpio__construct_with_function
20008000 g       *ABS*	00000000 __top_RAM2
00000318 g     F .text	00000006 vListInitialiseItem
0000150c g     F .text	00000014 gpiol__set_low
00001520 g     F .text	0000001c gpiol__get_level
20000000 g       *ABS*	00000000 __user_heap_base
00001b64 g       .text	00000000 __exidx_start
100002b6 g     O .bss	00000001 __lock___env_recursive_mutex
000014f8 g     F .text	00000014 gpiol__set_high
100002b7 g     O .bss	00000001 __lock___sinit_recursive_mutex
00001760 g     F .text	00000048 uart__enable_queues
20000000 g       .uninit_RESERVED	00000000 __end_bss_RAM2
0000144c g     F .text	00000028 _sbrk
00001134 g     F .text	0000001e pvPortMalloc
0000010c g       .text	00000000 section_table_end
00000302 g     F .text	00000016 vListInitialise
00001894 g     F .text	0000002a uart_puts__polled
00000598 g     F .text	00000114 xQueueGenericSend
000000e4 g       .text	00000000 section_table_start
100002c0 g       .bss	00000000 _ebss
00001438 g     F .text	00000014 startup__initialize_cpu
0000102c g     F .text	00000070 xTaskPriorityDisinherit
100002b8 g     O .bss	00000001 __lock___malloc_recursive_mutex
00001b64 g       *ABS*	00000000 _bdata_lma_peripheral
00000e84 g     F .text	00000070 xTaskRemoveFromEventList
000002f0 g     F .text	00000010 vApplicationMallocFailedHook
10000000 g       .data	00000000 _bdata_vma
0000153c g     F .text	00000038 hw_timer__enable
00001aa6 g     F .text	00000002 __retarget_lock_release_recursive
00001428 g     F .text	0000000e startup__initialize_ram
0000111c g     F .text	00000018 pvTaskIncrementMutexHeldCount
00000000 g       *ABS*	00000000 __base_Flash
00000f0c g     F .text	00000050 xTaskCheckForTimeOut
0000190c g     F .text	0000009c _free_r
00000f88 g     F .text	000000a4 xTaskPriorityInherit
10010000 g       *ABS*	00000000 __top_RamLoc64
1000016c g       .bss	00000000 _bss
00000bb4 g     F .text	00000010 vTaskSuspendAll
20000000 g       .uninit_RESERVED	00000000 __start_bss_RAM2
00000364 g     F .text	00000020 uxListRemove
00080000 g       *ABS*	00000000 __top_Flash
100002c0 g       .noinit	00000000 _end_noinit
00000dd8 g     F .text	0000008c vTaskSwitchContext
20000000 g       *ABS*	00000000 __base_RamPeriph32
000002e4 g     F .text	0000000a vApplicationStackOverflowHook
000014e0 g     F .text	00000018 gpiol__set_as_output
000000e4 g       .text	00000000 data_section_table
00001a8c g     F .text	0000000c __malloc_lock
00001aa4 g     F .text	00000002 __retarget_lock_acquire_recursive
000018fc g     F .text	00000010 memset
000001c8 g     F .text	0000011c main
20000000 g       *ABS*	00000000 heap
20000000 g       .uninit_RESERVED	00000000 _ebss_peripheral
00000336 g     F .text	0000002e vListInsert
0000010c g       .text	00000000 __init_array_end
00001200 g     F .text	00000024 vPortSVCHandler
000019a8 g     F .text	000000b4 _malloc_r
00000854 g     F .text	00000068 xQueueReceiveFromISR
00000564 g     F .text	00000032 xQueueGenericCreate
20008000 g       *ABS*	00000000 heap_end
00000cd0 g     F .text	000000d8 xTaskResumeAll
000000fc g       .text	00000000 data_section_table_end
00000b54 g     F .text	00000060 vTaskStartScheduler
000015b8 g     F .text	00000018 lpc_peripheral__interrupt_dispatcher
00001368 g     F .text	00000008 clock__get_core_clock_hz
000016e0 g     F .text	0000001c uart__enable_receive_and_transmit_interrupts
10000108 g     O .data	00000004 _impure_ptr
10000000 g       .uninit_RESERVED	00000000 _end_uninit_RESERVED
0000010c g       .text	00000000 __preinit_array_end
10000000 g       .data	00000000 _data
00000f5c g     F .text	0000000c vTaskMissedYield
00000bc4 g     F .text	0000010c xTaskIncrementTick
000014c4 g     F .text	0000001c gpiol__set_as_input
10010000 g       *ABS*	00000000 _estack
20008000 g       *ABS*	00000000 _eheap
000004f8 g     F .text	0000006c xQueueGenericReset
1000016c g       .data	00000000 _edata
00000000 g     O .text	000000e4 interrupt_vector_table
100002b9 g     O .bss	00000001 __lock___at_quick_exit_mutex
00000994 g     F .text	000001c0 xTaskCreate
20000000 g       *ABS*	00000000 _bheap
20008000 g       *ABS*	00000000 __top_RamPeriph32
10000000 g       *ABS*	00000000 __base_RAM
00001474 g     F .text	00000030 gpio__set_function
1000016c g       .bss	00000000 _bbss
00001b64 g       *ABS*	00000000 _bdata_lma
00000da8 g     F .text	00000030 vTaskDelay
20000000 g       .data_RAM2	00000000 _bdata_vma_peripheral
00000f68 g     F .text	00000020 xTaskGetSchedulerState
0000109c g     F .text	00000080 vTaskPriorityDisinheritAfterTimeout
0000010c g       .text	00000000 __init_array_start
000015a0 g     F .text	00000014 hw_timer__acknowledge_interrupt
100002ba g     O .bss	00000001 __lock___dd_hash_mutex
100002bb g     O .bss	00000001 __lock___tz_mutex
000013f4 g     F .text	00000034 ram__init_bss
00001a7c g     F .text	00000010 strlen
000011c8 g     F .text	0000002c pxPortInitialiseStack
100002ac g     O .bss	00000004 __malloc_sbrk_start
00001224 g     F .text	00000020 vPortEnterCritical
000015d0 g     F .text	00000024 lpc_peripheral__turn_on_power_to
100002a8 g     O .bss	00000004 __malloc_free_list
0000010c g       .text	00000000 __preinit_array_start
0000010c g     F .text	0000001c entry_point
20000000 g       .data_RAM2	00000000 _edata_peripheral
100002bc g     O .bss	00000001 __lock___sfp_recursive_mutex
000018d0 g     F .text	00000010 free
00000300 g     F .text	00000002 vApplicationIdleHook



Disassembly of section .text:

00000000 <interrupt_vector_table>:
       0:	00 00 01 10 0d 01 00 00 29 01 00 00 29 01 00 00     ........)...)...
      10:	29 01 00 00 29 01 00 00 29 01 00 00 29 01 00 00     )...)...)...)...
      20:	29 01 00 00 29 01 00 00 29 01 00 00 01 12 00 00     )...)...).......
      30:	29 01 00 00 29 01 00 00 61 12 00 00 c5 12 00 00     )...)...a.......
      40:	b9 15 00 00 b9 15 00 00 b9 15 00 00 b9 15 00 00     ................
      50:	b9 15 00 00 b9 15 00 00 b9 15 00 00 b9 15 00 00     ................
      60:	b9 15 00 00 b9 15 00 00 b9 15 00 00 b9 15 00 00     ................
      70:	b9 15 00 00 b9 15 00 00 b9 15 00 00 b9 15 00 00     ................
      80:	b9 15 00 00 b9 15 00 00 b9 15 00 00 b9 15 00 00     ................
      90:	b9 15 00 00 b9 15 00 00 b9 15 00 00 b9 15 00 00     ................
      a0:	b9 15 00 00 b9 15 00 00 b9 15 00 00 b9 15 00 00     ................
      b0:	b9 15 00 00 b9 15 00 00 b9 15 00 00 b9 15 00 00     ................
      c0:	b9 15 00 00 b9 15 00 00 b9 15 00 00 b9 15 00 00     ................
      d0:	b9 15 00 00 b9 15 00 00 b9 15 00 00 b9 15 00 00     ................
      e0:	b9 15 00 00                                         ....

000000e4 <data_section_table>:
data_section_table():
      e4:	00001b64 	.word	0x00001b64
      e8:	10000000 	.word	0x10000000
      ec:	0000016c 	.word	0x0000016c
      f0:	00001b64 	.word	0x00001b64
      f4:	20000000 	.word	0x20000000
      f8:	00000000 	.word	0x00000000

000000fc <bss_section_table>:
data_section_table_end():
      fc:	1000016c 	.word	0x1000016c
     100:	00000154 	.word	0x00000154
     104:	20000000 	.word	0x20000000
     108:	00000000 	.word	0x00000000

0000010c <entry_point>:
entry_point():
/home/rutuja/sjtwo-c/lpc40xx_freertos/entry_point.c:7
#include "startup.h"
#include "sys_time.h"

extern void main(void);

void entry_point(void) {
     10c:	b508      	push	{r3, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/entry_point.c:8
  startup__initialize_ram();
     10e:	f001 f98b 	bl	1428 <startup__initialize_ram>
/home/rutuja/sjtwo-c/lpc40xx_freertos/entry_point.c:9
  startup__initialize_cpu();
     112:	f001 f991 	bl	1438 <startup__initialize_cpu>
/home/rutuja/sjtwo-c/lpc40xx_freertos/entry_point.c:11

  clock__initialize_system_clock_96mhz();
     116:	f001 f92b 	bl	1370 <clock__initialize_system_clock_96mhz>
/home/rutuja/sjtwo-c/lpc40xx_freertos/entry_point.c:12
  sys_time__init(clock__get_core_clock_hz());
     11a:	f001 f925 	bl	1368 <clock__get_core_clock_hz>
     11e:	f001 fba5 	bl	186c <sys_time__init>
/home/rutuja/sjtwo-c/lpc40xx_freertos/entry_point.c:14

  main();
     122:	f000 f851 	bl	1c8 <main>
/home/rutuja/sjtwo-c/lpc40xx_freertos/entry_point.c:21 (discriminator 1)
  /**
   * main() should never return.
   * CPU will now halt forever at this point.
   */
  while (1) {
  }
     126:	e7fe      	b.n	126 <entry_point+0x1a>

00000128 <halt>:
halt():
/home/rutuja/sjtwo-c/lpc40xx_freertos/interrupt_vector_table.c:97 (discriminator 1)
static void halt(void) {
  // This statement resolves compiler warning: variable define but not used
  (void)interrupt_vector_table;

  while (true) {
  }
     128:	e7fe      	b.n	128 <halt>

0000012a <switch_task>:
switch_task():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:178
    vTaskDelay(100);
  }
}

static void switch_task(void *params) {
  struct gpio led = *((struct gpio *)params);
     12a:	7845      	ldrb	r5, [r0, #1]
     12c:	7804      	ldrb	r4, [r0, #0]
     12e:	6846      	ldr	r6, [r0, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:177
static void switch_task(void *params) {
     130:	b508      	push	{r3, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:179
  gpiol__set_as_input(led.port, led.pin);
     132:	4629      	mov	r1, r5
     134:	4620      	mov	r0, r4
     136:	f001 f9c5 	bl	14c4 <gpiol__set_as_input>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:181 (discriminator 1)
  while (true) {
    while (!gpiol__get_level(led.port, led.pin));
     13a:	4629      	mov	r1, r5
     13c:	4620      	mov	r0, r4
     13e:	f001 f9ef 	bl	1520 <gpiol__get_level>
     142:	2800      	cmp	r0, #0
     144:	d0f9      	beq.n	13a <switch_task+0x10>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:182 (discriminator 1)
    while (gpiol__get_level(led.port, led.pin));
     146:	4629      	mov	r1, r5
     148:	4620      	mov	r0, r4
     14a:	f001 f9e9 	bl	1520 <gpiol__get_level>
     14e:	4603      	mov	r3, r0
     150:	2800      	cmp	r0, #0
     152:	d1f8      	bne.n	146 <switch_task+0x1c>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:183
    xSemaphoreGive(led.xSem);
     154:	4602      	mov	r2, r0
     156:	4601      	mov	r1, r0
     158:	4630      	mov	r0, r6
     15a:	f000 fa1d 	bl	598 <xQueueGenericSend>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:184
    vTaskDelay(100);
     15e:	2064      	movs	r0, #100	; 0x64
     160:	f000 fe22 	bl	da8 <vTaskDelay>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:181
    while (!gpiol__get_level(led.port, led.pin));
     164:	e7e9      	b.n	13a <switch_task+0x10>

00000166 <led_task>:
led_task():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:149
static void led_task(void *params) {
     166:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:150
  struct gpio led = *((struct gpio *)params);
     168:	7845      	ldrb	r5, [r0, #1]
     16a:	7804      	ldrb	r4, [r0, #0]
     16c:	6847      	ldr	r7, [r0, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:152
  gpiol__set_as_output(led.port, led.pin);
     16e:	4629      	mov	r1, r5
     170:	4620      	mov	r0, r4
     172:	f001 f9b5 	bl	14e0 <gpiol__set_as_output>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:153
  gpiol__set_high(led.port, led.pin);
     176:	4629      	mov	r1, r5
     178:	4620      	mov	r0, r4
     17a:	f001 f9bd 	bl	14f8 <gpiol__set_high>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:151
  bool state = false;
     17e:	2600      	movs	r6, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:156
    if (xSemaphoreTake(led.xSem, 0)) {
     180:	2100      	movs	r1, #0
     182:	4638      	mov	r0, r7
     184:	f000 fad2 	bl	72c <xQueueSemaphoreTake>
     188:	b1a8      	cbz	r0, 1b6 <led_task+0x50>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:157
      if(state)
     18a:	b9b6      	cbnz	r6, 1ba <led_task+0x54>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:166
      gpiol__set_low(led.port, led.pin);
     18c:	4629      	mov	r1, r5
     18e:	4620      	mov	r0, r4
     190:	f001 f9bc 	bl	150c <gpiol__set_low>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:167
      vTaskDelay(500);
     194:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
     198:	f000 fe06 	bl	da8 <vTaskDelay>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:168
      gpiol__set_high(led.port, led.pin);
     19c:	4629      	mov	r1, r5
     19e:	4620      	mov	r0, r4
     1a0:	f001 f9aa 	bl	14f8 <gpiol__set_high>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:169
      vTaskDelay(500);
     1a4:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
     1a8:	f000 fdfe 	bl	da8 <vTaskDelay>
     1ac:	2601      	movs	r6, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:173
    vTaskDelay(100);
     1ae:	2064      	movs	r0, #100	; 0x64
     1b0:	f000 fdfa 	bl	da8 <vTaskDelay>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:156
    if (xSemaphoreTake(led.xSem, 0)) {
     1b4:	e7e4      	b.n	180 <led_task+0x1a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:165
    if (state) {
     1b6:	2e00      	cmp	r6, #0
     1b8:	d1e8      	bne.n	18c <led_task+0x26>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:171
      gpiol__set_high(led.port, led.pin);
     1ba:	4629      	mov	r1, r5
     1bc:	4620      	mov	r0, r4
     1be:	f001 f99b 	bl	14f8 <gpiol__set_high>
     1c2:	2600      	movs	r6, #0
     1c4:	e7f3      	b.n	1ae <led_task+0x48>
     1c6:	Address 0x00000000000001c6 is out of bounds.


000001c8 <main>:
main():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:72
int main(void) {
     1c8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
uart0_init():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:217
    gpio__toggle(gpio);
  }
}

static void uart0_init(void) {
  (void)gpio__construct_with_function(gpio__port_0, 2, gpio__function_1); // P0.2 - Uart-0 Tx
     1cc:	2201      	movs	r2, #1
     1ce:	2102      	movs	r1, #2
     1d0:	2000      	movs	r0, #0
     1d2:	f001 f967 	bl	14a4 <gpio__construct_with_function>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:218
  (void)gpio__construct_with_function(gpio__port_0, 3, gpio__function_1); // P0.3 - Uart-0 Rx
     1d6:	2201      	movs	r2, #1
     1d8:	2103      	movs	r1, #3
     1da:	2000      	movs	r0, #0
     1dc:	f001 f962 	bl	14a4 <gpio__construct_with_function>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:220

  uart__init(UART__0, clock__get_core_clock_hz(), 115200);
     1e0:	f001 f8c2 	bl	1368 <clock__get_core_clock_hz>
     1e4:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
     1e8:	4601      	mov	r1, r0
     1ea:	2000      	movs	r0, #0
     1ec:	f001 fa86 	bl	16fc <uart__init>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:223

  // Make UART more efficient by backing it with RTOS queues (optional but highly recommended with RTOS)
  QueueHandle_t tx_queue = xQueueCreate(128, sizeof(char));
     1f0:	2200      	movs	r2, #0
     1f2:	2101      	movs	r1, #1
     1f4:	2080      	movs	r0, #128	; 0x80
     1f6:	f000 f9b5 	bl	564 <xQueueGenericCreate>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:224
  QueueHandle_t rx_queue = xQueueCreate(32, sizeof(char));
     1fa:	2200      	movs	r2, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:223
  QueueHandle_t tx_queue = xQueueCreate(128, sizeof(char));
     1fc:	4604      	mov	r4, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:224
  QueueHandle_t rx_queue = xQueueCreate(32, sizeof(char));
     1fe:	2101      	movs	r1, #1
     200:	2020      	movs	r0, #32
     202:	f000 f9af 	bl	564 <xQueueGenericCreate>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:225
  uart__enable_queues(UART__0, tx_queue, rx_queue);
     206:	4621      	mov	r1, r4
     208:	4602      	mov	r2, r0
     20a:	2000      	movs	r0, #0
     20c:	f001 faa8 	bl	1760 <uart__enable_queues>
main():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:76
  xSemaphore_i = xSemaphoreCreateBinary();
     210:	2203      	movs	r2, #3
     212:	2100      	movs	r1, #0
     214:	2001      	movs	r0, #1
     216:	f000 f9a5 	bl	564 <xQueueGenericCreate>
     21a:	4c26      	ldr	r4, [pc, #152]	; (2b4 <main+0xec>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:81
  led_x.port = 0;
     21c:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 2d8 <main+0x110>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:76
  xSemaphore_i = xSemaphoreCreateBinary();
     220:	6020      	str	r0, [r4, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:77
  xSemaphore_x = xSemaphoreCreateBinary();
     222:	2203      	movs	r2, #3
     224:	2100      	movs	r1, #0
     226:	2001      	movs	r0, #1
     228:	f000 f99c 	bl	564 <xQueueGenericCreate>
     22c:	4b22      	ldr	r3, [pc, #136]	; (2b8 <main+0xf0>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:84
  switch_i.port = 0;
     22e:	4f23      	ldr	r7, [pc, #140]	; (2bc <main+0xf4>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:77
  xSemaphore_x = xSemaphoreCreateBinary();
     230:	6018      	str	r0, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:78
  led_i.port = 1;
     232:	4b23      	ldr	r3, [pc, #140]	; (2c0 <main+0xf8>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:87
  switch_x.port = 0;
     234:	4e23      	ldr	r6, [pc, #140]	; (2c4 <main+0xfc>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:90
  xTaskCreate(led_task, "led_internal", (512U / sizeof(void *)), (void *)&led_i, PRIORITY_LOW, NULL);
     236:	f8df 90a4 	ldr.w	r9, [pc, #164]	; 2dc <main+0x114>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:83
  led_x.xSem = xSemaphore_x;
     23a:	f8c8 0004 	str.w	r0, [r8, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:78
  led_i.port = 1;
     23e:	f641 0201 	movw	r2, #6145	; 0x1801
     242:	801a      	strh	r2, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:81
  led_x.port = 0;
     244:	f44f 61e0 	mov.w	r1, #1792	; 0x700
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:80
  led_i.xSem = xSemaphore_i;
     248:	6822      	ldr	r2, [r4, #0]
     24a:	605a      	str	r2, [r3, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:90
  xTaskCreate(led_task, "led_internal", (512U / sizeof(void *)), (void *)&led_i, PRIORITY_LOW, NULL);
     24c:	2400      	movs	r4, #0
     24e:	2501      	movs	r5, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:81
  led_x.port = 0;
     250:	f8a8 1000 	strh.w	r1, [r8]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:86
  switch_i.xSem = xSemaphore_i;
     254:	607a      	str	r2, [r7, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:84
  switch_i.port = 0;
     256:	f44f 51f0 	mov.w	r1, #7680	; 0x1e00
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:87
  switch_x.port = 0;
     25a:	f44f 6210 	mov.w	r2, #2304	; 0x900
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:84
  switch_i.port = 0;
     25e:	8039      	strh	r1, [r7, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:87
  switch_x.port = 0;
     260:	8032      	strh	r2, [r6, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:89
  switch_x.xSem = xSemaphore_x;
     262:	6070      	str	r0, [r6, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:90
  xTaskCreate(led_task, "led_internal", (512U / sizeof(void *)), (void *)&led_i, PRIORITY_LOW, NULL);
     264:	e9cd 5400 	strd	r5, r4, [sp]
     268:	2280      	movs	r2, #128	; 0x80
     26a:	4917      	ldr	r1, [pc, #92]	; (2c8 <main+0x100>)
     26c:	4648      	mov	r0, r9
     26e:	f000 fb91 	bl	994 <xTaskCreate>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:91
  xTaskCreate(led_task, "led_external", (512U / sizeof(void *)), (void *)&led_x, PRIORITY_LOW, NULL);
     272:	4643      	mov	r3, r8
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:92
  xTaskCreate(switch_task, "switch_internal", (512U / sizeof(void *)), (void *)&switch_i, PRIORITY_LOW, NULL);
     274:	f8df 8068 	ldr.w	r8, [pc, #104]	; 2e0 <main+0x118>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:91
  xTaskCreate(led_task, "led_external", (512U / sizeof(void *)), (void *)&led_x, PRIORITY_LOW, NULL);
     278:	4914      	ldr	r1, [pc, #80]	; (2cc <main+0x104>)
     27a:	e9cd 5400 	strd	r5, r4, [sp]
     27e:	2280      	movs	r2, #128	; 0x80
     280:	4648      	mov	r0, r9
     282:	f000 fb87 	bl	994 <xTaskCreate>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:92
  xTaskCreate(switch_task, "switch_internal", (512U / sizeof(void *)), (void *)&switch_i, PRIORITY_LOW, NULL);
     286:	463b      	mov	r3, r7
     288:	e9cd 5400 	strd	r5, r4, [sp]
     28c:	2280      	movs	r2, #128	; 0x80
     28e:	4910      	ldr	r1, [pc, #64]	; (2d0 <main+0x108>)
     290:	4640      	mov	r0, r8
     292:	f000 fb7f 	bl	994 <xTaskCreate>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:93
  xTaskCreate(switch_task, "switch_external", (512U / sizeof(void *)), (void *)&switch_x, PRIORITY_LOW, NULL);
     296:	4633      	mov	r3, r6
     298:	2280      	movs	r2, #128	; 0x80
     29a:	490e      	ldr	r1, [pc, #56]	; (2d4 <main+0x10c>)
     29c:	e9cd 5400 	strd	r5, r4, [sp]
     2a0:	4640      	mov	r0, r8
     2a2:	f000 fb77 	bl	994 <xTaskCreate>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:137
  vTaskStartScheduler();
     2a6:	f000 fc55 	bl	b54 <vTaskStartScheduler>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:147
}
     2aa:	4620      	mov	r0, r4
     2ac:	b003      	add	sp, #12
     2ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
     2b2:	bf00      	nop
     2b4:	100001ac 	.word	0x100001ac
     2b8:	100001b0 	.word	0x100001b0
     2bc:	1000018c 	.word	0x1000018c
     2c0:	1000016c 	.word	0x1000016c
     2c4:	1000019c 	.word	0x1000019c
     2c8:	00001aa8 	.word	0x00001aa8
     2cc:	00001ab5 	.word	0x00001ab5
     2d0:	00001ac2 	.word	0x00001ac2
     2d4:	00001ad2 	.word	0x00001ad2
     2d8:	1000017c 	.word	0x1000017c
     2dc:	00000167 	.word	0x00000167
     2e0:	0000012b 	.word	0x0000012b

000002e4 <vApplicationStackOverflowHook>:
vApplicationStackOverflowHook():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:17
}
#endif

#if (configCHECK_FOR_STACK_OVERFLOW != 0)
/// Invoked by FreeRTOS when it detects stack overflow
void vApplicationStackOverflowHook(TaskHandle_t task_handle, signed char *task_name) { halt((const char *)task_name); }
     2e4:	b508      	push	{r3, lr}
halt():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:9
  uart_puts__polled(UART__0, message);
     2e6:	2000      	movs	r0, #0
     2e8:	f001 fad4 	bl	1894 <uart_puts__polled>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:11
  }
     2ec:	e7fe      	b.n	2ec <vApplicationStackOverflowHook+0x8>
vApplicationStackOverflowHook():
     2ee:	Address 0x00000000000002ee is out of bounds.


000002f0 <vApplicationMallocFailedHook>:
vApplicationMallocFailedHook():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:22
#endif

#if (configUSE_MALLOC_FAILED_HOOK == 1)
/// Invoked by FreeRTOS when there pvPortMalloc() function has encountered NULL pointer to memory request
void vApplicationMallocFailedHook(void) { halt("vApplicationMallocFailedHook() called; no more memory"); }
     2f0:	b508      	push	{r3, lr}
halt():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:9
  uart_puts__polled(UART__0, message);
     2f2:	4902      	ldr	r1, [pc, #8]	; (2fc <vApplicationMallocFailedHook+0xc>)
     2f4:	2000      	movs	r0, #0
     2f6:	f001 facd 	bl	1894 <uart_puts__polled>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:11
  }
     2fa:	e7fe      	b.n	2fa <vApplicationMallocFailedHook+0xa>
     2fc:	00001ae2 	.word	0x00001ae2

00000300 <vApplicationIdleHook>:
vApplicationIdleHook():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:32
 * FreeRTOS note:
 * vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES, CALL A FUNCTION THAT MIGHT BLOCK
 */
void vApplicationIdleHook(void) {
  // TODO: Put the CPU to sleep
}
     300:	4770      	bx	lr

00000302 <vListInitialise>:
vListInitialise():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:42
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
     302:	f100 0308 	add.w	r3, r0, #8
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:46

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
     306:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:42
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
     30a:	6043      	str	r3, [r0, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:50

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
     30c:	e9c0 2302 	strd	r2, r3, [r0, #8]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:51
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
     310:	6103      	str	r3, [r0, #16]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:53

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
     312:	2300      	movs	r3, #0
     314:	6003      	str	r3, [r0, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:59

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
     316:	4770      	bx	lr

00000318 <vListInitialiseItem>:
vListInitialiseItem():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:65
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
     318:	2300      	movs	r3, #0
     31a:	6103      	str	r3, [r0, #16]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:71

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
     31c:	4770      	bx	lr

0000031e <vListInsertEnd>:
vListInsertEnd():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:76
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
     31e:	6843      	ldr	r3, [r0, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:87
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
     320:	604b      	str	r3, [r1, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:88
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
     322:	689a      	ldr	r2, [r3, #8]
     324:	608a      	str	r2, [r1, #8]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:93

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
     326:	689a      	ldr	r2, [r3, #8]
     328:	6051      	str	r1, [r2, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:94
	pxIndex->pxPrevious = pxNewListItem;
     32a:	6099      	str	r1, [r3, #8]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:99

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
     32c:	6803      	ldr	r3, [r0, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:97
	pxNewListItem->pxContainer = pxList;
     32e:	6108      	str	r0, [r1, #16]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:99
	( pxList->uxNumberOfItems )++;
     330:	3301      	adds	r3, #1
     332:	6003      	str	r3, [r0, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:100
}
     334:	4770      	bx	lr

00000336 <vListInsert>:
vListInsert():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:106
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
     336:	680a      	ldr	r2, [r1, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:122
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
     338:	1c53      	adds	r3, r2, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:104
{
     33a:	b530      	push	{r4, r5, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:122
	if( xValueOfInsertion == portMAX_DELAY )
     33c:	d10a      	bne.n	354 <vListInsert+0x1e>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:124
	{
		pxIterator = pxList->xListEnd.pxPrevious;
     33e:	6903      	ldr	r3, [r0, #16]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:157
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
     340:	685a      	ldr	r2, [r3, #4]
     342:	604a      	str	r2, [r1, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:158
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
     344:	6091      	str	r1, [r2, #8]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:159
	pxNewListItem->pxPrevious = pxIterator;
     346:	608b      	str	r3, [r1, #8]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:160
	pxIterator->pxNext = pxNewListItem;
     348:	6059      	str	r1, [r3, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:166

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
     34a:	6803      	ldr	r3, [r0, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:164
	pxNewListItem->pxContainer = pxList;
     34c:	6108      	str	r0, [r1, #16]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:166
	( pxList->uxNumberOfItems )++;
     34e:	3301      	adds	r3, #1
     350:	6003      	str	r3, [r0, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:167
}
     352:	bd30      	pop	{r4, r5, pc}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:150
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
     354:	f100 0308 	add.w	r3, r0, #8
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:150 (discriminator 1)
     358:	685c      	ldr	r4, [r3, #4]
     35a:	6825      	ldr	r5, [r4, #0]
     35c:	4295      	cmp	r5, r2
     35e:	d8ef      	bhi.n	340 <vListInsert+0xa>
     360:	4623      	mov	r3, r4
     362:	e7f9      	b.n	358 <vListInsert+0x22>

00000364 <uxListRemove>:
uxListRemove():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:176
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
     364:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:174
List_t * const pxList = pxItemToRemove->pxContainer;
     368:	6903      	ldr	r3, [r0, #16]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:176
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
     36a:	608a      	str	r2, [r1, #8]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:177
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
     36c:	6051      	str	r1, [r2, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:183

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
     36e:	6859      	ldr	r1, [r3, #4]
     370:	4281      	cmp	r1, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:185
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
     372:	bf08      	it	eq
     374:	605a      	streq	r2, [r3, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:192
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
     376:	2200      	movs	r2, #0
     378:	6102      	str	r2, [r0, #16]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:193
	( pxList->uxNumberOfItems )--;
     37a:	681a      	ldr	r2, [r3, #0]
     37c:	3a01      	subs	r2, #1
     37e:	601a      	str	r2, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:195

	return pxList->uxNumberOfItems;
     380:	6818      	ldr	r0, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:196
}
     382:	4770      	bx	lr

00000384 <prvIsQueueEmpty>:
prvIsQueueEmpty():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2288
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
     384:	b510      	push	{r4, lr}
     386:	4604      	mov	r4, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2291
BaseType_t xReturn;

	taskENTER_CRITICAL();
     388:	f000 ff4c 	bl	1224 <vPortEnterCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2293
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
     38c:	6ba4      	ldr	r4, [r4, #56]	; 0x38
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2302
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
     38e:	f000 ff59 	bl	1244 <vPortExitCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2305

	return xReturn;
}
     392:	fab4 f084 	clz	r0, r4
     396:	0940      	lsrs	r0, r0, #5
     398:	bd10      	pop	{r4, pc}

0000039a <prvCopyDataToQueue>:
prvCopyDataToQueue():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2071
{
     39a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     39c:	4615      	mov	r5, r2
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2079
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
     39e:	6c02      	ldr	r2, [r0, #64]	; 0x40
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2077
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
     3a0:	6b86      	ldr	r6, [r0, #56]	; 0x38
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2071
{
     3a2:	4604      	mov	r4, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2079
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
     3a4:	b952      	cbnz	r2, 3bc <prvCopyDataToQueue+0x22>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2083
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
     3a6:	6807      	ldr	r7, [r0, #0]
     3a8:	bb47      	cbnz	r7, 3fc <prvCopyDataToQueue+0x62>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2086
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
     3aa:	6880      	ldr	r0, [r0, #8]
     3ac:	f000 fe3e 	bl	102c <xTaskPriorityDisinherit>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2087
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
     3b0:	60a7      	str	r7, [r4, #8]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2086
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
     3b2:	4605      	mov	r5, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2143
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
     3b4:	3601      	adds	r6, #1
     3b6:	63a6      	str	r6, [r4, #56]	; 0x38
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2146
}
     3b8:	4628      	mov	r0, r5
     3ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2096
	else if( xPosition == queueSEND_TO_BACK )
     3bc:	b965      	cbnz	r5, 3d8 <prvCopyDataToQueue+0x3e>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2098
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
     3be:	6840      	ldr	r0, [r0, #4]
     3c0:	f001 fa8e 	bl	18e0 <memcpy>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2099
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
     3c4:	6863      	ldr	r3, [r4, #4]
     3c6:	6c22      	ldr	r2, [r4, #64]	; 0x40
     3c8:	4413      	add	r3, r2
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2100
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
     3ca:	68a2      	ldr	r2, [r4, #8]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2099
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
     3cc:	6063      	str	r3, [r4, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2100
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
     3ce:	4293      	cmp	r3, r2
     3d0:	d3f0      	bcc.n	3b4 <prvCopyDataToQueue+0x1a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2102
			pxQueue->pcWriteTo = pxQueue->pcHead;
     3d2:	6823      	ldr	r3, [r4, #0]
     3d4:	6063      	str	r3, [r4, #4]
     3d6:	e7ed      	b.n	3b4 <prvCopyDataToQueue+0x1a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2111
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
     3d8:	68c0      	ldr	r0, [r0, #12]
     3da:	f001 fa81 	bl	18e0 <memcpy>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2112
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
     3de:	6c23      	ldr	r3, [r4, #64]	; 0x40
     3e0:	68e2      	ldr	r2, [r4, #12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2113
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
     3e2:	6821      	ldr	r1, [r4, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2112
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
     3e4:	425b      	negs	r3, r3
     3e6:	441a      	add	r2, r3
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2113
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
     3e8:	428a      	cmp	r2, r1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2112
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
     3ea:	60e2      	str	r2, [r4, #12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2115
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
     3ec:	bf3e      	ittt	cc
     3ee:	68a2      	ldrcc	r2, [r4, #8]
     3f0:	189b      	addcc	r3, r3, r2
     3f2:	60e3      	strcc	r3, [r4, #12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2122
		if( xPosition == queueOVERWRITE )
     3f4:	2d02      	cmp	r5, #2
     3f6:	d101      	bne.n	3fc <prvCopyDataToQueue+0x62>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2124
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
     3f8:	b116      	cbz	r6, 400 <prvCopyDataToQueue+0x66>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2130
				--uxMessagesWaiting;
     3fa:	3e01      	subs	r6, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2072
BaseType_t xReturn = pdFALSE;
     3fc:	2500      	movs	r5, #0
     3fe:	e7d9      	b.n	3b4 <prvCopyDataToQueue+0x1a>
     400:	4635      	mov	r5, r6
     402:	e7d7      	b.n	3b4 <prvCopyDataToQueue+0x1a>

00000404 <prvNotifyQueueSetContainer>:
prvNotifyQueueSetContainer():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2879
/*-----------------------------------------------------------*/

#if ( configUSE_QUEUE_SETS == 1 )

	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCopyPosition )
	{
     404:	b573      	push	{r0, r1, r4, r5, r6, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2880
	Queue_t *pxQueueSetContainer = pxQueue->pxQueueSetContainer;
     406:	6c85      	ldr	r5, [r0, #72]	; 0x48
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2879
	{
     408:	9001      	str	r0, [sp, #4]
     40a:	460a      	mov	r2, r1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2888
		/* This function must be called form a critical section. */

		configASSERT( pxQueueSetContainer );
		configASSERT( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength );

		if( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength )
     40c:	6beb      	ldr	r3, [r5, #60]	; 0x3c
     40e:	6ba9      	ldr	r1, [r5, #56]	; 0x38
     410:	4299      	cmp	r1, r3
     412:	d21a      	bcs.n	44a <prvNotifyQueueSetContainer+0x46>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2890
		{
			const int8_t cTxLock = pxQueueSetContainer->cTxLock;
     414:	f895 4045 	ldrb.w	r4, [r5, #69]	; 0x45
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2895

			traceQUEUE_SEND( pxQueueSetContainer );

			/* The data copied is the handle of the queue that contains data. */
			xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, xCopyPosition );
     418:	a901      	add	r1, sp, #4
     41a:	4628      	mov	r0, r5
     41c:	f7ff ffbd 	bl	39a <prvCopyDataToQueue>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2890
			const int8_t cTxLock = pxQueueSetContainer->cTxLock;
     420:	b264      	sxtb	r4, r4
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2897

			if( cTxLock == queueUNLOCKED )
     422:	1c63      	adds	r3, r4, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2895
			xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, xCopyPosition );
     424:	4606      	mov	r6, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2897
			if( cTxLock == queueUNLOCKED )
     426:	d10b      	bne.n	440 <prvNotifyQueueSetContainer+0x3c>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2899
			{
				if( listLIST_IS_EMPTY( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) == pdFALSE )
     428:	6a6b      	ldr	r3, [r5, #36]	; 0x24
     42a:	b133      	cbz	r3, 43a <prvNotifyQueueSetContainer+0x36>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2901
				{
					if( xTaskRemoveFromEventList( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) != pdFALSE )
     42c:	f105 0024 	add.w	r0, r5, #36	; 0x24
     430:	f000 fd28 	bl	e84 <xTaskRemoveFromEventList>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2904
					{
						/* The task waiting has a higher priority. */
						xReturn = pdTRUE;
     434:	2800      	cmp	r0, #0
     436:	bf18      	it	ne
     438:	2601      	movne	r6, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2927
		{
			mtCOVERAGE_TEST_MARKER();
		}

		return xReturn;
	}
     43a:	4630      	mov	r0, r6
     43c:	b002      	add	sp, #8
     43e:	bd70      	pop	{r4, r5, r6, pc}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2918
				pxQueueSetContainer->cTxLock = ( int8_t ) ( cTxLock + 1 );
     440:	3401      	adds	r4, #1
     442:	b264      	sxtb	r4, r4
     444:	f885 4045 	strb.w	r4, [r5, #69]	; 0x45
     448:	e7f7      	b.n	43a <prvNotifyQueueSetContainer+0x36>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2881
	BaseType_t xReturn = pdFALSE;
     44a:	2600      	movs	r6, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2926
		return xReturn;
     44c:	e7f5      	b.n	43a <prvNotifyQueueSetContainer+0x36>

0000044e <prvCopyDataFromQueue>:
prvCopyDataFromQueue():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2150
{
     44e:	4603      	mov	r3, r0
     450:	b410      	push	{r4}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2151
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
     452:	6c1a      	ldr	r2, [r3, #64]	; 0x40
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2150
{
     454:	4608      	mov	r0, r1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2151
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
     456:	b162      	cbz	r2, 472 <prvCopyDataFromQueue+0x24>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2153
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
     458:	68d9      	ldr	r1, [r3, #12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2154
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
     45a:	689c      	ldr	r4, [r3, #8]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2153
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
     45c:	4411      	add	r1, r2
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2154
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
     45e:	42a1      	cmp	r1, r4
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2153
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
     460:	60d9      	str	r1, [r3, #12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2156
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
     462:	bf24      	itt	cs
     464:	6819      	ldrcs	r1, [r3, #0]
     466:	60d9      	strcs	r1, [r3, #12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2162
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
     468:	68d9      	ldr	r1, [r3, #12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2164
}
     46a:	f85d 4b04 	ldr.w	r4, [sp], #4
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2162
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
     46e:	f001 ba37 	b.w	18e0 <memcpy>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2164
}
     472:	f85d 4b04 	ldr.w	r4, [sp], #4
     476:	4770      	bx	lr

00000478 <prvUnlockQueue>:
prvUnlockQueue():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2168
{
     478:	b570      	push	{r4, r5, r6, lr}
     47a:	4604      	mov	r4, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2175
	taskENTER_CRITICAL();
     47c:	f000 fed2 	bl	1224 <vPortEnterCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2177
		int8_t cTxLock = pxQueue->cTxLock;
     480:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2207
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
     484:	f104 0624 	add.w	r6, r4, #36	; 0x24
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2177
		int8_t cTxLock = pxQueue->cTxLock;
     488:	b26d      	sxtb	r5, r5
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2180
		while( cTxLock > queueLOCKED_UNMODIFIED )
     48a:	2d00      	cmp	r5, #0
     48c:	dc14      	bgt.n	4b8 <prvUnlockQueue+0x40>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2251
		pxQueue->cTxLock = queueUNLOCKED;
     48e:	23ff      	movs	r3, #255	; 0xff
     490:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2253
	taskEXIT_CRITICAL();
     494:	f000 fed6 	bl	1244 <vPortExitCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2256
	taskENTER_CRITICAL();
     498:	f000 fec4 	bl	1224 <vPortEnterCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2258
		int8_t cRxLock = pxQueue->cRxLock;
     49c:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2264
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
     4a0:	f104 0610 	add.w	r6, r4, #16
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2258
		int8_t cRxLock = pxQueue->cRxLock;
     4a4:	b26d      	sxtb	r5, r5
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2260
		while( cRxLock > queueLOCKED_UNMODIFIED )
     4a6:	2d00      	cmp	r5, #0
     4a8:	dc19      	bgt.n	4de <prvUnlockQueue+0x66>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2281
		pxQueue->cRxLock = queueUNLOCKED;
     4aa:	23ff      	movs	r3, #255	; 0xff
     4ac:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2284
}
     4b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2283
	taskEXIT_CRITICAL();
     4b4:	f000 bec6 	b.w	1244 <vPortExitCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2186
				if( pxQueue->pxQueueSetContainer != NULL )
     4b8:	6ca3      	ldr	r3, [r4, #72]	; 0x48
     4ba:	b14b      	cbz	r3, 4d0 <prvUnlockQueue+0x58>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2188
					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
     4bc:	2100      	movs	r1, #0
     4be:	4620      	mov	r0, r4
     4c0:	f7ff ffa0 	bl	404 <prvNotifyQueueSetContainer>
     4c4:	b108      	cbz	r0, 4ca <prvUnlockQueue+0x52>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2193
						vTaskMissedYield();
     4c6:	f000 fd49 	bl	f5c <vTaskMissedYield>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2248
			--cTxLock;
     4ca:	3d01      	subs	r5, #1
     4cc:	b26d      	sxtb	r5, r5
     4ce:	e7dc      	b.n	48a <prvUnlockQueue+0x12>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2205
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
     4d0:	6a63      	ldr	r3, [r4, #36]	; 0x24
     4d2:	2b00      	cmp	r3, #0
     4d4:	d0db      	beq.n	48e <prvUnlockQueue+0x16>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2207
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
     4d6:	4630      	mov	r0, r6
     4d8:	f000 fcd4 	bl	e84 <xTaskRemoveFromEventList>
     4dc:	e7f2      	b.n	4c4 <prvUnlockQueue+0x4c>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2262
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
     4de:	6923      	ldr	r3, [r4, #16]
     4e0:	2b00      	cmp	r3, #0
     4e2:	d0e2      	beq.n	4aa <prvUnlockQueue+0x32>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2264
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
     4e4:	4630      	mov	r0, r6
     4e6:	f000 fccd 	bl	e84 <xTaskRemoveFromEventList>
     4ea:	b108      	cbz	r0, 4f0 <prvUnlockQueue+0x78>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2266
					vTaskMissedYield();
     4ec:	f000 fd36 	bl	f5c <vTaskMissedYield>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2273
				--cRxLock;
     4f0:	3d01      	subs	r5, #1
     4f2:	b26d      	sxtb	r5, r5
     4f4:	e7d7      	b.n	4a6 <prvUnlockQueue+0x2e>
     4f6:	Address 0x00000000000004f6 is out of bounds.


000004f8 <xQueueGenericReset>:
xQueueGenericReset():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:256
{
     4f8:	b538      	push	{r3, r4, r5, lr}
     4fa:	4604      	mov	r4, r0
     4fc:	460d      	mov	r5, r1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:261
	taskENTER_CRITICAL();
     4fe:	f000 fe91 	bl	1224 <vPortEnterCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:263
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
     502:	e9d4 300f 	ldrd	r3, r0, [r4, #60]	; 0x3c
     506:	6822      	ldr	r2, [r4, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:265
		pxQueue->pcWriteTo = pxQueue->pcHead;
     508:	6062      	str	r2, [r4, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:263
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
     50a:	4343      	muls	r3, r0
     50c:	18d1      	adds	r1, r2, r3
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:266
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
     50e:	1a1b      	subs	r3, r3, r0
     510:	4413      	add	r3, r2
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:263
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
     512:	60a1      	str	r1, [r4, #8]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:266
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
     514:	60e3      	str	r3, [r4, #12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:264
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
     516:	2100      	movs	r1, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:267
		pxQueue->cRxLock = queueUNLOCKED;
     518:	23ff      	movs	r3, #255	; 0xff
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:264
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
     51a:	63a1      	str	r1, [r4, #56]	; 0x38
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:267
		pxQueue->cRxLock = queueUNLOCKED;
     51c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:268
		pxQueue->cTxLock = queueUNLOCKED;
     520:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:270
		if( xNewQueue == pdFALSE )
     524:	b995      	cbnz	r5, 54c <xQueueGenericReset+0x54>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:277
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
     526:	6923      	ldr	r3, [r4, #16]
     528:	b163      	cbz	r3, 544 <xQueueGenericReset+0x4c>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:279
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
     52a:	f104 0010 	add.w	r0, r4, #16
     52e:	f000 fca9 	bl	e84 <xTaskRemoveFromEventList>
     532:	b138      	cbz	r0, 544 <xQueueGenericReset+0x4c>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:281
					queueYIELD_IF_USING_PREEMPTION();
     534:	4b0a      	ldr	r3, [pc, #40]	; (560 <xQueueGenericReset+0x68>)
     536:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
     53a:	601a      	str	r2, [r3, #0]
     53c:	f3bf 8f4f 	dsb	sy
     540:	f3bf 8f6f 	isb	sy
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:300
	taskEXIT_CRITICAL();
     544:	f000 fe7e 	bl	1244 <vPortExitCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:305
}
     548:	2001      	movs	r0, #1
     54a:	bd38      	pop	{r3, r4, r5, pc}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:296
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
     54c:	f104 0010 	add.w	r0, r4, #16
     550:	f7ff fed7 	bl	302 <vListInitialise>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:297
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
     554:	f104 0024 	add.w	r0, r4, #36	; 0x24
     558:	f7ff fed3 	bl	302 <vListInitialise>
     55c:	e7f2      	b.n	544 <xQueueGenericReset+0x4c>
     55e:	bf00      	nop
     560:	e000ed04 	.word	0xe000ed04

00000564 <xQueueGenericCreate>:
xQueueGenericCreate():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:369
	{
     564:	b570      	push	{r4, r5, r6, lr}
     566:	4606      	mov	r6, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:385
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
     568:	4348      	muls	r0, r1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:397
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
     56a:	304c      	adds	r0, #76	; 0x4c
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:369
	{
     56c:	460d      	mov	r5, r1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:397
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
     56e:	f000 fde1 	bl	1134 <pvPortMalloc>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:399
		if( pxNewQueue != NULL )
     572:	4604      	mov	r4, r0
     574:	b158      	cbz	r0, 58e <xQueueGenericCreate+0x2a>
prvInitialiseNewQueue():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:435
	if( uxItemSize == ( UBaseType_t ) 0 )
     576:	b165      	cbz	r5, 592 <xQueueGenericCreate+0x2e>
xQueueGenericCreate():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:404
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
     578:	f100 034c 	add.w	r3, r0, #76	; 0x4c
prvInitialiseNewQueue():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:446
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
     57c:	6023      	str	r3, [r4, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:452
	pxNewQueue->uxItemSize = uxItemSize;
     57e:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:453
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
     582:	2101      	movs	r1, #1
     584:	4620      	mov	r0, r4
     586:	f7ff ffb7 	bl	4f8 <xQueueGenericReset>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:463
		pxNewQueue->pxQueueSetContainer = NULL;
     58a:	2300      	movs	r3, #0
     58c:	64a3      	str	r3, [r4, #72]	; 0x48
xQueueGenericCreate():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:424
	}
     58e:	4620      	mov	r0, r4
     590:	bd70      	pop	{r4, r5, r6, pc}
prvInitialiseNewQueue():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:435
	if( uxItemSize == ( UBaseType_t ) 0 )
     592:	4603      	mov	r3, r0
     594:	e7f2      	b.n	57c <xQueueGenericCreate+0x18>
xQueueGenericCreate():
     596:	Address 0x0000000000000596 is out of bounds.


00000598 <xQueueGenericSend>:
xQueueGenericSend():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:748
{
     598:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:749
BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
     59c:	2700      	movs	r7, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:934
					portYIELD_WITHIN_API();
     59e:	f8df 9108 	ldr.w	r9, [pc, #264]	; 6a8 <xQueueGenericSend+0x110>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:748
{
     5a2:	9201      	str	r2, [sp, #4]
     5a4:	4604      	mov	r4, r0
     5a6:	468a      	mov	sl, r1
     5a8:	461e      	mov	r6, r3
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:910
		prvLockQueue( pxQueue );
     5aa:	46b8      	mov	r8, r7
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:768
		taskENTER_CRITICAL();
     5ac:	f000 fe3a 	bl	1224 <vPortEnterCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:774
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
     5b0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
     5b2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
     5b4:	429a      	cmp	r2, r3
     5b6:	d301      	bcc.n	5bc <xQueueGenericSend+0x24>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:774 (discriminator 1)
     5b8:	2e02      	cmp	r6, #2
     5ba:	d125      	bne.n	608 <xQueueGenericSend+0x70>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:782
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
     5bc:	4632      	mov	r2, r6
     5be:	4651      	mov	r1, sl
     5c0:	4620      	mov	r0, r4
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:780
				UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
     5c2:	6ba5      	ldr	r5, [r4, #56]	; 0x38
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:782
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
     5c4:	f7ff fee9 	bl	39a <prvCopyDataToQueue>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:784
					if( pxQueue->pxQueueSetContainer != NULL )
     5c8:	6ca3      	ldr	r3, [r4, #72]	; 0x48
     5ca:	b1ab      	cbz	r3, 5f8 <xQueueGenericSend+0x60>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:786
						if( ( xCopyPosition == queueOVERWRITE ) && ( uxPreviousMessagesWaiting != ( UBaseType_t ) 0 ) )
     5cc:	2e02      	cmp	r6, #2
     5ce:	d100      	bne.n	5d2 <xQueueGenericSend+0x3a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:786 (discriminator 1)
     5d0:	b965      	cbnz	r5, 5ec <xQueueGenericSend+0x54>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:793
						else if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
     5d2:	4631      	mov	r1, r6
     5d4:	4620      	mov	r0, r4
     5d6:	f7ff ff15 	bl	404 <prvNotifyQueueSetContainer>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:824
						else if( xYieldRequired != pdFALSE )
     5da:	b138      	cbz	r0, 5ec <xQueueGenericSend+0x54>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:830
							queueYIELD_IF_USING_PREEMPTION();
     5dc:	4b32      	ldr	r3, [pc, #200]	; (6a8 <xQueueGenericSend+0x110>)
     5de:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
     5e2:	601a      	str	r2, [r3, #0]
     5e4:	f3bf 8f4f 	dsb	sy
     5e8:	f3bf 8f6f 	isb	sy
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:874
				taskEXIT_CRITICAL();
     5ec:	f000 fe2a 	bl	1244 <vPortExitCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:875
				return pdPASS;
     5f0:	2001      	movs	r0, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:954
}
     5f2:	b004      	add	sp, #16
     5f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:809
						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
     5f8:	6a63      	ldr	r3, [r4, #36]	; 0x24
     5fa:	2b00      	cmp	r3, #0
     5fc:	d0ed      	beq.n	5da <xQueueGenericSend+0x42>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:811
							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
     5fe:	f104 0024 	add.w	r0, r4, #36	; 0x24
     602:	f000 fc3f 	bl	e84 <xTaskRemoveFromEventList>
     606:	e7e8      	b.n	5da <xQueueGenericSend+0x42>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:879
				if( xTicksToWait == ( TickType_t ) 0 )
     608:	9d01      	ldr	r5, [sp, #4]
     60a:	b91d      	cbnz	r5, 614 <xQueueGenericSend+0x7c>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:883
					taskEXIT_CRITICAL();
     60c:	f000 fe1a 	bl	1244 <vPortExitCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:951
			return errQUEUE_FULL;
     610:	2000      	movs	r0, #0
     612:	e7ee      	b.n	5f2 <xQueueGenericSend+0x5a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:890
				else if( xEntryTimeSet == pdFALSE )
     614:	b917      	cbnz	r7, 61c <xQueueGenericSend+0x84>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:894
					vTaskInternalSetTimeOutState( &xTimeOut );
     616:	a802      	add	r0, sp, #8
     618:	f000 fc6c 	bl	ef4 <vTaskInternalSetTimeOutState>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:904
		taskEXIT_CRITICAL();
     61c:	f000 fe12 	bl	1244 <vPortExitCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:909
		vTaskSuspendAll();
     620:	f000 fac8 	bl	bb4 <vTaskSuspendAll>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:910
		prvLockQueue( pxQueue );
     624:	f000 fdfe 	bl	1224 <vPortEnterCritical>
     628:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
     62c:	2bff      	cmp	r3, #255	; 0xff
     62e:	bf08      	it	eq
     630:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
     634:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
     638:	2bff      	cmp	r3, #255	; 0xff
     63a:	bf08      	it	eq
     63c:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
     640:	f000 fe00 	bl	1244 <vPortExitCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:913
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
     644:	a901      	add	r1, sp, #4
     646:	a802      	add	r0, sp, #8
     648:	f000 fc60 	bl	f0c <xTaskCheckForTimeOut>
     64c:	bb28      	cbnz	r0, 69a <xQueueGenericSend+0x102>
prvIsQueueFull():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2331
	taskENTER_CRITICAL();
     64e:	f000 fde9 	bl	1224 <vPortEnterCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2333
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
     652:	6ba2      	ldr	r2, [r4, #56]	; 0x38
     654:	6be3      	ldr	r3, [r4, #60]	; 0x3c
     656:	429a      	cmp	r2, r3
     658:	d10e      	bne.n	678 <xQueueGenericSend+0xe0>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2342
	taskEXIT_CRITICAL();
     65a:	f000 fdf3 	bl	1244 <vPortExitCritical>
xQueueGenericSend():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:918
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
     65e:	9901      	ldr	r1, [sp, #4]
     660:	f104 0010 	add.w	r0, r4, #16
     664:	f000 fbfe 	bl	e64 <vTaskPlaceOnEventList>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:925
				prvUnlockQueue( pxQueue );
     668:	4620      	mov	r0, r4
     66a:	f7ff ff05 	bl	478 <prvUnlockQueue>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:932
				if( xTaskResumeAll() == pdFALSE )
     66e:	f000 fb2f 	bl	cd0 <xTaskResumeAll>
     672:	b148      	cbz	r0, 688 <xQueueGenericSend+0xf0>
     674:	2701      	movs	r7, #1
     676:	e799      	b.n	5ac <xQueueGenericSend+0x14>
prvIsQueueFull():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2342
	taskEXIT_CRITICAL();
     678:	f000 fde4 	bl	1244 <vPortExitCritical>
xQueueGenericSend():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:940
				prvUnlockQueue( pxQueue );
     67c:	4620      	mov	r0, r4
     67e:	f7ff fefb 	bl	478 <prvUnlockQueue>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:941
				( void ) xTaskResumeAll();
     682:	f000 fb25 	bl	cd0 <xTaskResumeAll>
     686:	e7f5      	b.n	674 <xQueueGenericSend+0xdc>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:934
					portYIELD_WITHIN_API();
     688:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
     68c:	f8c9 3000 	str.w	r3, [r9]
     690:	f3bf 8f4f 	dsb	sy
     694:	f3bf 8f6f 	isb	sy
     698:	e7ec      	b.n	674 <xQueueGenericSend+0xdc>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:947
			prvUnlockQueue( pxQueue );
     69a:	4620      	mov	r0, r4
     69c:	f7ff feec 	bl	478 <prvUnlockQueue>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:948
			( void ) xTaskResumeAll();
     6a0:	f000 fb16 	bl	cd0 <xTaskResumeAll>
     6a4:	e7b4      	b.n	610 <xQueueGenericSend+0x78>
     6a6:	bf00      	nop
     6a8:	e000ed04 	.word	0xe000ed04

000006ac <xQueueGenericSendFromISR>:
xQueueGenericSendFromISR():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:958
{
     6ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
     6b0:	4604      	mov	r4, r0
     6b2:	4690      	mov	r8, r2
     6b4:	461f      	mov	r7, r3
ulPortRaiseBASEPRI():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:211

portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
{
uint32_t ulOriginalBASEPRI, ulNewBASEPRI;

	__asm volatile
     6b6:	f3ef 8611 	mrs	r6, BASEPRI
     6ba:	f04f 0350 	mov.w	r3, #80	; 0x50
     6be:	f383 8811 	msr	BASEPRI, r3
     6c2:	f3bf 8f6f 	isb	sy
     6c6:	f3bf 8f4f 	dsb	sy
xQueueGenericSendFromISR():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:990
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
     6ca:	6b82      	ldr	r2, [r0, #56]	; 0x38
     6cc:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
     6ce:	429a      	cmp	r2, r3
     6d0:	d301      	bcc.n	6d6 <xQueueGenericSendFromISR+0x2a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:990 (discriminator 1)
     6d2:	2f02      	cmp	r7, #2
     6d4:	d128      	bne.n	728 <xQueueGenericSendFromISR+0x7c>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:992
			const int8_t cTxLock = pxQueue->cTxLock;
     6d6:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1001
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
     6da:	463a      	mov	r2, r7
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:992
			const int8_t cTxLock = pxQueue->cTxLock;
     6dc:	b26d      	sxtb	r5, r5
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1001
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
     6de:	4620      	mov	r0, r4
     6e0:	f7ff fe5b 	bl	39a <prvCopyDataToQueue>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1005
			if( cTxLock == queueUNLOCKED )
     6e4:	1c6b      	adds	r3, r5, #1
     6e6:	d11a      	bne.n	71e <xQueueGenericSendFromISR+0x72>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1009
					if( pxQueue->pxQueueSetContainer != NULL )
     6e8:	6ca3      	ldr	r3, [r4, #72]	; 0x48
     6ea:	b183      	cbz	r3, 70e <xQueueGenericSendFromISR+0x62>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1011
						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
     6ec:	4639      	mov	r1, r7
     6ee:	4620      	mov	r0, r4
     6f0:	f7ff fe88 	bl	404 <prvNotifyQueueSetContainer>
     6f4:	b908      	cbnz	r0, 6fa <xQueueGenericSendFromISR+0x4e>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1094
			xReturn = pdPASS;
     6f6:	2001      	movs	r0, #1
     6f8:	e005      	b.n	706 <xQueueGenericSendFromISR+0x5a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1016
							if( pxHigherPriorityTaskWoken != NULL )
     6fa:	f1b8 0f00 	cmp.w	r8, #0
     6fe:	d0fa      	beq.n	6f6 <xQueueGenericSendFromISR+0x4a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1018
								*pxHigherPriorityTaskWoken = pdTRUE;
     700:	2001      	movs	r0, #1
     702:	f8c8 0000 	str.w	r0, [r8]
vPortSetBASEPRI():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:229
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
     706:	f386 8811 	msr	BASEPRI, r6
xQueueGenericSendFromISR():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1105
}
     70a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1032
						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
     70e:	6a63      	ldr	r3, [r4, #36]	; 0x24
     710:	2b00      	cmp	r3, #0
     712:	d0f0      	beq.n	6f6 <xQueueGenericSendFromISR+0x4a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1034
							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
     714:	f104 0024 	add.w	r0, r4, #36	; 0x24
     718:	f000 fbb4 	bl	e84 <xTaskRemoveFromEventList>
     71c:	e7ea      	b.n	6f4 <xQueueGenericSendFromISR+0x48>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1091
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
     71e:	3501      	adds	r5, #1
     720:	b26d      	sxtb	r5, r5
     722:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
     726:	e7e6      	b.n	6f6 <xQueueGenericSendFromISR+0x4a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1099
			xReturn = errQUEUE_FULL;
     728:	2000      	movs	r0, #0
     72a:	e7ec      	b.n	706 <xQueueGenericSendFromISR+0x5a>

0000072c <xQueueSemaphoreTake>:
xQueueSemaphoreTake():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1415
{
     72c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
     730:	b085      	sub	sp, #20
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1421
	BaseType_t xInheritanceOccurred = pdFALSE;
     732:	2500      	movs	r5, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1569
					portYIELD_WITHIN_API();
     734:	f8df 9118 	ldr.w	r9, [pc, #280]	; 850 <xQueueSemaphoreTake+0x124>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1415
{
     738:	9101      	str	r1, [sp, #4]
     73a:	4604      	mov	r4, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1416
BaseType_t xEntryTimeSet = pdFALSE;
     73c:	462f      	mov	r7, r5
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1535
		prvLockQueue( pxQueue );
     73e:	462e      	mov	r6, r5
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1444
		taskENTER_CRITICAL();
     740:	f000 fd70 	bl	1224 <vPortEnterCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1448
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
     744:	6ba3      	ldr	r3, [r4, #56]	; 0x38
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1452
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
     746:	b1e3      	cbz	r3, 782 <xQueueSemaphoreTake+0x56>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1458
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
     748:	3b01      	subs	r3, #1
     74a:	63a3      	str	r3, [r4, #56]	; 0x38
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1462
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
     74c:	6823      	ldr	r3, [r4, #0]
     74e:	b913      	cbnz	r3, 756 <xQueueSemaphoreTake+0x2a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1466
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
     750:	f000 fce4 	bl	111c <pvTaskIncrementMutexHeldCount>
     754:	60a0      	str	r0, [r4, #8]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1477
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
     756:	6923      	ldr	r3, [r4, #16]
     758:	b163      	cbz	r3, 774 <xQueueSemaphoreTake+0x48>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1479
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
     75a:	f104 0010 	add.w	r0, r4, #16
     75e:	f000 fb91 	bl	e84 <xTaskRemoveFromEventList>
     762:	b138      	cbz	r0, 774 <xQueueSemaphoreTake+0x48>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1481
						queueYIELD_IF_USING_PREEMPTION();
     764:	4b3a      	ldr	r3, [pc, #232]	; (850 <xQueueSemaphoreTake+0x124>)
     766:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
     76a:	601a      	str	r2, [r3, #0]
     76c:	f3bf 8f4f 	dsb	sy
     770:	f3bf 8f6f 	isb	sy
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1493
				taskEXIT_CRITICAL();
     774:	f000 fd66 	bl	1244 <vPortExitCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1494
				return pdPASS;
     778:	2501      	movs	r5, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1629
}
     77a:	4628      	mov	r0, r5
     77c:	b005      	add	sp, #20
     77e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1498
				if( xTicksToWait == ( TickType_t ) 0 )
     782:	f8dd 8004 	ldr.w	r8, [sp, #4]
     786:	f1b8 0f00 	cmp.w	r8, #0
     78a:	d103      	bne.n	794 <xQueueSemaphoreTake+0x68>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1615
						taskEXIT_CRITICAL();
     78c:	f000 fd5a 	bl	1244 <vPortExitCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1621
				return errQUEUE_EMPTY;
     790:	2500      	movs	r5, #0
     792:	e7f2      	b.n	77a <xQueueSemaphoreTake+0x4e>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1515
				else if( xEntryTimeSet == pdFALSE )
     794:	b917      	cbnz	r7, 79c <xQueueSemaphoreTake+0x70>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1519
					vTaskInternalSetTimeOutState( &xTimeOut );
     796:	a802      	add	r0, sp, #8
     798:	f000 fbac 	bl	ef4 <vTaskInternalSetTimeOutState>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1529
		taskEXIT_CRITICAL();
     79c:	f000 fd52 	bl	1244 <vPortExitCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1534
		vTaskSuspendAll();
     7a0:	f000 fa08 	bl	bb4 <vTaskSuspendAll>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1535
		prvLockQueue( pxQueue );
     7a4:	f000 fd3e 	bl	1224 <vPortEnterCritical>
     7a8:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
     7ac:	2bff      	cmp	r3, #255	; 0xff
     7ae:	bf08      	it	eq
     7b0:	f884 6044 	strbeq.w	r6, [r4, #68]	; 0x44
     7b4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
     7b8:	2bff      	cmp	r3, #255	; 0xff
     7ba:	bf08      	it	eq
     7bc:	f884 6045 	strbeq.w	r6, [r4, #69]	; 0x45
     7c0:	f000 fd40 	bl	1244 <vPortExitCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1538
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
     7c4:	a901      	add	r1, sp, #4
     7c6:	a802      	add	r0, sp, #8
     7c8:	f000 fba0 	bl	f0c <xTaskCheckForTimeOut>
     7cc:	bb40      	cbnz	r0, 820 <xQueueSemaphoreTake+0xf4>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1544
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
     7ce:	4620      	mov	r0, r4
     7d0:	f7ff fdd8 	bl	384 <prvIsQueueEmpty>
     7d4:	b1f0      	cbz	r0, 814 <xQueueSemaphoreTake+0xe8>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1550
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
     7d6:	6823      	ldr	r3, [r4, #0]
     7d8:	b93b      	cbnz	r3, 7ea <xQueueSemaphoreTake+0xbe>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1552
						taskENTER_CRITICAL();
     7da:	f000 fd23 	bl	1224 <vPortEnterCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1554
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
     7de:	68a0      	ldr	r0, [r4, #8]
     7e0:	f000 fbd2 	bl	f88 <xTaskPriorityInherit>
     7e4:	4605      	mov	r5, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1556
						taskEXIT_CRITICAL();
     7e6:	f000 fd2d 	bl	1244 <vPortExitCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1565
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
     7ea:	9901      	ldr	r1, [sp, #4]
     7ec:	f104 0024 	add.w	r0, r4, #36	; 0x24
     7f0:	f000 fb38 	bl	e64 <vTaskPlaceOnEventList>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1566
				prvUnlockQueue( pxQueue );
     7f4:	4620      	mov	r0, r4
     7f6:	f7ff fe3f 	bl	478 <prvUnlockQueue>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1567
				if( xTaskResumeAll() == pdFALSE )
     7fa:	f000 fa69 	bl	cd0 <xTaskResumeAll>
     7fe:	b938      	cbnz	r0, 810 <xQueueSemaphoreTake+0xe4>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1569
					portYIELD_WITHIN_API();
     800:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
     804:	f8c9 3000 	str.w	r3, [r9]
     808:	f3bf 8f4f 	dsb	sy
     80c:	f3bf 8f6f 	isb	sy
     810:	2701      	movs	r7, #1
     812:	e795      	b.n	740 <xQueueSemaphoreTake+0x14>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1580
				prvUnlockQueue( pxQueue );
     814:	4620      	mov	r0, r4
     816:	f7ff fe2f 	bl	478 <prvUnlockQueue>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1581
				( void ) xTaskResumeAll();
     81a:	f000 fa59 	bl	cd0 <xTaskResumeAll>
     81e:	e7f7      	b.n	810 <xQueueSemaphoreTake+0xe4>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1587
			prvUnlockQueue( pxQueue );
     820:	4620      	mov	r0, r4
     822:	f7ff fe29 	bl	478 <prvUnlockQueue>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1588
			( void ) xTaskResumeAll();
     826:	f000 fa53 	bl	cd0 <xTaskResumeAll>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1594
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
     82a:	4620      	mov	r0, r4
     82c:	f7ff fdaa 	bl	384 <prvIsQueueEmpty>
     830:	2800      	cmp	r0, #0
     832:	d0ed      	beq.n	810 <xQueueSemaphoreTake+0xe4>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1601
					if( xInheritanceOccurred != pdFALSE )
     834:	2d00      	cmp	r5, #0
     836:	d0a0      	beq.n	77a <xQueueSemaphoreTake+0x4e>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1603
						taskENTER_CRITICAL();
     838:	f000 fcf4 	bl	1224 <vPortEnterCritical>
prvGetDisinheritPriorityAfterTimeout():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2055
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
     83c:	6a61      	ldr	r1, [r4, #36]	; 0x24
     83e:	b119      	cbz	r1, 848 <xQueueSemaphoreTake+0x11c>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2057
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
     840:	6b23      	ldr	r3, [r4, #48]	; 0x30
     842:	6819      	ldr	r1, [r3, #0]
     844:	f1c1 0105 	rsb	r1, r1, #5
xQueueSemaphoreTake():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1613
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
     848:	68a0      	ldr	r0, [r4, #8]
     84a:	f000 fc27 	bl	109c <vTaskPriorityDisinheritAfterTimeout>
     84e:	e79d      	b.n	78c <xQueueSemaphoreTake+0x60>
     850:	e000ed04 	.word	0xe000ed04

00000854 <xQueueReceiveFromISR>:
xQueueReceiveFromISR():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1782
{
     854:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
     858:	4607      	mov	r7, r0
     85a:	4690      	mov	r8, r2
ulPortRaiseBASEPRI():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:211
	__asm volatile
     85c:	f3ef 8611 	mrs	r6, BASEPRI
     860:	f04f 0350 	mov.w	r3, #80	; 0x50
     864:	f383 8811 	msr	BASEPRI, r3
     868:	f3bf 8f6f 	isb	sy
     86c:	f3bf 8f4f 	dsb	sy
xQueueReceiveFromISR():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1808
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
     870:	6b84      	ldr	r4, [r0, #56]	; 0x38
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1811
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
     872:	b30c      	cbz	r4, 8b8 <xQueueReceiveFromISR+0x64>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1813
			const int8_t cRxLock = pxQueue->cRxLock;
     874:	f890 5044 	ldrb.w	r5, [r0, #68]	; 0x44
     878:	b26d      	sxtb	r5, r5
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1817
			prvCopyDataFromQueue( pxQueue, pvBuffer );
     87a:	f7ff fde8 	bl	44e <prvCopyDataFromQueue>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1818
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
     87e:	3c01      	subs	r4, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1824
			if( cRxLock == queueUNLOCKED )
     880:	1c6b      	adds	r3, r5, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1818
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
     882:	63bc      	str	r4, [r7, #56]	; 0x38
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1824
			if( cRxLock == queueUNLOCKED )
     884:	d113      	bne.n	8ae <xQueueReceiveFromISR+0x5a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1826
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
     886:	693b      	ldr	r3, [r7, #16]
     888:	b90b      	cbnz	r3, 88e <xQueueReceiveFromISR+0x3a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1858
			xReturn = pdPASS;
     88a:	2001      	movs	r0, #1
     88c:	e00b      	b.n	8a6 <xQueueReceiveFromISR+0x52>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1828
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
     88e:	f107 0010 	add.w	r0, r7, #16
     892:	f000 faf7 	bl	e84 <xTaskRemoveFromEventList>
     896:	2800      	cmp	r0, #0
     898:	d0f7      	beq.n	88a <xQueueReceiveFromISR+0x36>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1832
						if( pxHigherPriorityTaskWoken != NULL )
     89a:	f1b8 0f00 	cmp.w	r8, #0
     89e:	d0f4      	beq.n	88a <xQueueReceiveFromISR+0x36>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1834
							*pxHigherPriorityTaskWoken = pdTRUE;
     8a0:	2001      	movs	r0, #1
     8a2:	f8c8 0000 	str.w	r0, [r8]
vPortSetBASEPRI():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:229
	__asm volatile
     8a6:	f386 8811 	msr	BASEPRI, r6
xQueueReceiveFromISR():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1869
}
     8aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1855
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
     8ae:	3501      	adds	r5, #1
     8b0:	b26d      	sxtb	r5, r5
     8b2:	f887 5044 	strb.w	r5, [r7, #68]	; 0x44
     8b6:	e7e8      	b.n	88a <xQueueReceiveFromISR+0x36>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1862
			xReturn = pdFAIL;
     8b8:	4620      	mov	r0, r4
     8ba:	e7f4      	b.n	8a6 <xQueueReceiveFromISR+0x52>

000008bc <prvIdleTask>:
prvIdleTask():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3335
 *
 * void prvIdleTask( void *pvParameters );
 *
 */
static portTASK_FUNCTION( prvIdleTask, pvParameters )
{
     8bc:	b508      	push	{r3, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3374

			A critical region is not required here as we are just reading from
			the list, and an occasional incorrect value will not matter.  If
			the ready list at the idle priority contains more than one task
			then a task other than the idle task is ready to execute. */
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
     8be:	4c07      	ldr	r4, [pc, #28]	; (8dc <prvIdleTask+0x20>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3376
			{
				taskYIELD();
     8c0:	4d07      	ldr	r5, [pc, #28]	; (8e0 <prvIdleTask+0x24>)
     8c2:	f04f 5680 	mov.w	r6, #268435456	; 0x10000000
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3374
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
     8c6:	6823      	ldr	r3, [r4, #0]
     8c8:	2b01      	cmp	r3, #1
     8ca:	d904      	bls.n	8d6 <prvIdleTask+0x1a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3376
				taskYIELD();
     8cc:	602e      	str	r6, [r5, #0]
     8ce:	f3bf 8f4f 	dsb	sy
     8d2:	f3bf 8f6f 	isb	sy
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3394
			/* Call the user defined function from within the idle task.  This
			allows the application designer to add background functionality
			without the overhead of a separate task.
			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
			CALL A FUNCTION THAT MIGHT BLOCK. */
			vApplicationIdleHook();
     8d6:	f7ff fd13 	bl	300 <vApplicationIdleHook>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3351
		prvCheckTasksWaitingTermination();
     8da:	e7f4      	b.n	8c6 <prvIdleTask+0xa>
     8dc:	100001c0 	.word	0x100001c0
     8e0:	e000ed04 	.word	0xe000ed04

000008e4 <prvResetNextTaskUnblockTime>:
prvResetNextTaskUnblockTime():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3884

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
     8e4:	4a06      	ldr	r2, [pc, #24]	; (900 <prvResetNextTaskUnblockTime+0x1c>)
     8e6:	6813      	ldr	r3, [r2, #0]
     8e8:	6819      	ldr	r1, [r3, #0]
     8ea:	4b06      	ldr	r3, [pc, #24]	; (904 <prvResetNextTaskUnblockTime+0x20>)
     8ec:	b919      	cbnz	r1, 8f6 <prvResetNextTaskUnblockTime+0x12>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3890
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
     8ee:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3899
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
     8f2:	601a      	str	r2, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3901
	}
}
     8f4:	4770      	bx	lr
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3898
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
     8f6:	6812      	ldr	r2, [r2, #0]
     8f8:	68d2      	ldr	r2, [r2, #12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3899
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
     8fa:	68d2      	ldr	r2, [r2, #12]
     8fc:	6852      	ldr	r2, [r2, #4]
     8fe:	e7f8      	b.n	8f2 <prvResetNextTaskUnblockTime+0xe>
     900:	100001b8 	.word	0x100001b8
     904:	10000264 	.word	0x10000264

00000908 <prvAddCurrentTaskToDelayedList>:
prvAddCurrentTaskToDelayedList():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5082
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
     908:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5084
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
     90a:	4b1b      	ldr	r3, [pc, #108]	; (978 <prvAddCurrentTaskToDelayedList+0x70>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5097
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
     90c:	4e1b      	ldr	r6, [pc, #108]	; (97c <prvAddCurrentTaskToDelayedList+0x74>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5084
const TickType_t xConstTickCount = xTickCount;
     90e:	681c      	ldr	r4, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5082
{
     910:	4605      	mov	r5, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5097
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
     912:	6830      	ldr	r0, [r6, #0]
     914:	3004      	adds	r0, #4
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5082
{
     916:	460f      	mov	r7, r1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5097
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
     918:	f7ff fd24 	bl	364 <uxListRemove>
     91c:	4633      	mov	r3, r6
     91e:	b940      	cbnz	r0, 932 <prvAddCurrentTaskToDelayedList+0x2a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5101
	{
		/* The current task must be in a ready list, so there is no need to
		check, and the port reset macro can be called directly. */
		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority ); /*lint !e931 pxCurrentTCB cannot change as it is the calling task.  pxCurrentTCB->uxPriority and uxTopReadyPriority cannot change as called with scheduler suspended or in a critical section. */
     920:	6831      	ldr	r1, [r6, #0]
     922:	4e17      	ldr	r6, [pc, #92]	; (980 <prvAddCurrentTaskToDelayedList+0x78>)
     924:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
     926:	6832      	ldr	r2, [r6, #0]
     928:	2001      	movs	r0, #1
     92a:	4088      	lsls	r0, r1
     92c:	ea22 0200 	bic.w	r2, r2, r0
     930:	6032      	str	r2, [r6, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5110
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
     932:	1c6a      	adds	r2, r5, #1
     934:	d107      	bne.n	946 <prvAddCurrentTaskToDelayedList+0x3e>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5110 (discriminator 1)
     936:	b137      	cbz	r7, 946 <prvAddCurrentTaskToDelayedList+0x3e>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5115
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
     938:	6819      	ldr	r1, [r3, #0]
     93a:	4812      	ldr	r0, [pc, #72]	; (984 <prvAddCurrentTaskToDelayedList+0x7c>)
     93c:	3104      	adds	r1, #4
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5190

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
     93e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5115
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
     942:	f7ff bcec 	b.w	31e <vListInsertEnd>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5125
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
     946:	681a      	ldr	r2, [r3, #0]
     948:	1964      	adds	r4, r4, r5
     94a:	6054      	str	r4, [r2, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5127
			if( xTimeToWake < xConstTickCount )
     94c:	d307      	bcc.n	95e <prvAddCurrentTaskToDelayedList+0x56>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5131
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
     94e:	4a0e      	ldr	r2, [pc, #56]	; (988 <prvAddCurrentTaskToDelayedList+0x80>)
     950:	6810      	ldr	r0, [r2, #0]
     952:	6819      	ldr	r1, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5190
}
     954:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5131
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
     958:	3104      	adds	r1, #4
     95a:	f7ff bcec 	b.w	336 <vListInsert>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5137
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
     95e:	4a0b      	ldr	r2, [pc, #44]	; (98c <prvAddCurrentTaskToDelayedList+0x84>)
     960:	6810      	ldr	r0, [r2, #0]
     962:	6819      	ldr	r1, [r3, #0]
     964:	3104      	adds	r1, #4
     966:	f7ff fce6 	bl	336 <vListInsert>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5142
				if( xTimeToWake < xNextTaskUnblockTime )
     96a:	4b09      	ldr	r3, [pc, #36]	; (990 <prvAddCurrentTaskToDelayedList+0x88>)
     96c:	681a      	ldr	r2, [r3, #0]
     96e:	42a2      	cmp	r2, r4
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5144
					xNextTaskUnblockTime = xTimeToWake;
     970:	bf88      	it	hi
     972:	601c      	strhi	r4, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5190
}
     974:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     976:	bf00      	nop
     978:	10000298 	.word	0x10000298
     97c:	100001b4 	.word	0x100001b4
     980:	10000234 	.word	0x10000234
     984:	10000284 	.word	0x10000284
     988:	100001bc 	.word	0x100001bc
     98c:	100001b8 	.word	0x100001b8
     990:	10000264 	.word	0x10000264

00000994 <xTaskCreate>:
xTaskCreate():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:736
	{
     994:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:770
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
     998:	0096      	lsls	r6, r2, #2
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:736
	{
     99a:	4681      	mov	r9, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:770
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
     99c:	4630      	mov	r0, r6
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:736
	{
     99e:	460d      	mov	r5, r1
     9a0:	469a      	mov	sl, r3
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:770
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
     9a2:	f000 fbc7 	bl	1134 <pvPortMalloc>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:772
			if( pxStack != NULL )
     9a6:	4607      	mov	r7, r0
     9a8:	b198      	cbz	r0, 9d2 <xTaskCreate+0x3e>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:775
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
     9aa:	2050      	movs	r0, #80	; 0x50
     9ac:	f000 fbc2 	bl	1134 <pvPortMalloc>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:777
				if( pxNewTCB != NULL )
     9b0:	4604      	mov	r4, r0
     9b2:	b158      	cbz	r0, 9cc <xTaskCreate+0x38>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:780
					pxNewTCB->pxStack = pxStack;
     9b4:	6307      	str	r7, [r0, #48]	; 0x30
prvInitialiseNewTask():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:851
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
     9b6:	4632      	mov	r2, r6
     9b8:	21a5      	movs	r1, #165	; 0xa5
     9ba:	4638      	mov	r0, r7
     9bc:	f000 ff9e 	bl	18fc <memset>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:861
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
     9c0:	f8d4 b030 	ldr.w	fp, [r4, #48]	; 0x30
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:889
	if( pcName != NULL )
     9c4:	b945      	cbnz	r5, 9d8 <xTaskCreate+0x44>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:916
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
     9c6:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
     9ca:	e013      	b.n	9f4 <xTaskCreate+0x60>
xTaskCreate():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:786
					vPortFree( pxStack );
     9cc:	4638      	mov	r0, r7
     9ce:	f000 fbc0 	bl	1152 <vPortFree>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:812
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
     9d2:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
     9d6:	e08c      	b.n	af2 <xTaskCreate+0x15e>
     9d8:	1e6b      	subs	r3, r5, #1
     9da:	f104 0234 	add.w	r2, r4, #52	; 0x34
     9de:	350b      	adds	r5, #11
prvInitialiseNewTask():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:893
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
     9e0:	f813 1f01 	ldrb.w	r1, [r3, #1]!
     9e4:	f802 1b01 	strb.w	r1, [r2], #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:898
			if( pcName[ x ] == ( char ) 0x00 )
     9e8:	b109      	cbz	r1, 9ee <xTaskCreate+0x5a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:891
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
     9ea:	429d      	cmp	r5, r3
     9ec:	d1f8      	bne.n	9e0 <xTaskCreate+0x4c>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:910
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
     9ee:	2300      	movs	r3, #0
     9f0:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:921
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
     9f4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
     9f6:	2d04      	cmp	r5, #4
     9f8:	bf28      	it	cs
     9fa:	2504      	movcs	r5, #4
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:934
		pxNewTCB->uxMutexesHeld = 0;
     9fc:	f04f 0800 	mov.w	r8, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:938
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
     a00:	1d27      	adds	r7, r4, #4
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:930
	pxNewTCB->uxPriority = uxPriority;
     a02:	62e5      	str	r5, [r4, #44]	; 0x2c
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:933
		pxNewTCB->uxBasePriority = uxPriority;
     a04:	6425      	str	r5, [r4, #64]	; 0x40
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:938
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
     a06:	4638      	mov	r0, r7
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:934
		pxNewTCB->uxMutexesHeld = 0;
     a08:	f8c4 8044 	str.w	r8, [r4, #68]	; 0x44
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:861
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
     a0c:	3e04      	subs	r6, #4
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:938
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
     a0e:	f7ff fc83 	bl	318 <vListInitialiseItem>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:946
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
     a12:	f1c5 0505 	rsb	r5, r5, #5
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:939
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
     a16:	f104 0018 	add.w	r0, r4, #24
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:861
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
     a1a:	445e      	add	r6, fp
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:939
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
     a1c:	f7ff fc7c 	bl	318 <vListInitialiseItem>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:989
		pxNewTCB->ulNotifiedValue = 0;
     a20:	f8c4 8048 	str.w	r8, [r4, #72]	; 0x48
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:943
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
     a24:	6124      	str	r4, [r4, #16]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:946
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
     a26:	61a5      	str	r5, [r4, #24]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:947
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
     a28:	6264      	str	r4, [r4, #36]	; 0x24
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:990
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
     a2a:	f884 804c 	strb.w	r8, [r4, #76]	; 0x4c
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1053
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
     a2e:	4652      	mov	r2, sl
     a30:	4649      	mov	r1, r9
     a32:	f026 0007 	bic.w	r0, r6, #7
     a36:	f000 fbc7 	bl	11c8 <pxPortInitialiseStack>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1059
	if( pxCreatedTask != NULL )
     a3a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1053
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
     a3c:	6020      	str	r0, [r4, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1059
	if( pxCreatedTask != NULL )
     a3e:	b103      	cbz	r3, a42 <xTaskCreate+0xae>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1063
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
     a40:	601c      	str	r4, [r3, #0]
prvAddNewTaskToReadyList():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1076
	taskENTER_CRITICAL();
     a42:	f000 fbef 	bl	1224 <vPortEnterCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1078
		uxCurrentNumberOfTasks++;
     a46:	4b32      	ldr	r3, [pc, #200]	; (b10 <xTaskCreate+0x17c>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1079
		if( pxCurrentTCB == NULL )
     a48:	4e32      	ldr	r6, [pc, #200]	; (b14 <xTaskCreate+0x180>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1078
		uxCurrentNumberOfTasks++;
     a4a:	681a      	ldr	r2, [r3, #0]
     a4c:	f8df 80fc 	ldr.w	r8, [pc, #252]	; b4c <xTaskCreate+0x1b8>
     a50:	3201      	adds	r2, #1
     a52:	601a      	str	r2, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1079
		if( pxCurrentTCB == NULL )
     a54:	6832      	ldr	r2, [r6, #0]
     a56:	2a00      	cmp	r2, #0
     a58:	d14e      	bne.n	af8 <xTaskCreate+0x164>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1083
			pxCurrentTCB = pxNewTCB;
     a5a:	6034      	str	r4, [r6, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1085
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
     a5c:	681b      	ldr	r3, [r3, #0]
     a5e:	2b01      	cmp	r3, #1
     a60:	d122      	bne.n	aa8 <xTaskCreate+0x114>
prvInitialiseTaskLists():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3552
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
     a62:	482d      	ldr	r0, [pc, #180]	; (b18 <xTaskCreate+0x184>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3555
	vListInitialise( &xDelayedTaskList1 );
     a64:	f8df 90e8 	ldr.w	r9, [pc, #232]	; b50 <xTaskCreate+0x1bc>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3556
	vListInitialise( &xDelayedTaskList2 );
     a68:	4d2c      	ldr	r5, [pc, #176]	; (b1c <xTaskCreate+0x188>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3552
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
     a6a:	f7ff fc4a 	bl	302 <vListInitialise>
     a6e:	482c      	ldr	r0, [pc, #176]	; (b20 <xTaskCreate+0x18c>)
     a70:	f7ff fc47 	bl	302 <vListInitialise>
     a74:	482b      	ldr	r0, [pc, #172]	; (b24 <xTaskCreate+0x190>)
     a76:	f7ff fc44 	bl	302 <vListInitialise>
     a7a:	482b      	ldr	r0, [pc, #172]	; (b28 <xTaskCreate+0x194>)
     a7c:	f7ff fc41 	bl	302 <vListInitialise>
     a80:	482a      	ldr	r0, [pc, #168]	; (b2c <xTaskCreate+0x198>)
     a82:	f7ff fc3e 	bl	302 <vListInitialise>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3555
	vListInitialise( &xDelayedTaskList1 );
     a86:	4648      	mov	r0, r9
     a88:	f7ff fc3b 	bl	302 <vListInitialise>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3556
	vListInitialise( &xDelayedTaskList2 );
     a8c:	4628      	mov	r0, r5
     a8e:	f7ff fc38 	bl	302 <vListInitialise>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3557
	vListInitialise( &xPendingReadyList );
     a92:	4827      	ldr	r0, [pc, #156]	; (b30 <xTaskCreate+0x19c>)
     a94:	f7ff fc35 	bl	302 <vListInitialise>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3567
		vListInitialise( &xSuspendedTaskList );
     a98:	4826      	ldr	r0, [pc, #152]	; (b34 <xTaskCreate+0x1a0>)
     a9a:	f7ff fc32 	bl	302 <vListInitialise>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3573
	pxDelayedTaskList = &xDelayedTaskList1;
     a9e:	4b26      	ldr	r3, [pc, #152]	; (b38 <xTaskCreate+0x1a4>)
     aa0:	f8c3 9000 	str.w	r9, [r3]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3574
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
     aa4:	4b25      	ldr	r3, [pc, #148]	; (b3c <xTaskCreate+0x1a8>)
     aa6:	601d      	str	r5, [r3, #0]
prvAddNewTaskToReadyList():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1119
		uxTaskNumber++;
     aa8:	4a25      	ldr	r2, [pc, #148]	; (b40 <xTaskCreate+0x1ac>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1129
		prvAddTaskToReadyList( pxNewTCB );
     aaa:	4926      	ldr	r1, [pc, #152]	; (b44 <xTaskCreate+0x1b0>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1119
		uxTaskNumber++;
     aac:	6813      	ldr	r3, [r2, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1129
		prvAddTaskToReadyList( pxNewTCB );
     aae:	6808      	ldr	r0, [r1, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1119
		uxTaskNumber++;
     ab0:	3301      	adds	r3, #1
     ab2:	6013      	str	r3, [r2, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1129
		prvAddTaskToReadyList( pxNewTCB );
     ab4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
     ab6:	2501      	movs	r5, #1
     ab8:	fa05 f302 	lsl.w	r3, r5, r2
     abc:	4303      	orrs	r3, r0
     abe:	600b      	str	r3, [r1, #0]
     ac0:	4b15      	ldr	r3, [pc, #84]	; (b18 <xTaskCreate+0x184>)
     ac2:	2014      	movs	r0, #20
     ac4:	fb00 3002 	mla	r0, r0, r2, r3
     ac8:	4639      	mov	r1, r7
     aca:	f7ff fc28 	bl	31e <vListInsertEnd>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1133
	taskEXIT_CRITICAL();
     ace:	f000 fbb9 	bl	1244 <vPortExitCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1135
	if( xSchedulerRunning != pdFALSE )
     ad2:	f8d8 3000 	ldr.w	r3, [r8]
     ad6:	b163      	cbz	r3, af2 <xTaskCreate+0x15e>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1139
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
     ad8:	6833      	ldr	r3, [r6, #0]
     ada:	6ada      	ldr	r2, [r3, #44]	; 0x2c
     adc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
     ade:	429a      	cmp	r2, r3
     ae0:	d207      	bcs.n	af2 <xTaskCreate+0x15e>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1141
			taskYIELD_IF_USING_PREEMPTION();
     ae2:	4b19      	ldr	r3, [pc, #100]	; (b48 <xTaskCreate+0x1b4>)
     ae4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
     ae8:	601a      	str	r2, [r3, #0]
     aea:	f3bf 8f4f 	dsb	sy
     aee:	f3bf 8f6f 	isb	sy
xTaskCreate():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:816
	}
     af2:	4628      	mov	r0, r5
     af4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
prvAddNewTaskToReadyList():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1102
			if( xSchedulerRunning == pdFALSE )
     af8:	f8d8 3000 	ldr.w	r3, [r8]
     afc:	2b00      	cmp	r3, #0
     afe:	d1d3      	bne.n	aa8 <xTaskCreate+0x114>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1104
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
     b00:	6833      	ldr	r3, [r6, #0]
     b02:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
     b04:	6adb      	ldr	r3, [r3, #44]	; 0x2c
     b06:	429a      	cmp	r2, r3
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1106
					pxCurrentTCB = pxNewTCB;
     b08:	bf28      	it	cs
     b0a:	6034      	strcs	r4, [r6, #0]
     b0c:	e7cc      	b.n	aa8 <xTaskCreate+0x114>
     b0e:	bf00      	nop
     b10:	10000224 	.word	0x10000224
     b14:	100001b4 	.word	0x100001b4
     b18:	100001c0 	.word	0x100001c0
     b1c:	1000024c 	.word	0x1000024c
     b20:	100001d4 	.word	0x100001d4
     b24:	100001e8 	.word	0x100001e8
     b28:	100001fc 	.word	0x100001fc
     b2c:	10000210 	.word	0x10000210
     b30:	1000026c 	.word	0x1000026c
     b34:	10000284 	.word	0x10000284
     b38:	100001b8 	.word	0x100001b8
     b3c:	100001bc 	.word	0x100001bc
     b40:	10000230 	.word	0x10000230
     b44:	10000234 	.word	0x10000234
     b48:	e000ed04 	.word	0xe000ed04
     b4c:	10000280 	.word	0x10000280
     b50:	10000238 	.word	0x10000238

00000b54 <vTaskStartScheduler>:
vTaskStartScheduler():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1968
{
     b54:	b513      	push	{r0, r1, r4, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2001
		xReturn = xTaskCreate(	prvIdleTask,
     b56:	4b11      	ldr	r3, [pc, #68]	; (b9c <vTaskStartScheduler+0x48>)
     b58:	9301      	str	r3, [sp, #4]
     b5a:	2400      	movs	r4, #0
     b5c:	9400      	str	r4, [sp, #0]
     b5e:	4623      	mov	r3, r4
     b60:	2280      	movs	r2, #128	; 0x80
     b62:	490f      	ldr	r1, [pc, #60]	; (ba0 <vTaskStartScheduler+0x4c>)
     b64:	480f      	ldr	r0, [pc, #60]	; (ba4 <vTaskStartScheduler+0x50>)
     b66:	f7ff ff15 	bl	994 <xTaskCreate>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2023
	if( xReturn == pdPASS )
     b6a:	2801      	cmp	r0, #1
     b6c:	d114      	bne.n	b98 <vTaskStartScheduler+0x44>
vPortRaiseBASEPRI():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:195
	__asm volatile
     b6e:	f04f 0350 	mov.w	r3, #80	; 0x50
     b72:	f383 8811 	msr	BASEPRI, r3
     b76:	f3bf 8f6f 	isb	sy
     b7a:	f3bf 8f4f 	dsb	sy
vTaskStartScheduler():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2049
		xNextTaskUnblockTime = portMAX_DELAY;
     b7e:	4b0a      	ldr	r3, [pc, #40]	; (ba8 <vTaskStartScheduler+0x54>)
     b80:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
     b84:	601a      	str	r2, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2050
		xSchedulerRunning = pdTRUE;
     b86:	4b09      	ldr	r3, [pc, #36]	; (bac <vTaskStartScheduler+0x58>)
     b88:	6018      	str	r0, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2051
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
     b8a:	4b09      	ldr	r3, [pc, #36]	; (bb0 <vTaskStartScheduler+0x5c>)
     b8c:	601c      	str	r4, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2086
}
     b8e:	b002      	add	sp, #8
     b90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2065
		if( xPortStartScheduler() != pdFALSE )
     b94:	f000 bbc4 	b.w	1320 <xPortStartScheduler>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2086
}
     b98:	b002      	add	sp, #8
     b9a:	bd10      	pop	{r4, pc}
     b9c:	10000260 	.word	0x10000260
     ba0:	00001b18 	.word	0x00001b18
     ba4:	000008bd 	.word	0x000008bd
     ba8:	10000264 	.word	0x10000264
     bac:	10000280 	.word	0x10000280
     bb0:	10000298 	.word	0x10000298

00000bb4 <vTaskSuspendAll>:
vTaskSuspendAll():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2106
	++uxSchedulerSuspended;
     bb4:	4a02      	ldr	r2, [pc, #8]	; (bc0 <vTaskSuspendAll+0xc>)
     bb6:	6813      	ldr	r3, [r2, #0]
     bb8:	3301      	adds	r3, #1
     bba:	6013      	str	r3, [r2, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2108
}
     bbc:	4770      	bx	lr
     bbe:	bf00      	nop
     bc0:	1000022c 	.word	0x1000022c

00000bc4 <xTaskIncrementTick>:
xTaskIncrementTick():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2666
{
     bc4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2675
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
     bc8:	4b36      	ldr	r3, [pc, #216]	; (ca4 <xTaskIncrementTick+0xe0>)
     bca:	681b      	ldr	r3, [r3, #0]
     bcc:	2b00      	cmp	r3, #0
     bce:	d162      	bne.n	c96 <xTaskIncrementTick+0xd2>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2679
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
     bd0:	4b35      	ldr	r3, [pc, #212]	; (ca8 <xTaskIncrementTick+0xe4>)
     bd2:	681c      	ldr	r4, [r3, #0]
     bd4:	3401      	adds	r4, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2683
		xTickCount = xConstTickCount;
     bd6:	601c      	str	r4, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2685
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
     bd8:	b95c      	cbnz	r4, bf2 <xTaskIncrementTick+0x2e>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2687
			taskSWITCH_DELAYED_LISTS();
     bda:	4a34      	ldr	r2, [pc, #208]	; (cac <xTaskIncrementTick+0xe8>)
     bdc:	4b34      	ldr	r3, [pc, #208]	; (cb0 <xTaskIncrementTick+0xec>)
     bde:	6811      	ldr	r1, [r2, #0]
     be0:	6818      	ldr	r0, [r3, #0]
     be2:	6010      	str	r0, [r2, #0]
     be4:	4a33      	ldr	r2, [pc, #204]	; (cb4 <xTaskIncrementTick+0xf0>)
     be6:	6019      	str	r1, [r3, #0]
     be8:	6813      	ldr	r3, [r2, #0]
     bea:	3301      	adds	r3, #1
     bec:	6013      	str	r3, [r2, #0]
     bee:	f7ff fe79 	bl	8e4 <prvResetNextTaskUnblockTime>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2698
		if( xConstTickCount >= xNextTaskUnblockTime )
     bf2:	4d31      	ldr	r5, [pc, #196]	; (cb8 <xTaskIncrementTick+0xf4>)
     bf4:	4f31      	ldr	r7, [pc, #196]	; (cbc <xTaskIncrementTick+0xf8>)
     bf6:	682b      	ldr	r3, [r5, #0]
     bf8:	42a3      	cmp	r3, r4
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2669
BaseType_t xSwitchRequired = pdFALSE;
     bfa:	f04f 0b00 	mov.w	fp, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2698
		if( xConstTickCount >= xNextTaskUnblockTime )
     bfe:	d911      	bls.n	c24 <xTaskIncrementTick+0x60>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2781
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
     c00:	683a      	ldr	r2, [r7, #0]
     c02:	4b2f      	ldr	r3, [pc, #188]	; (cc0 <xTaskIncrementTick+0xfc>)
     c04:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
     c06:	2214      	movs	r2, #20
     c08:	434a      	muls	r2, r1
     c0a:	589a      	ldr	r2, [r3, r2]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2783
				xSwitchRequired = pdTRUE;
     c0c:	2a02      	cmp	r2, #2
     c0e:	bf28      	it	cs
     c10:	f04f 0b01 	movcs.w	fp, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2822
		if( xYieldPending != pdFALSE )
     c14:	4a2b      	ldr	r2, [pc, #172]	; (cc4 <xTaskIncrementTick+0x100>)
     c16:	6812      	ldr	r2, [r2, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2824
			xSwitchRequired = pdTRUE;
     c18:	2a00      	cmp	r2, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2834
}
     c1a:	bf0c      	ite	eq
     c1c:	4658      	moveq	r0, fp
     c1e:	2001      	movne	r0, #1
     c20:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2702
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
     c24:	f8df a084 	ldr.w	sl, [pc, #132]	; cac <xTaskIncrementTick+0xe8>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2752
					prvAddTaskToReadyList( pxTCB );
     c28:	f8df 90a0 	ldr.w	r9, [pc, #160]	; ccc <xTaskIncrementTick+0x108>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2702
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
     c2c:	f8da 2000 	ldr.w	r2, [sl]
     c30:	6812      	ldr	r2, [r2, #0]
     c32:	b91a      	cbnz	r2, c3c <xTaskIncrementTick+0x78>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2709
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
     c34:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
     c38:	602a      	str	r2, [r5, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2710
					break;
     c3a:	e7e1      	b.n	c00 <xTaskIncrementTick+0x3c>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2718
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
     c3c:	f8da 2000 	ldr.w	r2, [sl]
     c40:	68d2      	ldr	r2, [r2, #12]
     c42:	68d6      	ldr	r6, [r2, #12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2719
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
     c44:	6871      	ldr	r1, [r6, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2721
					if( xConstTickCount < xItemValue )
     c46:	428c      	cmp	r4, r1
     c48:	d201      	bcs.n	c4e <xTaskIncrementTick+0x8a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2728
						xNextTaskUnblockTime = xItemValue;
     c4a:	6029      	str	r1, [r5, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2729
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
     c4c:	e7d8      	b.n	c00 <xTaskIncrementTick+0x3c>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2737
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
     c4e:	f106 0804 	add.w	r8, r6, #4
     c52:	4640      	mov	r0, r8
     c54:	f7ff fb86 	bl	364 <uxListRemove>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2741
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
     c58:	6ab1      	ldr	r1, [r6, #40]	; 0x28
     c5a:	b119      	cbz	r1, c64 <xTaskIncrementTick+0xa0>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2743
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
     c5c:	f106 0018 	add.w	r0, r6, #24
     c60:	f7ff fb80 	bl	364 <uxListRemove>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2752
					prvAddTaskToReadyList( pxTCB );
     c64:	6af0      	ldr	r0, [r6, #44]	; 0x2c
     c66:	f8d9 3000 	ldr.w	r3, [r9]
     c6a:	2201      	movs	r2, #1
     c6c:	fa02 f100 	lsl.w	r1, r2, r0
     c70:	4319      	orrs	r1, r3
     c72:	4b13      	ldr	r3, [pc, #76]	; (cc0 <xTaskIncrementTick+0xfc>)
     c74:	f8c9 1000 	str.w	r1, [r9]
     c78:	f04f 0c14 	mov.w	ip, #20
     c7c:	4641      	mov	r1, r8
     c7e:	fb0c 3000 	mla	r0, ip, r0, r3
     c82:	f7ff fb4c 	bl	31e <vListInsertEnd>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2762
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
     c86:	6838      	ldr	r0, [r7, #0]
     c88:	6af1      	ldr	r1, [r6, #44]	; 0x2c
     c8a:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2764
							xSwitchRequired = pdTRUE;
     c8c:	4291      	cmp	r1, r2
     c8e:	bf28      	it	cs
     c90:	f04f 0b01 	movcs.w	fp, #1
     c94:	e7ca      	b.n	c2c <xTaskIncrementTick+0x68>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2809
		++uxPendedTicks;
     c96:	4a0c      	ldr	r2, [pc, #48]	; (cc8 <xTaskIncrementTick+0x104>)
     c98:	6813      	ldr	r3, [r2, #0]
     c9a:	3301      	adds	r3, #1
     c9c:	6013      	str	r3, [r2, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2669
BaseType_t xSwitchRequired = pdFALSE;
     c9e:	f04f 0b00 	mov.w	fp, #0
     ca2:	e7b7      	b.n	c14 <xTaskIncrementTick+0x50>
     ca4:	1000022c 	.word	0x1000022c
     ca8:	10000298 	.word	0x10000298
     cac:	100001b8 	.word	0x100001b8
     cb0:	100001bc 	.word	0x100001bc
     cb4:	10000268 	.word	0x10000268
     cb8:	10000264 	.word	0x10000264
     cbc:	100001b4 	.word	0x100001b4
     cc0:	100001c0 	.word	0x100001c0
     cc4:	1000029c 	.word	0x1000029c
     cc8:	10000228 	.word	0x10000228
     ccc:	10000234 	.word	0x10000234

00000cd0 <xTaskResumeAll>:
xTaskResumeAll():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2175
{
     cd0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2188
	taskENTER_CRITICAL();
     cd4:	f000 faa6 	bl	1224 <vPortEnterCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2190
		--uxSchedulerSuspended;
     cd8:	4b2a      	ldr	r3, [pc, #168]	; (d84 <xTaskResumeAll+0xb4>)
     cda:	681a      	ldr	r2, [r3, #0]
     cdc:	3a01      	subs	r2, #1
     cde:	601a      	str	r2, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2192
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
     ce0:	681c      	ldr	r4, [r3, #0]
     ce2:	b12c      	cbz	r4, cf0 <xTaskResumeAll+0x20>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2177
BaseType_t xAlreadyYielded = pdFALSE;
     ce4:	2400      	movs	r4, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2278
	taskEXIT_CRITICAL();
     ce6:	f000 faad 	bl	1244 <vPortExitCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2281
}
     cea:	4620      	mov	r0, r4
     cec:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2194
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
     cf0:	4b25      	ldr	r3, [pc, #148]	; (d88 <xTaskResumeAll+0xb8>)
     cf2:	681b      	ldr	r3, [r3, #0]
     cf4:	2b00      	cmp	r3, #0
     cf6:	d0f5      	beq.n	ce4 <xTaskResumeAll+0x14>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2198
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
     cf8:	4d24      	ldr	r5, [pc, #144]	; (d8c <xTaskResumeAll+0xbc>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2203
					prvAddTaskToReadyList( pxTCB );
     cfa:	4e25      	ldr	r6, [pc, #148]	; (d90 <xTaskResumeAll+0xc0>)
     cfc:	f8df 80a4 	ldr.w	r8, [pc, #164]	; da4 <xTaskResumeAll+0xd4>
     d00:	e01f      	b.n	d42 <xTaskResumeAll+0x72>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2200
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
     d02:	68eb      	ldr	r3, [r5, #12]
     d04:	68dc      	ldr	r4, [r3, #12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2202
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
     d06:	f104 0904 	add.w	r9, r4, #4
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2201
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
     d0a:	f104 0018 	add.w	r0, r4, #24
     d0e:	f7ff fb29 	bl	364 <uxListRemove>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2202
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
     d12:	4648      	mov	r0, r9
     d14:	f7ff fb26 	bl	364 <uxListRemove>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2203
					prvAddTaskToReadyList( pxTCB );
     d18:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
     d1a:	6831      	ldr	r1, [r6, #0]
     d1c:	2701      	movs	r7, #1
     d1e:	fa07 f302 	lsl.w	r3, r7, r2
     d22:	2014      	movs	r0, #20
     d24:	430b      	orrs	r3, r1
     d26:	fb00 8002 	mla	r0, r0, r2, r8
     d2a:	4649      	mov	r1, r9
     d2c:	6033      	str	r3, [r6, #0]
     d2e:	f7ff faf6 	bl	31e <vListInsertEnd>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2207
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
     d32:	4b18      	ldr	r3, [pc, #96]	; (d94 <xTaskResumeAll+0xc4>)
     d34:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
     d36:	681b      	ldr	r3, [r3, #0]
     d38:	6adb      	ldr	r3, [r3, #44]	; 0x2c
     d3a:	429a      	cmp	r2, r3
     d3c:	d301      	bcc.n	d42 <xTaskResumeAll+0x72>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2209
						xYieldPending = pdTRUE;
     d3e:	4b16      	ldr	r3, [pc, #88]	; (d98 <xTaskResumeAll+0xc8>)
     d40:	601f      	str	r7, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2198
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
     d42:	682b      	ldr	r3, [r5, #0]
     d44:	2b00      	cmp	r3, #0
     d46:	d1dc      	bne.n	d02 <xTaskResumeAll+0x32>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2217
				if( pxTCB != NULL )
     d48:	b10c      	cbz	r4, d4e <xTaskResumeAll+0x7e>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2225
					prvResetNextTaskUnblockTime();
     d4a:	f7ff fdcb 	bl	8e4 <prvResetNextTaskUnblockTime>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2233
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
     d4e:	4d13      	ldr	r5, [pc, #76]	; (d9c <xTaskResumeAll+0xcc>)
     d50:	682c      	ldr	r4, [r5, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2235
					if( uxPendedCounts > ( UBaseType_t ) 0U )
     d52:	b144      	cbz	r4, d66 <xTaskResumeAll+0x96>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2241
								xYieldPending = pdTRUE;
     d54:	4e10      	ldr	r6, [pc, #64]	; (d98 <xTaskResumeAll+0xc8>)
     d56:	2701      	movs	r7, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2239
							if( xTaskIncrementTick() != pdFALSE )
     d58:	f7ff ff34 	bl	bc4 <xTaskIncrementTick>
     d5c:	b100      	cbz	r0, d60 <xTaskResumeAll+0x90>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2241
								xYieldPending = pdTRUE;
     d5e:	6037      	str	r7, [r6, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2248
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
     d60:	3c01      	subs	r4, #1
     d62:	d1f9      	bne.n	d58 <xTaskResumeAll+0x88>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2250
						uxPendedTicks = 0;
     d64:	602c      	str	r4, [r5, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2258
				if( xYieldPending != pdFALSE )
     d66:	4b0c      	ldr	r3, [pc, #48]	; (d98 <xTaskResumeAll+0xc8>)
     d68:	681b      	ldr	r3, [r3, #0]
     d6a:	2b00      	cmp	r3, #0
     d6c:	d0ba      	beq.n	ce4 <xTaskResumeAll+0x14>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2265
					taskYIELD_IF_USING_PREEMPTION();
     d6e:	4b0c      	ldr	r3, [pc, #48]	; (da0 <xTaskResumeAll+0xd0>)
     d70:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
     d74:	601a      	str	r2, [r3, #0]
     d76:	f3bf 8f4f 	dsb	sy
     d7a:	f3bf 8f6f 	isb	sy
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2262
						xAlreadyYielded = pdTRUE;
     d7e:	2401      	movs	r4, #1
     d80:	e7b1      	b.n	ce6 <xTaskResumeAll+0x16>
     d82:	bf00      	nop
     d84:	1000022c 	.word	0x1000022c
     d88:	10000224 	.word	0x10000224
     d8c:	1000026c 	.word	0x1000026c
     d90:	10000234 	.word	0x10000234
     d94:	100001b4 	.word	0x100001b4
     d98:	1000029c 	.word	0x1000029c
     d9c:	10000228 	.word	0x10000228
     da0:	e000ed04 	.word	0xe000ed04
     da4:	100001c0 	.word	0x100001c0

00000da8 <vTaskDelay>:
vTaskDelay():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1334
	{
     da8:	b508      	push	{r3, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1338
		if( xTicksToDelay > ( TickType_t ) 0U )
     daa:	b940      	cbnz	r0, dbe <vTaskDelay+0x16>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1365
			portYIELD_WITHIN_API();
     dac:	4b09      	ldr	r3, [pc, #36]	; (dd4 <vTaskDelay+0x2c>)
     dae:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
     db2:	601a      	str	r2, [r3, #0]
     db4:	f3bf 8f4f 	dsb	sy
     db8:	f3bf 8f6f 	isb	sy
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1371
	}
     dbc:	bd08      	pop	{r3, pc}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1341
			vTaskSuspendAll();
     dbe:	f7ff fef9 	bl	bb4 <vTaskSuspendAll>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1352
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
     dc2:	2100      	movs	r1, #0
     dc4:	f7ff fda0 	bl	908 <prvAddCurrentTaskToDelayedList>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1354
			xAlreadyYielded = xTaskResumeAll();
     dc8:	f7ff ff82 	bl	cd0 <xTaskResumeAll>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1363
		if( xAlreadyYielded == pdFALSE )
     dcc:	2800      	cmp	r0, #0
     dce:	d0ed      	beq.n	dac <vTaskDelay+0x4>
     dd0:	e7f4      	b.n	dbc <vTaskDelay+0x14>
     dd2:	bf00      	nop
     dd4:	e000ed04 	.word	0xe000ed04

00000dd8 <vTaskSwitchContext>:
vTaskSwitchContext():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2949
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
     dd8:	4b1d      	ldr	r3, [pc, #116]	; (e50 <vTaskSwitchContext+0x78>)
     dda:	681a      	ldr	r2, [r3, #0]
     ddc:	4b1d      	ldr	r3, [pc, #116]	; (e54 <vTaskSwitchContext+0x7c>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2948
{
     dde:	b570      	push	{r4, r5, r6, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2949
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
     de0:	b112      	cbz	r2, de8 <vTaskSwitchContext+0x10>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2953
		xYieldPending = pdTRUE;
     de2:	2201      	movs	r2, #1
     de4:	601a      	str	r2, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3017
}
     de6:	bd70      	pop	{r4, r5, r6, pc}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2988
		taskCHECK_FOR_STACK_OVERFLOW();
     de8:	4c1b      	ldr	r4, [pc, #108]	; (e58 <vTaskSwitchContext+0x80>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2957
		xYieldPending = pdFALSE;
     dea:	601a      	str	r2, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2988
		taskCHECK_FOR_STACK_OVERFLOW();
     dec:	6823      	ldr	r3, [r4, #0]
     dee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
     df0:	681a      	ldr	r2, [r3, #0]
     df2:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
     df6:	d10b      	bne.n	e10 <vTaskSwitchContext+0x38>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2988 (discriminator 2)
     df8:	685a      	ldr	r2, [r3, #4]
     dfa:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
     dfe:	d107      	bne.n	e10 <vTaskSwitchContext+0x38>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2988 (discriminator 4)
     e00:	689a      	ldr	r2, [r3, #8]
     e02:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
     e06:	d103      	bne.n	e10 <vTaskSwitchContext+0x38>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2988 (discriminator 6)
     e08:	68db      	ldr	r3, [r3, #12]
     e0a:	f1b3 3fa5 	cmp.w	r3, #2779096485	; 0xa5a5a5a5
     e0e:	d004      	beq.n	e1a <vTaskSwitchContext+0x42>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2988 (discriminator 7)
     e10:	6820      	ldr	r0, [r4, #0]
     e12:	6821      	ldr	r1, [r4, #0]
     e14:	3134      	adds	r1, #52	; 0x34
     e16:	f7ff fa65 	bl	2e4 <vApplicationStackOverflowHook>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2999 (discriminator 9)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
     e1a:	4b10      	ldr	r3, [pc, #64]	; (e5c <vTaskSwitchContext+0x84>)
     e1c:	681b      	ldr	r3, [r3, #0]
ucPortCountLeadingZeros():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:134 (discriminator 9)
		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
     e1e:	fab3 f383 	clz	r3, r3
     e22:	b2db      	uxtb	r3, r3
vTaskSwitchContext():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2999 (discriminator 9)
     e24:	490e      	ldr	r1, [pc, #56]	; (e60 <vTaskSwitchContext+0x88>)
     e26:	f1c3 031f 	rsb	r3, r3, #31
     e2a:	2014      	movs	r0, #20
     e2c:	fb00 f203 	mul.w	r2, r0, r3
     e30:	188d      	adds	r5, r1, r2
     e32:	3208      	adds	r2, #8
     e34:	686e      	ldr	r6, [r5, #4]
     e36:	6876      	ldr	r6, [r6, #4]
     e38:	606e      	str	r6, [r5, #4]
     e3a:	440a      	add	r2, r1
     e3c:	4296      	cmp	r6, r2
     e3e:	bf04      	itt	eq
     e40:	6872      	ldreq	r2, [r6, #4]
     e42:	606a      	streq	r2, [r5, #4]
     e44:	fb00 1303 	mla	r3, r0, r3, r1
     e48:	685b      	ldr	r3, [r3, #4]
     e4a:	68db      	ldr	r3, [r3, #12]
     e4c:	6023      	str	r3, [r4, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3017 (discriminator 9)
}
     e4e:	e7ca      	b.n	de6 <vTaskSwitchContext+0xe>
     e50:	1000022c 	.word	0x1000022c
     e54:	1000029c 	.word	0x1000029c
     e58:	100001b4 	.word	0x100001b4
     e5c:	10000234 	.word	0x10000234
     e60:	100001c0 	.word	0x100001c0

00000e64 <vTaskPlaceOnEventList>:
vTaskPlaceOnEventList():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3021
{
     e64:	b510      	push	{r4, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3031
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
     e66:	4b06      	ldr	r3, [pc, #24]	; (e80 <vTaskPlaceOnEventList+0x1c>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3021
{
     e68:	460c      	mov	r4, r1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3031
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
     e6a:	6819      	ldr	r1, [r3, #0]
     e6c:	3118      	adds	r1, #24
     e6e:	f7ff fa62 	bl	336 <vListInsert>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3033
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
     e72:	4620      	mov	r0, r4
     e74:	2101      	movs	r1, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3034
}
     e76:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3033
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
     e7a:	f7ff bd45 	b.w	908 <prvAddCurrentTaskToDelayedList>
     e7e:	bf00      	nop
     e80:	100001b4 	.word	0x100001b4

00000e84 <xTaskRemoveFromEventList>:
xTaskRemoveFromEventList():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3095
{
     e84:	b538      	push	{r3, r4, r5, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3112
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
     e86:	68c3      	ldr	r3, [r0, #12]
     e88:	68dc      	ldr	r4, [r3, #12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3114
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
     e8a:	f104 0518 	add.w	r5, r4, #24
     e8e:	4628      	mov	r0, r5
     e90:	f7ff fa68 	bl	364 <uxListRemove>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3116
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
     e94:	4b11      	ldr	r3, [pc, #68]	; (edc <xTaskRemoveFromEventList+0x58>)
     e96:	681b      	ldr	r3, [r3, #0]
     e98:	b9e3      	cbnz	r3, ed4 <xTaskRemoveFromEventList+0x50>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3118
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
     e9a:	1d25      	adds	r5, r4, #4
     e9c:	4628      	mov	r0, r5
     e9e:	f7ff fa61 	bl	364 <uxListRemove>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3119
		prvAddTaskToReadyList( pxUnblockedTCB );
     ea2:	490f      	ldr	r1, [pc, #60]	; (ee0 <xTaskRemoveFromEventList+0x5c>)
     ea4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
     ea6:	6808      	ldr	r0, [r1, #0]
     ea8:	2301      	movs	r3, #1
     eaa:	4093      	lsls	r3, r2
     eac:	4303      	orrs	r3, r0
     eae:	600b      	str	r3, [r1, #0]
     eb0:	4b0c      	ldr	r3, [pc, #48]	; (ee4 <xTaskRemoveFromEventList+0x60>)
     eb2:	2014      	movs	r0, #20
     eb4:	4629      	mov	r1, r5
     eb6:	fb00 3002 	mla	r0, r0, r2, r3
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3139
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
     eba:	f7ff fa30 	bl	31e <vListInsertEnd>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3142
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
     ebe:	4b0a      	ldr	r3, [pc, #40]	; (ee8 <xTaskRemoveFromEventList+0x64>)
     ec0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
     ec2:	681b      	ldr	r3, [r3, #0]
     ec4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
     ec6:	429a      	cmp	r2, r3
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3151
		xYieldPending = pdTRUE;
     ec8:	bf83      	ittte	hi
     eca:	4b08      	ldrhi	r3, [pc, #32]	; (eec <xTaskRemoveFromEventList+0x68>)
     ecc:	2001      	movhi	r0, #1
     ece:	6018      	strhi	r0, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3155
		xReturn = pdFALSE;
     ed0:	2000      	movls	r0, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3159
}
     ed2:	bd38      	pop	{r3, r4, r5, pc}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3139
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
     ed4:	4629      	mov	r1, r5
     ed6:	4806      	ldr	r0, [pc, #24]	; (ef0 <xTaskRemoveFromEventList+0x6c>)
     ed8:	e7ef      	b.n	eba <xTaskRemoveFromEventList+0x36>
     eda:	bf00      	nop
     edc:	1000022c 	.word	0x1000022c
     ee0:	10000234 	.word	0x10000234
     ee4:	100001c0 	.word	0x100001c0
     ee8:	100001b4 	.word	0x100001b4
     eec:	1000029c 	.word	0x1000029c
     ef0:	1000026c 	.word	0x1000026c

00000ef4 <vTaskInternalSetTimeOutState>:
vTaskInternalSetTimeOutState():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3211
	pxTimeOut->xOverflowCount = xNumOfOverflows;
     ef4:	4b03      	ldr	r3, [pc, #12]	; (f04 <vTaskInternalSetTimeOutState+0x10>)
     ef6:	681b      	ldr	r3, [r3, #0]
     ef8:	6003      	str	r3, [r0, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3212
	pxTimeOut->xTimeOnEntering = xTickCount;
     efa:	4b03      	ldr	r3, [pc, #12]	; (f08 <vTaskInternalSetTimeOutState+0x14>)
     efc:	681b      	ldr	r3, [r3, #0]
     efe:	6043      	str	r3, [r0, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3213
}
     f00:	4770      	bx	lr
     f02:	bf00      	nop
     f04:	10000268 	.word	0x10000268
     f08:	10000298 	.word	0x10000298

00000f0c <xTaskCheckForTimeOut>:
xTaskCheckForTimeOut():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3217
{
     f0c:	b570      	push	{r4, r5, r6, lr}
     f0e:	460c      	mov	r4, r1
     f10:	4605      	mov	r5, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3223
	taskENTER_CRITICAL();
     f12:	f000 f987 	bl	1224 <vPortEnterCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3226
		const TickType_t xConstTickCount = xTickCount;
     f16:	4b0f      	ldr	r3, [pc, #60]	; (f54 <xTaskCheckForTimeOut+0x48>)
     f18:	6819      	ldr	r1, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3241
			if( *pxTicksToWait == portMAX_DELAY )
     f1a:	6823      	ldr	r3, [r4, #0]
     f1c:	1c5a      	adds	r2, r3, #1
     f1e:	d010      	beq.n	f42 <xTaskCheckForTimeOut+0x36>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3251
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
     f20:	480d      	ldr	r0, [pc, #52]	; (f58 <xTaskCheckForTimeOut+0x4c>)
     f22:	682e      	ldr	r6, [r5, #0]
     f24:	6800      	ldr	r0, [r0, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3227
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
     f26:	686a      	ldr	r2, [r5, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3251
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
     f28:	4286      	cmp	r6, r0
     f2a:	d001      	beq.n	f30 <xTaskCheckForTimeOut+0x24>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3251 (discriminator 1)
     f2c:	428a      	cmp	r2, r1
     f2e:	d90f      	bls.n	f50 <xTaskCheckForTimeOut+0x44>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3227
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
     f30:	1a88      	subs	r0, r1, r2
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3260
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
     f32:	4283      	cmp	r3, r0
     f34:	d90a      	bls.n	f4c <xTaskCheckForTimeOut+0x40>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3263
			*pxTicksToWait -= xElapsedTime;
     f36:	1a5b      	subs	r3, r3, r1
     f38:	4413      	add	r3, r2
     f3a:	6023      	str	r3, [r4, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3264
			vTaskInternalSetTimeOutState( pxTimeOut );
     f3c:	4628      	mov	r0, r5
     f3e:	f7ff ffd9 	bl	ef4 <vTaskInternalSetTimeOutState>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3246
				xReturn = pdFALSE;
     f42:	2400      	movs	r4, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3273
	taskEXIT_CRITICAL();
     f44:	f000 f97e 	bl	1244 <vPortExitCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3276
}
     f48:	4620      	mov	r0, r4
     f4a:	bd70      	pop	{r4, r5, r6, pc}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3269
			*pxTicksToWait = 0;
     f4c:	2300      	movs	r3, #0
     f4e:	6023      	str	r3, [r4, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3258
			xReturn = pdTRUE;
     f50:	2401      	movs	r4, #1
     f52:	e7f7      	b.n	f44 <xTaskCheckForTimeOut+0x38>
     f54:	10000298 	.word	0x10000298
     f58:	10000268 	.word	0x10000268

00000f5c <vTaskMissedYield>:
vTaskMissedYield():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3281
	xYieldPending = pdTRUE;
     f5c:	4b01      	ldr	r3, [pc, #4]	; (f64 <vTaskMissedYield+0x8>)
     f5e:	2201      	movs	r2, #1
     f60:	601a      	str	r2, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3282
}
     f62:	4770      	bx	lr
     f64:	1000029c 	.word	0x1000029c

00000f68 <xTaskGetSchedulerState>:
xTaskGetSchedulerState():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3927
		if( xSchedulerRunning == pdFALSE )
     f68:	4b05      	ldr	r3, [pc, #20]	; (f80 <xTaskGetSchedulerState+0x18>)
     f6a:	681b      	ldr	r3, [r3, #0]
     f6c:	b133      	cbz	r3, f7c <xTaskGetSchedulerState+0x14>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3933
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
     f6e:	4b05      	ldr	r3, [pc, #20]	; (f84 <xTaskGetSchedulerState+0x1c>)
     f70:	681b      	ldr	r3, [r3, #0]
     f72:	2b00      	cmp	r3, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3939
				xReturn = taskSCHEDULER_SUSPENDED;
     f74:	bf0c      	ite	eq
     f76:	2002      	moveq	r0, #2
     f78:	2000      	movne	r0, #0
     f7a:	4770      	bx	lr
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3929
			xReturn = taskSCHEDULER_NOT_STARTED;
     f7c:	2001      	movs	r0, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3944
	}
     f7e:	4770      	bx	lr
     f80:	10000280 	.word	0x10000280
     f84:	1000022c 	.word	0x1000022c

00000f88 <xTaskPriorityInherit>:
xTaskPriorityInherit():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3952
	{
     f88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3959
		if( pxMutexHolder != NULL )
     f8c:	4604      	mov	r4, r0
     f8e:	2800      	cmp	r0, #0
     f90:	d035      	beq.n	ffe <xTaskPriorityInherit+0x76>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3964
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
     f92:	4a23      	ldr	r2, [pc, #140]	; (1020 <xTaskPriorityInherit+0x98>)
     f94:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
     f96:	6811      	ldr	r1, [r2, #0]
     f98:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
     f9a:	428b      	cmp	r3, r1
     f9c:	4617      	mov	r7, r2
     f9e:	d236      	bcs.n	100e <xTaskPriorityInherit+0x86>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3969
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
     fa0:	6982      	ldr	r2, [r0, #24]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3980
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
     fa2:	4d20      	ldr	r5, [pc, #128]	; (1024 <xTaskPriorityInherit+0x9c>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3969
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
     fa4:	2a00      	cmp	r2, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3971
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
     fa6:	bfa1      	itttt	ge
     fa8:	683a      	ldrge	r2, [r7, #0]
     faa:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
     fac:	f1c2 0205 	rsbge	r2, r2, #5
     fb0:	6182      	strge	r2, [r0, #24]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3980
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
     fb2:	2614      	movs	r6, #20
     fb4:	6942      	ldr	r2, [r0, #20]
     fb6:	fb06 5303 	mla	r3, r6, r3, r5
     fba:	429a      	cmp	r2, r3
     fbc:	d121      	bne.n	1002 <xTaskPriorityInherit+0x7a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3982
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
     fbe:	f100 0804 	add.w	r8, r0, #4
     fc2:	4640      	mov	r0, r8
     fc4:	f7ff f9ce 	bl	364 <uxListRemove>
     fc8:	4b17      	ldr	r3, [pc, #92]	; (1028 <xTaskPriorityInherit+0xa0>)
     fca:	b948      	cbnz	r0, fe0 <xTaskPriorityInherit+0x58>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3984
						taskRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority );
     fcc:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
     fce:	4346      	muls	r6, r0
     fd0:	59aa      	ldr	r2, [r5, r6]
     fd2:	b92a      	cbnz	r2, fe0 <xTaskPriorityInherit+0x58>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3984 (discriminator 1)
     fd4:	681a      	ldr	r2, [r3, #0]
     fd6:	2101      	movs	r1, #1
     fd8:	4081      	lsls	r1, r0
     fda:	ea22 0201 	bic.w	r2, r2, r1
     fde:	601a      	str	r2, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3992
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
     fe0:	683a      	ldr	r2, [r7, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3993
					prvAddTaskToReadyList( pxMutexHolderTCB );
     fe2:	6819      	ldr	r1, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3992
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
     fe4:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
     fe6:	62e2      	str	r2, [r4, #44]	; 0x2c
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3993
					prvAddTaskToReadyList( pxMutexHolderTCB );
     fe8:	2401      	movs	r4, #1
     fea:	fa04 f002 	lsl.w	r0, r4, r2
     fee:	4308      	orrs	r0, r1
     ff0:	6018      	str	r0, [r3, #0]
     ff2:	2014      	movs	r0, #20
     ff4:	4641      	mov	r1, r8
     ff6:	fb00 5002 	mla	r0, r0, r2, r5
     ffa:	f7ff f990 	bl	31e <vListInsertEnd>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3954
	BaseType_t xReturn = pdFALSE;
     ffe:	4620      	mov	r0, r4
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4030
		return xReturn;
    1000:	e003      	b.n	100a <xTaskPriorityInherit+0x82>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3998
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
    1002:	683b      	ldr	r3, [r7, #0]
    1004:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    1006:	62c3      	str	r3, [r0, #44]	; 0x2c
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4004
				xReturn = pdTRUE;
    1008:	2001      	movs	r0, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4031
	}
    100a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4008
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
    100e:	6813      	ldr	r3, [r2, #0]
    1010:	6c00      	ldr	r0, [r0, #64]	; 0x40
    1012:	6adc      	ldr	r4, [r3, #44]	; 0x2c
    1014:	42a0      	cmp	r0, r4
    1016:	bf2c      	ite	cs
    1018:	2000      	movcs	r0, #0
    101a:	2001      	movcc	r0, #1
    101c:	e7f5      	b.n	100a <xTaskPriorityInherit+0x82>
    101e:	bf00      	nop
    1020:	100001b4 	.word	0x100001b4
    1024:	100001c0 	.word	0x100001c0
    1028:	10000234 	.word	0x10000234

0000102c <xTaskPriorityDisinherit>:
xTaskPriorityDisinherit():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4039
	{
    102c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4043
		if( pxMutexHolder != NULL )
    102e:	4604      	mov	r4, r0
    1030:	b908      	cbnz	r0, 1036 <xTaskPriorityDisinherit+0xa>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4041
	BaseType_t xReturn = pdFALSE;
    1032:	2000      	movs	r0, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4111
	}
    1034:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4051
			( pxTCB->uxMutexesHeld )--;
    1036:	6c43      	ldr	r3, [r0, #68]	; 0x44
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4055
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
    1038:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
    103a:	6c02      	ldr	r2, [r0, #64]	; 0x40
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4051
			( pxTCB->uxMutexesHeld )--;
    103c:	3b01      	subs	r3, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4055
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
    103e:	4291      	cmp	r1, r2
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4051
			( pxTCB->uxMutexesHeld )--;
    1040:	6443      	str	r3, [r0, #68]	; 0x44
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4055
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
    1042:	d0f6      	beq.n	1032 <xTaskPriorityDisinherit+0x6>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4058
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
    1044:	2b00      	cmp	r3, #0
    1046:	d1f4      	bne.n	1032 <xTaskPriorityDisinherit+0x6>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4065
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    1048:	1d05      	adds	r5, r0, #4
    104a:	4628      	mov	r0, r5
    104c:	f7ff f98a 	bl	364 <uxListRemove>
    1050:	4e10      	ldr	r6, [pc, #64]	; (1094 <xTaskPriorityDisinherit+0x68>)
    1052:	4a11      	ldr	r2, [pc, #68]	; (1098 <xTaskPriorityDisinherit+0x6c>)
    1054:	b950      	cbnz	r0, 106c <xTaskPriorityDisinherit+0x40>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4067
						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
    1056:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
    1058:	2114      	movs	r1, #20
    105a:	4379      	muls	r1, r7
    105c:	5873      	ldr	r3, [r6, r1]
    105e:	b92b      	cbnz	r3, 106c <xTaskPriorityDisinherit+0x40>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4067 (discriminator 1)
    1060:	6813      	ldr	r3, [r2, #0]
    1062:	2001      	movs	r0, #1
    1064:	40b8      	lsls	r0, r7
    1066:	ea23 0300 	bic.w	r3, r3, r0
    106a:	6013      	str	r3, [r2, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4077
					pxTCB->uxPriority = pxTCB->uxBasePriority;
    106c:	6c23      	ldr	r3, [r4, #64]	; 0x40
    106e:	62e3      	str	r3, [r4, #44]	; 0x2c
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4082
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    1070:	f1c3 0105 	rsb	r1, r3, #5
    1074:	61a1      	str	r1, [r4, #24]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4083
					prvAddTaskToReadyList( pxTCB );
    1076:	6811      	ldr	r1, [r2, #0]
    1078:	2401      	movs	r4, #1
    107a:	fa04 f003 	lsl.w	r0, r4, r3
    107e:	4308      	orrs	r0, r1
    1080:	6010      	str	r0, [r2, #0]
    1082:	2014      	movs	r0, #20
    1084:	fb00 6003 	mla	r0, r0, r3, r6
    1088:	4629      	mov	r1, r5
    108a:	f7ff f948 	bl	31e <vListInsertEnd>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4093
					xReturn = pdTRUE;
    108e:	4620      	mov	r0, r4
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4110
		return xReturn;
    1090:	e7d0      	b.n	1034 <xTaskPriorityDisinherit+0x8>
    1092:	bf00      	nop
    1094:	100001c0 	.word	0x100001c0
    1098:	10000234 	.word	0x10000234

0000109c <vTaskPriorityDisinheritAfterTimeout>:
vTaskPriorityDisinheritAfterTimeout():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4119
	{
    109c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4124
		if( pxMutexHolder != NULL )
    109e:	4604      	mov	r4, r0
    10a0:	2800      	cmp	r0, #0
    10a2:	d036      	beq.n	1112 <vTaskPriorityDisinheritAfterTimeout+0x76>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4134
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
    10a4:	6c03      	ldr	r3, [r0, #64]	; 0x40
    10a6:	4299      	cmp	r1, r3
    10a8:	bf38      	it	cc
    10aa:	4619      	movcc	r1, r3
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4144
			if( pxTCB->uxPriority != uxPriorityToUse )
    10ac:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
    10ae:	428b      	cmp	r3, r1
    10b0:	d02f      	beq.n	1112 <vTaskPriorityDisinheritAfterTimeout+0x76>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4150
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
    10b2:	6c42      	ldr	r2, [r0, #68]	; 0x44
    10b4:	2a01      	cmp	r2, #1
    10b6:	d12c      	bne.n	1112 <vTaskPriorityDisinheritAfterTimeout+0x76>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4166
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
    10b8:	6982      	ldr	r2, [r0, #24]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4181
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
    10ba:	4d16      	ldr	r5, [pc, #88]	; (1114 <vTaskPriorityDisinheritAfterTimeout+0x78>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4162
					pxTCB->uxPriority = uxPriorityToUse;
    10bc:	62c1      	str	r1, [r0, #44]	; 0x2c
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4166
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
    10be:	2a00      	cmp	r2, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4181
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
    10c0:	f04f 0614 	mov.w	r6, #20
    10c4:	6942      	ldr	r2, [r0, #20]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4168
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    10c6:	bfa8      	it	ge
    10c8:	f1c1 0105 	rsbge	r1, r1, #5
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4181
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
    10cc:	fb06 5303 	mla	r3, r6, r3, r5
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4168
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    10d0:	bfa8      	it	ge
    10d2:	6181      	strge	r1, [r0, #24]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4181
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
    10d4:	429a      	cmp	r2, r3
    10d6:	d11c      	bne.n	1112 <vTaskPriorityDisinheritAfterTimeout+0x76>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4183
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    10d8:	1d07      	adds	r7, r0, #4
    10da:	4638      	mov	r0, r7
    10dc:	f7ff f942 	bl	364 <uxListRemove>
    10e0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    10e2:	4c0d      	ldr	r4, [pc, #52]	; (1118 <vTaskPriorityDisinheritAfterTimeout+0x7c>)
    10e4:	b940      	cbnz	r0, 10f8 <vTaskPriorityDisinheritAfterTimeout+0x5c>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4185
							taskRESET_READY_PRIORITY( pxTCB->uxPriority );
    10e6:	4356      	muls	r6, r2
    10e8:	59ab      	ldr	r3, [r5, r6]
    10ea:	b92b      	cbnz	r3, 10f8 <vTaskPriorityDisinheritAfterTimeout+0x5c>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4185 (discriminator 1)
    10ec:	6823      	ldr	r3, [r4, #0]
    10ee:	2101      	movs	r1, #1
    10f0:	4091      	lsls	r1, r2
    10f2:	ea23 0301 	bic.w	r3, r3, r1
    10f6:	6023      	str	r3, [r4, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4192
						prvAddTaskToReadyList( pxTCB );
    10f8:	6821      	ldr	r1, [r4, #0]
    10fa:	2301      	movs	r3, #1
    10fc:	4093      	lsls	r3, r2
    10fe:	430b      	orrs	r3, r1
    1100:	2014      	movs	r0, #20
    1102:	6023      	str	r3, [r4, #0]
    1104:	4639      	mov	r1, r7
    1106:	fb00 5002 	mla	r0, r0, r2, r5
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4213
	}
    110a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4192
						prvAddTaskToReadyList( pxTCB );
    110e:	f7ff b906 	b.w	31e <vListInsertEnd>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4213
	}
    1112:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1114:	100001c0 	.word	0x100001c0
    1118:	10000234 	.word	0x10000234

0000111c <pvTaskIncrementMutexHeldCount>:
pvTaskIncrementMutexHeldCount():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4553
		if( pxCurrentTCB != NULL )
    111c:	4b04      	ldr	r3, [pc, #16]	; (1130 <pvTaskIncrementMutexHeldCount+0x14>)
    111e:	681a      	ldr	r2, [r3, #0]
    1120:	b11a      	cbz	r2, 112a <pvTaskIncrementMutexHeldCount+0xe>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4555
			( pxCurrentTCB->uxMutexesHeld )++;
    1122:	6819      	ldr	r1, [r3, #0]
    1124:	6c4a      	ldr	r2, [r1, #68]	; 0x44
    1126:	3201      	adds	r2, #1
    1128:	644a      	str	r2, [r1, #68]	; 0x44
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4558
		return pxCurrentTCB;
    112a:	6818      	ldr	r0, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4559
	}
    112c:	4770      	bx	lr
    112e:	bf00      	nop
    1130:	100001b4 	.word	0x100001b4

00001134 <pvPortMalloc>:
pvPortMalloc():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:59
#endif

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
    1134:	b510      	push	{r4, lr}
    1136:	4604      	mov	r4, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:62
void *pvReturn;

	vTaskSuspendAll();
    1138:	f7ff fd3c 	bl	bb4 <vTaskSuspendAll>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:64
	{
		pvReturn = malloc( xWantedSize );
    113c:	4620      	mov	r0, r4
    113e:	f000 fbbf 	bl	18c0 <malloc>
    1142:	4604      	mov	r4, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:67
		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
    1144:	f7ff fdc4 	bl	cd0 <xTaskResumeAll>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:71

	#if( configUSE_MALLOC_FAILED_HOOK == 1 )
	{
		if( pvReturn == NULL )
    1148:	b90c      	cbnz	r4, 114e <pvPortMalloc+0x1a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:74
		{
			extern void vApplicationMallocFailedHook( void );
			vApplicationMallocFailedHook();
    114a:	f7ff f8d1 	bl	2f0 <vApplicationMallocFailedHook>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:80
		}
	}
	#endif

	return pvReturn;
}
    114e:	4620      	mov	r0, r4
    1150:	bd10      	pop	{r4, pc}

00001152 <vPortFree>:
vPortFree():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:84
/*-----------------------------------------------------------*/

void vPortFree( void *pv )
{
    1152:	b510      	push	{r4, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:85
	if( pv )
    1154:	4604      	mov	r4, r0
    1156:	b140      	cbz	r0, 116a <vPortFree+0x18>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:87
	{
		vTaskSuspendAll();
    1158:	f7ff fd2c 	bl	bb4 <vTaskSuspendAll>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:89
		{
			free( pv );
    115c:	4620      	mov	r0, r4
    115e:	f000 fbb7 	bl	18d0 <free>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:94
			traceFREE( pv, 0 );
		}
		( void ) xTaskResumeAll();
	}
}
    1162:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:92
		( void ) xTaskResumeAll();
    1166:	f7ff bdb3 	b.w	cd0 <xTaskResumeAll>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:94
}
    116a:	bd10      	pop	{r4, pc}

0000116c <prvTaskExitError>:
prvTaskExitError():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:218
	return pxTopOfStack;
}
/*-----------------------------------------------------------*/

static void prvTaskExitError( void )
{
    116c:	b082      	sub	sp, #8
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:219
volatile uint32_t ulDummy = 0;
    116e:	2300      	movs	r3, #0
    1170:	9301      	str	r3, [sp, #4]
vPortRaiseBASEPRI():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:195
	__asm volatile
    1172:	f04f 0350 	mov.w	r3, #80	; 0x50
    1176:	f383 8811 	msr	BASEPRI, r3
    117a:	f3bf 8f6f 	isb	sy
    117e:	f3bf 8f4f 	dsb	sy
prvTaskExitError():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:229 (discriminator 1)

	Artificially force an assert() to be triggered if configASSERT() is
	defined, then stop here so application writers can catch the error. */
	configASSERT( uxCriticalNesting == ~0UL );
	portDISABLE_INTERRUPTS();
	while( ulDummy == 0 )
    1182:	9b01      	ldr	r3, [sp, #4]
    1184:	2b00      	cmp	r3, #0
    1186:	d0fc      	beq.n	1182 <prvTaskExitError+0x16>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:239
		about code appearing after this function is called - making ulDummy
		volatile makes the compiler think the function could return and
		therefore not output an 'unreachable code' warning for code that appears
		after it. */
	}
}
    1188:	b002      	add	sp, #8
    118a:	4770      	bx	lr

0000118c <prvPortStartFirstTask>:
prvPortStartFirstTask():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:267
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
    118c:	4808      	ldr	r0, [pc, #32]	; (11b0 <prvPortStartFirstTask+0x24>)
    118e:	6800      	ldr	r0, [r0, #0]
    1190:	6800      	ldr	r0, [r0, #0]
    1192:	f380 8808 	msr	MSP, r0
    1196:	f04f 0000 	mov.w	r0, #0
    119a:	f380 8814 	msr	CONTROL, r0
    119e:	b662      	cpsie	i
    11a0:	b661      	cpsie	f
    11a2:	f3bf 8f4f 	dsb	sy
    11a6:	f3bf 8f6f 	isb	sy
    11aa:	df00      	svc	0
    11ac:	bf00      	nop
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:281
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
    11ae:	0000      	.short	0x0000
    11b0:	e000ed08 	.word	0xe000ed08

000011b4 <vPortEnableVFP>:
vPortEnableVFP():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:703
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
    11b4:	f8df 000c 	ldr.w	r0, [pc, #12]	; 11c4 <vPortEnableVFP+0x10>
    11b8:	6801      	ldr	r1, [r0, #0]
    11ba:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
    11be:	6001      	str	r1, [r0, #0]
    11c0:	4770      	bx	lr
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:712
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
    11c2:	0000      	.short	0x0000
    11c4:	e000ed88 	.word	0xe000ed88

000011c8 <pxPortInitialiseStack>:
pxPortInitialiseStack():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:196
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
    11c8:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
    11cc:	f840 3c04 	str.w	r3, [r0, #-4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:200
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
    11d0:	4b07      	ldr	r3, [pc, #28]	; (11f0 <pxPortInitialiseStack+0x28>)
    11d2:	f840 3c0c 	str.w	r3, [r0, #-12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:198
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
    11d6:	f021 0101 	bic.w	r1, r1, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:209
	*pxTopOfStack = portINITIAL_EXC_RETURN;
    11da:	f06f 0302 	mvn.w	r3, #2
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:198
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
    11de:	f840 1c08 	str.w	r1, [r0, #-8]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:204
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
    11e2:	f840 2c20 	str.w	r2, [r0, #-32]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:209
	*pxTopOfStack = portINITIAL_EXC_RETURN;
    11e6:	f840 3c24 	str.w	r3, [r0, #-36]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:214
}
    11ea:	3844      	subs	r0, #68	; 0x44
    11ec:	4770      	bx	lr
    11ee:	bf00      	nop
    11f0:	0000116d 	.word	0x0000116d
    11f4:	ffffffff 	.word	0xffffffff
    11f8:	ffffffff 	.word	0xffffffff
    11fc:	ffffffff 	.word	0xffffffff

00001200 <vPortSVCHandler>:
vPortSVCHandler():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:244
	__asm volatile (
    1200:	4b07      	ldr	r3, [pc, #28]	; (1220 <pxCurrentTCBConst2>)
    1202:	6819      	ldr	r1, [r3, #0]
    1204:	6808      	ldr	r0, [r1, #0]
    1206:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    120a:	f380 8809 	msr	PSP, r0
    120e:	f3bf 8f6f 	isb	sy
    1212:	f04f 0000 	mov.w	r0, #0
    1216:	f380 8811 	msr	BASEPRI, r0
    121a:	4770      	bx	lr
    121c:	f3af 8000 	nop.w

00001220 <pxCurrentTCBConst2>:
    1220:	100001b4 	.word	0x100001b4

00001224 <vPortEnterCritical>:
vPortRaiseBASEPRI():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:195
    1224:	f04f 0350 	mov.w	r3, #80	; 0x50
    1228:	f383 8811 	msr	BASEPRI, r3
    122c:	f3bf 8f6f 	isb	sy
    1230:	f3bf 8f4f 	dsb	sy
vPortEnterCritical():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:406
	uxCriticalNesting++;
    1234:	4a02      	ldr	r2, [pc, #8]	; (1240 <vPortEnterCritical+0x1c>)
    1236:	6813      	ldr	r3, [r2, #0]
    1238:	3301      	adds	r3, #1
    123a:	6013      	str	r3, [r2, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:417
}
    123c:	4770      	bx	lr
    123e:	bf00      	nop
    1240:	10000000 	.word	0x10000000

00001244 <vPortExitCritical>:
vPortExitCritical():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:423
	uxCriticalNesting--;
    1244:	4a03      	ldr	r2, [pc, #12]	; (1254 <vPortExitCritical+0x10>)
    1246:	6813      	ldr	r3, [r2, #0]
    1248:	3b01      	subs	r3, #1
    124a:	6013      	str	r3, [r2, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:424
	if( uxCriticalNesting == 0 )
    124c:	b90b      	cbnz	r3, 1252 <vPortExitCritical+0xe>
vPortSetBASEPRI():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:229
	__asm volatile
    124e:	f383 8811 	msr	BASEPRI, r3
vPortExitCritical():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:428
}
    1252:	4770      	bx	lr
    1254:	10000000 	.word	0x10000000
    1258:	ffffffff 	.word	0xffffffff
    125c:	ffffffff 	.word	0xffffffff

00001260 <xPortPendSVHandler>:
xPortPendSVHandler():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:435
	__asm volatile
    1260:	f3ef 8009 	mrs	r0, PSP
    1264:	f3bf 8f6f 	isb	sy
    1268:	4b15      	ldr	r3, [pc, #84]	; (12c0 <pxCurrentTCBConst>)
    126a:	681a      	ldr	r2, [r3, #0]
    126c:	f01e 0f10 	tst.w	lr, #16
    1270:	bf08      	it	eq
    1272:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
    1276:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    127a:	6010      	str	r0, [r2, #0]
    127c:	e92d 0009 	stmdb	sp!, {r0, r3}
    1280:	f04f 0050 	mov.w	r0, #80	; 0x50
    1284:	f380 8811 	msr	BASEPRI, r0
    1288:	f3bf 8f4f 	dsb	sy
    128c:	f3bf 8f6f 	isb	sy
    1290:	f7ff fda2 	bl	dd8 <vTaskSwitchContext>
    1294:	f04f 0000 	mov.w	r0, #0
    1298:	f380 8811 	msr	BASEPRI, r0
    129c:	bc09      	pop	{r0, r3}
    129e:	6819      	ldr	r1, [r3, #0]
    12a0:	6808      	ldr	r0, [r1, #0]
    12a2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    12a6:	f01e 0f10 	tst.w	lr, #16
    12aa:	bf08      	it	eq
    12ac:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
    12b0:	f380 8809 	msr	PSP, r0
    12b4:	f3bf 8f6f 	isb	sy
    12b8:	4770      	bx	lr
    12ba:	bf00      	nop
    12bc:	f3af 8000 	nop.w

000012c0 <pxCurrentTCBConst>:
    12c0:	100001b4 	.word	0x100001b4

000012c4 <xPortSysTickHandler>:
xPortSysTickHandler():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:489
{
    12c4:	b508      	push	{r3, lr}
vPortRaiseBASEPRI():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:195
	__asm volatile
    12c6:	f04f 0350 	mov.w	r3, #80	; 0x50
    12ca:	f383 8811 	msr	BASEPRI, r3
    12ce:	f3bf 8f6f 	isb	sy
    12d2:	f3bf 8f4f 	dsb	sy
xPortSysTickHandler():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:497
		if( xTaskIncrementTick() != pdFALSE )
    12d6:	f7ff fc75 	bl	bc4 <xTaskIncrementTick>
    12da:	b118      	cbz	r0, 12e4 <xPortSysTickHandler+0x20>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:501
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
    12dc:	4b03      	ldr	r3, [pc, #12]	; (12ec <xPortSysTickHandler+0x28>)
    12de:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    12e2:	601a      	str	r2, [r3, #0]
vPortSetBASEPRI():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:229
	__asm volatile
    12e4:	2300      	movs	r3, #0
    12e6:	f383 8811 	msr	BASEPRI, r3
xPortSysTickHandler():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:505
}
    12ea:	bd08      	pop	{r3, pc}
    12ec:	e000ed04 	.word	0xe000ed04

000012f0 <vPortSetupTimerInterrupt>:
vPortSetupTimerInterrupt():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:680
{
    12f0:	b510      	push	{r4, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:692
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
    12f2:	4a08      	ldr	r2, [pc, #32]	; (1314 <vPortSetupTimerInterrupt+0x24>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:691
	portNVIC_SYSTICK_CTRL_REG = 0UL;
    12f4:	4c08      	ldr	r4, [pc, #32]	; (1318 <vPortSetupTimerInterrupt+0x28>)
    12f6:	2300      	movs	r3, #0
    12f8:	6023      	str	r3, [r4, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:692
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
    12fa:	6013      	str	r3, [r2, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:695
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
    12fc:	f000 f834 	bl	1368 <clock__get_core_clock_hz>
    1300:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
    1304:	fbb0 f0f3 	udiv	r0, r0, r3
    1308:	4b04      	ldr	r3, [pc, #16]	; (131c <vPortSetupTimerInterrupt+0x2c>)
    130a:	3801      	subs	r0, #1
    130c:	6018      	str	r0, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:696
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
    130e:	2307      	movs	r3, #7
    1310:	6023      	str	r3, [r4, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:697
}
    1312:	bd10      	pop	{r4, pc}
    1314:	e000e018 	.word	0xe000e018
    1318:	e000e010 	.word	0xe000e010
    131c:	e000e014 	.word	0xe000e014

00001320 <xPortStartScheduler>:
xPortStartScheduler():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:362
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
    1320:	4b0e      	ldr	r3, [pc, #56]	; (135c <xPortStartScheduler+0x3c>)
    1322:	681a      	ldr	r2, [r3, #0]
    1324:	f042 72f8 	orr.w	r2, r2, #32505856	; 0x1f00000
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:288
{
    1328:	b510      	push	{r4, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:362
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
    132a:	601a      	str	r2, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:363
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
    132c:	681a      	ldr	r2, [r3, #0]
    132e:	f042 4270 	orr.w	r2, r2, #4026531840	; 0xf0000000
    1332:	601a      	str	r2, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:367
	vPortSetupTimerInterrupt();
    1334:	f7ff ffdc 	bl	12f0 <vPortSetupTimerInterrupt>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:370
	uxCriticalNesting = 0;
    1338:	4b09      	ldr	r3, [pc, #36]	; (1360 <xPortStartScheduler+0x40>)
    133a:	2400      	movs	r4, #0
    133c:	601c      	str	r4, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:373
	vPortEnableVFP();
    133e:	f7ff ff39 	bl	11b4 <vPortEnableVFP>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:376
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
    1342:	4a08      	ldr	r2, [pc, #32]	; (1364 <xPortStartScheduler+0x44>)
    1344:	6813      	ldr	r3, [r2, #0]
    1346:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
    134a:	6013      	str	r3, [r2, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:379
	prvPortStartFirstTask();
    134c:	f7ff ff1e 	bl	118c <prvPortStartFirstTask>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:387
	vTaskSwitchContext();
    1350:	f7ff fd42 	bl	dd8 <vTaskSwitchContext>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:388
	prvTaskExitError();
    1354:	f7ff ff0a 	bl	116c <prvTaskExitError>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:392
}
    1358:	4620      	mov	r0, r4
    135a:	bd10      	pop	{r4, pc}
    135c:	e000ed20 	.word	0xe000ed20
    1360:	10000000 	.word	0x10000000
    1364:	e000ef34 	.word	0xe000ef34

00001368 <clock__get_core_clock_hz>:
clock__get_core_clock_hz():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:12
 * Then, the Cortex-M4 port uses that reference to configure the RTOS tick rate.
 *
 * We use fixed CPU frequency because clock__initialize_system_clock_96mhz() configures
 * fixed CPU frequency. It is rare that anyone needs to change this (ever).
 */
uint32_t clock__get_core_clock_hz(void) { return (UINT32_C(96) * 1000 * 1000); }
    1368:	4800      	ldr	r0, [pc, #0]	; (136c <clock__get_core_clock_hz+0x4>)
    136a:	4770      	bx	lr
    136c:	05b8d800 	.word	0x05b8d800

00001370 <clock__initialize_system_clock_96mhz>:
clock__initialize_system_clock_96mhz():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:18

void clock__initialize_system_clock_96mhz(void) {
  // Step 3 from UM: Write PLL new setup values to the PLL CFG register
  const uint8_t multiplier = 8; // 8 * 12Mhz = 96Mhz

  LPC_SC->PLL0CFG = ((multiplier - 1) << 0);
    1370:	4b0e      	ldr	r3, [pc, #56]	; (13ac <clock__initialize_system_clock_96mhz+0x3c>)
    1372:	2207      	movs	r2, #7
    1374:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:22
  LPC_SC->PLL0CON = 1; // PLL enable

  // Necessary feed sequence to ensure the changes are intentional
  LPC_SC->PLL0FEED = 0xAA;
    1378:	21aa      	movs	r1, #170	; 0xaa
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:19
  LPC_SC->PLL0CON = 1; // PLL enable
    137a:	2201      	movs	r2, #1
    137c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:22
  LPC_SC->PLL0FEED = 0xAA;
    1380:	f8c3 108c 	str.w	r1, [r3, #140]	; 0x8c
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:23
  LPC_SC->PLL0FEED = 0x55;
    1384:	2155      	movs	r1, #85	; 0x55
    1386:	f8c3 108c 	str.w	r1, [r3, #140]	; 0x8c
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:26

  // Step 4 from UM: Setup necessary clock dividers
  LPC_SC->PCLKSEL = 1; // APB peripherals receive clock/1 (divided by 1)
    138a:	f8c3 21a8 	str.w	r2, [r3, #424]	; 0x1a8
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:30 (discriminator 1)

  // Step 5 from UM: Wait for PLL to lock
  const uint32_t pll_lock_bit_mask = (1 << 10);
  while (!(LPC_SC->PLL0STAT & pll_lock_bit_mask)) {
    138e:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
    1392:	0552      	lsls	r2, r2, #21
    1394:	d5fb      	bpl.n	138e <clock__initialize_system_clock_96mhz+0x1e>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:35
    ;
  }

  // Before we switch to the faster clock, we need to configure flash memory access properly with respect to core clock
  uint32_t flash_cfg = LPC_SC->FLASHCFG;
    1396:	681a      	ldr	r2, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:36
  flash_cfg &= ~(0xF << 12);
    1398:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:37
  flash_cfg |= (0x4 << 12); // 5 cpu clocks for use with up to 100Mhz
    139c:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:38
  LPC_SC->FLASHCFG = flash_cfg;
    13a0:	601a      	str	r2, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:42

  // Step 6 from UM: Connect the PLL to the CPU
  const uint32_t cpu_on_pll_clock = (1 << 8) | (1 << 0);
  LPC_SC->CCLKSEL = cpu_on_pll_clock; // CPU uses PLL clock (Table 20)
    13a2:	f240 1201 	movw	r2, #257	; 0x101
    13a6:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:43
}
    13aa:	4770      	bx	lr
    13ac:	400fc000 	.word	0x400fc000

000013b0 <ram__init_data>:
ram__init_data_sram_main():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:27
  extern void *_bdata_vma;
  extern void *_edata;

  uint8_t *src = (uint8_t *)&_bdata_lma;
  uint8_t *dest = (uint8_t *)&_bdata_vma;
  while (dest < (uint8_t *)&_edata) {
    13b0:	4a0a      	ldr	r2, [pc, #40]	; (13dc <ram__init_data+0x2c>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:26
  uint8_t *dest = (uint8_t *)&_bdata_vma;
    13b2:	4b0b      	ldr	r3, [pc, #44]	; (13e0 <ram__init_data+0x30>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:27
  while (dest < (uint8_t *)&_edata) {
    13b4:	490b      	ldr	r1, [pc, #44]	; (13e4 <ram__init_data+0x34>)
    13b6:	428b      	cmp	r3, r1
    13b8:	d305      	bcc.n	13c6 <ram__init_data+0x16>
    13ba:	4a0b      	ldr	r2, [pc, #44]	; (13e8 <ram__init_data+0x38>)
ram__init_data_sram_peripheral():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:40
  extern void *_bdata_lma_peripheral;
  extern void *_bdata_vma_peripheral;
  extern void *_edata_peripheral;

  uint8_t *src = (uint8_t *)&_bdata_lma_peripheral;
  uint8_t *dest = (uint8_t *)&_bdata_vma_peripheral;
    13bc:	4b0b      	ldr	r3, [pc, #44]	; (13ec <ram__init_data+0x3c>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:41
  while (dest < (uint8_t *)&_edata_peripheral) {
    13be:	490c      	ldr	r1, [pc, #48]	; (13f0 <ram__init_data+0x40>)
    13c0:	428b      	cmp	r3, r1
    13c2:	d305      	bcc.n	13d0 <ram__init_data+0x20>
ram__init_data():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:13
}
    13c4:	4770      	bx	lr
ram__init_data_sram_main():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:28
    *dest = *src;
    13c6:	f812 0b01 	ldrb.w	r0, [r2], #1
    13ca:	f803 0b01 	strb.w	r0, [r3], #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:30
    src++;
    13ce:	e7f2      	b.n	13b6 <ram__init_data+0x6>
ram__init_data_sram_peripheral():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:42
    *dest = *src;
    13d0:	f812 0b01 	ldrb.w	r0, [r2], #1
    13d4:	f803 0b01 	strb.w	r0, [r3], #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:44
    dest++;
    src++;
    13d8:	e7f2      	b.n	13c0 <ram__init_data+0x10>
    13da:	bf00      	nop
    13dc:	00001b64 	.word	0x00001b64
    13e0:	10000000 	.word	0x10000000
    13e4:	1000016c 	.word	0x1000016c
    13e8:	00001b64 	.word	0x00001b64
    13ec:	20000000 	.word	0x20000000
    13f0:	20000000 	.word	0x20000000

000013f4 <ram__init_bss>:
ram__init_bss_sram_main():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:52

static void ram__init_bss_sram_main(void) {
  extern void *_bbss;
  extern void *_ebss;

  uint8_t *ptr = (uint8_t *)&_bbss;
    13f4:	4b08      	ldr	r3, [pc, #32]	; (1418 <ram__init_bss+0x24>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:53
  while (ptr < (uint8_t *)&_ebss) {
    13f6:	4a09      	ldr	r2, [pc, #36]	; (141c <ram__init_bss+0x28>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:54
    *ptr = 0U;
    13f8:	2100      	movs	r1, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:53
  while (ptr < (uint8_t *)&_ebss) {
    13fa:	4293      	cmp	r3, r2
    13fc:	d305      	bcc.n	140a <ram__init_bss+0x16>
ram__init_bss_sram_peripheral():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:63

static void ram__init_bss_sram_peripheral(void) {
  extern void *_bbss_peripheral;
  extern void *_ebss_peripheral;

  uint8_t *ptr = (uint8_t *)&_bbss_peripheral;
    13fe:	4b08      	ldr	r3, [pc, #32]	; (1420 <ram__init_bss+0x2c>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:64
  while (ptr < (uint8_t *)&_ebss_peripheral) {
    1400:	4a08      	ldr	r2, [pc, #32]	; (1424 <ram__init_bss+0x30>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:65
    *ptr = 0U;
    1402:	2100      	movs	r1, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:64
  while (ptr < (uint8_t *)&_ebss_peripheral) {
    1404:	4293      	cmp	r3, r2
    1406:	d303      	bcc.n	1410 <ram__init_bss+0x1c>
ram__init_bss():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:18
}
    1408:	4770      	bx	lr
ram__init_bss_sram_main():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:54
    *ptr = 0U;
    140a:	f803 1b01 	strb.w	r1, [r3], #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:55
    ptr++;
    140e:	e7f4      	b.n	13fa <ram__init_bss+0x6>
ram__init_bss_sram_peripheral():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:65
    *ptr = 0U;
    1410:	f803 1b01 	strb.w	r1, [r3], #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:66
    ptr++;
    1414:	e7f6      	b.n	1404 <ram__init_bss+0x10>
    1416:	bf00      	nop
    1418:	1000016c 	.word	0x1000016c
    141c:	100002c0 	.word	0x100002c0
    1420:	20000000 	.word	0x20000000
    1424:	20000000 	.word	0x20000000

00001428 <startup__initialize_ram>:
startup__initialize_ram():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/startup.c:6
#include "startup.h"

#include "lpc40xx.h"
#include "ram.h"

void startup__initialize_ram(void) {
    1428:	b508      	push	{r3, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/startup.c:7
  ram__init_data();
    142a:	f7ff ffc1 	bl	13b0 <ram__init_data>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/startup.c:9
  ram__init_bss();
}
    142e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/startup.c:8
  ram__init_bss();
    1432:	f7ff bfdf 	b.w	13f4 <ram__init_bss>
    1436:	Address 0x0000000000001436 is out of bounds.


00001438 <startup__initialize_cpu>:
startup__initialize_cpu():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/startup.c:16
/**
 * References:
 * - http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.ddi0439b/BEHBJHIG.html
 */
void startup__initialize_cpu(void) {
  SCB->CPACR |= (0xF << 20); // Set [23:20]
    1438:	4a03      	ldr	r2, [pc, #12]	; (1448 <startup__initialize_cpu+0x10>)
    143a:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
    143e:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
    1442:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/startup.c:25
  const int first_peripheral = (int)WDT_IRQn;
  const int last_peripheral = (int)EEPROM_IRQn;
  for (int peripheral = first_peripheral; peripheral <= last_peripheral; peripheral++) {
    // NVIC_SetPriority(peripheral, 31); // TODO: need to fix this
  }
}
    1446:	4770      	bx	lr
    1448:	e000ed00 	.word	0xe000ed00

0000144c <_sbrk>:
_sbrk():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:16
 */
void *_sbrk(size_t requested_byte_count) {
  static const void *max_heap_ptr = (void *)&_eheap;
  static void *current_heap_base_ptr = NULL;

  if (current_heap_base_ptr == NULL) {
    144c:	4b06      	ldr	r3, [pc, #24]	; (1468 <_sbrk+0x1c>)
    144e:	6819      	ldr	r1, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:12
void *_sbrk(size_t requested_byte_count) {
    1450:	4602      	mov	r2, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:16
  if (current_heap_base_ptr == NULL) {
    1452:	b909      	cbnz	r1, 1458 <_sbrk+0xc>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:17
    current_heap_base_ptr = (void *)&_bheap;
    1454:	4905      	ldr	r1, [pc, #20]	; (146c <_sbrk+0x20>)
    1456:	6019      	str	r1, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:20
  }

  void *next_heap_ptr = (uint8_t *)current_heap_base_ptr + requested_byte_count;
    1458:	6818      	ldr	r0, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:23
  void *ret_heap_ptr = NULL;

  if (next_heap_ptr < max_heap_ptr) {
    145a:	4905      	ldr	r1, [pc, #20]	; (1470 <_sbrk+0x24>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:20
  void *next_heap_ptr = (uint8_t *)current_heap_base_ptr + requested_byte_count;
    145c:	4402      	add	r2, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:23
  if (next_heap_ptr < max_heap_ptr) {
    145e:	428a      	cmp	r2, r1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:25
    ret_heap_ptr = current_heap_base_ptr;
    current_heap_base_ptr = next_heap_ptr;
    1460:	bf34      	ite	cc
    1462:	601a      	strcc	r2, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:21
  void *ret_heap_ptr = NULL;
    1464:	2000      	movcs	r0, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:29
  }

  return ret_heap_ptr;
}
    1466:	4770      	bx	lr
    1468:	100002a0 	.word	0x100002a0
    146c:	20000000 	.word	0x20000000
    1470:	20008000 	.word	0x20008000

00001474 <gpio__set_function>:
gpio__set_function():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio.c:44
  gpio_s gpio = gpio__construct(port, pin_number_0_to_31);
  gpio__set_function(gpio, function);
  return gpio;
}

void gpio__set_function(gpio_s gpio, gpio__function_e function) {
    1474:	b082      	sub	sp, #8
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio.c:51

  // Each port is offset by thirty-two 32-bit registers
  volatile uint32_t *port_offset = IOCON_base + (32 * gpio.port_number);

  // Each pin configuration is a single 32-bit
  volatile uint32_t *pin_config = (port_offset + gpio.pin_number);
    1476:	b2c3      	uxtb	r3, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio.c:44
void gpio__set_function(gpio_s gpio, gpio__function_e function) {
    1478:	f8ad 0004 	strh.w	r0, [sp, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio.c:51
  volatile uint32_t *pin_config = (port_offset + gpio.pin_number);
    147c:	f3c0 2007 	ubfx	r0, r0, #8, #8
    1480:	0080      	lsls	r0, r0, #2
    1482:	eb00 10c3 	add.w	r0, r0, r3, lsl #7
    1486:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
    148a:	f500 3030 	add.w	r0, r0, #180224	; 0x2c000
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio.c:56

  // Reference chapter 7: table 83
  const uint32_t config_mask = UINT32_C(7);
  *pin_config &= ~(config_mask << 0);
  *pin_config |= ((uint32_t)function & config_mask);
    148e:	f001 0107 	and.w	r1, r1, #7
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio.c:55
  *pin_config &= ~(config_mask << 0);
    1492:	6803      	ldr	r3, [r0, #0]
    1494:	f023 0307 	bic.w	r3, r3, #7
    1498:	6003      	str	r3, [r0, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio.c:56
  *pin_config |= ((uint32_t)function & config_mask);
    149a:	6803      	ldr	r3, [r0, #0]
    149c:	4319      	orrs	r1, r3
    149e:	6001      	str	r1, [r0, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio.c:57
}
    14a0:	b002      	add	sp, #8
    14a2:	4770      	bx	lr

000014a4 <gpio__construct_with_function>:
gpio__construct_with_function():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio.c:38
gpio_s gpio__construct_with_function(gpio__port_e port, uint8_t pin_number_0_to_31, gpio__function_e function) {
    14a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio.c:40
  gpio__set_function(gpio, function);
    14a6:	f88d 1001 	strb.w	r1, [sp, #1]
    14aa:	f88d 0000 	strb.w	r0, [sp]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio.c:38
gpio_s gpio__construct_with_function(gpio__port_e port, uint8_t pin_number_0_to_31, gpio__function_e function) {
    14ae:	4604      	mov	r4, r0
    14b0:	460d      	mov	r5, r1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio.c:40
  gpio__set_function(gpio, function);
    14b2:	9800      	ldr	r0, [sp, #0]
    14b4:	4611      	mov	r1, r2
    14b6:	f7ff ffdd 	bl	1474 <gpio__set_function>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio.c:42
}
    14ba:	ea44 2005 	orr.w	r0, r4, r5, lsl #8
    14be:	b003      	add	sp, #12
    14c0:	bd30      	pop	{r4, r5, pc}
    14c2:	Address 0x00000000000014c2 is out of bounds.


000014c4 <gpiol__set_as_input>:
get_lpc_gpio_reg():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio_lab.c:5
#include "gpio_lab.h"

static const LPC_GPIO_TypeDef *gpio_regs_pointers[] = {LPC_GPIO0, LPC_GPIO1, LPC_GPIO2, LPC_GPIO3, LPC_GPIO4, LPC_GPIO5};
static LPC_GPIO_TypeDef *get_lpc_gpio_reg(uint8_t port_num) {
    return (LPC_GPIO_TypeDef *)gpio_regs_pointers[port_num];
    14c4:	4b05      	ldr	r3, [pc, #20]	; (14dc <gpiol__set_as_input+0x18>)
    14c6:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
gpiol__set_as_input():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio_lab.c:11
}

/// Should alter the hardware registers to set the pin as input
void gpiol__set_as_input(uint8_t port_num, uint8_t pin_num)
{
    get_lpc_gpio_reg(port_num)->DIR &= ~(1<<pin_num);
    14ca:	2201      	movs	r2, #1
    14cc:	6803      	ldr	r3, [r0, #0]
    14ce:	fa02 f101 	lsl.w	r1, r2, r1
    14d2:	ea23 0301 	bic.w	r3, r3, r1
    14d6:	6003      	str	r3, [r0, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio_lab.c:12
}
    14d8:	4770      	bx	lr
    14da:	bf00      	nop
    14dc:	00001b20 	.word	0x00001b20

000014e0 <gpiol__set_as_output>:
get_lpc_gpio_reg():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio_lab.c:5
    return (LPC_GPIO_TypeDef *)gpio_regs_pointers[port_num];
    14e0:	4b04      	ldr	r3, [pc, #16]	; (14f4 <gpiol__set_as_output+0x14>)
    14e2:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
gpiol__set_as_output():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio_lab.c:17

/// Should alter the hardware registers to set the pin as output
void gpiol__set_as_output(uint8_t port_num, uint8_t pin_num)
{
    get_lpc_gpio_reg(port_num)->DIR |= (1<<pin_num);
    14e6:	2301      	movs	r3, #1
    14e8:	6810      	ldr	r0, [r2, #0]
    14ea:	fa03 f101 	lsl.w	r1, r3, r1
    14ee:	4301      	orrs	r1, r0
    14f0:	6011      	str	r1, [r2, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio_lab.c:18
}
    14f2:	4770      	bx	lr
    14f4:	00001b20 	.word	0x00001b20

000014f8 <gpiol__set_high>:
get_lpc_gpio_reg():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio_lab.c:5
    return (LPC_GPIO_TypeDef *)gpio_regs_pointers[port_num];
    14f8:	4b03      	ldr	r3, [pc, #12]	; (1508 <gpiol__set_high+0x10>)
    14fa:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
gpiol__set_high():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio_lab.c:23

/// Should alter the hardware registers to set the pin as high
void gpiol__set_high(uint8_t port_num, uint8_t pin_num)
{
    get_lpc_gpio_reg(port_num)->SET = (1<<pin_num);
    14fe:	2301      	movs	r3, #1
    1500:	fa03 f101 	lsl.w	r1, r3, r1
    1504:	6191      	str	r1, [r2, #24]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio_lab.c:24
}
    1506:	4770      	bx	lr
    1508:	00001b20 	.word	0x00001b20

0000150c <gpiol__set_low>:
get_lpc_gpio_reg():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio_lab.c:5
    return (LPC_GPIO_TypeDef *)gpio_regs_pointers[port_num];
    150c:	4b03      	ldr	r3, [pc, #12]	; (151c <gpiol__set_low+0x10>)
    150e:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
gpiol__set_low():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio_lab.c:29

/// Should alter the hardware registers to set the pin as low
void gpiol__set_low(uint8_t port_num, uint8_t pin_num)
{
    get_lpc_gpio_reg(port_num)->CLR = (1<<pin_num);
    1512:	2301      	movs	r3, #1
    1514:	fa03 f101 	lsl.w	r1, r3, r1
    1518:	61d1      	str	r1, [r2, #28]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio_lab.c:30
}
    151a:	4770      	bx	lr
    151c:	00001b20 	.word	0x00001b20

00001520 <gpiol__get_level>:
get_lpc_gpio_reg():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio_lab.c:5
    return (LPC_GPIO_TypeDef *)gpio_regs_pointers[port_num];
    1520:	4b05      	ldr	r3, [pc, #20]	; (1538 <gpiol__get_level+0x18>)
    1522:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
gpiol__get_level():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio_lab.c:53
 *
 * @return {bool} level of pin high => true, low => false
 */
bool gpiol__get_level(uint8_t port_num, uint8_t pin_num)
{
    if(get_lpc_gpio_reg(port_num)->PIN & (1<<pin_num)) {
    1526:	695a      	ldr	r2, [r3, #20]
    1528:	2301      	movs	r3, #1
    152a:	fa03 f101 	lsl.w	r1, r3, r1
    152e:	4211      	tst	r1, r2
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio_lab.c:58
        return true;
    } else {
        return false;
    }
    1530:	bf14      	ite	ne
    1532:	4618      	movne	r0, r3
    1534:	2000      	moveq	r0, #0
    1536:	4770      	bx	lr
    1538:	00001b20 	.word	0x00001b20

0000153c <hw_timer__enable>:
hw_timer__enable():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:18
    {LPC_TIM1, LPC_PERIPHERAL__TIMER1},
    {LPC_TIM2, LPC_PERIPHERAL__TIMER2},
    {LPC_TIM3, LPC_PERIPHERAL__TIMER3},
};

void hw_timer__enable(lpc_timer_e timer, const uint32_t prescalar_divider, function__void_f isr_callback) {
    153c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:20
  // Peripheral must be turned on before accessing its registers
  lpc_peripheral__turn_on_power_to(hw_timers[timer].peripheral_id);
    1540:	4c0b      	ldr	r4, [pc, #44]	; (1570 <hw_timer__enable+0x34>)
    1542:	eb04 03c0 	add.w	r3, r4, r0, lsl #3
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:18
void hw_timer__enable(lpc_timer_e timer, const uint32_t prescalar_divider, function__void_f isr_callback) {
    1546:	4690      	mov	r8, r2
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:20
  lpc_peripheral__turn_on_power_to(hw_timers[timer].peripheral_id);
    1548:	791e      	ldrb	r6, [r3, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:18
void hw_timer__enable(lpc_timer_e timer, const uint32_t prescalar_divider, function__void_f isr_callback) {
    154a:	4605      	mov	r5, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:20
  lpc_peripheral__turn_on_power_to(hw_timers[timer].peripheral_id);
    154c:	4630      	mov	r0, r6
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:18
void hw_timer__enable(lpc_timer_e timer, const uint32_t prescalar_divider, function__void_f isr_callback) {
    154e:	460f      	mov	r7, r1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:20
  lpc_peripheral__turn_on_power_to(hw_timers[timer].peripheral_id);
    1550:	f000 f83e 	bl	15d0 <lpc_peripheral__turn_on_power_to>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:25

  /* Interrupt can be enabled because we can assume the timer is not setup
   * for interrupt yet through hw_timer__enable_match_isr()
   */
  lpc_peripheral__enable_interrupt(hw_timers[timer].peripheral_id, isr_callback);
    1554:	4641      	mov	r1, r8
    1556:	4630      	mov	r0, r6
    1558:	f000 f84c 	bl	15f4 <lpc_peripheral__enable_interrupt>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:27

  hw_timers[timer].registers->TC = 0;
    155c:	f854 3035 	ldr.w	r3, [r4, r5, lsl #3]
    1560:	2200      	movs	r2, #0
    1562:	609a      	str	r2, [r3, #8]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:28
  hw_timers[timer].registers->CTCR = 0;
    1564:	671a      	str	r2, [r3, #112]	; 0x70
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:31

  hw_timers[timer].registers->PR = prescalar_divider;
  hw_timers[timer].registers->TCR = 1; // Enable
    1566:	2201      	movs	r2, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:30
  hw_timers[timer].registers->PR = prescalar_divider;
    1568:	60df      	str	r7, [r3, #12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:31
  hw_timers[timer].registers->TCR = 1; // Enable
    156a:	605a      	str	r2, [r3, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:32
}
    156c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    1570:	00001b38 	.word	0x00001b38

00001574 <hw_timer__enable_match_isr_and_reset>:
hw_timer__enable_match_isr_and_reset():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:38

void hw_timer__enable_match_isr_and_reset(lpc_timer_e timer, lpc_timer__mr_e mr_type, const uint32_t mr_value) {
  const uint32_t interrupt_on_match = (uint32_t)mr_type * 3; // 3 bits per MR
  const uint32_t reset_on_match = 1 + interrupt_on_match;

  hw_timers[timer].registers->MCR |= (1 << interrupt_on_match) | (1 << reset_on_match);
    1574:	4b09      	ldr	r3, [pc, #36]	; (159c <hw_timer__enable_match_isr_and_reset+0x28>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:34
void hw_timer__enable_match_isr_and_reset(lpc_timer_e timer, lpc_timer__mr_e mr_type, const uint32_t mr_value) {
    1576:	b570      	push	{r4, r5, r6, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:38
  hw_timers[timer].registers->MCR |= (1 << interrupt_on_match) | (1 << reset_on_match);
    1578:	f853 0030 	ldr.w	r0, [r3, r0, lsl #3]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:35
  const uint32_t interrupt_on_match = (uint32_t)mr_type * 3; // 3 bits per MR
    157c:	eb01 0541 	add.w	r5, r1, r1, lsl #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:38
  hw_timers[timer].registers->MCR |= (1 << interrupt_on_match) | (1 << reset_on_match);
    1580:	2401      	movs	r4, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:36
  const uint32_t reset_on_match = 1 + interrupt_on_match;
    1582:	1c6b      	adds	r3, r5, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:38
  hw_timers[timer].registers->MCR |= (1 << interrupt_on_match) | (1 << reset_on_match);
    1584:	6946      	ldr	r6, [r0, #20]
    1586:	fa04 f303 	lsl.w	r3, r4, r3
    158a:	40ac      	lsls	r4, r5
    158c:	4323      	orrs	r3, r4
    158e:	4333      	orrs	r3, r6
    1590:	6143      	str	r3, [r0, #20]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:41

  // Four MR registers are contiguous and they start from &MR0
  volatile uint32_t *mr_base = &(hw_timers[timer].registers->MR0);
    1592:	3018      	adds	r0, #24
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:44
  volatile uint32_t *mr_register = mr_base + mr_type;

  *mr_register = mr_value;
    1594:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:45
}
    1598:	bd70      	pop	{r4, r5, r6, pc}
    159a:	bf00      	nop
    159c:	00001b38 	.word	0x00001b38

000015a0 <hw_timer__acknowledge_interrupt>:
hw_timer__acknowledge_interrupt():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:48

void hw_timer__acknowledge_interrupt(lpc_timer_e timer, lpc_timer__mr_e mr_type) {
  hw_timers[timer].registers->IR = (1 << (uint32_t)mr_type);
    15a0:	4b03      	ldr	r3, [pc, #12]	; (15b0 <hw_timer__acknowledge_interrupt+0x10>)
    15a2:	f853 2030 	ldr.w	r2, [r3, r0, lsl #3]
    15a6:	2301      	movs	r3, #1
    15a8:	fa03 f101 	lsl.w	r1, r3, r1
    15ac:	6011      	str	r1, [r2, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:49
}
    15ae:	4770      	bx	lr
    15b0:	00001b38 	.word	0x00001b38

000015b4 <lpc_peripheral__halt_handler>:
lpc_peripheral__halt_handler():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/lpc_peripherals.c:26 (discriminator 1)
// clang-format on

/// An unregistered interrupt handler is a forever loop
static void lpc_peripheral__halt_handler(void) {
  while (1) {
  }
    15b4:	e7fe      	b.n	15b4 <lpc_peripheral__halt_handler>
    15b6:	Address 0x00000000000015b6 is out of bounds.


000015b8 <lpc_peripheral__interrupt_dispatcher>:
lpc_peripheral__interrupt_dispatcher():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/lpc_peripherals.c:94
 */
void lpc_peripheral__interrupt_dispatcher(void) {
  /* Get the IRQ number we are in.  Note that ICSR's real ISR bits are offset by 16.
   * We can read ICSR register too, but let's just read 8-bits directly.
   */
  const uint8_t isr_num = (*((uint8_t *)0xE000ED04)) - 16; // (SCB->ICSR & 0xFF) - 16;
    15b8:	4b03      	ldr	r3, [pc, #12]	; (15c8 <lpc_peripheral__interrupt_dispatcher+0x10>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/lpc_peripherals.c:98

  /* Lookup the function pointer we want to call and make the call */
  function__void_f isr_to_service = lpc_peripheral__isr_registrations[isr_num];
  isr_to_service();
    15ba:	4a04      	ldr	r2, [pc, #16]	; (15cc <lpc_peripheral__interrupt_dispatcher+0x14>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/lpc_peripherals.c:94
  const uint8_t isr_num = (*((uint8_t *)0xE000ED04)) - 16; // (SCB->ICSR & 0xFF) - 16;
    15bc:	781b      	ldrb	r3, [r3, #0]
    15be:	3b10      	subs	r3, #16
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/lpc_peripherals.c:97
  function__void_f isr_to_service = lpc_peripheral__isr_registrations[isr_num];
    15c0:	b2db      	uxtb	r3, r3
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/lpc_peripherals.c:98
  isr_to_service();
    15c2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
    15c6:	4718      	bx	r3
    15c8:	e000ed04 	.word	0xe000ed04
    15cc:	10000004 	.word	0x10000004

000015d0 <lpc_peripheral__turn_on_power_to>:
lpc_peripheral__turn_on_power_to():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/lpc_peripherals.c:102
}

void lpc_peripheral__turn_on_power_to(lpc_peripheral_e peripheral) {
  if (peripheral < sizeof(lpc_peripheral_pconp_bit_map)) {
    15d0:	2808      	cmp	r0, #8
    15d2:	d809      	bhi.n	15e8 <lpc_peripheral__turn_on_power_to+0x18>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/lpc_peripherals.c:103
    const uint32_t power_on_bit = (uint32_t)lpc_peripheral_pconp_bit_map[peripheral];
    15d4:	4b05      	ldr	r3, [pc, #20]	; (15ec <lpc_peripheral__turn_on_power_to+0x1c>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/lpc_peripherals.c:104
    LPC_SC->PCONP |= (UINT32_C(1) << power_on_bit);
    15d6:	4a06      	ldr	r2, [pc, #24]	; (15f0 <lpc_peripheral__turn_on_power_to+0x20>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/lpc_peripherals.c:103
    const uint32_t power_on_bit = (uint32_t)lpc_peripheral_pconp_bit_map[peripheral];
    15d8:	5c18      	ldrb	r0, [r3, r0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/lpc_peripherals.c:104
    LPC_SC->PCONP |= (UINT32_C(1) << power_on_bit);
    15da:	f8d2 10c4 	ldr.w	r1, [r2, #196]	; 0xc4
    15de:	2301      	movs	r3, #1
    15e0:	4083      	lsls	r3, r0
    15e2:	430b      	orrs	r3, r1
    15e4:	f8c2 30c4 	str.w	r3, [r2, #196]	; 0xc4
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/lpc_peripherals.c:106
  }
}
    15e8:	4770      	bx	lr
    15ea:	bf00      	nop
    15ec:	00001b58 	.word	0x00001b58
    15f0:	400fc000 	.word	0x400fc000

000015f4 <lpc_peripheral__enable_interrupt>:
lpc_peripheral__enable_interrupt():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/lpc_peripherals.c:109

void lpc_peripheral__enable_interrupt(lpc_peripheral_e peripheral, function__void_f isr_callback) {
  lpc_peripheral__isr_registrations[peripheral] = isr_callback;
    15f4:	4b07      	ldr	r3, [pc, #28]	; (1614 <lpc_peripheral__enable_interrupt+0x20>)
    15f6:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/lpc_peripherals.c:111

  const IRQn_Type irq_type = (IRQn_Type)peripheral;
    15fa:	b243      	sxtb	r3, r0
__NVIC_EnableIRQ():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1681
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
    15fc:	2b00      	cmp	r3, #0
    15fe:	db08      	blt.n	1612 <lpc_peripheral__enable_interrupt+0x1e>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1684
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    1600:	2201      	movs	r2, #1
    1602:	f000 001f 	and.w	r0, r0, #31
    1606:	fa02 f000 	lsl.w	r0, r2, r0
    160a:	095b      	lsrs	r3, r3, #5
    160c:	4a02      	ldr	r2, [pc, #8]	; (1618 <lpc_peripheral__enable_interrupt+0x24>)
    160e:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
lpc_peripheral__enable_interrupt():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/lpc_peripherals.c:113
  NVIC_EnableIRQ(irq_type); // Use CMS API
}
    1612:	4770      	bx	lr
    1614:	10000004 	.word	0x10000004
    1618:	e000e100 	.word	0xe000e100

0000161c <uart__isr_common>:
uart__isr_common():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:154
    transmitter_empty = (1 << 0),
    receive_data_available = (2 << 0),
    receive_data_available_timeout = (6 << 0),
  } interrupt_reason_e;

  const interrupt_reason_e interrupt_reason = (interrupt_reason_e)((uart_type->registers->IIR & 0xE) >> 1);
    161c:	6802      	ldr	r2, [r0, #0]
    161e:	6893      	ldr	r3, [r2, #8]
    1620:	f3c3 0342 	ubfx	r3, r3, #1, #3
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:156

  switch (interrupt_reason) {
    1624:	2b02      	cmp	r3, #2
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:144
static void uart__isr_common(uart_s *uart_type) {
    1626:	b573      	push	{r0, r1, r4, r5, r6, lr}
    1628:	4606      	mov	r6, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:156
  switch (interrupt_reason) {
    162a:	d023      	beq.n	1674 <uart__isr_common+0x58>
    162c:	2b06      	cmp	r3, #6
    162e:	d021      	beq.n	1674 <uart__isr_common+0x58>
    1630:	2b01      	cmp	r3, #1
    1632:	d134      	bne.n	169e <uart__isr_common+0x82>
uart__load_pending_transmit_bytes():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:86
  char transmit_byte = 0;
    1634:	2400      	movs	r4, #0
    1636:	f88d 4003 	strb.w	r4, [sp, #3]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:88
  BaseType_t higher_priority_task_woke = 0;
    163a:	9401      	str	r4, [sp, #4]
    163c:	2510      	movs	r5, #16
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:91
    if (xQueueReceiveFromISR(uart_type->queue_transmit, &transmit_byte, &higher_priority_task_woke)) {
    163e:	aa01      	add	r2, sp, #4
    1640:	f10d 0103 	add.w	r1, sp, #3
    1644:	6930      	ldr	r0, [r6, #16]
    1646:	f7ff f905 	bl	854 <xQueueReceiveFromISR>
    164a:	b148      	cbz	r0, 1660 <uart__isr_common+0x44>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:92
      uart_type->registers->THR = transmit_byte;
    164c:	6833      	ldr	r3, [r6, #0]
    164e:	f89d 2003 	ldrb.w	r2, [sp, #3]
    1652:	701a      	strb	r2, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:93
      if (higher_priority_task_woke) {
    1654:	9b01      	ldr	r3, [sp, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:94
        context_switch_required = true;
    1656:	2b00      	cmp	r3, #0
    1658:	bf18      	it	ne
    165a:	2401      	movne	r4, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:90
  for (size_t counter = 0; counter < hw_fifo_size; counter++) {
    165c:	3d01      	subs	r5, #1
    165e:	d1ee      	bne.n	163e <uart__isr_common+0x22>
uart__isr_common():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:173
    (void)unused_to_clear_isr;
    break;
  }
  }

  portEND_SWITCHING_ISR(context_switch_required);
    1660:	b30c      	cbz	r4, 16a6 <uart__isr_common+0x8a>
    1662:	4b12      	ldr	r3, [pc, #72]	; (16ac <uart__isr_common+0x90>)
    1664:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    1668:	601a      	str	r2, [r3, #0]
    166a:	f3bf 8f4f 	dsb	sy
    166e:	f3bf 8f6f 	isb	sy
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:174
}
    1672:	e018      	b.n	16a6 <uart__isr_common+0x8a>
uart__clear_receive_fifo():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:108
  BaseType_t higher_priority_task_woke = 0;
    1674:	2400      	movs	r4, #0
    1676:	9401      	str	r4, [sp, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:114
  while ((uart_type->registers->LSR & char_available_bitmask)) {
    1678:	6833      	ldr	r3, [r6, #0]
    167a:	7d1a      	ldrb	r2, [r3, #20]
    167c:	07d2      	lsls	r2, r2, #31
    167e:	d5ef      	bpl.n	1660 <uart__isr_common+0x44>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:115
    const char received_byte = uart_type->registers->RBR;
    1680:	781b      	ldrb	r3, [r3, #0]
    1682:	f88d 3003 	strb.w	r3, [sp, #3]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:116
    xQueueSendFromISR(uart_type->queue_receive, &received_byte, &higher_priority_task_woke);
    1686:	aa01      	add	r2, sp, #4
    1688:	2300      	movs	r3, #0
    168a:	f10d 0103 	add.w	r1, sp, #3
    168e:	6970      	ldr	r0, [r6, #20]
    1690:	f7ff f80c 	bl	6ac <xQueueGenericSendFromISR>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:118
    if (higher_priority_task_woke) {
    1694:	9b01      	ldr	r3, [sp, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:119
      context_switch_required = true;
    1696:	2b00      	cmp	r3, #0
    1698:	bf18      	it	ne
    169a:	2401      	movne	r4, #1
    169c:	e7ec      	b.n	1678 <uart__isr_common+0x5c>
uart__isr_common():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:167
    volatile const uint32_t unused_to_clear_isr = uart_type->registers->LSR;
    169e:	7d13      	ldrb	r3, [r2, #20]
    16a0:	b2db      	uxtb	r3, r3
    16a2:	9301      	str	r3, [sp, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:168
    (void)unused_to_clear_isr;
    16a4:	9b01      	ldr	r3, [sp, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:174
}
    16a6:	b002      	add	sp, #8
    16a8:	bd70      	pop	{r4, r5, r6, pc}
    16aa:	bf00      	nop
    16ac:	e000ed04 	.word	0xe000ed04

000016b0 <uart3_isr>:
uart3_isr():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:142
static void uart3_isr(void) { uart__isr_common(&uarts[UART__3]); }
    16b0:	4801      	ldr	r0, [pc, #4]	; (16b8 <uart3_isr+0x8>)
    16b2:	f7ff bfb3 	b.w	161c <uart__isr_common>
    16b6:	bf00      	nop
    16b8:	100000f0 	.word	0x100000f0

000016bc <uart2_isr>:
uart2_isr():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:141
static void uart2_isr(void) { uart__isr_common(&uarts[UART__2]); }
    16bc:	4801      	ldr	r0, [pc, #4]	; (16c4 <uart2_isr+0x8>)
    16be:	f7ff bfad 	b.w	161c <uart__isr_common>
    16c2:	bf00      	nop
    16c4:	100000d8 	.word	0x100000d8

000016c8 <uart1_isr>:
uart1_isr():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:140
static void uart1_isr(void) { uart__isr_common(&uarts[UART__1]); }
    16c8:	4801      	ldr	r0, [pc, #4]	; (16d0 <uart1_isr+0x8>)
    16ca:	f7ff bfa7 	b.w	161c <uart__isr_common>
    16ce:	bf00      	nop
    16d0:	100000c0 	.word	0x100000c0

000016d4 <uart0_isr>:
uart0_isr():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:139
static void uart0_isr(void) { uart__isr_common(&uarts[UART__0]); }
    16d4:	4801      	ldr	r0, [pc, #4]	; (16dc <uart0_isr+0x8>)
    16d6:	f7ff bfa1 	b.w	161c <uart__isr_common>
    16da:	bf00      	nop
    16dc:	100000a8 	.word	0x100000a8

000016e0 <uart__enable_receive_and_transmit_interrupts>:
uart__enable_receive_and_transmit_interrupts():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:126
void uart__enable_receive_and_transmit_interrupts(uart_s *uart_type) {
    16e0:	b510      	push	{r4, lr}
    16e2:	4604      	mov	r4, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:127
  lpc_peripheral__enable_interrupt(uart_type->peripheral_id, uart_type->isr_callback);
    16e4:	6881      	ldr	r1, [r0, #8]
    16e6:	7900      	ldrb	r0, [r0, #4]
    16e8:	f7ff ff84 	bl	15f4 <lpc_peripheral__enable_interrupt>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:132
  uart_type->registers->FCR = enable_rx_tx_fifo;
    16ec:	6823      	ldr	r3, [r4, #0]
    16ee:	2241      	movs	r2, #65	; 0x41
    16f0:	721a      	strb	r2, [r3, #8]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:133
  uart_type->registers->FCR = reset_rx_tx_fifo;
    16f2:	2206      	movs	r2, #6
    16f4:	721a      	strb	r2, [r3, #8]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:136
  uart_type->registers->IER = enable_rx_tx_interrupts;
    16f6:	2207      	movs	r2, #7
    16f8:	605a      	str	r2, [r3, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:137
}
    16fa:	bd10      	pop	{r4, pc}

000016fc <uart__init>:
uart__init():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:182
 *
 *                      P U B L I C    F U N C T I O N S
 *
 ******************************************************************************/

void uart__init(uart_e uart, uint32_t peripheral_clock, uint32_t baud_rate) {
    16fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
uart__is_initialized():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:211

    uarts[uart].initialized = true;
  }
}

bool uart__is_initialized(uart_e uart) { return uarts[uart].initialized; }
    1700:	f8df 8058 	ldr.w	r8, [pc, #88]	; 175c <uart__init+0x60>
    1704:	2518      	movs	r5, #24
    1706:	4345      	muls	r5, r0
    1708:	eb08 0605 	add.w	r6, r8, r5
uart__init():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:182
void uart__init(uart_e uart, uint32_t peripheral_clock, uint32_t baud_rate) {
    170c:	460c      	mov	r4, r1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:183
  if (!uart__is_initialized(uart)) {
    170e:	7b33      	ldrb	r3, [r6, #12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:182
void uart__init(uart_e uart, uint32_t peripheral_clock, uint32_t baud_rate) {
    1710:	4617      	mov	r7, r2
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:183
  if (!uart__is_initialized(uart)) {
    1712:	bb0b      	cbnz	r3, 1758 <uart__init+0x5c>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:184
    lpc_peripheral__turn_on_power_to(uarts[uart].peripheral_id);
    1714:	7930      	ldrb	r0, [r6, #4]
    1716:	f7ff ff5b 	bl	15d0 <lpc_peripheral__turn_on_power_to>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:187
    const uint16_t divider = (uint16_t)((peripheral_clock / (16 * baud_rate)) + roundup_offset);
    171a:	013f      	lsls	r7, r7, #4
    171c:	fbb4 f3f7 	udiv	r3, r4, r7
    1720:	ee07 3a90 	vmov	s15, r3
    1724:	eef8 7a67 	vcvt.f32.u32	s15, s15
    1728:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
    172c:	ee77 7a87 	vadd.f32	s15, s15, s14
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:194
    lpc_uart *uart_regs = uarts[uart].registers;
    1730:	f858 2005 	ldr.w	r2, [r8, r5]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:187
    const uint16_t divider = (uint16_t)((peripheral_clock / (16 * baud_rate)) + roundup_offset);
    1734:	eefc 7ae7 	vcvt.u32.f32	s15, s15
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:196
    uart_regs->LCR = dlab_bit; // Set DLAB bit to access DLM & DLL
    1738:	2180      	movs	r1, #128	; 0x80
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:187
    const uint16_t divider = (uint16_t)((peripheral_clock / (16 * baud_rate)) + roundup_offset);
    173a:	ee17 3a90 	vmov	r3, s15
    173e:	b29b      	uxth	r3, r3
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:196
    uart_regs->LCR = dlab_bit; // Set DLAB bit to access DLM & DLL
    1740:	7311      	strb	r1, [r2, #12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:197
    uart_regs->DLM = (divider >> 8) & 0xFF;
    1742:	0a19      	lsrs	r1, r3, #8
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:198
    uart_regs->DLL = (divider >> 0) & 0xFF;
    1744:	b2db      	uxtb	r3, r3
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:197
    uart_regs->DLM = (divider >> 8) & 0xFF;
    1746:	7111      	strb	r1, [r2, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:198
    uart_regs->DLL = (divider >> 0) & 0xFF;
    1748:	7013      	strb	r3, [r2, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:204
    uart_regs->FDR = default_reset_fdr_value;
    174a:	2310      	movs	r3, #16
    174c:	f882 3028 	strb.w	r3, [r2, #40]	; 0x28
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:205
    uart_regs->LCR = eight_bit_datalen | stop_bits_is_2; // DLAB is reset back to zero also
    1750:	2307      	movs	r3, #7
    1752:	7313      	strb	r3, [r2, #12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:207
    uarts[uart].initialized = true;
    1754:	2301      	movs	r3, #1
    1756:	7333      	strb	r3, [r6, #12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:209
}
    1758:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    175c:	100000a8 	.word	0x100000a8

00001760 <uart__enable_queues>:
uart__is_initialized():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:211
bool uart__is_initialized(uart_e uart) { return uarts[uart].initialized; }
    1760:	4b10      	ldr	r3, [pc, #64]	; (17a4 <uart__enable_queues+0x44>)
uart__enable_queues():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:213

bool uart__enable_queues(uart_e uart, QueueHandle_t queue_receive, QueueHandle_t queue_transmit) {
    1762:	b570      	push	{r4, r5, r6, lr}
uart__is_initialized():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:211
bool uart__is_initialized(uart_e uart) { return uarts[uart].initialized; }
    1764:	2418      	movs	r4, #24
    1766:	fb04 3400 	mla	r4, r4, r0, r3
    176a:	7b25      	ldrb	r5, [r4, #12]
uart__enable_queues():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:218
  bool status = false;
  uart_s *uart_type = &uarts[uart];

  // We can only access UART registers after its power has been enabled
  if (uart__is_initialized(uart)) {
    176c:	b915      	cbnz	r5, 1774 <uart__enable_queues+0x14>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:214
  bool status = false;
    176e:	2500      	movs	r5, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:238
      uart__enable_receive_and_transmit_interrupts(uart_type);
    }
  }

  return status;
}
    1770:	4628      	mov	r0, r5
    1772:	bd70      	pop	{r4, r5, r6, pc}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:220
    if (!uart__is_receive_queue_enabled(uart) && NULL != queue_receive) {
    1774:	6966      	ldr	r6, [r4, #20]
    1776:	b90e      	cbnz	r6, 177c <uart__enable_queues+0x1c>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:220 (discriminator 1)
    1778:	b101      	cbz	r1, 177c <uart__enable_queues+0x1c>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:221
      uart_type->queue_receive = queue_receive;
    177a:	6161      	str	r1, [r4, #20]
uart__is_transmit_queue_enabled():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:62
static bool uart__is_transmit_queue_enabled(uart_e uart) { return (NULL != uarts[uart].queue_transmit); }
    177c:	2118      	movs	r1, #24
    177e:	fb01 3100 	mla	r1, r1, r0, r3
uart__enable_queues():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:225
    if (!uart__is_transmit_queue_enabled(uart) && NULL != queue_transmit) {
    1782:	690c      	ldr	r4, [r1, #16]
    1784:	b90c      	cbnz	r4, 178a <uart__enable_queues+0x2a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:225 (discriminator 1)
    1786:	b102      	cbz	r2, 178a <uart__enable_queues+0x2a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:226
      uart_type->queue_transmit = queue_transmit;
    1788:	610a      	str	r2, [r1, #16]
uart__is_receive_queue_enabled():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:61
static bool uart__is_receive_queue_enabled(uart_e uart) { return (NULL != uarts[uart].queue_receive); }
    178a:	2218      	movs	r2, #24
    178c:	fb02 3000 	mla	r0, r2, r0, r3
uart__enable_queues():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:231
    status = uart__is_receive_queue_enabled(uart) && uart__is_transmit_queue_enabled(uart);
    1790:	6943      	ldr	r3, [r0, #20]
    1792:	2b00      	cmp	r3, #0
    1794:	d0eb      	beq.n	176e <uart__enable_queues+0xe>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:232
    if (status) {
    1796:	6903      	ldr	r3, [r0, #16]
    1798:	2b00      	cmp	r3, #0
    179a:	d0e8      	beq.n	176e <uart__enable_queues+0xe>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:233
      uart__enable_receive_and_transmit_interrupts(uart_type);
    179c:	f7ff ffa0 	bl	16e0 <uart__enable_receive_and_transmit_interrupts>
    17a0:	e7e6      	b.n	1770 <uart__enable_queues+0x10>
    17a2:	bf00      	nop
    17a4:	100000a8 	.word	0x100000a8

000017a8 <uart__put>:
uart__put():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:307
  }

  return status;
}

bool uart__put(uart_e uart, char output_byte, uint32_t timeout_ms) {
    17a8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    17ac:	4604      	mov	r4, r0
uart__is_transmit_queue_enabled():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:62
static bool uart__is_transmit_queue_enabled(uart_e uart) { return (NULL != uarts[uart].queue_transmit); }
    17ae:	4f17      	ldr	r7, [pc, #92]	; (180c <uart__put+0x64>)
uart__put():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:307
bool uart__put(uart_e uart, char output_byte, uint32_t timeout_ms) {
    17b0:	f88d 1007 	strb.w	r1, [sp, #7]
uart__is_transmit_queue_enabled():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:62
static bool uart__is_transmit_queue_enabled(uart_e uart) { return (NULL != uarts[uart].queue_transmit); }
    17b4:	2518      	movs	r5, #24
    17b6:	4365      	muls	r5, r4
    17b8:	197e      	adds	r6, r7, r5
uart__put():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:307
bool uart__put(uart_e uart, char output_byte, uint32_t timeout_ms) {
    17ba:	4690      	mov	r8, r2
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:309
  bool status = false;
  const bool rtos_is_running = taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
    17bc:	f7ff fbd4 	bl	f68 <xTaskGetSchedulerState>
uart__is_transmit_queue_enabled():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:62
static bool uart__is_transmit_queue_enabled(uart_e uart) { return (NULL != uarts[uart].queue_transmit); }
    17c0:	6934      	ldr	r4, [r6, #16]
uart__put():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:311

  if (uart__is_transmit_queue_enabled(uart) && rtos_is_running) {
    17c2:	b1ec      	cbz	r4, 1800 <uart__put+0x58>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:311 (discriminator 1)
    17c4:	2802      	cmp	r0, #2
    17c6:	d11f      	bne.n	1808 <uart__put+0x60>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:313
    // Deposit to the transmit queue for now
    status = xQueueSend(uarts[uart].queue_transmit, &output_byte, uart__ms_to_os_ticks(timeout_ms));
    17c8:	2300      	movs	r3, #0
    17ca:	4642      	mov	r2, r8
    17cc:	f10d 0107 	add.w	r1, sp, #7
    17d0:	4620      	mov	r0, r4
    17d2:	f7fe fee1 	bl	598 <xQueueGenericSend>
    17d6:	1c04      	adds	r4, r0, #0
    17d8:	bf18      	it	ne
    17da:	2401      	movne	r4, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:319

    /* 'Transmit Complete Interrupt' may have already fired when we get here, so if there is no further pending data
     * to be sent, it will not fire again to send any data. Hence, we check here in a critical section if transmit
     * holder register is empty, and kick-off the tranmisssion
     */
    portENTER_CRITICAL();
    17dc:	f7ff fd22 	bl	1224 <vPortEnterCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:321
    {
      lpc_uart *uart_regs = uarts[uart].registers;
    17e0:	597d      	ldr	r5, [r7, r5]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:324
      const uint32_t uart_tx_is_idle = (1 << 6);

      if (uart_regs->LSR & uart_tx_is_idle) {
    17e2:	7d2b      	ldrb	r3, [r5, #20]
    17e4:	065b      	lsls	r3, r3, #25
    17e6:	d509      	bpl.n	17fc <uart__put+0x54>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:328
        /* Receive oldest char from the queue to send
         * Since we are inside a critical section, we use FromISR() FreeRTOS API  variant
         */
        if (xQueueReceiveFromISR(uarts[uart].queue_transmit, &output_byte, NULL)) {
    17e8:	2200      	movs	r2, #0
    17ea:	f10d 0107 	add.w	r1, sp, #7
    17ee:	6930      	ldr	r0, [r6, #16]
    17f0:	f7ff f830 	bl	854 <xQueueReceiveFromISR>
    17f4:	b110      	cbz	r0, 17fc <uart__put+0x54>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:329
          uart_regs->THR = output_byte;
    17f6:	f89d 3007 	ldrb.w	r3, [sp, #7]
    17fa:	702b      	strb	r3, [r5, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:333
        }
      }
    }
    portEXIT_CRITICAL();
    17fc:	f7ff fd22 	bl	1244 <vPortExitCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:337
  }

  return status;
}
    1800:	4620      	mov	r0, r4
    1802:	b002      	add	sp, #8
    1804:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:308
  bool status = false;
    1808:	2400      	movs	r4, #0
    180a:	e7f9      	b.n	1800 <uart__put+0x58>
    180c:	100000a8 	.word	0x100000a8

00001810 <uart__polled_put>:
uart__polled_put():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:268
bool uart__polled_put(uart_e uart, char output_byte) {
    1810:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:270
  lpc_uart *uart_regs = uarts[uart].registers;
    1812:	2318      	movs	r3, #24
    1814:	4343      	muls	r3, r0
    1816:	4a0f      	ldr	r2, [pc, #60]	; (1854 <uart__polled_put+0x44>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:268
bool uart__polled_put(uart_e uart, char output_byte) {
    1818:	4606      	mov	r6, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:270
  lpc_uart *uart_regs = uarts[uart].registers;
    181a:	18d7      	adds	r7, r2, r3
    181c:	58d4      	ldr	r4, [r2, r3]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:268
bool uart__polled_put(uart_e uart, char output_byte) {
    181e:	460d      	mov	r5, r1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:272
  const bool rtos_is_running = taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
    1820:	f7ff fba2 	bl	f68 <xTaskGetSchedulerState>
    1824:	4603      	mov	r3, r0
uart__is_initialized():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:211
bool uart__is_initialized(uart_e uart) { return uarts[uart].initialized; }
    1826:	7b38      	ldrb	r0, [r7, #12]
uart__polled_put():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:275
  if (uart__is_initialized(uart)) {
    1828:	b160      	cbz	r0, 1844 <uart__polled_put+0x34>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:277
    if (rtos_is_running && queue_is_enabled) {
    182a:	2b02      	cmp	r3, #2
    182c:	d10b      	bne.n	1846 <uart__polled_put+0x36>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:277 (discriminator 1)
    182e:	693b      	ldr	r3, [r7, #16]
    1830:	b14b      	cbz	r3, 1846 <uart__polled_put+0x36>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:278
      status = uart__put(uart, output_byte, UINT32_MAX);
    1832:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    1836:	4629      	mov	r1, r5
    1838:	4630      	mov	r0, r6
    183a:	f7ff ffb5 	bl	17a8 <uart__put>
uart__wait_for_transmit_to_complete():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:66
  while (!(uart_regs->LSR & transmitter_empty)) {
    183e:	7d23      	ldrb	r3, [r4, #20]
    1840:	069b      	lsls	r3, r3, #26
    1842:	d5fc      	bpl.n	183e <uart__polled_put+0x2e>
uart__polled_put():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:290
}
    1844:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
uart__wait_for_transmit_to_complete():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:66
  while (!(uart_regs->LSR & transmitter_empty)) {
    1846:	7d23      	ldrb	r3, [r4, #20]
    1848:	069a      	lsls	r2, r3, #26
    184a:	d5fc      	bpl.n	1846 <uart__polled_put+0x36>
uart__polled_put():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:282
      uart_regs->THR = output_byte;
    184c:	7025      	strb	r5, [r4, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:269
  bool status = false;
    184e:	2000      	movs	r0, #0
uart__wait_for_transmit_to_complete():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:66
  while (!(uart_regs->LSR & transmitter_empty)) {
    1850:	e7f5      	b.n	183e <uart__polled_put+0x2e>
    1852:	bf00      	nop
    1854:	100000a8 	.word	0x100000a8

00001858 <sys_time__1sec_isr>:
sys_time__1sec_isr():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/sys_time.c:13

static const uint32_t sys_time__us_per_sec = UINT32_C(1) * 1000 * 1000;
static uint32_t sys_time__sec_counter = 0;

static void sys_time__1sec_isr(void) {
  ++sys_time__sec_counter;
    1858:	4a03      	ldr	r2, [pc, #12]	; (1868 <sys_time__1sec_isr+0x10>)
    185a:	6813      	ldr	r3, [r2, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/sys_time.c:14
  hw_timer__acknowledge_interrupt(sys_time__hw_timer, sys_time__hw_timer_mr);
    185c:	2100      	movs	r1, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/sys_time.c:13
  ++sys_time__sec_counter;
    185e:	3301      	adds	r3, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/sys_time.c:14
  hw_timer__acknowledge_interrupt(sys_time__hw_timer, sys_time__hw_timer_mr);
    1860:	4608      	mov	r0, r1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/sys_time.c:13
  ++sys_time__sec_counter;
    1862:	6013      	str	r3, [r2, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/sys_time.c:14
  hw_timer__acknowledge_interrupt(sys_time__hw_timer, sys_time__hw_timer_mr);
    1864:	f7ff be9c 	b.w	15a0 <hw_timer__acknowledge_interrupt>
    1868:	100002a4 	.word	0x100002a4

0000186c <sys_time__init>:
sys_time__init():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/sys_time.c:23
 *
 *                      P U B L I C    F U N C T I O N S
 *
 ******************************************************************************/

void sys_time__init(uint32_t cpu_clock_hz) {
    186c:	b510      	push	{r4, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/sys_time.c:27
  const uint32_t prescalar_for_1us = (cpu_clock_hz / sys_time__us_per_sec) - 1;

  // Enable the timer with 1uS resolution with an interrupt every one second
  hw_timer__enable(sys_time__hw_timer, prescalar_for_1us, sys_time__1sec_isr);
    186e:	4a07      	ldr	r2, [pc, #28]	; (188c <sys_time__init+0x20>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/sys_time.c:24
  const uint32_t prescalar_for_1us = (cpu_clock_hz / sys_time__us_per_sec) - 1;
    1870:	4c07      	ldr	r4, [pc, #28]	; (1890 <sys_time__init+0x24>)
    1872:	fbb0 f1f4 	udiv	r1, r0, r4
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/sys_time.c:27
  hw_timer__enable(sys_time__hw_timer, prescalar_for_1us, sys_time__1sec_isr);
    1876:	2000      	movs	r0, #0
    1878:	3901      	subs	r1, #1
    187a:	f7ff fe5f 	bl	153c <hw_timer__enable>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/sys_time.c:28
  hw_timer__enable_match_isr_and_reset(sys_time__hw_timer, sys_time__hw_timer_mr, sys_time__us_per_sec);
    187e:	2100      	movs	r1, #0
    1880:	4622      	mov	r2, r4
    1882:	4608      	mov	r0, r1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/sys_time.c:29
}
    1884:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/sys_time.c:28
  hw_timer__enable_match_isr_and_reset(sys_time__hw_timer, sys_time__hw_timer_mr, sys_time__us_per_sec);
    1888:	f7ff be74 	b.w	1574 <hw_timer__enable_match_isr_and_reset>
    188c:	00001859 	.word	0x00001859
    1890:	000f4240 	.word	0x000f4240

00001894 <uart_puts__polled>:
uart_puts__polled():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/uart_printf.c:51
  }

  return would_print;
}

void uart_puts__polled(uart_e uart, const char *message) {
    1894:	b570      	push	{r4, r5, r6, lr}
    1896:	4605      	mov	r5, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/uart_printf.c:52
  const size_t message_length = strlen(message);
    1898:	4608      	mov	r0, r1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/uart_printf.c:51
void uart_puts__polled(uart_e uart, const char *message) {
    189a:	460c      	mov	r4, r1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/uart_printf.c:52
  const size_t message_length = strlen(message);
    189c:	f000 f8ee 	bl	1a7c <strlen>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/uart_printf.c:53
  for (size_t byte = 0; byte < message_length; byte++) {
    18a0:	1826      	adds	r6, r4, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/uart_printf.c:53 (discriminator 1)
    18a2:	42b4      	cmp	r4, r6
    18a4:	d105      	bne.n	18b2 <uart_puts__polled+0x1e>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/uart_printf.c:56
    uart__polled_put(uart, message[byte]);
  }
  uart__polled_put(uart, '\n');
    18a6:	4628      	mov	r0, r5
    18a8:	210a      	movs	r1, #10
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/uart_printf.c:57
    18aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/uart_printf.c:56
  uart__polled_put(uart, '\n');
    18ae:	f7ff bfaf 	b.w	1810 <uart__polled_put>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/uart_printf.c:54 (discriminator 3)
    uart__polled_put(uart, message[byte]);
    18b2:	f814 1b01 	ldrb.w	r1, [r4], #1
    18b6:	4628      	mov	r0, r5
    18b8:	f7ff ffaa 	bl	1810 <uart__polled_put>
    18bc:	e7f1      	b.n	18a2 <uart_puts__polled+0xe>
    18be:	Address 0x00000000000018be is out of bounds.


000018c0 <malloc>:
malloc():
    18c0:	4b02      	ldr	r3, [pc, #8]	; (18cc <malloc+0xc>)
    18c2:	4601      	mov	r1, r0
    18c4:	6818      	ldr	r0, [r3, #0]
    18c6:	f000 b86f 	b.w	19a8 <_malloc_r>
    18ca:	bf00      	nop
    18cc:	10000108 	.word	0x10000108

000018d0 <free>:
free():
    18d0:	4b02      	ldr	r3, [pc, #8]	; (18dc <free+0xc>)
    18d2:	4601      	mov	r1, r0
    18d4:	6818      	ldr	r0, [r3, #0]
    18d6:	f000 b819 	b.w	190c <_free_r>
    18da:	bf00      	nop
    18dc:	10000108 	.word	0x10000108

000018e0 <memcpy>:
memcpy():
    18e0:	440a      	add	r2, r1
    18e2:	4291      	cmp	r1, r2
    18e4:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
    18e8:	d100      	bne.n	18ec <memcpy+0xc>
    18ea:	4770      	bx	lr
    18ec:	b510      	push	{r4, lr}
    18ee:	f811 4b01 	ldrb.w	r4, [r1], #1
    18f2:	f803 4f01 	strb.w	r4, [r3, #1]!
    18f6:	4291      	cmp	r1, r2
    18f8:	d1f9      	bne.n	18ee <memcpy+0xe>
    18fa:	bd10      	pop	{r4, pc}

000018fc <memset>:
memset():
    18fc:	4402      	add	r2, r0
    18fe:	4603      	mov	r3, r0
    1900:	4293      	cmp	r3, r2
    1902:	d100      	bne.n	1906 <memset+0xa>
    1904:	4770      	bx	lr
    1906:	f803 1b01 	strb.w	r1, [r3], #1
    190a:	e7f9      	b.n	1900 <memset+0x4>

0000190c <_free_r>:
_free_r():
    190c:	b538      	push	{r3, r4, r5, lr}
    190e:	4605      	mov	r5, r0
    1910:	2900      	cmp	r1, #0
    1912:	d045      	beq.n	19a0 <_free_r+0x94>
    1914:	f851 3c04 	ldr.w	r3, [r1, #-4]
    1918:	1f0c      	subs	r4, r1, #4
    191a:	2b00      	cmp	r3, #0
    191c:	bfb8      	it	lt
    191e:	18e4      	addlt	r4, r4, r3
    1920:	f000 f8b4 	bl	1a8c <__malloc_lock>
    1924:	4a1f      	ldr	r2, [pc, #124]	; (19a4 <_free_r+0x98>)
    1926:	6813      	ldr	r3, [r2, #0]
    1928:	4610      	mov	r0, r2
    192a:	b933      	cbnz	r3, 193a <_free_r+0x2e>
    192c:	6063      	str	r3, [r4, #4]
    192e:	6014      	str	r4, [r2, #0]
    1930:	4628      	mov	r0, r5
    1932:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    1936:	f000 b8af 	b.w	1a98 <__malloc_unlock>
    193a:	42a3      	cmp	r3, r4
    193c:	d90c      	bls.n	1958 <_free_r+0x4c>
    193e:	6821      	ldr	r1, [r4, #0]
    1940:	1862      	adds	r2, r4, r1
    1942:	4293      	cmp	r3, r2
    1944:	bf04      	itt	eq
    1946:	681a      	ldreq	r2, [r3, #0]
    1948:	685b      	ldreq	r3, [r3, #4]
    194a:	6063      	str	r3, [r4, #4]
    194c:	bf04      	itt	eq
    194e:	1852      	addeq	r2, r2, r1
    1950:	6022      	streq	r2, [r4, #0]
    1952:	6004      	str	r4, [r0, #0]
    1954:	e7ec      	b.n	1930 <_free_r+0x24>
    1956:	4613      	mov	r3, r2
    1958:	685a      	ldr	r2, [r3, #4]
    195a:	b10a      	cbz	r2, 1960 <_free_r+0x54>
    195c:	42a2      	cmp	r2, r4
    195e:	d9fa      	bls.n	1956 <_free_r+0x4a>
    1960:	6819      	ldr	r1, [r3, #0]
    1962:	1858      	adds	r0, r3, r1
    1964:	42a0      	cmp	r0, r4
    1966:	d10b      	bne.n	1980 <_free_r+0x74>
    1968:	6820      	ldr	r0, [r4, #0]
    196a:	4401      	add	r1, r0
    196c:	1858      	adds	r0, r3, r1
    196e:	4282      	cmp	r2, r0
    1970:	6019      	str	r1, [r3, #0]
    1972:	d1dd      	bne.n	1930 <_free_r+0x24>
    1974:	6810      	ldr	r0, [r2, #0]
    1976:	6852      	ldr	r2, [r2, #4]
    1978:	605a      	str	r2, [r3, #4]
    197a:	4401      	add	r1, r0
    197c:	6019      	str	r1, [r3, #0]
    197e:	e7d7      	b.n	1930 <_free_r+0x24>
    1980:	d902      	bls.n	1988 <_free_r+0x7c>
    1982:	230c      	movs	r3, #12
    1984:	602b      	str	r3, [r5, #0]
    1986:	e7d3      	b.n	1930 <_free_r+0x24>
    1988:	6820      	ldr	r0, [r4, #0]
    198a:	1821      	adds	r1, r4, r0
    198c:	428a      	cmp	r2, r1
    198e:	bf04      	itt	eq
    1990:	6811      	ldreq	r1, [r2, #0]
    1992:	6852      	ldreq	r2, [r2, #4]
    1994:	6062      	str	r2, [r4, #4]
    1996:	bf04      	itt	eq
    1998:	1809      	addeq	r1, r1, r0
    199a:	6021      	streq	r1, [r4, #0]
    199c:	605c      	str	r4, [r3, #4]
    199e:	e7c7      	b.n	1930 <_free_r+0x24>
    19a0:	bd38      	pop	{r3, r4, r5, pc}
    19a2:	bf00      	nop
    19a4:	100002a8 	.word	0x100002a8

000019a8 <_malloc_r>:
_malloc_r():
    19a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    19aa:	1ccd      	adds	r5, r1, #3
    19ac:	f025 0503 	bic.w	r5, r5, #3
    19b0:	3508      	adds	r5, #8
    19b2:	2d0c      	cmp	r5, #12
    19b4:	bf38      	it	cc
    19b6:	250c      	movcc	r5, #12
    19b8:	2d00      	cmp	r5, #0
    19ba:	4606      	mov	r6, r0
    19bc:	db01      	blt.n	19c2 <_malloc_r+0x1a>
    19be:	42a9      	cmp	r1, r5
    19c0:	d903      	bls.n	19ca <_malloc_r+0x22>
    19c2:	230c      	movs	r3, #12
    19c4:	6033      	str	r3, [r6, #0]
    19c6:	2000      	movs	r0, #0
    19c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    19ca:	f000 f85f 	bl	1a8c <__malloc_lock>
    19ce:	4921      	ldr	r1, [pc, #132]	; (1a54 <_malloc_r+0xac>)
    19d0:	680a      	ldr	r2, [r1, #0]
    19d2:	4614      	mov	r4, r2
    19d4:	b99c      	cbnz	r4, 19fe <_malloc_r+0x56>
    19d6:	4f20      	ldr	r7, [pc, #128]	; (1a58 <_malloc_r+0xb0>)
    19d8:	683b      	ldr	r3, [r7, #0]
    19da:	b923      	cbnz	r3, 19e6 <_malloc_r+0x3e>
    19dc:	4621      	mov	r1, r4
    19de:	4630      	mov	r0, r6
    19e0:	f000 f83c 	bl	1a5c <_sbrk_r>
    19e4:	6038      	str	r0, [r7, #0]
    19e6:	4629      	mov	r1, r5
    19e8:	4630      	mov	r0, r6
    19ea:	f000 f837 	bl	1a5c <_sbrk_r>
    19ee:	1c43      	adds	r3, r0, #1
    19f0:	d123      	bne.n	1a3a <_malloc_r+0x92>
    19f2:	230c      	movs	r3, #12
    19f4:	6033      	str	r3, [r6, #0]
    19f6:	4630      	mov	r0, r6
    19f8:	f000 f84e 	bl	1a98 <__malloc_unlock>
    19fc:	e7e3      	b.n	19c6 <_malloc_r+0x1e>
    19fe:	6823      	ldr	r3, [r4, #0]
    1a00:	1b5b      	subs	r3, r3, r5
    1a02:	d417      	bmi.n	1a34 <_malloc_r+0x8c>
    1a04:	2b0b      	cmp	r3, #11
    1a06:	d903      	bls.n	1a10 <_malloc_r+0x68>
    1a08:	6023      	str	r3, [r4, #0]
    1a0a:	441c      	add	r4, r3
    1a0c:	6025      	str	r5, [r4, #0]
    1a0e:	e004      	b.n	1a1a <_malloc_r+0x72>
    1a10:	6863      	ldr	r3, [r4, #4]
    1a12:	42a2      	cmp	r2, r4
    1a14:	bf0c      	ite	eq
    1a16:	600b      	streq	r3, [r1, #0]
    1a18:	6053      	strne	r3, [r2, #4]
    1a1a:	4630      	mov	r0, r6
    1a1c:	f000 f83c 	bl	1a98 <__malloc_unlock>
    1a20:	f104 000b 	add.w	r0, r4, #11
    1a24:	1d23      	adds	r3, r4, #4
    1a26:	f020 0007 	bic.w	r0, r0, #7
    1a2a:	1ac2      	subs	r2, r0, r3
    1a2c:	d0cc      	beq.n	19c8 <_malloc_r+0x20>
    1a2e:	1a1b      	subs	r3, r3, r0
    1a30:	50a3      	str	r3, [r4, r2]
    1a32:	e7c9      	b.n	19c8 <_malloc_r+0x20>
    1a34:	4622      	mov	r2, r4
    1a36:	6864      	ldr	r4, [r4, #4]
    1a38:	e7cc      	b.n	19d4 <_malloc_r+0x2c>
    1a3a:	1cc4      	adds	r4, r0, #3
    1a3c:	f024 0403 	bic.w	r4, r4, #3
    1a40:	42a0      	cmp	r0, r4
    1a42:	d0e3      	beq.n	1a0c <_malloc_r+0x64>
    1a44:	1a21      	subs	r1, r4, r0
    1a46:	4630      	mov	r0, r6
    1a48:	f000 f808 	bl	1a5c <_sbrk_r>
    1a4c:	3001      	adds	r0, #1
    1a4e:	d1dd      	bne.n	1a0c <_malloc_r+0x64>
    1a50:	e7cf      	b.n	19f2 <_malloc_r+0x4a>
    1a52:	bf00      	nop
    1a54:	100002a8 	.word	0x100002a8
    1a58:	100002ac 	.word	0x100002ac

00001a5c <_sbrk_r>:
_sbrk_r():
    1a5c:	b538      	push	{r3, r4, r5, lr}
    1a5e:	4c06      	ldr	r4, [pc, #24]	; (1a78 <_sbrk_r+0x1c>)
    1a60:	2300      	movs	r3, #0
    1a62:	4605      	mov	r5, r0
    1a64:	4608      	mov	r0, r1
    1a66:	6023      	str	r3, [r4, #0]
    1a68:	f7ff fcf0 	bl	144c <_sbrk>
    1a6c:	1c43      	adds	r3, r0, #1
    1a6e:	d102      	bne.n	1a76 <_sbrk_r+0x1a>
    1a70:	6823      	ldr	r3, [r4, #0]
    1a72:	b103      	cbz	r3, 1a76 <_sbrk_r+0x1a>
    1a74:	602b      	str	r3, [r5, #0]
    1a76:	bd38      	pop	{r3, r4, r5, pc}
    1a78:	100002b0 	.word	0x100002b0

00001a7c <strlen>:
strlen():
    1a7c:	4603      	mov	r3, r0
    1a7e:	f813 2b01 	ldrb.w	r2, [r3], #1
    1a82:	2a00      	cmp	r2, #0
    1a84:	d1fb      	bne.n	1a7e <strlen+0x2>
    1a86:	1a18      	subs	r0, r3, r0
    1a88:	3801      	subs	r0, #1
    1a8a:	4770      	bx	lr

00001a8c <__malloc_lock>:
__malloc_lock():
    1a8c:	4801      	ldr	r0, [pc, #4]	; (1a94 <__malloc_lock+0x8>)
    1a8e:	f000 b809 	b.w	1aa4 <__retarget_lock_acquire_recursive>
    1a92:	bf00      	nop
    1a94:	100002b8 	.word	0x100002b8

00001a98 <__malloc_unlock>:
__malloc_unlock():
    1a98:	4801      	ldr	r0, [pc, #4]	; (1aa0 <__malloc_unlock+0x8>)
    1a9a:	f000 b804 	b.w	1aa6 <__retarget_lock_release_recursive>
    1a9e:	bf00      	nop
    1aa0:	100002b8 	.word	0x100002b8

00001aa4 <__retarget_lock_acquire_recursive>:
__retarget_lock_acquire_recursive():
    1aa4:	4770      	bx	lr

00001aa6 <__retarget_lock_release_recursive>:
__retarget_lock_release_recursive():
    1aa6:	4770      	bx	lr
    1aa8:	5f64656c 	.word	0x5f64656c
    1aac:	65746e69 	.word	0x65746e69
    1ab0:	6c616e72 	.word	0x6c616e72
    1ab4:	64656c00 	.word	0x64656c00
    1ab8:	7478655f 	.word	0x7478655f
    1abc:	616e7265 	.word	0x616e7265
    1ac0:	7773006c 	.word	0x7773006c
    1ac4:	68637469 	.word	0x68637469
    1ac8:	746e695f 	.word	0x746e695f
    1acc:	616e7265 	.word	0x616e7265
    1ad0:	7773006c 	.word	0x7773006c
    1ad4:	68637469 	.word	0x68637469
    1ad8:	7478655f 	.word	0x7478655f
    1adc:	616e7265 	.word	0x616e7265
    1ae0:	006c      	.short	0x006c
    1ae2:	4176      	.short	0x4176
    1ae4:	696c7070 	.word	0x696c7070
    1ae8:	69746163 	.word	0x69746163
    1aec:	614d6e6f 	.word	0x614d6e6f
    1af0:	636f6c6c 	.word	0x636f6c6c
    1af4:	6c696146 	.word	0x6c696146
    1af8:	6f486465 	.word	0x6f486465
    1afc:	29286b6f 	.word	0x29286b6f
    1b00:	6c616320 	.word	0x6c616320
    1b04:	3b64656c 	.word	0x3b64656c
    1b08:	206f6e20 	.word	0x206f6e20
    1b0c:	65726f6d 	.word	0x65726f6d
    1b10:	6d656d20 	.word	0x6d656d20
    1b14:	0079726f 	.word	0x0079726f
    1b18:	454c4449 	.word	0x454c4449
    1b1c:	ffffff00 	.word	0xffffff00

00001b20 <gpio_regs_pointers>:
    1b20:	20098000 20098020 20098040 20098060     ...  .. @.. `.. 
    1b30:	20098080 200980a0                       ... ... 

00001b38 <hw_timers>:
    1b38:	40004000 00000001 40008000 00000002     .@.@.......@....
    1b48:	40090000 00000003 40094000 00000004     ...@.....@.@....

00001b58 <lpc_peripheral_pconp_bit_map>:
    1b58:	16020100 18040317 ffffff19              ............
