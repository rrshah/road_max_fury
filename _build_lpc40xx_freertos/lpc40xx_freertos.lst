
_build_lpc40xx_freertos\lpc40xx_freertos.elf:     file format elf32-littlearm
_build_lpc40xx_freertos\lpc40xx_freertos.elf
architecture: armv7e-m, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x000000e5

Program Header:
0x70000001 off    0x0001c06c vaddr 0x0000c06c paddr 0x0000c06c align 2**2
         filesz 0x00000008 memsz 0x00000008 flags r--
    LOAD off    0x00010000 vaddr 0x00000000 paddr 0x00000000 align 2**16
         filesz 0x0000c074 memsz 0x0000c074 flags r-x
    LOAD off    0x00020000 vaddr 0x10000000 paddr 0x0000c074 align 2**16
         filesz 0x00000338 memsz 0x0000134c flags rw-
    LOAD off    0x00030000 vaddr 0x20000000 paddr 0x20000000 align 2**16
         filesz 0x00000000 memsz 0x00000028 flags rw-
private flags = 5000400: [Version5 EABI] [hard-float ABI]

Sections:
Idx Name             Size      VMA       LMA       File off  Algn  Flags
  0 .text            0000c06c  00000000  00000000  00010000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx       00000008  0000c06c  0000c06c  0001c06c  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data            00000338  10000000  0000c074  00020000  2**2  CONTENTS, ALLOC, LOAD, DATA
  3 .bss             00001014  10000338  0000c3ac  00020338  2**3  ALLOC
  4 .persistent_ram2 00000028  20000000  20000000  00030000  2**2  ALLOC
  5 .debug_info      00024846  00000000  00000000  00020338  2**0  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev    000066e8  00000000  00000000  00044b7e  2**0  CONTENTS, READONLY, DEBUGGING
  7 .debug_aranges   00000ef8  00000000  00000000  0004b266  2**0  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges    00001c30  00000000  00000000  0004c15e  2**0  CONTENTS, READONLY, DEBUGGING
  9 .debug_line      00011760  00000000  00000000  0004dd8e  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_str       00006685  00000000  00000000  0005f4ee  2**0  CONTENTS, READONLY, DEBUGGING
 11 .comment         00000076  00000000  00000000  00065b73  2**0  CONTENTS, READONLY
 12 .ARM.attributes  00000032  00000000  00000000  00065be9  2**0  CONTENTS, READONLY
 13 .debug_frame     00004484  00000000  00000000  00065c1c  2**2  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc       00011f63  00000000  00000000  0006a0a0  2**0  CONTENTS, READONLY, DEBUGGING
 15 .stab            00000054  00000000  00000000  0007c004  2**2  CONTENTS, READONLY, DEBUGGING
 16 .stabstr         000000ab  00000000  00000000  0007c058  2**0  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
0000c06c l    d  .ARM.exidx	00000000 .ARM.exidx
10000000 l    d  .data	00000000 .data
10000338 l    d  .bss	00000000 .bss
20000000 l    d  .persistent_ram2	00000000 .persistent_ram2
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .stab	00000000 .stab
00000000 l    d  .stabstr	00000000 .stabstr
00000000 l    df *ABS*	00000000 interrupt_vector_table.c
00000158 l     F .text	0000001a isr_hard_fault
0000016c l       .text	00000000 handler_address
00000174 l     F .text	0000005c halt
0000addc l     O .text	00000040 table.8042
00000000 l    df *ABS*	00000000 entry_point.c
0000ac44 l     O .text	0000000c __FUNCTION__.6167
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 crash.c
20000000 l     O .persistent_ram2	00000028 crash_registers
00000000 l    df *ABS*	00000000 syscall.c
10000000 l     O .data	00000004 next_free_heap.5390
10000004 l     O .data	00000004 next_free_heap.5399
00000000 l    df *ABS*	00000000 startup.c
00000000 l    df *ABS*	00000000 freertos_interrupt_handlers.c
00000000 l    df *ABS*	00000000 port.c
00000438 l     F .text	00000022 prvPortStartFirstTask
00000460 l     F .text	0000000e vPortEnableVFP
00000474 l     F .text	0000003c prvTaskExitError
00000500 l       .text	00000000 pxCurrentTCBConst2
000005d0 l       .text	00000000 pxCurrentTCBConst
10000338 l     O .bss	00000001 ucMaxSysCallPriority
1000033c l     O .bss	00000004 ulMaxPRIGROUPValue
10000340 l     O .bss	00000004 uxCriticalNesting
00000000 l    df *ABS*	00000000 heap_3.c
00000000 l    df *ABS*	00000000 list.c
00000000 l    df *ABS*	00000000 queue.c
00000842 l     F .text	00000016 prvIsQueueEmpty
00000858 l     F .text	0000006a prvCopyDataToQueue
000008c2 l     F .text	0000002a prvCopyDataFromQueue
000008ec l     F .text	00000070 prvUnlockQueue
00000000 l    df *ABS*	00000000 tasks.c
00001140 l     F .text	0000002e prvResetRunTimeStatsInList
00001170 l     F .text	000000f4 prvAddNewTaskToReadyList
00001264 l     F .text	00000028 prvIdleTask
0000128c l     F .text	00000024 prvResetNextTaskUnblockTime
000012b0 l     F .text	00000098 prvInitialiseNewTask.isra.2
00001348 l     F .text	0000008c prvAddCurrentTaskToDelayedList
00001a64 l     F .text	0000005a prvListTasksWithinSingleList
10000348 l     O .bss	00000004 pxDelayedTaskList
1000034c l     O .bss	00000004 pxOverflowDelayedTaskList
10000350 l     O .bss	000000c8 pxReadyTasksLists
10000418 l     O .bss	00000004 ulTaskSwitchedInTime
1000041c l     O .bss	00000004 uxCurrentNumberOfTasks
10000420 l     O .bss	00000004 uxPendedTicks
10000424 l     O .bss	00000004 uxSchedulerSuspended
10000428 l     O .bss	00000004 uxTaskNumber
1000042c l     O .bss	00000004 uxTopReadyPriority
10000430 l     O .bss	00000014 xDelayedTaskList1
10000444 l     O .bss	00000014 xDelayedTaskList2
10000458 l     O .bss	00000004 xIdleTaskHandle
1000045c l     O .bss	00000004 xNextTaskUnblockTime
10000460 l     O .bss	00000004 xNumOfOverflows
10000464 l     O .bss	00000014 xPendingReadyList
10000478 l     O .bss	00000004 xSchedulerRunning
1000047c l     O .bss	00000014 xSuspendedTaskList
10000490 l     O .bss	00000004 xTickCount
10000494 l     O .bss	00000004 xYieldPending
00000000 l    df *ABS*	00000000 sl_string.c
00000000 l    df *ABS*	00000000 board_io.c
10000498 l     O .bss	00000002 board_io__led0
1000049a l     O .bss	00000002 board_io__led1
1000049c l     O .bss	00000002 board_io__led2
1000049e l     O .bss	00000002 board_io__led3
00000000 l    df *ABS*	00000000 gpio.c
0000b594 l     O .text	00000018 gpio_memory_map
00000000 l    df *ABS*	00000000 hw_timer.c
0000b5ac l     O .text	00000020 hw_timers
00000000 l    df *ABS*	00000000 i2c.c
000025b8 l     F .text	0000005e i2c__transfer_unprotected
00002618 l     F .text	00000128 i2c__handle_interrupt
00002740 l     F .text	0000000c i2c2_isr
0000274c l     F .text	0000000c i2c1_isr
00002758 l     F .text	0000000c i2c0_isr
10000008 l     O .data	00000054 i2c_structs
00000000 l    df *ABS*	00000000 lpc_peripherals.c
00002914 l     F .text	00000002 lpc_peripheral__halt_handler
100004a0 l     O .bss	00000004 memory_write_to_avoid_spurious_interrupt.7684
1000005c l     O .data	000000a4 lpc_peripheral__isr_registrations
0000b5d8 l     O .text	00000025 lpc_peripheral_pconp_bit_map
00000000 l    df *ABS*	00000000 ssp2.c
000029bc l     F .text	00000098 ssp2__dma_transfer_block
00000000 l    df *ABS*	00000000 uart.c
00002ae4 l     F .text	00000094 uart__isr_common
00002b78 l     F .text	0000000c uart3_isr
00002b84 l     F .text	0000000c uart2_isr
00002b90 l     F .text	0000000c uart1_isr
00002b9c l     F .text	0000000c uart0_isr
10000100 l     O .data	00000030 uarts
0000b600 l     O .text	00000010 uart__isrs
0000b610 l     O .text	00000004 uart_peripheral_ids
00000000 l    df *ABS*	00000000 app_cli.c
00002e10 l     F .text	00000098 app_cli__private_print_list_of_all_commands
00000000 l    df *ABS*	00000000 sj2_cli.c
00002ffc l     F .text	00000012 sj2_cli__output_function
00003010 l     F .text	00000078 sj2_cli__task
100004a4 l     O .bss	00000010 sj2_cli_struct.8617
100004b4 l     O .bss	00000800 task_stack.8621
10000cb4 l     O .bss	0000005c task_struct.8622
10000130 l     O .data	00000010 crash.8618
10000140 l     O .data	00000010 i2c.8619
10000150 l     O .data	00000010 task_list.8620
00000000 l    df *ABS*	00000000 handler_i2c.c
00003104 l     F .text	000000c8 cli__i2c_read
000031cc l     F .text	000000e8 cli__i2c_write
00000000 l    df *ABS*	00000000 handlers_general.c
0000ba60 l     O .text	00000014 task_status_table.7877
00000000 l    df *ABS*	00000000 ff.c
000033e0 l     F .text	00000010 ld_dword
000033f0 l     F .text	0000001c mem_cmp
0000340c l     F .text	0000002a get_ldnumber
00003436 l     F .text	00000040 sync_window.part.6
00003476 l     F .text	00000044 move_window
000034bc l     F .text	00000074 check_fs
00003530 l     F .text	000002c0 find_volume
000037f0 l     F .text	00000016 unlock_fs
10000d10 l     O .bss	00000004 FatFs
10000d14 l     O .bss	00000002 Fsid
00000000 l    df *ABS*	00000000 ffsystem.c
00000000 l    df *ABS*	00000000 disk_glue_logic.c
00000000 l    df *ABS*	00000000 sd_card.c
00003928 l     F .text	00000028 sd_card__wait_for_ready
00003950 l     F .text	00000020 sd_card__power_off
00003970 l     F .text	0000005a sd_card__transmit_datablock
000039ca l     F .text	00000086 sd_card__send_command
00003a50 l     F .text	00000042 sd_card__read_datablock
10000d16 l     O .bss	00000001 g_card_type
10000160 l     O .data	00000001 g_disk_status
00000000 l    df *ABS*	00000000 system_calls.c
00003d34 l     F .text	0000001e system_calls__print_and_halt
00000000 l    df *ABS*	00000000 acceleration.c
00000000 l    df *ABS*	00000000 sensors.c
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 peripherals_init.c
10000d17 l     O .bss	00000020 rxq_storage.9186
10000d38 l     O .bss	00000050 rxq_struct.9184
10000d88 l     O .bss	00000238 sd_card_drive.9178
10000fc0 l     O .bss	00000080 txq_storage.9187
10001040 l     O .bss	00000050 txq_struct.9185
0000bae3 l     O .text	00000011 __FUNCTION__.9166
00000000 l    df *ABS*	00000000 ssp2_mutex.c
10001090 l     O .bss	00000004 spi2_mutex_handle
10001094 l     O .bss	00000050 spi2_mutex_memory
00000000 l    df *ABS*	00000000 sys_time.c
00003fe4 l     F .text	00000024 sys_time__one_minute_isr
100010e4 l     O .bss	00000004 sys_time__one_minute_counter
00000000 l    df *ABS*	00000000 uart_printf.c
00000000 l    df *ABS*	00000000 led_matrix.c
100010e8 l     O .bss	00000002 P_B1
100010ea l     O .bss	00000002 P_B2
100010ec l     O .bss	00000002 P_CLOCK
100010ee l     O .bss	00000002 P_G1
100010f0 l     O .bss	00000002 P_G2
100010f2 l     O .bss	00000002 P_LATCH
100010f4 l     O .bss	00000002 P_OE
100010f6 l     O .bss	00000002 P_R1
100010f8 l     O .bss	00000002 P_R2
100010fa l     O .bss	00000002 P_addrA
100010fc l     O .bss	00000002 P_addrB
100010fe l     O .bss	00000002 P_addrC
10001100 l     O .bss	00000002 P_addrD
10001104 l     O .bss	0000001c ada_gfx
00000000 l    df *ABS*	00000000 main.c
00004880 l     F .text	00000018 blink_task
10001120 l     O .bss	00000002 led0
10001122 l     O .bss	00000002 led1
00000000 l    df *ABS*	00000000 rtos_hooks.c
10001128 l     O .bss	00000008 freertos_run_time_counter_offset
10001130 l     O .bss	00000190 uxIdleTaskStack.7843
100012c0 l     O .bss	0000005c xIdleTaskTCB.7842
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _arm_muldivdf3.o
00000000 l    df *ABS*	00000000 _arm_fixunsdfsi.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 getchar.c
00000000 l    df *ABS*	00000000 lock.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 memcpy-stub.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
000057e0 l     F .text	0000002e __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_float.c
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 nano-vfscanf_float.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 setvbuf.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strcasecmp.c
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
00000000 l    df *ABS*	00000000 strncasecmp.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 strncpy.c
00000000 l    df *ABS*	00000000 strstr.c
00000000 l    df *ABS*	00000000 strtod.c
00006b20 l     F .text	00000038 sulp
0000be70 l     O .text	00000014 fpi.7522
0000be84 l     O .text	00000014 fpinan.7558
0000be98 l     O .text	00000028 tinytens
00000000 l    df *ABS*	00000000 strtol.c
000076fc l     F .text	000000f0 _strtol_l.isra.0
00000000 l    df *ABS*	00000000 vsnprintf.c
00000000 l    df *ABS*	00000000 vsscanf.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00007a54 l     F .text	00000112 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00008884 l     F .text	00000048 std
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
00008aa4 l     F .text	00000074 rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
00008f8c l     F .text	00000024 L_shift
00000000 l    df *ABS*	00000000 getc.c
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 lib_a-memchr.o
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 mprec.c
0000c038 l     O .text	0000000c p05.7444
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
00000000 l    df *ABS*	00000000 nano-vfscanf.c
00000000 l    df *ABS*	00000000 nano-vfscanf_i.c
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 s_nan.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strtoul.c
0000a5f0 l     F .text	000000ec _strtoul_l.isra.0
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 refill.c
0000a850 l     F .text	00000012 lflush
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _arm_unorddf2.o
00000000 l    df *ABS*	00000000 _arm_fixdfsi.o
00000000 l    df *ABS*	00000000 _arm_truncdfsf2.o
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 close.c
00000000 l    df *ABS*	00000000 fstat.c
00000000 l    df *ABS*	00000000 lseek.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 impure.c
10000168 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 lnumeric.c
100001c8 l     O .data	00000002 numempty
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 reent.c
0000a81c g     F .text	00000010 _malloc_usable_size_r
00005a84 g     F .text	000000ba __cvt
000066fc g     F .text	00000028 putchar
0000a16c g     F .text	000000b0 _scanf_chars
000020ea g     F .text	00000022 sl_string__erase_last
0000aa8c g     F .text	0000002c .hidden __aeabi_dcmpun
00009ad6 g     F .text	00000042 __any_on
0000a7d8 g     F .text	00000020 _isatty_r
0000aa50 g     F .text	00000012 .hidden __aeabi_dcmple
00002d8c g     F .text	00000084 uart__put
00006724 g     F .text	000000dc _puts_r
0000a98c g     F .text	0000007a .hidden __cmpdf2
0000a7f8 g     F .text	00000024 _lseek_r
00001e76 g     F .text	0000001a sl_string__is_full
0000a98c g     F .text	0000007a .hidden __eqdf2
00002a54 g     F .text	0000002c ssp2__set_max_clock
00000548 g     F .text	00000028 vPortExitCritical
00003e2a g     F .text	00000004 sensors__init
00004d18 g     F .text	0000005a .hidden __floatdidf
00002c00 g     F .text	00000028 uart__is_initialized
00002ea8 g     F .text	00000016 app_cli__initialize
000066cc g     F .text	00000030 printf
1000133c g     O .bss	00000001 __lock___atexit_recursive_mutex
00004008 g     F .text	0000002c sys_time__init
0000a5c2 g     F .text	00000024 __sseek
00008934 g     F .text	00000070 __sinit
000019e8 g     F .text	0000007c vTaskGetInfo
000078d4 g     F .text	000000a4 __swbuf_r
000088d8 g     F .text	0000002c __sfmoreglue
00007878 g     F .text	00000048 _vsiscanf_r
0000931c g     F .text	0000000c __malloc_unlock
000003e8 g     F .text	00000018 startup__initialize_interrupts
000076f0 g     F .text	0000000c _strtod_r
00008b18 g     F .text	0000002a __hexdig_fun
1000133d g     O .bss	00000001 __lock___arc4random_mutex
0000564c g     F .text	00000034 memmove
00002374 g     F .text	00000024 board_io__get_led3
00000c64 g     F .text	000000bc xQueueGenericSendFromISR
00009328 g     F .text	00000068 _Balloc
0000c074 g       .ARM.exidx	00000000 __exidx_end
00002994 g     F .text	00000028 lpc_peripheral__enable_interrupt
0000a97c g     F .text	0000008a .hidden __gtdf2
00001e14 g     F .text	00000010 vRunTimeStatIsrExit
10000344 g     O .bss	00000004 pxCurrentTCB
0000aba8 g     F .text	0000002e .hidden __aeabi_d2lz
0000a7b4 g     F .text	00000024 _fstat_r
00002144 g     F .text	00000050 sl_string__erase_int
10001348 g     O .bss	00000004 errno
0000a21c g     F .text	000001e8 _scanf_i
0000a586 g     F .text	00000004 __seofread
0000c074 g       .ARM.exidx	00000000 _etext
0000aa18 g     F .text	00000010 .hidden __aeabi_cdcmple
00001e24 g     F .text	00000028 sl_string__initialize
00002ba8 g     F .text	00000058 uart__init
000078c0 g     F .text	00000014 vsscanf
0000022c g     F .text	00000040 clock__initialize_system_clock_96mhz
00001950 g     F .text	00000018 vTaskInternalSetTimeOutState
000025a8 g     F .text	00000010 hw_timer__set_value
00002cbc g     F .text	00000028 uart__polled_put
000090f8 g     F .text	00000080 _getc_r
00000630 g     F .text	00000100 xPortStartScheduler
00005630 g     F .text	0000001c memcpy
000018a0 g     F .text	00000030 vTaskPlaceOnEventList
00008fd8 g     F .text	00000120 __hexnan
0000aa08 g     F .text	00000020 .hidden __aeabi_cdrcmple
00006830 g     F .text	00000184 setvbuf
000088cc g     F .text	0000000c _cleanup_r
00009c38 g     F .text	000001f0 _svfprintf_r
00004ca0 g     F .text	00000022 .hidden __floatsidf
00000600  w    F .text	00000030 vPortSetupTimerInterrupt
0000a984 g     F .text	00000082 .hidden __ltdf2
00004358 g     F .text	0000002a Color333
000005d4 g     F .text	0000002c xPortSysTickHandler
000038b2 g     F .text	0000001c disk_initialize
000051d8 g     F .text	00000000 .hidden __aeabi_uldivmod
00006800 g     F .text	00000010 puts
00000c14 g     F .text	0000002a xQueueCreateMutexStatic
000007a6 g     F .text	0000001a vPortFree
00001ef2 g     F .text	0000002e sl_string__set
00009a3c g     F .text	00000066 __ratio
0000232c g     F .text	00000024 board_io__get_led1
00000f00 g     F .text	00000180 xQueueSemaphoreTake
000022f4 g     F .text	00000014 board_io__sd_card_is_present
0000388c g     F .text	0000000a ff_del_syncobj
00005610 g     F .text	00000010 malloc
00000730 g     F .text	00000058 vPortValidateInterruptPriority
00002970 g     F .text	00000024 lpc_peripheral__is_powered_on
0000ac24 g     F .text	00000010 _fstat
0000bf70 g     O .text	000000c8 __mprec_tens
00002764 g     F .text	000000b8 i2c__initialize
0000785c g     F .text	0000001c vsnprintf
00000570 g     F .text	00000064 xPortPendSVHandler
10000338 g       .bss	00000000 _bss_start
00005198 g     F .text	00000040 .hidden __fixunsdfsi
000007dc g     F .text	00000018 vListInsertEnd
00009ea2 g     F .text	0000003a __ssrefill_r
000038ce g     F .text	0000000a disk_status
00004c80 g     F .text	0000001e .hidden __aeabi_ui2d
00009178 g     F .text	00000008 _localeconv_r
20008000 g       *ABS*	00000000 __top_ram_32k
0000424c g     F .text	0000010c led_matrix__begin
00009550 g     F .text	00000012 __i2b
00002450 g     F .text	00000024 gpio__set_as_output
00005208 g     F .text	000002d0 .hidden __udivmoddi4
000049fc g     F .text	00000000 .hidden __aeabi_drsub
00006810 g     F .text	00000020 _sbrk_r
0000240c g     F .text	00000028 gpio__set_as_input
00000424 g     F .text	00000012 xPortSysTickHandler_wrapper
000023c8 g     F .text	0000001e gpio__construct_with_function
0000a82c g     F .text	00000024 _read_r
000007d6 g     F .text	00000006 vListInitialiseItem
0000aa3c g     F .text	00000012 .hidden __aeabi_dcmplt
00000dc4 g     F .text	0000013c xQueueReceive
00008860 g     F .text	00000024 fflush
00004cc4 g     F .text	00000042 .hidden __extendsfdf2
00009edc g     F .text	00000290 __ssvfscanf_r
00004fc8 g     F .text	000001d0 .hidden __aeabi_ddiv
00004a08 g     F .text	00000276 .hidden __adddf3
20008000 g       *ABS*	00000000 _heap_end
00009900 g     F .text	000000a0 __b2d
0000c06c g       .text	00000000 __exidx_start
1000133e g     O .bss	00000001 __lock___env_recursive_mutex
00004d74 g     F .text	00000254 .hidden __aeabi_dmul
00003d54 g     F .text	00000028 _isatty
1000133f g     O .bss	00000001 __lock___sinit_recursive_mutex
0000be24 g     O .text	00000004 _global_impure_ptr
00009b34 g     F .text	0000004c _realloc_r
00006a64 g     F .text	00000044 strncasecmp
00002c40 g     F .text	0000007c uart__enable_queues
000040b8 g     F .text	00000194 RGBmatrixPanel_init
0000bf48 g     O .text	00000028 __mprec_bigtens
00009434 g     F .text	0000007c __s2b
000024d4 g     F .text	0000001c gpio__reset
000024b8 g     F .text	0000001c gpio__set
00004c80 g     F .text	0000001e .hidden __floatunsidf
00002ac4 g     F .text	00000014 ssp2__exchange_byte
00000344 g     F .text	00000054 _sbrk
000097c6 g     F .text	00000034 __mcmp
00000788 g     F .text	0000001e pvPortMalloc
10010000 g       *ABS*	00000000 __end_of_unused_ram64
00001e90 g     F .text	00000004 sl_string__to_int
00001e5e g     F .text	0000000c sl_string__get_capacity_including_null_char
0000111c g     F .text	00000024 vQueueDelete
000007c0 g     F .text	00000016 vListInitialise
000077f0 g     F .text	00000014 strtol
00004072 g     F .text	0000002a uart_puts__polled
0000ab08 g     F .text	0000009e .hidden __aeabi_d2f
00080000 g       *ABS*	00000000 __top_flash
1000134c g       .bss	00000000 _bss_end
0000abd8 g     F .text	0000003c .hidden __aeabi_d2ulz
00000ab8 g     F .text	0000015c xQueueGenericSend
00003f8c g     F .text	00000034 spi2_mutex__acquire
00006b58 g     F .text	00000b98 _strtod_l
000028fc g     F .text	00000018 i2c__write_single
00008fb0 g     F .text	00000028 __match
00002560 g     F .text	00000024 hw_timer__enable_match_isr
00003e7c g     F .text	00000110 peripherals_init
0000785c g     F .text	0000001c vsniprintf
00001ed0 g     F .text	00000022 sl_string__scanf
000094b0 g     F .text	00000040 __hi0bits
000021d4 g     F .text	00000100 board_io__initialize
00001ac0 g     F .text	00000098 uxTaskGetSystemState
00002128 g     F .text	0000001c sl_string__erase_first_word
0000aab8 g     F .text	0000004e .hidden __fixdfsi
00001c1c g     F .text	0000009c xTaskPriorityDisinherit
20000028 g       .persistent_ram2	00000000 _heap_start
10001340 g     O .bss	00000001 __lock___malloc_recursive_mutex
00002490 g     F .text	00000028 gpio__get
00002016 g     F .text	0000002e sl_string__begins_with_ignore_case
00003c00 g     F .text	0000008c sd_card__read
00001d80 g     F .text	0000006c vTaskResetRunTimeStats
0000a404 g     F .text	00000090 _putc_r
1000134c g       .bss	00000000 __start_of_unused_ram64
000018d0 g     F .text	00000080 xTaskRemoveFromEventList
0000495c g     F .text	00000010 vApplicationMallocFailedHook
000001d0 g     F .text	0000004c isr_hard_fault_handler
000054e4 g     F .text	00000024 fprintf
00004a08 g     F .text	00000276 .hidden __aeabi_dadd
0000a984 g     F .text	00000082 .hidden __ledf2
10000000 g       .data	00000000 _bdata_vma
00001f8a g     F .text	00000038 sl_string__append
00009684 g     F .text	0000009c __pow5mult
00004d08 g     F .text	0000006a .hidden __aeabi_ul2d
0000bed0 g     O .text	00000020 __sf_fake_stderr
00002518 g     F .text	00000048 hw_timer__enable
0000560c g     F .text	00000002 __retarget_lock_release_recursive
00000398 g     F .text	0000003c startup__initialize_ram
00003ab4 g     F .text	0000013c sd_card__initialize
00009b80 g     F .text	000000b6 __ssputs_r
00000224 g     F .text	00000008 clock__get_peripheral_clock_hz
00001d68 g     F .text	00000018 pvTaskIncrementMutexHeldCount
00000284 g     F .text	000000c0 crash__report_if_occurred
0000aa78 g     F .text	00000012 .hidden __aeabi_dcmpgt
10010000 g       *ABS*	00000000 __top_ram_64k
0000580e g     F .text	00000024 __sfputs_r
00008904 g     F .text	0000000c __sfp_lock_acquire
00009270 g     F .text	00000000 memchr
00005ba4  w    F .text	00000454 _printf_float
00001968 g     F .text	00000074 xTaskCheckForTimeOut
00005690 g     F .text	0000009c _free_r
00001b78 g     F .text	000000a4 xTaskPriorityInherit
0000aa64 g     F .text	00000012 .hidden __aeabi_dcmpge
0000a494 g     F .text	00000058 __srget_r
00009e28 g     F .text	0000007a _sungetc_r
00004a04 g     F .text	0000027a .hidden __aeabi_dsub
0000157c g     F .text	00000010 vTaskSuspendAll
0000149c g     F .text	0000006c eTaskGetState
00006af2 g     F .text	0000002e strstr
00004d08 g     F .text	0000006a .hidden __floatundidf
0000ac34 g     F .text	00000010 _lseek
00009720 g     F .text	000000a6 __lshift
000024f0 g     F .text	00000026 gpio__toggle
00001e6a g     F .text	0000000c sl_string__get_length
00000822 g     F .text	00000020 uxListRemove
0000210c g     F .text	0000001c sl_string__erase_at_substring
0000497c g     F .text	00000040 configASSERT_callback
00006aa8 g     F .text	00000024 strncmp
000032fc g     F .text	00000006 cli__crash_me
00009562 g     F .text	00000120 __multiply
000013d4 g     F .text	0000006c xTaskCreateStatic
00003878 g     F .text	00000014 ff_cre_syncobj
00006acc g     F .text	00000026 strncpy
000099a0 g     F .text	0000009c __d2b
00006a00 g     F .text	00000038 strcasecmp
00003304 g     F .text	000000dc cli__task_list
000017e4 g     F .text	000000bc vTaskSwitchContext
00002874 g     F .text	0000001e i2c__read_single
00002434 g     F .text	0000001c gpio__construct_as_input
0000a6dc g     F .text	00000004 _strtoul_r
000009d8 g     F .text	00000094 xQueueGenericCreateStatic
00002194 g     F .text	00000040 sl_string__trim_end
0000a794 g     F .text	00000020 _close_r
00004ca0 g     F .text	00000022 .hidden __aeabi_i2d
000049bc g     F .text	00000018 vApplicationGetIdleTaskMemory
00003c8c g     F .text	000000a8 sd_card__write
10000338 g       .data	00000000 _data_end
00007978 g     F .text	000000dc __swsetup_r
00002ad8 g     F .text	00000006 ssp2__dma_write_block
00004940 g     F .text	0000001c vApplicationStackOverflowHook
000054d8  w    F .text	00000002 .hidden __aeabi_ldiv0
00004fc8 g     F .text	000001d0 .hidden __divdf3
000089a4 g     F .text	0000008c __sfp
00009aa2 g     F .text	00000034 __copybits
00008928 g     F .text	0000000c __sinit_lock_release
00002088 g     F .text	00000022 sl_string__ends_with_newline
00007804 g     F .text	00000058 _vsnprintf_r
00004060 g     F .text	00000012 sys_time__get_uptime_ms
00000000 g       .text	00000000 __base_flash
00004d74 g     F .text	00000254 .hidden __muldf3
00002350 g     F .text	00000024 board_io__get_led2
0000a564 g     F .text	00000022 __sread
00009310 g     F .text	0000000c __malloc_lock
000087e8 g     F .text	00000078 _fflush_r
00002d34 g     F .text	00000058 uart__polled_get
00009b18 g     F .text	0000001c _calloc_r
00004034 g     F .text	0000002c sys_time__get_uptime_us
0000bef0 g     O .text	00000020 __sf_fake_stdin
0000560a g     F .text	00000002 __retarget_lock_acquire_recursive
00005680 g     F .text	00000010 memset
000028e4 g     F .text	00000018 i2c__detect
000048ac g     F .text	00000094 main
00005608 g     F .text	00000002 __retarget_lock_init_recursive
10000000 g       .text	00000000 __base_ram_64k
000007f4 g     F .text	0000002e vListInsert
0000a5e6 g     F .text	00000008 __sclose
0000ab08 g     F .text	0000009e .hidden __truncdfsf2
000077ec g     F .text	00000004 _strtol_r
000055e4 g     F .text	00000024 getchar
000000e4 g       .text	00000000 __init_array_end
000004e0 g     F .text	00000024 vPortSVCHandler
00007b68 g     F .text	00000b74 _dtoa_r
0000572c g     F .text	000000b4 _malloc_r
0000a754 g     F .text	0000001a __ascii_wctomb
00004d18 g     F .text	0000005a .hidden __aeabi_l2d
00001fda g     F .text	00000014 sl_string__equals_to_ignore_case
00003808 g     F .text	00000070 f_mount
0000a6e0 g     F .text	00000074 __submore
000049e8 g     F .text	00000014 freertos_hooks__reset_run_time_stats
000020e2 g     F .text	00000008 sl_string__erase_first
00008a30 g     F .text	00000038 _fwalk
00001080 g     F .text	0000009c xQueueReceiveFromISR
00002ec8 g     F .text	00000134 app_cli__process_input
00000a6c g     F .text	0000004c xQueueGenericCreate
00002c28 g     F .text	00000018 uart__is_transmit_queue_initialized
00002a80 g     F .text	00000044 ssp2__initialize
00003bf0 g     F .text	00000010 sd_card__status
0000abd8 g     F .text	0000003c .hidden __fixunsdfdi
0000a98c g     F .text	0000007a .hidden __nedf2
00000412 g     F .text	00000012 xPortPendSVHandler_wrapper
0000281c g     F .text	00000058 i2c__read_slave_data
000066cc g     F .text	00000030 iprintf
000038a8 g     F .text	0000000a ff_rel_grant
000016b0 g     F .text	000000ec xTaskResumeAll
000069c0 g     F .text	00000040 sprintf
00000400 g     F .text	00000012 vPortSVCHandler_wrapper
00001508 g     F .text	00000074 vTaskStartScheduler
00005b3e g     F .text	00000064 __exponent
00002918 g     F .text	00000034 lpc_peripheral__interrupt_dispatcher
0000aba8 g     F .text	0000002e .hidden __fixdfdi
00001e4c g     F .text	00000012 sl_string__get_capacity
0000a770 g     F .text	00000024 _write_r
0000021c g     F .text	00000008 clock__get_core_clock_hz
000069b4 g     F .text	0000000c nanf
00005ff8 g     F .text	000000ea _printf_common
10000164 g     O .data	00000004 _impure_ptr
000086dc g     F .text	0000010c __sflush_r
000000e4 g       .text	00000000 __preinit_array_end
000023e6 g     F .text	00000026 gpio__enable_open_drain
000022d4 g     F .text	00000010 board_io__sd_card_cs
00003fc0 g     F .text	00000024 spi2_mutex__release
00009c38 g     F .text	000001f0 _svfiprintf_r
0000a864 g     F .text	00000118 __srefill_r
00009248 g     F .text	00000024 __ascii_mbtowc
000098b4 g     F .text	0000004c __ulp
000019dc g     F .text	0000000c vTaskMissedYield
000022e4 g     F .text	00000010 board_io__sd_card_ds
0000bf30 g     O .text	0000000c _C_numeric_locale
00007804 g     F .text	00000058 _vsniprintf_r
0000026c g     F .text	00000018 crash__record_get
00003a94 g     F .text	00000020 sd_card__update_status
00005198 g     F .text	00000040 .hidden __aeabi_d2uiz
0000468c g     F .text	000001f4 drawPixel
0000a4f0 g     F .text	00000010 nan
10001324 g     O .bss	00000018 led_matrix
0000158c g     F .text	00000124 xTaskIncrementTick
00009edc g     F .text	00000290 __ssvfiscanf_r
000049d4 g     F .text	00000014 freertos_hooks__get_run_time_counter_value
00009180 g     F .text	00000048 __swhatbuf_r
10010000 g       *ABS*	00000000 _estack
00001fee g     F .text	00000028 sl_string__begins_with_limited_chars
00001eb6 g     F .text	0000001a sl_string__printf
0000aa28 g     F .text	00000012 .hidden __aeabi_dcmpeq
00003e08 g     F .text	00000022 acceleration__init
0000095c g     F .text	0000007c xQueueGenericReset
00003d7c g     F .text	00000070 _write
00003e6e g     F .text	0000000c delay__ms
00001f20 g     F .text	00000016 sl_string__initialize_from
00000000 g     O .text	000000e4 interrupt_vector_table
10001341 g     O .bss	00000001 __lock___at_quick_exit_mutex
00005508 g     F .text	000000cc _fputs_r
20000000 g       .text	00000000 __base_ram_32k
00001440 g     F .text	0000005a xTaskCreate
00007878 g     F .text	00000048 _vsscanf_r
0000a58a g     F .text	00000038 __swrite
00003900 g     F .text	00000028 disk_write
000054e4 g     F .text	00000024 fiprintf
00005834 g     F .text	00000250 _vfiprintf_r
00008a68 g     F .text	0000003c _fwalk_reent
00002398 g     F .text	00000030 gpio__set_function
00001e9a g     F .text	0000001c sl_string__vprintf
000097fa g     F .text	000000ba __mdiff
0000aab8 g     F .text	0000004e .hidden __aeabi_d2iz
00003896 g     F .text	00000012 ff_req_grant
000078c0 g     F .text	00000014 vsiscanf
0000c074 g       *ABS*	00000000 _bdata_lma
0000179c g     F .text	00000048 vTaskDelay
00008910 g     F .text	0000000c __sfp_lock_release
0000bf10 g     O .text	00000020 __sf_fake_stdout
000069c0 g     F .text	00000040 siprintf
0000a500 g     F .text	00000064 __sccl
000054dc g     F .text	00000008 atoi
00001b58 g     F .text	00000020 xTaskGetSchedulerState
0000bd23 g     O .text	00000101 _ctype_
00001cb8 g     F .text	000000b0 vTaskPriorityDisinheritAfterTimeout
00003dec g     F .text	0000001c _read
000000e4 g       .text	00000000 __init_array_start
000054d8  w    F .text	00000002 .hidden __aeabi_idiv0
0000aa8c g     F .text	0000002c .hidden __unorddf2
00002584 g     F .text	00000014 hw_timer__acknowledge_interrupt
000003d4 g     F .text	00000014 startup__initialize_fpu
10001342 g     O .bss	00000001 __lock___dd_hash_mutex
000091c8 g     F .text	00000080 __smakebuf_r
10001343 g     O .bss	00000001 __lock___tz_mutex
00006a52 g     F .text	00000010 strlen
000038d8 g     F .text	00000028 disk_read
000004b0 g     F .text	0000002c pxPortInitialiseStack
000060e4 g     F .text	00000228 _printf_i
00002ce4 g     F .text	00000050 uart__get
0000aa18 g     F .text	00000010 .hidden __aeabi_cdcmpeq
00002308 g     F .text	00000024 board_io__get_led0
0000a97c g     F .text	0000008a .hidden __gedf2
00008b44 g     F .text	00000446 __gethex
10001320 g     O .bss	00000004 __malloc_sbrk_start
00001fc2 g     F .text	00000018 sl_string__append_char
00002894 g     F .text	00000050 i2c__write_slave_data
00003e2e g     F .text	00000040 delay__us
00002044 g     F .text	00000044 sl_string__begins_with_whole_word
00006a38 g     F .text	0000001a strchr
00004cc4 g     F .text	00000042 .hidden __aeabi_f2d
000055d4 g     F .text	00000010 fputs
00000504 g     F .text	00000044 vPortEnterCritical
0000294c g     F .text	00000024 lpc_peripheral__turn_on_power_to
1000131c g     O .bss	00000004 __malloc_free_list
00002ebe g     F .text	0000000a app_cli__add_command_handler
00004898 g     F .text	00000012 setup_LED_Matrix
00004a04 g     F .text	0000027a .hidden __subdf3
00005834 g     F .text	00000250 _vfprintf_r
000000e4 g       .text	00000000 __preinit_array_start
00002598 g     F .text	00000010 hw_timer__get_value
000094f0 g     F .text	00000060 __lo0bits
00001dec g     F .text	00000028 vRunTimeStatIsrEntry
000000e4 g     F .text	00000074 entry_point
00002474 g     F .text	0000001c gpio__construct_as_output
00000c3e g     F .text	00000024 xQueueCreateMutex
100001cc g     O .data	0000016c __global_locale
00001f36 g     F .text	00000054 sl_string__insert_at
00003088 g     F .text	0000007c sj2_cli__init
00002ade g     F .text	00000006 ssp2__dma_read_block
10001344 g     O .bss	00000001 __lock___sfp_recursive_mutex
00000d20 g     F .text	000000a4 xQueueGiveFromISR
000020aa g     F .text	00000038 sl_string__erase_after
0000ac14 g     F .text	00000010 _close
00004384 g     F .text	00000308 updateDisplay
00005620 g     F .text	00000010 free
000032b4 g     F .text	00000048 cli__i2c
0000891c g     F .text	0000000c __sinit_lock_acquire
0000630c  w    F .text	000003c0 _scanf_float
000093be g     F .text	00000076 __multadd
00009390 g     F .text	0000002e _Bfree
00001e94 g     F .text	00000006 sl_string__clear
0000409c g     F .text	0000001c Adafruit_GFX_init
0000496c g     F .text	00000010 vApplicationIdleHook



Disassembly of section .text:

00000000 <interrupt_vector_table>:
__base_flash():
       0:	00 00 01 10 e5 00 00 00 75 01 00 00 59 01 00 00     ........u...Y...
      10:	75 01 00 00 75 01 00 00 75 01 00 00 75 01 00 00     u...u...u...u...
      20:	75 01 00 00 75 01 00 00 75 01 00 00 01 04 00 00     u...u...u.......
      30:	75 01 00 00 75 01 00 00 13 04 00 00 25 04 00 00     u...u.......%...
      40:	19 29 00 00 19 29 00 00 19 29 00 00 19 29 00 00     .)...)...)...)..
      50:	19 29 00 00 19 29 00 00 19 29 00 00 19 29 00 00     .)...)...)...)..
      60:	19 29 00 00 19 29 00 00 19 29 00 00 19 29 00 00     .)...)...)...)..
      70:	19 29 00 00 19 29 00 00 19 29 00 00 19 29 00 00     .)...)...)...)..
      80:	19 29 00 00 19 29 00 00 19 29 00 00 19 29 00 00     .)...)...)...)..
      90:	19 29 00 00 19 29 00 00 19 29 00 00 19 29 00 00     .)...)...)...)..
      a0:	19 29 00 00 19 29 00 00 19 29 00 00 19 29 00 00     .)...)...)...)..
      b0:	19 29 00 00 19 29 00 00 19 29 00 00 19 29 00 00     .)...)...)...)..
      c0:	19 29 00 00 19 29 00 00 19 29 00 00 19 29 00 00     .)...)...)...)..
      d0:	19 29 00 00 19 29 00 00 19 29 00 00 19 29 00 00     .)...)...)...)..
      e0:	19 29 00 00                                         .)..

000000e4 <entry_point>:
entry_point():
C:\road_max_fury/lpc40xx_freertos/entry_point.c:14

extern void main(void);
static void entry_point__halt(void);
static void entry_point__handle_crash_report(void);

void entry_point(void) {
      e4:	b508      	push	{r3, lr}
C:\road_max_fury/lpc40xx_freertos/entry_point.c:15
  startup__initialize_ram();
      e6:	f000 f957 	bl	398 <startup__initialize_ram>
C:\road_max_fury/lpc40xx_freertos/entry_point.c:16
  startup__initialize_fpu();
      ea:	f000 f973 	bl	3d4 <startup__initialize_fpu>
C:\road_max_fury/lpc40xx_freertos/entry_point.c:17
  startup__initialize_interrupts();
      ee:	f000 f97b 	bl	3e8 <startup__initialize_interrupts>
C:\road_max_fury/lpc40xx_freertos/entry_point.c:19

  clock__initialize_system_clock_96mhz();
      f2:	f000 f89b 	bl	22c <clock__initialize_system_clock_96mhz>
C:\road_max_fury/lpc40xx_freertos/entry_point.c:20
  sys_time__init(clock__get_peripheral_clock_hz());
      f6:	f000 f895 	bl	224 <clock__get_peripheral_clock_hz>
      fa:	f003 ff85 	bl	4008 <sys_time__init>
C:\road_max_fury/lpc40xx_freertos/entry_point.c:24

  // Peripherals init initializes UART and then we can print the crash report if
  // applicable
  peripherals_init();
      fe:	f003 febd 	bl	3e7c <peripherals_init>
entry_point__handle_crash_report():
C:\road_max_fury/lpc40xx_freertos/entry_point.c:44
  while (1) {
  }
}

static void entry_point__handle_crash_report(void) {
  if (crash__report_if_occurred()) {
     102:	f000 f8bf 	bl	284 <crash__report_if_occurred>
     106:	b140      	cbz	r0, 11a <entry_point+0x36>
C:\road_max_fury/lpc40xx_freertos/entry_point.c:45
    while (sys_time__get_uptime_ms() < 5000) {
     108:	f241 3487 	movw	r4, #4999	; 0x1387
     10c:	2500      	movs	r5, #0
     10e:	f003 ffa7 	bl	4060 <sys_time__get_uptime_ms>
     112:	428d      	cmp	r5, r1
     114:	bf08      	it	eq
     116:	4284      	cmpeq	r4, r0
     118:	d2f9      	bcs.n	10e <entry_point+0x2a>
entry_point():
C:\road_max_fury/lpc40xx_freertos/entry_point.c:27
  if (!sensors__init()) {
     11a:	f003 fe86 	bl	3e2a <sensors__init>
     11e:	b918      	cbnz	r0, 128 <entry_point+0x44>
C:\road_max_fury/lpc40xx_freertos/entry_point.c:28
    printf("\n%s(): WARNING: Sensor errors on this board\n", __FUNCTION__);
     120:	4908      	ldr	r1, [pc, #32]	; (144 <entry_point+0x60>)
     122:	4809      	ldr	r0, [pc, #36]	; (148 <entry_point+0x64>)
     124:	f006 fad2 	bl	66cc <iprintf>
C:\road_max_fury/lpc40xx_freertos/entry_point.c:31
  printf("\n%s(): Entering main()\n", __FUNCTION__);
     128:	4906      	ldr	r1, [pc, #24]	; (144 <entry_point+0x60>)
     12a:	4808      	ldr	r0, [pc, #32]	; (14c <entry_point+0x68>)
     12c:	f006 face 	bl	66cc <iprintf>
C:\road_max_fury/lpc40xx_freertos/entry_point.c:32
  main();
     130:	f004 fbbc 	bl	48ac <main>
entry_point__halt():
C:\road_max_fury/lpc40xx_freertos/entry_point.c:38
  fprintf(stderr, "ERROR: main() should never return, program has been halted");
     134:	4b06      	ldr	r3, [pc, #24]	; (150 <entry_point+0x6c>)
     136:	4807      	ldr	r0, [pc, #28]	; (154 <entry_point+0x70>)
     138:	681b      	ldr	r3, [r3, #0]
     13a:	68d9      	ldr	r1, [r3, #12]
     13c:	f005 fa4a 	bl	55d4 <fputs>
C:\road_max_fury/lpc40xx_freertos/entry_point.c:40
  }
     140:	e7fe      	b.n	140 <entry_point+0x5c>
     142:	bf00      	nop
     144:	0000ac44 	.word	0x0000ac44
     148:	0000ac50 	.word	0x0000ac50
     14c:	0000ac7d 	.word	0x0000ac7d
     150:	10000164 	.word	0x10000164
     154:	0000ac95 	.word	0x0000ac95

00000158 <isr_hard_fault>:
isr_hard_fault():
C:\road_max_fury/lpc40xx_freertos/interrupt_vector_table.c:137
/**
 * Explanation of register usage dictated by ARM's EABI:
 * https://stackoverflow.com/questions/261419/what-registers-to-save-in-the-arm-c-calling-convention
 */
static void isr_hard_fault(void) {
  __asm__ volatile("tst lr, #4                                    \n"
     158:	f01e 0f04 	tst.w	lr, #4
     15c:	bf0c      	ite	eq
     15e:	f3ef 8008 	mrseq	r0, MSP
     162:	f3ef 8009 	mrsne	r0, PSP
     166:	6981      	ldr	r1, [r0, #24]
     168:	4a00      	ldr	r2, [pc, #0]	; (16c <handler_address>)
     16a:	4710      	bx	r2

0000016c <handler_address>:
     16c:	000001d1 	.word	0x000001d1
C:\road_max_fury/lpc40xx_freertos/interrupt_vector_table.c:145
                   "mrsne r0, psp                                 \n"
                   "ldr r1, [r0, #24]                             \n"
                   "ldr r2, handler_address                       \n"
                   "bx r2                                         \n"
                   "handler_address: .word isr_hard_fault_handler \n");
}
     170:	4770      	bx	lr
handler_address():
     172:	Address 0x00000172 is out of bounds.


00000174 <halt>:
halt():
C:\road_max_fury/lpc40xx_freertos/interrupt_vector_table.c:106
static void halt(void) {
     174:	b538      	push	{r3, r4, r5, lr}
C:\road_max_fury/lpc40xx_freertos/interrupt_vector_table.c:111
  fprintf(stderr, "Unexpected CPU exception ");
     176:	4c0f      	ldr	r4, [pc, #60]	; (1b4 <halt+0x40>)
C:\road_max_fury/lpc40xx_freertos/interrupt_vector_table.c:110
  const unsigned isr_num = (*((uint8_t *)0xE000ED04));
     178:	4b0f      	ldr	r3, [pc, #60]	; (1b8 <halt+0x44>)
C:\road_max_fury/lpc40xx_freertos/interrupt_vector_table.c:111
  fprintf(stderr, "Unexpected CPU exception ");
     17a:	4810      	ldr	r0, [pc, #64]	; (1bc <halt+0x48>)
C:\road_max_fury/lpc40xx_freertos/interrupt_vector_table.c:110
  const unsigned isr_num = (*((uint8_t *)0xE000ED04));
     17c:	781d      	ldrb	r5, [r3, #0]
C:\road_max_fury/lpc40xx_freertos/interrupt_vector_table.c:111
  fprintf(stderr, "Unexpected CPU exception ");
     17e:	6823      	ldr	r3, [r4, #0]
     180:	68d9      	ldr	r1, [r3, #12]
     182:	f005 fa27 	bl	55d4 <fputs>
C:\road_max_fury/lpc40xx_freertos/interrupt_vector_table.c:112
  fprintf(stderr, "%u (interrupt) has occured and the program will now halt\n",
     186:	6823      	ldr	r3, [r4, #0]
     188:	490d      	ldr	r1, [pc, #52]	; (1c0 <halt+0x4c>)
     18a:	68d8      	ldr	r0, [r3, #12]
     18c:	462a      	mov	r2, r5
     18e:	f005 f9a9 	bl	54e4 <fiprintf>
C:\road_max_fury/lpc40xx_freertos/interrupt_vector_table.c:115
  if (isr_num < 16) {
     192:	2d0f      	cmp	r5, #15
C:\road_max_fury/lpc40xx_freertos/interrupt_vector_table.c:121
    fprintf(stderr, "Exception appears to be '%s'\n", table[isr_num]);
     194:	6823      	ldr	r3, [r4, #0]
C:\road_max_fury/lpc40xx_freertos/interrupt_vector_table.c:115
  if (isr_num < 16) {
     196:	d807      	bhi.n	1a8 <halt+0x34>
C:\road_max_fury/lpc40xx_freertos/interrupt_vector_table.c:121
    fprintf(stderr, "Exception appears to be '%s'\n", table[isr_num]);
     198:	4a0a      	ldr	r2, [pc, #40]	; (1c4 <halt+0x50>)
     19a:	490b      	ldr	r1, [pc, #44]	; (1c8 <halt+0x54>)
     19c:	f852 2025 	ldr.w	r2, [r2, r5, lsl #2]
     1a0:	68d8      	ldr	r0, [r3, #12]
     1a2:	f005 f99f 	bl	54e4 <fiprintf>
C:\road_max_fury/lpc40xx_freertos/interrupt_vector_table.c:128 (discriminator 1)
    ;
     1a6:	e7fe      	b.n	1a6 <halt+0x32>
C:\road_max_fury/lpc40xx_freertos/interrupt_vector_table.c:123
    fprintf(stderr, "Did you register the interrupt correctly using "
     1a8:	68d9      	ldr	r1, [r3, #12]
     1aa:	4808      	ldr	r0, [pc, #32]	; (1cc <halt+0x58>)
     1ac:	f005 fa12 	bl	55d4 <fputs>
     1b0:	e7f9      	b.n	1a6 <halt+0x32>
     1b2:	bf00      	nop
     1b4:	10000164 	.word	0x10000164
     1b8:	e000ed04 	.word	0xe000ed04
     1bc:	0000acd0 	.word	0x0000acd0
     1c0:	0000acea 	.word	0x0000acea
     1c4:	0000addc 	.word	0x0000addc
     1c8:	0000ad24 	.word	0x0000ad24
     1cc:	0000ad42 	.word	0x0000ad42

000001d0 <isr_hard_fault_handler>:
isr_hard_fault_handler():
C:\road_max_fury/lpc40xx_freertos/interrupt_vector_table.c:147

void isr_hard_fault_handler(unsigned long *hardfault_args) {
     1d0:	b510      	push	{r4, lr}
     1d2:	4604      	mov	r4, r0
C:\road_max_fury/lpc40xx_freertos/interrupt_vector_table.c:148
  crash__registers_s *c = crash__record_get();
     1d4:	f000 f84a 	bl	26c <crash__record_get>
C:\road_max_fury/lpc40xx_freertos/interrupt_vector_table.c:150

  c->registers[0] = ((unsigned long)hardfault_args[0]);
     1d8:	6823      	ldr	r3, [r4, #0]
     1da:	6083      	str	r3, [r0, #8]
C:\road_max_fury/lpc40xx_freertos/interrupt_vector_table.c:151
  c->registers[1] = ((unsigned long)hardfault_args[1]);
     1dc:	6863      	ldr	r3, [r4, #4]
     1de:	60c3      	str	r3, [r0, #12]
C:\road_max_fury/lpc40xx_freertos/interrupt_vector_table.c:152
  c->registers[2] = ((unsigned long)hardfault_args[2]);
     1e0:	68a3      	ldr	r3, [r4, #8]
     1e2:	6103      	str	r3, [r0, #16]
C:\road_max_fury/lpc40xx_freertos/interrupt_vector_table.c:153
  c->registers[3] = ((unsigned long)hardfault_args[3]);
     1e4:	68e3      	ldr	r3, [r4, #12]
     1e6:	6143      	str	r3, [r0, #20]
C:\road_max_fury/lpc40xx_freertos/interrupt_vector_table.c:155

  c->r12 = ((unsigned long)hardfault_args[4]);
     1e8:	6923      	ldr	r3, [r4, #16]
     1ea:	6243      	str	r3, [r0, #36]	; 0x24
C:\road_max_fury/lpc40xx_freertos/interrupt_vector_table.c:156
  c->lr = ((unsigned long)hardfault_args[5]) - 1;
     1ec:	6963      	ldr	r3, [r4, #20]
     1ee:	3b01      	subs	r3, #1
     1f0:	61c3      	str	r3, [r0, #28]
C:\road_max_fury/lpc40xx_freertos/interrupt_vector_table.c:157
  c->pc = ((unsigned long)hardfault_args[6]);
     1f2:	69a3      	ldr	r3, [r4, #24]
     1f4:	6183      	str	r3, [r0, #24]
C:\road_max_fury/lpc40xx_freertos/interrupt_vector_table.c:158
  c->psr = ((unsigned long)hardfault_args[7]);
     1f6:	69e3      	ldr	r3, [r4, #28]
     1f8:	6203      	str	r3, [r0, #32]
__DSB():
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\arm-software\cmsis\core/cmsis_gcc.h:946
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
     1fa:	f3bf 8f4f 	dsb	sy
__NVIC_SystemReset():
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\arm-software\cmsis\core/core_cm4.h:1938
__NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
{
  __DSB();                                                          /* Ensure all outstanding memory accesses included
                                                                       buffered write are completed before reset */
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
                           (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
     1fe:	4905      	ldr	r1, [pc, #20]	; (214 <isr_hard_fault_handler+0x44>)
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\arm-software\cmsis\core/core_cm4.h:1937
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
     200:	4b05      	ldr	r3, [pc, #20]	; (218 <isr_hard_fault_handler+0x48>)
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\arm-software\cmsis\core/core_cm4.h:1938
                           (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
     202:	68ca      	ldr	r2, [r1, #12]
     204:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\arm-software\cmsis\core/core_cm4.h:1937
  SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
     208:	4313      	orrs	r3, r2
     20a:	60cb      	str	r3, [r1, #12]
__DSB():
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\arm-software\cmsis\core/cmsis_gcc.h:946
     20c:	f3bf 8f4f 	dsb	sy
__NVIC_SystemReset():
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\arm-software\cmsis\core/core_cm4.h:1944
                            SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchanged */
  __DSB();                                                          /* Ensure completion of memory access */

  for(;;)                                                           /* wait until reset */
  {
    __NOP();
     210:	bf00      	nop
     212:	e7fd      	b.n	210 <isr_hard_fault_handler+0x40>
     214:	e000ed00 	.word	0xe000ed00
     218:	05fa0004 	.word	0x05fa0004

0000021c <clock__get_core_clock_hz>:
clock__get_core_clock_hz():
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel/clock.c:13
 *
 * We use fixed CPU frequency because clock__initialize_system_clock_96mhz()
 * configures fixed CPU frequency. It is rare that anyone needs to change this
 * (ever).
 */
uint32_t clock__get_core_clock_hz(void) { return (UINT32_C(96) * 1000 * 1000); }
     21c:	4800      	ldr	r0, [pc, #0]	; (220 <clock__get_core_clock_hz+0x4>)
     21e:	4770      	bx	lr
     220:	05b8d800 	.word	0x05b8d800

00000224 <clock__get_peripheral_clock_hz>:
clock__get_peripheral_clock_hz():
     224:	4800      	ldr	r0, [pc, #0]	; (228 <clock__get_peripheral_clock_hz+0x4>)
     226:	4770      	bx	lr
     228:	05b8d800 	.word	0x05b8d800

0000022c <clock__initialize_system_clock_96mhz>:
clock__initialize_system_clock_96mhz():
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel/clock.c:24

void clock__initialize_system_clock_96mhz(void) {
  // Step 3 from UM: Write PLL new setup values to the PLL CFG register
  const uint8_t multiplier = 8; // 8 * 12Mhz = 96Mhz

  LPC_SC->PLL0CFG = ((multiplier - 1) << 0);
     22c:	4b0e      	ldr	r3, [pc, #56]	; (268 <clock__initialize_system_clock_96mhz+0x3c>)
     22e:	2207      	movs	r2, #7
     230:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel/clock.c:28
  LPC_SC->PLL0CON = 1; // PLL enable

  // Necessary feed sequence to ensure the changes are intentional
  LPC_SC->PLL0FEED = 0xAA;
     234:	21aa      	movs	r1, #170	; 0xaa
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel/clock.c:25
  LPC_SC->PLL0CON = 1; // PLL enable
     236:	2201      	movs	r2, #1
     238:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel/clock.c:28
  LPC_SC->PLL0FEED = 0xAA;
     23c:	f8c3 108c 	str.w	r1, [r3, #140]	; 0x8c
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel/clock.c:29
  LPC_SC->PLL0FEED = 0x55;
     240:	2155      	movs	r1, #85	; 0x55
     242:	f8c3 108c 	str.w	r1, [r3, #140]	; 0x8c
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel/clock.c:32

  // Step 4 from UM: Setup necessary clock dividers
  LPC_SC->PCLKSEL = 1; // APB peripherals receive clock/1 (divided by 1)
     246:	f8c3 21a8 	str.w	r2, [r3, #424]	; 0x1a8
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel/clock.c:36 (discriminator 1)

  // Step 5 from UM: Wait for PLL to lock
  const uint32_t pll_lock_bit_mask = (1 << 10);
  while (!(LPC_SC->PLL0STAT & pll_lock_bit_mask)) {
     24a:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
     24e:	0552      	lsls	r2, r2, #21
     250:	d5fb      	bpl.n	24a <clock__initialize_system_clock_96mhz+0x1e>
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel/clock.c:42
    ;
  }

  // Before we switch to the faster clock, we need to configure flash memory
  // access properly with respect to core clock
  uint32_t flash_cfg = LPC_SC->FLASHCFG;
     252:	681a      	ldr	r2, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel/clock.c:43
  flash_cfg &= ~(0xF << 12);
     254:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel/clock.c:44
  flash_cfg |= (0x4 << 12); // 5 cpu clocks for use with up to 100Mhz
     258:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel/clock.c:45
  LPC_SC->FLASHCFG = flash_cfg;
     25c:	601a      	str	r2, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel/clock.c:49

  // Step 6 from UM: Connect the PLL to the CPU
  const uint32_t cpu_on_pll_clock = (1 << 8) | (1 << 0);
  LPC_SC->CCLKSEL = cpu_on_pll_clock; // CPU uses PLL clock (Table 20)
     25e:	f240 1201 	movw	r2, #257	; 0x101
     262:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel/clock.c:50
}
     266:	4770      	bx	lr
     268:	400fc000 	.word	0x400fc000

0000026c <crash__record_get>:
crash__record_get():
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel/crash.c:18

static void crash__clear_record(void);

crash__registers_s *crash__record_get(void) {
  // Record the crash signature first before returning the struct
  crash_registers.signature = crash__signature;
     26c:	4802      	ldr	r0, [pc, #8]	; (278 <crash__record_get+0xc>)
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel/crash.c:19
  crash_registers.signature_inverted = ~crash__signature;
     26e:	4a03      	ldr	r2, [pc, #12]	; (27c <crash__record_get+0x10>)
     270:	4b03      	ldr	r3, [pc, #12]	; (280 <crash__record_get+0x14>)
     272:	e9c0 2300 	strd	r2, r3, [r0]
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel/crash.c:22

  return &crash_registers;
}
     276:	4770      	bx	lr
     278:	20000000 	.word	0x20000000
     27c:	deadbeef 	.word	0xdeadbeef
     280:	21524110 	.word	0x21524110

00000284 <crash__report_if_occurred>:
crash__report_if_occurred():
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel/crash.c:24

bool crash__report_if_occurred(void) {
     284:	b538      	push	{r3, r4, r5, lr}
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel/crash.c:27
  bool crash_occured = false;

  if (crash__signature == crash_registers.signature &&
     286:	4c22      	ldr	r4, [pc, #136]	; (310 <crash__report_if_occurred+0x8c>)
     288:	4b22      	ldr	r3, [pc, #136]	; (314 <crash__report_if_occurred+0x90>)
     28a:	6822      	ldr	r2, [r4, #0]
     28c:	429a      	cmp	r2, r3
     28e:	d13d      	bne.n	30c <crash__report_if_occurred+0x88>
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel/crash.c:27 (discriminator 1)
     290:	6862      	ldr	r2, [r4, #4]
     292:	4b21      	ldr	r3, [pc, #132]	; (318 <crash__report_if_occurred+0x94>)
     294:	429a      	cmp	r2, r3
     296:	d139      	bne.n	30c <crash__report_if_occurred+0x88>
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel/crash.c:31
      ~crash__signature == crash_registers.signature_inverted) {
    crash_occured = true;

    fprintf(stderr, "----------------------------------------\n"
     298:	4d20      	ldr	r5, [pc, #128]	; (31c <crash__report_if_occurred+0x98>)
     29a:	4821      	ldr	r0, [pc, #132]	; (320 <crash__report_if_occurred+0x9c>)
     29c:	682b      	ldr	r3, [r5, #0]
     29e:	68d9      	ldr	r1, [r3, #12]
     2a0:	f005 f998 	bl	55d4 <fputs>
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel/crash.c:34
                    "---- WARNING: We crashed previously ----\n");

    fprintf(stderr, "  PC: 0x%08lX\n", crash_registers.pc);
     2a4:	682b      	ldr	r3, [r5, #0]
     2a6:	69a2      	ldr	r2, [r4, #24]
     2a8:	491e      	ldr	r1, [pc, #120]	; (324 <crash__report_if_occurred+0xa0>)
     2aa:	68d8      	ldr	r0, [r3, #12]
     2ac:	f005 f91a 	bl	54e4 <fiprintf>
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel/crash.c:35
    fprintf(stderr, "  LR: 0x%08lX\n", crash_registers.lr);
     2b0:	682b      	ldr	r3, [r5, #0]
     2b2:	69e2      	ldr	r2, [r4, #28]
     2b4:	491c      	ldr	r1, [pc, #112]	; (328 <crash__report_if_occurred+0xa4>)
     2b6:	68d8      	ldr	r0, [r3, #12]
     2b8:	f005 f914 	bl	54e4 <fiprintf>
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel/crash.c:36
    fprintf(stderr, " PSR: 0x%08lX\n", crash_registers.psr);
     2bc:	682b      	ldr	r3, [r5, #0]
     2be:	6a22      	ldr	r2, [r4, #32]
     2c0:	491a      	ldr	r1, [pc, #104]	; (32c <crash__report_if_occurred+0xa8>)
     2c2:	68d8      	ldr	r0, [r3, #12]
     2c4:	f005 f90e 	bl	54e4 <fiprintf>
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel/crash.c:38

    fprintf(stderr, "  R0: 0x%08lX\n", crash_registers.registers[0]);
     2c8:	682b      	ldr	r3, [r5, #0]
     2ca:	68a2      	ldr	r2, [r4, #8]
     2cc:	4918      	ldr	r1, [pc, #96]	; (330 <crash__report_if_occurred+0xac>)
     2ce:	68d8      	ldr	r0, [r3, #12]
     2d0:	f005 f908 	bl	54e4 <fiprintf>
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel/crash.c:39
    fprintf(stderr, "  R1: 0x%08lX\n", crash_registers.registers[1]);
     2d4:	682b      	ldr	r3, [r5, #0]
     2d6:	68e2      	ldr	r2, [r4, #12]
     2d8:	4916      	ldr	r1, [pc, #88]	; (334 <crash__report_if_occurred+0xb0>)
     2da:	68d8      	ldr	r0, [r3, #12]
     2dc:	f005 f902 	bl	54e4 <fiprintf>
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel/crash.c:40
    fprintf(stderr, "  R2: 0x%08lX\n", crash_registers.registers[2]);
     2e0:	682b      	ldr	r3, [r5, #0]
     2e2:	6922      	ldr	r2, [r4, #16]
     2e4:	4914      	ldr	r1, [pc, #80]	; (338 <crash__report_if_occurred+0xb4>)
     2e6:	68d8      	ldr	r0, [r3, #12]
     2e8:	f005 f8fc 	bl	54e4 <fiprintf>
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel/crash.c:41
    fprintf(stderr, "  R3: 0x%08lX\n", crash_registers.registers[3]);
     2ec:	682b      	ldr	r3, [r5, #0]
     2ee:	6962      	ldr	r2, [r4, #20]
     2f0:	4912      	ldr	r1, [pc, #72]	; (33c <crash__report_if_occurred+0xb8>)
     2f2:	68d8      	ldr	r0, [r3, #12]
     2f4:	f005 f8f6 	bl	54e4 <fiprintf>
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel/crash.c:43

    fprintf(stderr,
     2f8:	682b      	ldr	r3, [r5, #0]
     2fa:	4811      	ldr	r0, [pc, #68]	; (340 <crash__report_if_occurred+0xbc>)
     2fc:	68d9      	ldr	r1, [r3, #12]
     2fe:	f005 f969 	bl	55d4 <fputs>
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel/crash.c:29
    crash_occured = true;
     302:	2001      	movs	r0, #1
crash__clear_record():
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel/crash.c:56
  crash__clear_record();
  return crash_occured;
}

static void crash__clear_record(void) {
  crash_registers.signature = 0;
     304:	2300      	movs	r3, #0
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel/crash.c:57
  crash_registers.signature_inverted = 0;
     306:	e9c4 3300 	strd	r3, r3, [r4]
crash__report_if_occurred():
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel/crash.c:53
}
     30a:	bd38      	pop	{r3, r4, r5, pc}
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel/crash.c:25
  bool crash_occured = false;
     30c:	2000      	movs	r0, #0
     30e:	e7f9      	b.n	304 <crash__report_if_occurred+0x80>
     310:	20000000 	.word	0x20000000
     314:	deadbeef 	.word	0xdeadbeef
     318:	21524110 	.word	0x21524110
     31c:	10000164 	.word	0x10000164
     320:	0000ae1c 	.word	0x0000ae1c
     324:	0000ae6f 	.word	0x0000ae6f
     328:	0000ae7e 	.word	0x0000ae7e
     32c:	0000ae8d 	.word	0x0000ae8d
     330:	0000ae9c 	.word	0x0000ae9c
     334:	0000aeab 	.word	0x0000aeab
     338:	0000aeba 	.word	0x0000aeba
     33c:	0000aec9 	.word	0x0000aec9
     340:	0000aed8 	.word	0x0000aed8

00000344 <_sbrk>:
sbrk_ram1():
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\newlib/syscall.c:32
  // These symbols are defined by the linker script
  extern uint32_t _heap_start;
  extern uint32_t _heap_end;

  static void *next_free_heap = (void *)&_heap_start;
  void *memory_to_return = next_free_heap;
     344:	4a0e      	ldr	r2, [pc, #56]	; (380 <_sbrk+0x3c>)
     346:	6813      	ldr	r3, [r2, #0]
_sbrk():
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\newlib/syscall.c:12
void *_sbrk(size_t requested_byte_count) {
     348:	b510      	push	{r4, lr}
sbrk_ram1():
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\newlib/syscall.c:43
   * couple of reasons:
   *   1. Maybe we still have a small chunk we could still serve in the future
   *   2. We do not want to increment next_free_heap and go out of bounds to
   * wrap
   */
  if (!((next_free_heap >= (void *)&_heap_start) &&
     34a:	4c0e      	ldr	r4, [pc, #56]	; (384 <_sbrk+0x40>)
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\newlib/syscall.c:33
  next_free_heap += requested_byte_count;
     34c:	1819      	adds	r1, r3, r0
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\newlib/syscall.c:43
  if (!((next_free_heap >= (void *)&_heap_start) &&
     34e:	42a1      	cmp	r1, r4
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\newlib/syscall.c:33
  next_free_heap += requested_byte_count;
     350:	6011      	str	r1, [r2, #0]
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\newlib/syscall.c:43
  if (!((next_free_heap >= (void *)&_heap_start) &&
     352:	d302      	bcc.n	35a <_sbrk+0x16>
     354:	4c0c      	ldr	r4, [pc, #48]	; (388 <_sbrk+0x44>)
     356:	42a1      	cmp	r1, r4
     358:	d30b      	bcc.n	372 <_sbrk+0x2e>
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\newlib/syscall.c:46
        (next_free_heap < (void *)&_heap_end))) {
    memory_to_return = NULL;
    next_free_heap -= requested_byte_count;
     35a:	6013      	str	r3, [r2, #0]
sbrk_ram2():
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\newlib/syscall.c:57
static void *sbrk_ram2(size_t requested_byte_count) {
  extern uint32_t __start_of_unused_ram64;
  extern uint32_t __end_of_unused_ram64;

  static void *next_free_heap = (void *)&__start_of_unused_ram64;
  void *memory_to_return = next_free_heap;
     35c:	4a0b      	ldr	r2, [pc, #44]	; (38c <_sbrk+0x48>)
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\newlib/syscall.c:60
  next_free_heap += requested_byte_count;

  if (!((next_free_heap >= (void *)&__start_of_unused_ram64) &&
     35e:	490c      	ldr	r1, [pc, #48]	; (390 <_sbrk+0x4c>)
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\newlib/syscall.c:57
  void *memory_to_return = next_free_heap;
     360:	6813      	ldr	r3, [r2, #0]
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\newlib/syscall.c:58
  next_free_heap += requested_byte_count;
     362:	4418      	add	r0, r3
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\newlib/syscall.c:60
  if (!((next_free_heap >= (void *)&__start_of_unused_ram64) &&
     364:	4288      	cmp	r0, r1
     366:	d308      	bcc.n	37a <_sbrk+0x36>
     368:	490a      	ldr	r1, [pc, #40]	; (394 <_sbrk+0x50>)
     36a:	4288      	cmp	r0, r1
     36c:	d205      	bcs.n	37a <_sbrk+0x36>
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\newlib/syscall.c:58
  next_free_heap += requested_byte_count;
     36e:	6010      	str	r0, [r2, #0]
     370:	e001      	b.n	376 <_sbrk+0x32>
_sbrk():
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\newlib/syscall.c:19
  if (NULL == memory_to_return) {
     372:	2b00      	cmp	r3, #0
     374:	d0f2      	beq.n	35c <_sbrk+0x18>
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\newlib/syscall.c:24
}
     376:	4618      	mov	r0, r3
     378:	bd10      	pop	{r4, pc}
sbrk_ram2():
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\newlib/syscall.c:62
        (next_free_heap < (void *)&__end_of_unused_ram64))) {
    memory_to_return = NULL;
     37a:	2300      	movs	r3, #0
_sbrk():
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\newlib/syscall.c:23
  return memory_to_return;
     37c:	e7fb      	b.n	376 <_sbrk+0x32>
     37e:	bf00      	nop
     380:	10000000 	.word	0x10000000
     384:	20000028 	.word	0x20000028
     388:	20008000 	.word	0x20008000
     38c:	10000004 	.word	0x10000004
     390:	1000134c 	.word	0x1000134c
     394:	10010000 	.word	0x10010000

00000398 <startup__initialize_ram>:
startup__init_data_sram():
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\startup/startup.c:62
  extern void *_bdata_vma;
  extern void *_data_end;

  uint8_t *src = (uint8_t *)&_bdata_lma;
  uint8_t *dest = (uint8_t *)&_bdata_vma;
  while (dest < (uint8_t *)&_data_end) {
     398:	4a09      	ldr	r2, [pc, #36]	; (3c0 <startup__initialize_ram+0x28>)
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\startup/startup.c:61
  uint8_t *dest = (uint8_t *)&_bdata_vma;
     39a:	4b0a      	ldr	r3, [pc, #40]	; (3c4 <startup__initialize_ram+0x2c>)
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\startup/startup.c:62
  while (dest < (uint8_t *)&_data_end) {
     39c:	490a      	ldr	r1, [pc, #40]	; (3c8 <startup__initialize_ram+0x30>)
     39e:	428b      	cmp	r3, r1
     3a0:	d305      	bcc.n	3ae <startup__initialize_ram+0x16>
startup__init_bss_sram():
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\startup/startup.c:73

static void startup__init_bss_sram(void) {
  extern void *_bss_start;
  extern void *_bss_end;

  uint8_t *ptr = (uint8_t *)&_bss_start;
     3a2:	4b0a      	ldr	r3, [pc, #40]	; (3cc <startup__initialize_ram+0x34>)
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\startup/startup.c:74
  while (ptr < (uint8_t *)&_bss_end) {
     3a4:	4a0a      	ldr	r2, [pc, #40]	; (3d0 <startup__initialize_ram+0x38>)
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\startup/startup.c:75
    *ptr = 0U;
     3a6:	2100      	movs	r1, #0
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\startup/startup.c:74
  while (ptr < (uint8_t *)&_bss_end) {
     3a8:	4293      	cmp	r3, r2
     3aa:	d305      	bcc.n	3b8 <startup__initialize_ram+0x20>
startup__initialize_ram():
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\startup/startup.c:14
}
     3ac:	4770      	bx	lr
startup__init_data_sram():
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\startup/startup.c:63
    *dest = *src;
     3ae:	f812 0b01 	ldrb.w	r0, [r2], #1
     3b2:	f803 0b01 	strb.w	r0, [r3], #1
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\startup/startup.c:65
    src++;
     3b6:	e7f2      	b.n	39e <startup__initialize_ram+0x6>
startup__init_bss_sram():
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\startup/startup.c:75
    *ptr = 0U;
     3b8:	f803 1b01 	strb.w	r1, [r3], #1
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\startup/startup.c:76
    ptr++;
     3bc:	e7f4      	b.n	3a8 <startup__initialize_ram+0x10>
     3be:	bf00      	nop
     3c0:	0000c074 	.word	0x0000c074
     3c4:	10000000 	.word	0x10000000
     3c8:	10000338 	.word	0x10000338
     3cc:	10000338 	.word	0x10000338
     3d0:	1000134c 	.word	0x1000134c

000003d4 <startup__initialize_fpu>:
startup__initialize_fpu():
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\startup/startup.c:22
  SCB->CPACR |= (0xF << 20); // Set [23:20]
     3d4:	4a03      	ldr	r2, [pc, #12]	; (3e4 <startup__initialize_fpu+0x10>)
     3d6:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
     3da:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
     3de:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\startup/startup.c:23
}
     3e2:	4770      	bx	lr
     3e4:	e000ed00 	.word	0xe000ed00

000003e8 <startup__initialize_interrupts>:
__NVIC_SetPriority():
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\arm-software\cmsis\core/core_cm4.h:1813
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
     3e8:	4804      	ldr	r0, [pc, #16]	; (3fc <startup__initialize_interrupts+0x14>)
startup__initialize_interrupts():
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\startup/startup.c:39
  for (int peripheral = first_peripheral; peripheral <= last_peripheral;
     3ea:	2300      	movs	r3, #0
__NVIC_SetPriority():
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\arm-software\cmsis\core/core_cm4.h:1813
     3ec:	2120      	movs	r1, #32
     3ee:	18c2      	adds	r2, r0, r3
startup__initialize_interrupts():
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\startup/startup.c:40
       peripheral++) {
     3f0:	3301      	adds	r3, #1
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\startup/startup.c:39
  for (int peripheral = first_peripheral; peripheral <= last_peripheral;
     3f2:	2b29      	cmp	r3, #41	; 0x29
__NVIC_SetPriority():
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\arm-software\cmsis\core/core_cm4.h:1813
     3f4:	f882 1300 	strb.w	r1, [r2, #768]	; 0x300
startup__initialize_interrupts():
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\startup/startup.c:39
     3f8:	d1f9      	bne.n	3ee <startup__initialize_interrupts+0x6>
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\startup/startup.c:53
}
     3fa:	4770      	bx	lr
     3fc:	e000e100 	.word	0xe000e100

00000400 <vPortSVCHandler_wrapper>:
vPortSVCHandler_wrapper():
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_interrupt_handlers.c:28
}

/**
 * The *_wrapper() functions are meant to invoke FreeRTOS interrupts, but with run-time statistics hooks
 */
void vPortSVCHandler_wrapper(void) { invoke_function_in_wrapper(vPortSVCHandler); }
     400:	b508      	push	{r3, lr}
invoke_function_in_wrapper():
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_interrupt_handlers.c:20
  vRunTimeStatIsrEntry();
     402:	f001 fcf3 	bl	1dec <vRunTimeStatIsrEntry>
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_interrupt_handlers.c:21
  function();
     406:	f000 f86b 	bl	4e0 <vPortSVCHandler>
vPortSVCHandler_wrapper():
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_interrupt_handlers.c:28
void vPortSVCHandler_wrapper(void) { invoke_function_in_wrapper(vPortSVCHandler); }
     40a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
invoke_function_in_wrapper():
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_interrupt_handlers.c:22
  vRunTimeStatIsrExit();
     40e:	f001 bd01 	b.w	1e14 <vRunTimeStatIsrExit>

00000412 <xPortPendSVHandler_wrapper>:
xPortPendSVHandler_wrapper():
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_interrupt_handlers.c:29
void xPortPendSVHandler_wrapper(void) { invoke_function_in_wrapper(xPortPendSVHandler); }
     412:	b508      	push	{r3, lr}
invoke_function_in_wrapper():
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_interrupt_handlers.c:20
  vRunTimeStatIsrEntry();
     414:	f001 fcea 	bl	1dec <vRunTimeStatIsrEntry>
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_interrupt_handlers.c:21
  function();
     418:	f000 f8aa 	bl	570 <xPortPendSVHandler>
xPortPendSVHandler_wrapper():
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_interrupt_handlers.c:29
void xPortPendSVHandler_wrapper(void) { invoke_function_in_wrapper(xPortPendSVHandler); }
     41c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
invoke_function_in_wrapper():
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_interrupt_handlers.c:22
  vRunTimeStatIsrExit();
     420:	f001 bcf8 	b.w	1e14 <vRunTimeStatIsrExit>

00000424 <xPortSysTickHandler_wrapper>:
xPortSysTickHandler_wrapper():
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_interrupt_handlers.c:30
     424:	b508      	push	{r3, lr}
invoke_function_in_wrapper():
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_interrupt_handlers.c:20
  vRunTimeStatIsrEntry();
     426:	f001 fce1 	bl	1dec <vRunTimeStatIsrEntry>
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_interrupt_handlers.c:21
  function();
     42a:	f000 f8d3 	bl	5d4 <xPortSysTickHandler>
xPortSysTickHandler_wrapper():
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_interrupt_handlers.c:30
     42e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
invoke_function_in_wrapper():
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_interrupt_handlers.c:22
  vRunTimeStatIsrExit();
     432:	f001 bcef 	b.w	1e14 <vRunTimeStatIsrExit>
xPortSysTickHandler_wrapper():
     436:	Address 0x00000436 is out of bounds.


00000438 <prvPortStartFirstTask>:
prvPortStartFirstTask():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:279
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
     438:	4808      	ldr	r0, [pc, #32]	; (45c <prvPortStartFirstTask+0x24>)
     43a:	6800      	ldr	r0, [r0, #0]
     43c:	6800      	ldr	r0, [r0, #0]
     43e:	f380 8808 	msr	MSP, r0
     442:	f04f 0000 	mov.w	r0, #0
     446:	f380 8814 	msr	CONTROL, r0
     44a:	b662      	cpsie	i
     44c:	b661      	cpsie	f
     44e:	f3bf 8f4f 	dsb	sy
     452:	f3bf 8f6f 	isb	sy
     456:	df00      	svc	0
     458:	bf00      	nop
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:293
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
     45a:	0000      	.short	0x0000
     45c:	e000ed08 	.word	0xe000ed08

00000460 <vPortEnableVFP>:
vPortEnableVFP():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:715
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
     460:	f8df 000c 	ldr.w	r0, [pc, #12]	; 470 <vPortEnableVFP+0x10>
     464:	6801      	ldr	r1, [r0, #0]
     466:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
     46a:	6001      	str	r1, [r0, #0]
     46c:	4770      	bx	lr
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:724
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
     46e:	0000      	.short	0x0000
     470:	e000ed88 	.word	0xe000ed88

00000474 <prvTaskExitError>:
prvTaskExitError():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:230
{
     474:	b507      	push	{r0, r1, r2, lr}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:231
volatile uint32_t ulDummy = 0;
     476:	2300      	movs	r3, #0
     478:	9301      	str	r3, [sp, #4]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:239
	configASSERT( uxCriticalNesting == ~0UL );
     47a:	4b0b      	ldr	r3, [pc, #44]	; (4a8 <prvTaskExitError+0x34>)
     47c:	681b      	ldr	r3, [r3, #0]
     47e:	3301      	adds	r3, #1
     480:	d004      	beq.n	48c <prvTaskExitError+0x18>
     482:	490a      	ldr	r1, [pc, #40]	; (4ac <prvTaskExitError+0x38>)
     484:	20ef      	movs	r0, #239	; 0xef
     486:	f004 fa79 	bl	497c <configASSERT_callback>
     48a:	e7fe      	b.n	48a <prvTaskExitError+0x16>
vPortRaiseBASEPRI():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/portmacro.h:195

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
     48c:	f04f 0318 	mov.w	r3, #24
     490:	f383 8811 	msr	BASEPRI, r3
     494:	f3bf 8f6f 	isb	sy
     498:	f3bf 8f4f 	dsb	sy
prvTaskExitError():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:241 (discriminator 1)
	while( ulDummy == 0 )
     49c:	9b01      	ldr	r3, [sp, #4]
     49e:	2b00      	cmp	r3, #0
     4a0:	d0fc      	beq.n	49c <prvTaskExitError+0x28>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:251
}
     4a2:	b003      	add	sp, #12
     4a4:	f85d fb04 	ldr.w	pc, [sp], #4
     4a8:	10000340 	.word	0x10000340
     4ac:	0000afac 	.word	0x0000afac

000004b0 <pxPortInitialiseStack>:
pxPortInitialiseStack():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:208
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
     4b0:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
     4b4:	f840 3c04 	str.w	r3, [r0, #-4]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:212
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
     4b8:	4b07      	ldr	r3, [pc, #28]	; (4d8 <pxPortInitialiseStack+0x28>)
     4ba:	f840 3c0c 	str.w	r3, [r0, #-12]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:210
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
     4be:	f021 0101 	bic.w	r1, r1, #1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:221
	*pxTopOfStack = portINITIAL_EXC_RETURN;
     4c2:	f06f 0302 	mvn.w	r3, #2
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:210
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
     4c6:	f840 1c08 	str.w	r1, [r0, #-8]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:216
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
     4ca:	f840 2c20 	str.w	r2, [r0, #-32]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:221
	*pxTopOfStack = portINITIAL_EXC_RETURN;
     4ce:	f840 3c24 	str.w	r3, [r0, #-36]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:226
}
     4d2:	3844      	subs	r0, #68	; 0x44
     4d4:	4770      	bx	lr
     4d6:	bf00      	nop
     4d8:	00000475 	.word	0x00000475
     4dc:	ffffffff 	.word	0xffffffff

000004e0 <vPortSVCHandler>:
vPortSVCHandler():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:256
	__asm volatile (
     4e0:	4b07      	ldr	r3, [pc, #28]	; (500 <pxCurrentTCBConst2>)
     4e2:	6819      	ldr	r1, [r3, #0]
     4e4:	6808      	ldr	r0, [r1, #0]
     4e6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
     4ea:	f380 8809 	msr	PSP, r0
     4ee:	f3bf 8f6f 	isb	sy
     4f2:	f04f 0000 	mov.w	r0, #0
     4f6:	f380 8811 	msr	BASEPRI, r0
     4fa:	4770      	bx	lr
     4fc:	f3af 8000 	nop.w

00000500 <pxCurrentTCBConst2>:
     500:	10000344 	.word	0x10000344

00000504 <vPortEnterCritical>:
vPortEnterCritical():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:416
{
     504:	b508      	push	{r3, lr}
vPortRaiseBASEPRI():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/portmacro.h:195
     506:	f04f 0318 	mov.w	r3, #24
     50a:	f383 8811 	msr	BASEPRI, r3
     50e:	f3bf 8f6f 	isb	sy
     512:	f3bf 8f4f 	dsb	sy
vPortEnterCritical():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:418
	uxCriticalNesting++;
     516:	4a09      	ldr	r2, [pc, #36]	; (53c <vPortEnterCritical+0x38>)
     518:	6813      	ldr	r3, [r2, #0]
     51a:	3301      	adds	r3, #1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:425
	if( uxCriticalNesting == 1 )
     51c:	2b01      	cmp	r3, #1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:418
	uxCriticalNesting++;
     51e:	6013      	str	r3, [r2, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:425
	if( uxCriticalNesting == 1 )
     520:	d10a      	bne.n	538 <vPortEnterCritical+0x34>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:427
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
     522:	4b07      	ldr	r3, [pc, #28]	; (540 <vPortEnterCritical+0x3c>)
     524:	681b      	ldr	r3, [r3, #0]
     526:	f013 0fff 	tst.w	r3, #255	; 0xff
     52a:	d005      	beq.n	538 <vPortEnterCritical+0x34>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:427 (discriminator 1)
     52c:	4905      	ldr	r1, [pc, #20]	; (544 <vPortEnterCritical+0x40>)
     52e:	f240 10ab 	movw	r0, #427	; 0x1ab
     532:	f004 fa23 	bl	497c <configASSERT_callback>
     536:	e7fe      	b.n	536 <vPortEnterCritical+0x32>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:429
}
     538:	bd08      	pop	{r3, pc}
     53a:	bf00      	nop
     53c:	10000340 	.word	0x10000340
     540:	e000ed04 	.word	0xe000ed04
     544:	0000afc6 	.word	0x0000afc6

00000548 <vPortExitCritical>:
vPortExitCritical():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:434
	configASSERT( uxCriticalNesting );
     548:	4a07      	ldr	r2, [pc, #28]	; (568 <vPortExitCritical+0x20>)
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:433
{
     54a:	b508      	push	{r3, lr}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:434
	configASSERT( uxCriticalNesting );
     54c:	6813      	ldr	r3, [r2, #0]
     54e:	b92b      	cbnz	r3, 55c <vPortExitCritical+0x14>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:434 (discriminator 1)
     550:	4906      	ldr	r1, [pc, #24]	; (56c <vPortExitCritical+0x24>)
     552:	f44f 70d9 	mov.w	r0, #434	; 0x1b2
     556:	f004 fa11 	bl	497c <configASSERT_callback>
     55a:	e7fe      	b.n	55a <vPortExitCritical+0x12>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:435
	uxCriticalNesting--;
     55c:	3b01      	subs	r3, #1
     55e:	6013      	str	r3, [r2, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:436
	if( uxCriticalNesting == 0 )
     560:	b90b      	cbnz	r3, 566 <vPortExitCritical+0x1e>
vPortSetBASEPRI():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/portmacro.h:229
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
     562:	f383 8811 	msr	BASEPRI, r3
vPortExitCritical():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:440
}
     566:	bd08      	pop	{r3, pc}
     568:	10000340 	.word	0x10000340
     56c:	0000affb 	.word	0x0000affb

00000570 <xPortPendSVHandler>:
xPortPendSVHandler():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:447
	__asm volatile
     570:	f3ef 8009 	mrs	r0, PSP
     574:	f3bf 8f6f 	isb	sy
     578:	4b15      	ldr	r3, [pc, #84]	; (5d0 <pxCurrentTCBConst>)
     57a:	681a      	ldr	r2, [r3, #0]
     57c:	f01e 0f10 	tst.w	lr, #16
     580:	bf08      	it	eq
     582:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
     586:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
     58a:	6010      	str	r0, [r2, #0]
     58c:	e92d 0009 	stmdb	sp!, {r0, r3}
     590:	f04f 0018 	mov.w	r0, #24
     594:	f380 8811 	msr	BASEPRI, r0
     598:	f3bf 8f4f 	dsb	sy
     59c:	f3bf 8f6f 	isb	sy
     5a0:	f001 f920 	bl	17e4 <vTaskSwitchContext>
     5a4:	f04f 0000 	mov.w	r0, #0
     5a8:	f380 8811 	msr	BASEPRI, r0
     5ac:	bc09      	pop	{r0, r3}
     5ae:	6819      	ldr	r1, [r3, #0]
     5b0:	6808      	ldr	r0, [r1, #0]
     5b2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
     5b6:	f01e 0f10 	tst.w	lr, #16
     5ba:	bf08      	it	eq
     5bc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
     5c0:	f380 8809 	msr	PSP, r0
     5c4:	f3bf 8f6f 	isb	sy
     5c8:	4770      	bx	lr
     5ca:	bf00      	nop
     5cc:	f3af 8000 	nop.w

000005d0 <pxCurrentTCBConst>:
     5d0:	10000344 	.word	0x10000344

000005d4 <xPortSysTickHandler>:
xPortSysTickHandler():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:501
{
     5d4:	b508      	push	{r3, lr}
vPortRaiseBASEPRI():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/portmacro.h:195
	__asm volatile
     5d6:	f04f 0318 	mov.w	r3, #24
     5da:	f383 8811 	msr	BASEPRI, r3
     5de:	f3bf 8f6f 	isb	sy
     5e2:	f3bf 8f4f 	dsb	sy
xPortSysTickHandler():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:509
		if( xTaskIncrementTick() != pdFALSE )
     5e6:	f000 ffd1 	bl	158c <xTaskIncrementTick>
     5ea:	b118      	cbz	r0, 5f4 <xPortSysTickHandler+0x20>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:513
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
     5ec:	4b03      	ldr	r3, [pc, #12]	; (5fc <xPortSysTickHandler+0x28>)
     5ee:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
     5f2:	601a      	str	r2, [r3, #0]
vPortSetBASEPRI():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/portmacro.h:229
	__asm volatile
     5f4:	2300      	movs	r3, #0
     5f6:	f383 8811 	msr	BASEPRI, r3
xPortSysTickHandler():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:517
}
     5fa:	bd08      	pop	{r3, pc}
     5fc:	e000ed04 	.word	0xe000ed04

00000600 <vPortSetupTimerInterrupt>:
vPortSetupTimerInterrupt():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:692
{
     600:	b510      	push	{r4, lr}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:704
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
     602:	4a08      	ldr	r2, [pc, #32]	; (624 <vPortSetupTimerInterrupt+0x24>)
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:703
	portNVIC_SYSTICK_CTRL_REG = 0UL;
     604:	4c08      	ldr	r4, [pc, #32]	; (628 <vPortSetupTimerInterrupt+0x28>)
     606:	2300      	movs	r3, #0
     608:	6023      	str	r3, [r4, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:704
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
     60a:	6013      	str	r3, [r2, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:707
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
     60c:	f7ff fe06 	bl	21c <clock__get_core_clock_hz>
     610:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
     614:	fbb0 f0f3 	udiv	r0, r0, r3
     618:	4b04      	ldr	r3, [pc, #16]	; (62c <vPortSetupTimerInterrupt+0x2c>)
     61a:	3801      	subs	r0, #1
     61c:	6018      	str	r0, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:708
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
     61e:	2307      	movs	r3, #7
     620:	6023      	str	r3, [r4, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:709
}
     622:	bd10      	pop	{r4, pc}
     624:	e000e018 	.word	0xe000e018
     628:	e000e010 	.word	0xe000e010
     62c:	e000e014 	.word	0xe000e014

00000630 <xPortStartScheduler>:
xPortStartScheduler():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:308
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
     630:	4b33      	ldr	r3, [pc, #204]	; (700 <xPortStartScheduler+0xd0>)
     632:	4a34      	ldr	r2, [pc, #208]	; (704 <xPortStartScheduler+0xd4>)
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:300
{
     634:	b513      	push	{r0, r1, r4, lr}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:308
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
     636:	6819      	ldr	r1, [r3, #0]
     638:	4291      	cmp	r1, r2
     63a:	d105      	bne.n	648 <xPortStartScheduler+0x18>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:308 (discriminator 1)
     63c:	4932      	ldr	r1, [pc, #200]	; (708 <xPortStartScheduler+0xd8>)
     63e:	f44f 709a 	mov.w	r0, #308	; 0x134
     642:	f004 f99b 	bl	497c <configASSERT_callback>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:308 (discriminator 2)
     646:	e7fe      	b.n	646 <xPortStartScheduler+0x16>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:309
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
     648:	681a      	ldr	r2, [r3, #0]
     64a:	4b30      	ldr	r3, [pc, #192]	; (70c <xPortStartScheduler+0xdc>)
     64c:	429a      	cmp	r2, r3
     64e:	d105      	bne.n	65c <xPortStartScheduler+0x2c>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:309 (discriminator 1)
     650:	492f      	ldr	r1, [pc, #188]	; (710 <xPortStartScheduler+0xe0>)
     652:	f240 1035 	movw	r0, #309	; 0x135
     656:	f004 f991 	bl	497c <configASSERT_callback>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:309 (discriminator 3)
     65a:	e7fe      	b.n	65a <xPortStartScheduler+0x2a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:323
		ulOriginalPriority = *pucFirstUserPriorityRegister;
     65c:	4b2d      	ldr	r3, [pc, #180]	; (714 <xPortStartScheduler+0xe4>)
     65e:	781a      	ldrb	r2, [r3, #0]
     660:	b2d2      	uxtb	r2, r2
     662:	9201      	str	r2, [sp, #4]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:327
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
     664:	22ff      	movs	r2, #255	; 0xff
     666:	701a      	strb	r2, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:330
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
     668:	781b      	ldrb	r3, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:333
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
     66a:	4a2b      	ldr	r2, [pc, #172]	; (718 <xPortStartScheduler+0xe8>)
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:330
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
     66c:	b2db      	uxtb	r3, r3
     66e:	f88d 3003 	strb.w	r3, [sp, #3]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:333
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
     672:	f89d 3003 	ldrb.w	r3, [sp, #3]
     676:	f003 0318 	and.w	r3, r3, #24
     67a:	7013      	strb	r3, [r2, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:337
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
     67c:	4a27      	ldr	r2, [pc, #156]	; (71c <xPortStartScheduler+0xec>)
     67e:	2307      	movs	r3, #7
     680:	6013      	str	r3, [r2, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:338
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
     682:	2100      	movs	r1, #0
     684:	f89d 0003 	ldrb.w	r0, [sp, #3]
     688:	0600      	lsls	r0, r0, #24
     68a:	f103 34ff 	add.w	r4, r3, #4294967295
     68e:	d409      	bmi.n	6a4 <xPortStartScheduler+0x74>
     690:	b111      	cbz	r1, 698 <xPortStartScheduler+0x68>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:349
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == __NVIC_PRIO_BITS );
     692:	2b02      	cmp	r3, #2
     694:	6013      	str	r3, [r2, #0]
     696:	d00e      	beq.n	6b6 <xPortStartScheduler+0x86>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:349 (discriminator 1)
     698:	4921      	ldr	r1, [pc, #132]	; (720 <xPortStartScheduler+0xf0>)
     69a:	f240 105d 	movw	r0, #349	; 0x15d
     69e:	f004 f96d 	bl	497c <configASSERT_callback>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:349 (discriminator 4)
     6a2:	e7fe      	b.n	6a2 <xPortStartScheduler+0x72>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:341
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
     6a4:	f89d 3003 	ldrb.w	r3, [sp, #3]
     6a8:	005b      	lsls	r3, r3, #1
     6aa:	b2db      	uxtb	r3, r3
     6ac:	f88d 3003 	strb.w	r3, [sp, #3]
     6b0:	2101      	movs	r1, #1
     6b2:	4623      	mov	r3, r4
     6b4:	e7e6      	b.n	684 <xPortStartScheduler+0x54>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:365
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
     6b6:	f44f 7300 	mov.w	r3, #512	; 0x200
     6ba:	6013      	str	r3, [r2, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:369
		*pucFirstUserPriorityRegister = ulOriginalPriority;
     6bc:	9b01      	ldr	r3, [sp, #4]
     6be:	4a15      	ldr	r2, [pc, #84]	; (714 <xPortStartScheduler+0xe4>)
     6c0:	b2db      	uxtb	r3, r3
     6c2:	7013      	strb	r3, [r2, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:374
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
     6c4:	4b17      	ldr	r3, [pc, #92]	; (724 <xPortStartScheduler+0xf4>)
     6c6:	681a      	ldr	r2, [r3, #0]
     6c8:	f442 0278 	orr.w	r2, r2, #16252928	; 0xf80000
     6cc:	601a      	str	r2, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:375
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
     6ce:	681a      	ldr	r2, [r3, #0]
     6d0:	f042 4278 	orr.w	r2, r2, #4160749568	; 0xf8000000
     6d4:	601a      	str	r2, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:379
	vPortSetupTimerInterrupt();
     6d6:	f7ff ff93 	bl	600 <vPortSetupTimerInterrupt>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:382
	uxCriticalNesting = 0;
     6da:	4b13      	ldr	r3, [pc, #76]	; (728 <xPortStartScheduler+0xf8>)
     6dc:	2400      	movs	r4, #0
     6de:	601c      	str	r4, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:385
	vPortEnableVFP();
     6e0:	f7ff febe 	bl	460 <vPortEnableVFP>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:388
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
     6e4:	4a11      	ldr	r2, [pc, #68]	; (72c <xPortStartScheduler+0xfc>)
     6e6:	6813      	ldr	r3, [r2, #0]
     6e8:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
     6ec:	6013      	str	r3, [r2, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:391
	prvPortStartFirstTask();
     6ee:	f7ff fea3 	bl	438 <prvPortStartFirstTask>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:399
	vTaskSwitchContext();
     6f2:	f001 f877 	bl	17e4 <vTaskSwitchContext>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:400
	prvTaskExitError();
     6f6:	f7ff febd 	bl	474 <prvTaskExitError>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:404
}
     6fa:	4620      	mov	r0, r4
     6fc:	b002      	add	sp, #8
     6fe:	bd10      	pop	{r4, pc}
     700:	e000ed00 	.word	0xe000ed00
     704:	410fc271 	.word	0x410fc271
     708:	0000b079 	.word	0x0000b079
     70c:	410fc270 	.word	0x410fc270
     710:	0000b09c 	.word	0x0000b09c
     714:	e000e400 	.word	0xe000e400
     718:	10000338 	.word	0x10000338
     71c:	1000033c 	.word	0x1000033c
     720:	0000b0bf 	.word	0x0000b0bf
     724:	e000ed20 	.word	0xe000ed20
     728:	10000340 	.word	0x10000340
     72c:	e000ef34 	.word	0xe000ef34

00000730 <vPortValidateInterruptPriority>:
vPortValidateInterruptPriority():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:730
/*-----------------------------------------------------------*/

#if( configASSERT_DEFINED == 1 )

	void vPortValidateInterruptPriority( void )
	{
     730:	b508      	push	{r3, lr}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:735
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
     732:	f3ef 8305 	mrs	r3, IPSR
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:738

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
     736:	2b0f      	cmp	r3, #15
     738:	d90b      	bls.n	752 <vPortValidateInterruptPriority+0x22>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:741
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
     73a:	4a0d      	ldr	r2, [pc, #52]	; (770 <vPortValidateInterruptPriority+0x40>)
     73c:	5c9b      	ldrb	r3, [r3, r2]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:766
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
     73e:	4a0d      	ldr	r2, [pc, #52]	; (774 <vPortValidateInterruptPriority+0x44>)
     740:	7812      	ldrb	r2, [r2, #0]
     742:	429a      	cmp	r2, r3
     744:	d905      	bls.n	752 <vPortValidateInterruptPriority+0x22>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:766 (discriminator 1)
     746:	490c      	ldr	r1, [pc, #48]	; (778 <vPortValidateInterruptPriority+0x48>)
     748:	f240 20fe 	movw	r0, #766	; 0x2fe
     74c:	f004 f916 	bl	497c <configASSERT_callback>
     750:	e7fe      	b.n	750 <vPortValidateInterruptPriority+0x20>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:782
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
     752:	4b0a      	ldr	r3, [pc, #40]	; (77c <vPortValidateInterruptPriority+0x4c>)
     754:	4a0a      	ldr	r2, [pc, #40]	; (780 <vPortValidateInterruptPriority+0x50>)
     756:	681b      	ldr	r3, [r3, #0]
     758:	6812      	ldr	r2, [r2, #0]
     75a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
     75e:	4293      	cmp	r3, r2
     760:	d905      	bls.n	76e <vPortValidateInterruptPriority+0x3e>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:782 (discriminator 1)
     762:	4908      	ldr	r1, [pc, #32]	; (784 <vPortValidateInterruptPriority+0x54>)
     764:	f240 300e 	movw	r0, #782	; 0x30e
     768:	f004 f908 	bl	497c <configASSERT_callback>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:782 (discriminator 2)
     76c:	e7fe      	b.n	76c <vPortValidateInterruptPriority+0x3c>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/port.c:783
	}
     76e:	bd08      	pop	{r3, pc}
     770:	e000e3f0 	.word	0xe000e3f0
     774:	10000338 	.word	0x10000338
     778:	0000b00d 	.word	0x0000b00d
     77c:	e000ed0c 	.word	0xe000ed0c
     780:	1000033c 	.word	0x1000033c
     784:	0000b037 	.word	0x0000b037

00000788 <pvPortMalloc>:
pvPortMalloc():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\memmang/heap_3.c:59
#endif

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
     788:	b510      	push	{r4, lr}
     78a:	4604      	mov	r4, r0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\memmang/heap_3.c:62
void *pvReturn;

	vTaskSuspendAll();
     78c:	f000 fef6 	bl	157c <vTaskSuspendAll>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\memmang/heap_3.c:64
	{
		pvReturn = malloc( xWantedSize );
     790:	4620      	mov	r0, r4
     792:	f004 ff3d 	bl	5610 <malloc>
     796:	4604      	mov	r4, r0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\memmang/heap_3.c:67
		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
     798:	f000 ff8a 	bl	16b0 <xTaskResumeAll>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\memmang/heap_3.c:71

	#if( configUSE_MALLOC_FAILED_HOOK == 1 )
	{
		if( pvReturn == NULL )
     79c:	b90c      	cbnz	r4, 7a2 <pvPortMalloc+0x1a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\memmang/heap_3.c:74
		{
			extern void vApplicationMallocFailedHook( void );
			vApplicationMallocFailedHook();
     79e:	f004 f8dd 	bl	495c <vApplicationMallocFailedHook>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\memmang/heap_3.c:80
		}
	}
	#endif

	return pvReturn;
}
     7a2:	4620      	mov	r0, r4
     7a4:	bd10      	pop	{r4, pc}

000007a6 <vPortFree>:
vPortFree():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\memmang/heap_3.c:84
/*-----------------------------------------------------------*/

void vPortFree( void *pv )
{
     7a6:	b510      	push	{r4, lr}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\memmang/heap_3.c:85
	if( pv )
     7a8:	4604      	mov	r4, r0
     7aa:	b140      	cbz	r0, 7be <vPortFree+0x18>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\memmang/heap_3.c:87
	{
		vTaskSuspendAll();
     7ac:	f000 fee6 	bl	157c <vTaskSuspendAll>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\memmang/heap_3.c:89
		{
			free( pv );
     7b0:	4620      	mov	r0, r4
     7b2:	f004 ff35 	bl	5620 <free>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\memmang/heap_3.c:94
			traceFREE( pv, 0 );
		}
		( void ) xTaskResumeAll();
	}
}
     7b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\memmang/heap_3.c:92
		( void ) xTaskResumeAll();
     7ba:	f000 bf79 	b.w	16b0 <xTaskResumeAll>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\memmang/heap_3.c:94
}
     7be:	bd10      	pop	{r4, pc}

000007c0 <vListInitialise>:
vListInitialise():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:42
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
     7c0:	f100 0308 	add.w	r3, r0, #8
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:46

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
     7c4:	f04f 32ff 	mov.w	r2, #4294967295
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:42
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
     7c8:	6043      	str	r3, [r0, #4]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:50

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
     7ca:	e9c0 2302 	strd	r2, r3, [r0, #8]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:51
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
     7ce:	6103      	str	r3, [r0, #16]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:53

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
     7d0:	2300      	movs	r3, #0
     7d2:	6003      	str	r3, [r0, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:59

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
     7d4:	4770      	bx	lr

000007d6 <vListInitialiseItem>:
vListInitialiseItem():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:65
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
     7d6:	2300      	movs	r3, #0
     7d8:	6103      	str	r3, [r0, #16]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:71

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
     7da:	4770      	bx	lr

000007dc <vListInsertEnd>:
vListInsertEnd():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:76
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
     7dc:	6843      	ldr	r3, [r0, #4]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:87
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
     7de:	604b      	str	r3, [r1, #4]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:88
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
     7e0:	689a      	ldr	r2, [r3, #8]
     7e2:	608a      	str	r2, [r1, #8]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:93

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
     7e4:	689a      	ldr	r2, [r3, #8]
     7e6:	6051      	str	r1, [r2, #4]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:94
	pxIndex->pxPrevious = pxNewListItem;
     7e8:	6099      	str	r1, [r3, #8]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:99

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
     7ea:	6803      	ldr	r3, [r0, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:97
	pxNewListItem->pxContainer = pxList;
     7ec:	6108      	str	r0, [r1, #16]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:99
	( pxList->uxNumberOfItems )++;
     7ee:	3301      	adds	r3, #1
     7f0:	6003      	str	r3, [r0, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:100
}
     7f2:	4770      	bx	lr

000007f4 <vListInsert>:
vListInsert():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:106
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
     7f4:	680a      	ldr	r2, [r1, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:122
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
     7f6:	1c53      	adds	r3, r2, #1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:104
{
     7f8:	b530      	push	{r4, r5, lr}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:122
	if( xValueOfInsertion == portMAX_DELAY )
     7fa:	d10a      	bne.n	812 <vListInsert+0x1e>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:124
	{
		pxIterator = pxList->xListEnd.pxPrevious;
     7fc:	6903      	ldr	r3, [r0, #16]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:157
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
     7fe:	685a      	ldr	r2, [r3, #4]
     800:	604a      	str	r2, [r1, #4]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:158
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
     802:	6091      	str	r1, [r2, #8]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:159
	pxNewListItem->pxPrevious = pxIterator;
     804:	608b      	str	r3, [r1, #8]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:160
	pxIterator->pxNext = pxNewListItem;
     806:	6059      	str	r1, [r3, #4]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:166

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
     808:	6803      	ldr	r3, [r0, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:164
	pxNewListItem->pxContainer = pxList;
     80a:	6108      	str	r0, [r1, #16]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:166
	( pxList->uxNumberOfItems )++;
     80c:	3301      	adds	r3, #1
     80e:	6003      	str	r3, [r0, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:167
}
     810:	bd30      	pop	{r4, r5, pc}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:150
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
     812:	f100 0308 	add.w	r3, r0, #8
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:150 (discriminator 1)
     816:	685c      	ldr	r4, [r3, #4]
     818:	6825      	ldr	r5, [r4, #0]
     81a:	4295      	cmp	r5, r2
     81c:	d8ef      	bhi.n	7fe <vListInsert+0xa>
     81e:	4623      	mov	r3, r4
     820:	e7f9      	b.n	816 <vListInsert+0x22>

00000822 <uxListRemove>:
uxListRemove():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:176
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
     822:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:174
List_t * const pxList = pxItemToRemove->pxContainer;
     826:	6903      	ldr	r3, [r0, #16]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:176
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
     828:	608a      	str	r2, [r1, #8]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:177
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
     82a:	6051      	str	r1, [r2, #4]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:183

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
     82c:	6859      	ldr	r1, [r3, #4]
     82e:	4281      	cmp	r1, r0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:185
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
     830:	bf08      	it	eq
     832:	605a      	streq	r2, [r3, #4]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:192
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
     834:	2200      	movs	r2, #0
     836:	6102      	str	r2, [r0, #16]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:193
	( pxList->uxNumberOfItems )--;
     838:	681a      	ldr	r2, [r3, #0]
     83a:	3a01      	subs	r2, #1
     83c:	601a      	str	r2, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:195

	return pxList->uxNumberOfItems;
     83e:	6818      	ldr	r0, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/list.c:196
}
     840:	4770      	bx	lr

00000842 <prvIsQueueEmpty>:
prvIsQueueEmpty():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2288
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
     842:	b510      	push	{r4, lr}
     844:	4604      	mov	r4, r0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2291
BaseType_t xReturn;

	taskENTER_CRITICAL();
     846:	f7ff fe5d 	bl	504 <vPortEnterCritical>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2293
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
     84a:	6ba4      	ldr	r4, [r4, #56]	; 0x38
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2302
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
     84c:	f7ff fe7c 	bl	548 <vPortExitCritical>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2305

	return xReturn;
}
     850:	fab4 f084 	clz	r0, r4
     854:	0940      	lsrs	r0, r0, #5
     856:	bd10      	pop	{r4, pc}

00000858 <prvCopyDataToQueue>:
prvCopyDataToQueue():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2071
{
     858:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     85a:	4615      	mov	r5, r2
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2079
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
     85c:	6c02      	ldr	r2, [r0, #64]	; 0x40
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2077
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
     85e:	6b86      	ldr	r6, [r0, #56]	; 0x38
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2071
{
     860:	4604      	mov	r4, r0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2079
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
     862:	b952      	cbnz	r2, 87a <prvCopyDataToQueue+0x22>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2083
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
     864:	6807      	ldr	r7, [r0, #0]
     866:	bb47      	cbnz	r7, 8ba <prvCopyDataToQueue+0x62>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2086
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
     868:	6880      	ldr	r0, [r0, #8]
     86a:	f001 f9d7 	bl	1c1c <xTaskPriorityDisinherit>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2087
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
     86e:	60a7      	str	r7, [r4, #8]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2086
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
     870:	4605      	mov	r5, r0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2143
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
     872:	3601      	adds	r6, #1
     874:	63a6      	str	r6, [r4, #56]	; 0x38
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2146
}
     876:	4628      	mov	r0, r5
     878:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2096
	else if( xPosition == queueSEND_TO_BACK )
     87a:	b965      	cbnz	r5, 896 <prvCopyDataToQueue+0x3e>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2098
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
     87c:	6840      	ldr	r0, [r0, #4]
     87e:	f004 fed7 	bl	5630 <memcpy>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2099
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
     882:	6863      	ldr	r3, [r4, #4]
     884:	6c22      	ldr	r2, [r4, #64]	; 0x40
     886:	4413      	add	r3, r2
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2100
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
     888:	68a2      	ldr	r2, [r4, #8]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2099
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
     88a:	6063      	str	r3, [r4, #4]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2100
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
     88c:	4293      	cmp	r3, r2
     88e:	d3f0      	bcc.n	872 <prvCopyDataToQueue+0x1a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2102
			pxQueue->pcWriteTo = pxQueue->pcHead;
     890:	6823      	ldr	r3, [r4, #0]
     892:	6063      	str	r3, [r4, #4]
     894:	e7ed      	b.n	872 <prvCopyDataToQueue+0x1a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2111
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
     896:	68c0      	ldr	r0, [r0, #12]
     898:	f004 feca 	bl	5630 <memcpy>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2112
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
     89c:	6c23      	ldr	r3, [r4, #64]	; 0x40
     89e:	68e2      	ldr	r2, [r4, #12]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2113
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
     8a0:	6821      	ldr	r1, [r4, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2112
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
     8a2:	425b      	negs	r3, r3
     8a4:	441a      	add	r2, r3
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2113
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
     8a6:	428a      	cmp	r2, r1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2112
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
     8a8:	60e2      	str	r2, [r4, #12]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2115
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
     8aa:	bf3e      	ittt	cc
     8ac:	68a2      	ldrcc	r2, [r4, #8]
     8ae:	189b      	addcc	r3, r3, r2
     8b0:	60e3      	strcc	r3, [r4, #12]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2122
		if( xPosition == queueOVERWRITE )
     8b2:	2d02      	cmp	r5, #2
     8b4:	d101      	bne.n	8ba <prvCopyDataToQueue+0x62>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2124
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
     8b6:	b116      	cbz	r6, 8be <prvCopyDataToQueue+0x66>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2130
				--uxMessagesWaiting;
     8b8:	3e01      	subs	r6, #1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2072
BaseType_t xReturn = pdFALSE;
     8ba:	2500      	movs	r5, #0
     8bc:	e7d9      	b.n	872 <prvCopyDataToQueue+0x1a>
     8be:	4635      	mov	r5, r6
     8c0:	e7d7      	b.n	872 <prvCopyDataToQueue+0x1a>

000008c2 <prvCopyDataFromQueue>:
prvCopyDataFromQueue():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2150
{
     8c2:	4603      	mov	r3, r0
     8c4:	b410      	push	{r4}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2151
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
     8c6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2150
{
     8c8:	4608      	mov	r0, r1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2151
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
     8ca:	b162      	cbz	r2, 8e6 <prvCopyDataFromQueue+0x24>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2153
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
     8cc:	68d9      	ldr	r1, [r3, #12]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2154
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
     8ce:	689c      	ldr	r4, [r3, #8]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2153
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
     8d0:	4411      	add	r1, r2
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2154
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
     8d2:	42a1      	cmp	r1, r4
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2153
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
     8d4:	60d9      	str	r1, [r3, #12]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2156
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
     8d6:	bf24      	itt	cs
     8d8:	6819      	ldrcs	r1, [r3, #0]
     8da:	60d9      	strcs	r1, [r3, #12]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2162
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
     8dc:	68d9      	ldr	r1, [r3, #12]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2164
}
     8de:	f85d 4b04 	ldr.w	r4, [sp], #4
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2162
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
     8e2:	f004 bea5 	b.w	5630 <memcpy>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2164
}
     8e6:	f85d 4b04 	ldr.w	r4, [sp], #4
     8ea:	4770      	bx	lr

000008ec <prvUnlockQueue>:
prvUnlockQueue():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2168
{
     8ec:	b570      	push	{r4, r5, r6, lr}
     8ee:	4604      	mov	r4, r0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2175
	taskENTER_CRITICAL();
     8f0:	f7ff fe08 	bl	504 <vPortEnterCritical>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2177
		int8_t cTxLock = pxQueue->cTxLock;
     8f4:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2230
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
     8f8:	f104 0624 	add.w	r6, r4, #36	; 0x24
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2177
		int8_t cTxLock = pxQueue->cTxLock;
     8fc:	b26d      	sxtb	r5, r5
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2180
		while( cTxLock > queueLOCKED_UNMODIFIED )
     8fe:	2d00      	cmp	r5, #0
     900:	dc14      	bgt.n	92c <prvUnlockQueue+0x40>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2251
		pxQueue->cTxLock = queueUNLOCKED;
     902:	23ff      	movs	r3, #255	; 0xff
     904:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2253
	taskEXIT_CRITICAL();
     908:	f7ff fe1e 	bl	548 <vPortExitCritical>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2256
	taskENTER_CRITICAL();
     90c:	f7ff fdfa 	bl	504 <vPortEnterCritical>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2258
		int8_t cRxLock = pxQueue->cRxLock;
     910:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2264
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
     914:	f104 0610 	add.w	r6, r4, #16
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2258
		int8_t cRxLock = pxQueue->cRxLock;
     918:	b26d      	sxtb	r5, r5
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2260
		while( cRxLock > queueLOCKED_UNMODIFIED )
     91a:	2d00      	cmp	r5, #0
     91c:	dc12      	bgt.n	944 <prvUnlockQueue+0x58>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2281
		pxQueue->cRxLock = queueUNLOCKED;
     91e:	23ff      	movs	r3, #255	; 0xff
     920:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2284
}
     924:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2283
	taskEXIT_CRITICAL();
     928:	f7ff be0e 	b.w	548 <vPortExitCritical>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2228
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
     92c:	6a63      	ldr	r3, [r4, #36]	; 0x24
     92e:	2b00      	cmp	r3, #0
     930:	d0e7      	beq.n	902 <prvUnlockQueue+0x16>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2230
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
     932:	4630      	mov	r0, r6
     934:	f000 ffcc 	bl	18d0 <xTaskRemoveFromEventList>
     938:	b108      	cbz	r0, 93e <prvUnlockQueue+0x52>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2234
						vTaskMissedYield();
     93a:	f001 f84f 	bl	19dc <vTaskMissedYield>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2248
			--cTxLock;
     93e:	3d01      	subs	r5, #1
     940:	b26d      	sxtb	r5, r5
     942:	e7dc      	b.n	8fe <prvUnlockQueue+0x12>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2262
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
     944:	6923      	ldr	r3, [r4, #16]
     946:	2b00      	cmp	r3, #0
     948:	d0e9      	beq.n	91e <prvUnlockQueue+0x32>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2264
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
     94a:	4630      	mov	r0, r6
     94c:	f000 ffc0 	bl	18d0 <xTaskRemoveFromEventList>
     950:	b108      	cbz	r0, 956 <prvUnlockQueue+0x6a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2266
					vTaskMissedYield();
     952:	f001 f843 	bl	19dc <vTaskMissedYield>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2273
				--cRxLock;
     956:	3d01      	subs	r5, #1
     958:	b26d      	sxtb	r5, r5
     95a:	e7de      	b.n	91a <prvUnlockQueue+0x2e>

0000095c <xQueueGenericReset>:
xQueueGenericReset():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:256
{
     95c:	b538      	push	{r3, r4, r5, lr}
     95e:	460d      	mov	r5, r1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:259
	configASSERT( pxQueue );
     960:	4604      	mov	r4, r0
     962:	b928      	cbnz	r0, 970 <xQueueGenericReset+0x14>
     964:	491a      	ldr	r1, [pc, #104]	; (9d0 <xQueueGenericReset+0x74>)
     966:	f240 1003 	movw	r0, #259	; 0x103
     96a:	f004 f807 	bl	497c <configASSERT_callback>
     96e:	e7fe      	b.n	96e <xQueueGenericReset+0x12>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:261
	taskENTER_CRITICAL();
     970:	f7ff fdc8 	bl	504 <vPortEnterCritical>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:263
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
     974:	e9d4 300f 	ldrd	r3, r0, [r4, #60]	; 0x3c
     978:	6822      	ldr	r2, [r4, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:265
		pxQueue->pcWriteTo = pxQueue->pcHead;
     97a:	6062      	str	r2, [r4, #4]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:263
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
     97c:	4343      	muls	r3, r0
     97e:	18d1      	adds	r1, r2, r3
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:266
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
     980:	1a1b      	subs	r3, r3, r0
     982:	4413      	add	r3, r2
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:263
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
     984:	60a1      	str	r1, [r4, #8]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:266
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
     986:	60e3      	str	r3, [r4, #12]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:264
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
     988:	2100      	movs	r1, #0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:267
		pxQueue->cRxLock = queueUNLOCKED;
     98a:	23ff      	movs	r3, #255	; 0xff
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:264
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
     98c:	63a1      	str	r1, [r4, #56]	; 0x38
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:267
		pxQueue->cRxLock = queueUNLOCKED;
     98e:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:268
		pxQueue->cTxLock = queueUNLOCKED;
     992:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:270
		if( xNewQueue == pdFALSE )
     996:	b995      	cbnz	r5, 9be <xQueueGenericReset+0x62>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:277
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
     998:	6923      	ldr	r3, [r4, #16]
     99a:	b163      	cbz	r3, 9b6 <xQueueGenericReset+0x5a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:279
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
     99c:	f104 0010 	add.w	r0, r4, #16
     9a0:	f000 ff96 	bl	18d0 <xTaskRemoveFromEventList>
     9a4:	b138      	cbz	r0, 9b6 <xQueueGenericReset+0x5a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:281
					queueYIELD_IF_USING_PREEMPTION();
     9a6:	4b0b      	ldr	r3, [pc, #44]	; (9d4 <xQueueGenericReset+0x78>)
     9a8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
     9ac:	601a      	str	r2, [r3, #0]
     9ae:	f3bf 8f4f 	dsb	sy
     9b2:	f3bf 8f6f 	isb	sy
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:300
	taskEXIT_CRITICAL();
     9b6:	f7ff fdc7 	bl	548 <vPortExitCritical>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:305
}
     9ba:	2001      	movs	r0, #1
     9bc:	bd38      	pop	{r3, r4, r5, pc}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:296
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
     9be:	f104 0010 	add.w	r0, r4, #16
     9c2:	f7ff fefd 	bl	7c0 <vListInitialise>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:297
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
     9c6:	f104 0024 	add.w	r0, r4, #36	; 0x24
     9ca:	f7ff fef9 	bl	7c0 <vListInitialise>
     9ce:	e7f2      	b.n	9b6 <xQueueGenericReset+0x5a>
     9d0:	0000b1c5 	.word	0x0000b1c5
     9d4:	e000ed04 	.word	0xe000ed04

000009d8 <xQueueGenericCreateStatic>:
xQueueGenericCreateStatic():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:311
	{
     9d8:	b513      	push	{r0, r1, r4, lr}
     9da:	461c      	mov	r4, r3
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:314
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
     9dc:	b928      	cbnz	r0, 9ea <xQueueGenericCreateStatic+0x12>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:314 (discriminator 1)
     9de:	491e      	ldr	r1, [pc, #120]	; (a58 <xQueueGenericCreateStatic+0x80>)
     9e0:	f44f 709d 	mov.w	r0, #314	; 0x13a
     9e4:	f003 ffca 	bl	497c <configASSERT_callback>
     9e8:	e7fe      	b.n	9e8 <xQueueGenericCreateStatic+0x10>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:318
		configASSERT( pxStaticQueue != NULL );
     9ea:	b92b      	cbnz	r3, 9f8 <xQueueGenericCreateStatic+0x20>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:318 (discriminator 1)
     9ec:	491b      	ldr	r1, [pc, #108]	; (a5c <xQueueGenericCreateStatic+0x84>)
     9ee:	f44f 709f 	mov.w	r0, #318	; 0x13e
     9f2:	f003 ffc3 	bl	497c <configASSERT_callback>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:318 (discriminator 2)
     9f6:	e7fe      	b.n	9f6 <xQueueGenericCreateStatic+0x1e>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:322
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
     9f8:	b132      	cbz	r2, a08 <xQueueGenericCreateStatic+0x30>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:322 (discriminator 1)
     9fa:	b961      	cbnz	r1, a16 <xQueueGenericCreateStatic+0x3e>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:322 (discriminator 2)
     9fc:	4918      	ldr	r1, [pc, #96]	; (a60 <xQueueGenericCreateStatic+0x88>)
     9fe:	f44f 70a1 	mov.w	r0, #322	; 0x142
     a02:	f003 ffbb 	bl	497c <configASSERT_callback>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:322 (discriminator 3)
     a06:	e7fe      	b.n	a06 <xQueueGenericCreateStatic+0x2e>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:323 (discriminator 1)
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
     a08:	b129      	cbz	r1, a16 <xQueueGenericCreateStatic+0x3e>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:323
     a0a:	4916      	ldr	r1, [pc, #88]	; (a64 <xQueueGenericCreateStatic+0x8c>)
     a0c:	f240 1043 	movw	r0, #323	; 0x143
     a10:	f003 ffb4 	bl	497c <configASSERT_callback>
     a14:	e7fe      	b.n	a14 <xQueueGenericCreateStatic+0x3c>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:330
			volatile size_t xSize = sizeof( StaticQueue_t );
     a16:	2350      	movs	r3, #80	; 0x50
     a18:	9301      	str	r3, [sp, #4]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:331
			configASSERT( xSize == sizeof( Queue_t ) );
     a1a:	9b01      	ldr	r3, [sp, #4]
     a1c:	2b50      	cmp	r3, #80	; 0x50
     a1e:	d005      	beq.n	a2c <xQueueGenericCreateStatic+0x54>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:331 (discriminator 1)
     a20:	4911      	ldr	r1, [pc, #68]	; (a68 <xQueueGenericCreateStatic+0x90>)
     a22:	f240 104b 	movw	r0, #331	; 0x14b
     a26:	f003 ffa9 	bl	497c <configASSERT_callback>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:331 (discriminator 5)
     a2a:	e7fe      	b.n	a2a <xQueueGenericCreateStatic+0x52>
prvInitialiseNewQueue():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:435
	if( uxItemSize == ( UBaseType_t ) 0 )
     a2c:	2900      	cmp	r1, #0
     a2e:	bf08      	it	eq
     a30:	4622      	moveq	r2, r4
xQueueGenericCreateStatic():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:332
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
     a32:	9b01      	ldr	r3, [sp, #4]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:348
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
     a34:	6022      	str	r2, [r4, #0]
     a36:	2301      	movs	r3, #1
prvInitialiseNewQueue():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:452
	pxNewQueue->uxItemSize = uxItemSize;
     a38:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
xQueueGenericCreateStatic():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:348
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
     a3c:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
prvInitialiseNewQueue():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:453
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
     a40:	4619      	mov	r1, r3
     a42:	4620      	mov	r0, r4
     a44:	f7ff ff8a 	bl	95c <xQueueGenericReset>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:457
		pxNewQueue->ucQueueType = ucQueueType;
     a48:	f89d 3010 	ldrb.w	r3, [sp, #16]
     a4c:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
xQueueGenericCreateStatic():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:361
	}
     a50:	4620      	mov	r0, r4
     a52:	b002      	add	sp, #8
     a54:	bd10      	pop	{r4, pc}
     a56:	bf00      	nop
     a58:	0000b102 	.word	0x0000b102
     a5c:	0000b124 	.word	0x0000b124
     a60:	0000b13a 	.word	0x0000b13a
     a64:	0000b172 	.word	0x0000b172
     a68:	0000b1aa 	.word	0x0000b1aa

00000a6c <xQueueGenericCreate>:
xQueueGenericCreate():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:369
	{
     a6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     a6e:	460d      	mov	r5, r1
     a70:	4617      	mov	r7, r2
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:374
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
     a72:	4606      	mov	r6, r0
     a74:	b928      	cbnz	r0, a82 <xQueueGenericCreate+0x16>
     a76:	490f      	ldr	r1, [pc, #60]	; (ab4 <xQueueGenericCreate+0x48>)
     a78:	f44f 70bb 	mov.w	r0, #374	; 0x176
     a7c:	f003 ff7e 	bl	497c <configASSERT_callback>
     a80:	e7fe      	b.n	a80 <xQueueGenericCreate+0x14>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:385
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
     a82:	4348      	muls	r0, r1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:397
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
     a84:	3050      	adds	r0, #80	; 0x50
     a86:	f7ff fe7f 	bl	788 <pvPortMalloc>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:399
		if( pxNewQueue != NULL )
     a8a:	4604      	mov	r4, r0
     a8c:	b170      	cbz	r0, aac <xQueueGenericCreate+0x40>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:411
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
     a8e:	2300      	movs	r3, #0
     a90:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
prvInitialiseNewQueue():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:435
	if( uxItemSize == ( UBaseType_t ) 0 )
     a94:	b165      	cbz	r5, ab0 <xQueueGenericCreate+0x44>
xQueueGenericCreate():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:404
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
     a96:	f100 0350 	add.w	r3, r0, #80	; 0x50
prvInitialiseNewQueue():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:446
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
     a9a:	6023      	str	r3, [r4, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:452
	pxNewQueue->uxItemSize = uxItemSize;
     a9c:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:453
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
     aa0:	2101      	movs	r1, #1
     aa2:	4620      	mov	r0, r4
     aa4:	f7ff ff5a 	bl	95c <xQueueGenericReset>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:457
		pxNewQueue->ucQueueType = ucQueueType;
     aa8:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
xQueueGenericCreate():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:424
	}
     aac:	4620      	mov	r0, r4
     aae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
prvInitialiseNewQueue():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:435
	if( uxItemSize == ( UBaseType_t ) 0 )
     ab0:	4603      	mov	r3, r0
     ab2:	e7f2      	b.n	a9a <xQueueGenericCreate+0x2e>
     ab4:	0000b102 	.word	0x0000b102

00000ab8 <xQueueGenericSend>:
xQueueGenericSend():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:748
{
     ab8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
     abc:	4688      	mov	r8, r1
     abe:	9201      	str	r2, [sp, #4]
     ac0:	461f      	mov	r7, r3
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:753
	configASSERT( pxQueue );
     ac2:	4604      	mov	r4, r0
     ac4:	b928      	cbnz	r0, ad2 <xQueueGenericSend+0x1a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:753 (discriminator 1)
     ac6:	494e      	ldr	r1, [pc, #312]	; (c00 <xQueueGenericSend+0x148>)
     ac8:	f240 20f1 	movw	r0, #753	; 0x2f1
     acc:	f003 ff56 	bl	497c <configASSERT_callback>
     ad0:	e7fe      	b.n	ad0 <xQueueGenericSend+0x18>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:754
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
     ad2:	b939      	cbnz	r1, ae4 <xQueueGenericSend+0x2c>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:754 (discriminator 1)
     ad4:	6c03      	ldr	r3, [r0, #64]	; 0x40
     ad6:	b12b      	cbz	r3, ae4 <xQueueGenericSend+0x2c>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:754 (discriminator 2)
     ad8:	494a      	ldr	r1, [pc, #296]	; (c04 <xQueueGenericSend+0x14c>)
     ada:	f240 20f2 	movw	r0, #754	; 0x2f2
     ade:	f003 ff4d 	bl	497c <configASSERT_callback>
     ae2:	e7fe      	b.n	ae2 <xQueueGenericSend+0x2a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:755
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
     ae4:	2f02      	cmp	r7, #2
     ae6:	d108      	bne.n	afa <xQueueGenericSend+0x42>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:755 (discriminator 1)
     ae8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
     aea:	2b01      	cmp	r3, #1
     aec:	d005      	beq.n	afa <xQueueGenericSend+0x42>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:755 (discriminator 2)
     aee:	4946      	ldr	r1, [pc, #280]	; (c08 <xQueueGenericSend+0x150>)
     af0:	f240 20f3 	movw	r0, #755	; 0x2f3
     af4:	f003 ff42 	bl	497c <configASSERT_callback>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:755 (discriminator 3)
     af8:	e7fe      	b.n	af8 <xQueueGenericSend+0x40>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:758
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
     afa:	f001 f82d 	bl	1b58 <xTaskGetSchedulerState>
     afe:	4606      	mov	r6, r0
     b00:	b938      	cbnz	r0, b12 <xQueueGenericSend+0x5a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:758 (discriminator 1)
     b02:	9b01      	ldr	r3, [sp, #4]
     b04:	b133      	cbz	r3, b14 <xQueueGenericSend+0x5c>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:758 (discriminator 2)
     b06:	4941      	ldr	r1, [pc, #260]	; (c0c <xQueueGenericSend+0x154>)
     b08:	f240 20f6 	movw	r0, #758	; 0x2f6
     b0c:	f003 ff36 	bl	497c <configASSERT_callback>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:758 (discriminator 4)
     b10:	e7fe      	b.n	b10 <xQueueGenericSend+0x58>
     b12:	2600      	movs	r6, #0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:910
		prvLockQueue( pxQueue );
     b14:	f04f 0900 	mov.w	r9, #0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:934
					portYIELD_WITHIN_API();
     b18:	f8df a0f4 	ldr.w	sl, [pc, #244]	; c10 <xQueueGenericSend+0x158>
     b1c:	e037      	b.n	b8e <xQueueGenericSend+0xd6>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:879
				if( xTicksToWait == ( TickType_t ) 0 )
     b1e:	9d01      	ldr	r5, [sp, #4]
     b20:	b91d      	cbnz	r5, b2a <xQueueGenericSend+0x72>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:883
					taskEXIT_CRITICAL();
     b22:	f7ff fd11 	bl	548 <vPortExitCritical>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:951
			return errQUEUE_FULL;
     b26:	2000      	movs	r0, #0
     b28:	e050      	b.n	bcc <xQueueGenericSend+0x114>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:890
				else if( xEntryTimeSet == pdFALSE )
     b2a:	b916      	cbnz	r6, b32 <xQueueGenericSend+0x7a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:894
					vTaskInternalSetTimeOutState( &xTimeOut );
     b2c:	a802      	add	r0, sp, #8
     b2e:	f000 ff0f 	bl	1950 <vTaskInternalSetTimeOutState>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:904
		taskEXIT_CRITICAL();
     b32:	f7ff fd09 	bl	548 <vPortExitCritical>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:909
		vTaskSuspendAll();
     b36:	f000 fd21 	bl	157c <vTaskSuspendAll>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:910
		prvLockQueue( pxQueue );
     b3a:	f7ff fce3 	bl	504 <vPortEnterCritical>
     b3e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
     b42:	2bff      	cmp	r3, #255	; 0xff
     b44:	bf08      	it	eq
     b46:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
     b4a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
     b4e:	2bff      	cmp	r3, #255	; 0xff
     b50:	bf08      	it	eq
     b52:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
     b56:	f7ff fcf7 	bl	548 <vPortExitCritical>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:913
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
     b5a:	a901      	add	r1, sp, #4
     b5c:	a802      	add	r0, sp, #8
     b5e:	f000 ff03 	bl	1968 <xTaskCheckForTimeOut>
     b62:	2800      	cmp	r0, #0
     b64:	d146      	bne.n	bf4 <xQueueGenericSend+0x13c>
prvIsQueueFull():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2331

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
     b66:	f7ff fccd 	bl	504 <vPortEnterCritical>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2333
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
     b6a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
     b6c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
     b6e:	429a      	cmp	r2, r3
     b70:	d12f      	bne.n	bd2 <xQueueGenericSend+0x11a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2342
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
     b72:	f7ff fce9 	bl	548 <vPortExitCritical>
xQueueGenericSend():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:918
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
     b76:	9901      	ldr	r1, [sp, #4]
     b78:	f104 0010 	add.w	r0, r4, #16
     b7c:	f000 fe90 	bl	18a0 <vTaskPlaceOnEventList>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:925
				prvUnlockQueue( pxQueue );
     b80:	4620      	mov	r0, r4
     b82:	f7ff feb3 	bl	8ec <prvUnlockQueue>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:932
				if( xTaskResumeAll() == pdFALSE )
     b86:	f000 fd93 	bl	16b0 <xTaskResumeAll>
     b8a:	b350      	cbz	r0, be2 <xQueueGenericSend+0x12a>
     b8c:	2601      	movs	r6, #1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:768
		taskENTER_CRITICAL();
     b8e:	f7ff fcb9 	bl	504 <vPortEnterCritical>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:774
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
     b92:	6ba2      	ldr	r2, [r4, #56]	; 0x38
     b94:	6be3      	ldr	r3, [r4, #60]	; 0x3c
     b96:	429a      	cmp	r2, r3
     b98:	d301      	bcc.n	b9e <xQueueGenericSend+0xe6>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:774 (discriminator 1)
     b9a:	2f02      	cmp	r7, #2
     b9c:	d1bf      	bne.n	b1e <xQueueGenericSend+0x66>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:840
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
     b9e:	463a      	mov	r2, r7
     ba0:	4641      	mov	r1, r8
     ba2:	4620      	mov	r0, r4
     ba4:	f7ff fe58 	bl	858 <prvCopyDataToQueue>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:844
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
     ba8:	6a63      	ldr	r3, [r4, #36]	; 0x24
     baa:	b11b      	cbz	r3, bb4 <xQueueGenericSend+0xfc>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:846
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
     bac:	f104 0024 	add.w	r0, r4, #36	; 0x24
     bb0:	f000 fe8e 	bl	18d0 <xTaskRemoveFromEventList>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:859
					else if( xYieldRequired != pdFALSE )
     bb4:	b138      	cbz	r0, bc6 <xQueueGenericSend+0x10e>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:865
						queueYIELD_IF_USING_PREEMPTION();
     bb6:	4b16      	ldr	r3, [pc, #88]	; (c10 <xQueueGenericSend+0x158>)
     bb8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
     bbc:	601a      	str	r2, [r3, #0]
     bbe:	f3bf 8f4f 	dsb	sy
     bc2:	f3bf 8f6f 	isb	sy
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:874
				taskEXIT_CRITICAL();
     bc6:	f7ff fcbf 	bl	548 <vPortExitCritical>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:875
				return pdPASS;
     bca:	2001      	movs	r0, #1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:954
}
     bcc:	b004      	add	sp, #16
     bce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
prvIsQueueFull():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2342
	taskEXIT_CRITICAL();
     bd2:	f7ff fcb9 	bl	548 <vPortExitCritical>
xQueueGenericSend():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:940
				prvUnlockQueue( pxQueue );
     bd6:	4620      	mov	r0, r4
     bd8:	f7ff fe88 	bl	8ec <prvUnlockQueue>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:941
				( void ) xTaskResumeAll();
     bdc:	f000 fd68 	bl	16b0 <xTaskResumeAll>
     be0:	e7d4      	b.n	b8c <xQueueGenericSend+0xd4>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:934
					portYIELD_WITHIN_API();
     be2:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
     be6:	f8ca 3000 	str.w	r3, [sl]
     bea:	f3bf 8f4f 	dsb	sy
     bee:	f3bf 8f6f 	isb	sy
     bf2:	e7cb      	b.n	b8c <xQueueGenericSend+0xd4>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:947
			prvUnlockQueue( pxQueue );
     bf4:	4620      	mov	r0, r4
     bf6:	f7ff fe79 	bl	8ec <prvUnlockQueue>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:948
			( void ) xTaskResumeAll();
     bfa:	f000 fd59 	bl	16b0 <xTaskResumeAll>
     bfe:	e792      	b.n	b26 <xQueueGenericSend+0x6e>
     c00:	0000b1c5 	.word	0x0000b1c5
     c04:	0000b1cd 	.word	0x0000b1cd
     c08:	0000b21d 	.word	0x0000b21d
     c0c:	0000b264 	.word	0x0000b264
     c10:	e000ed04 	.word	0xe000ed04

00000c14 <xQueueCreateMutexStatic>:
xQueueCreateMutexStatic():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:520
	{
     c14:	b513      	push	{r0, r1, r4, lr}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:528
		xNewQueue = xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQueue, ucQueueType );
     c16:	2200      	movs	r2, #0
     c18:	9000      	str	r0, [sp, #0]
     c1a:	460b      	mov	r3, r1
     c1c:	2001      	movs	r0, #1
     c1e:	4611      	mov	r1, r2
     c20:	f7ff feda 	bl	9d8 <xQueueGenericCreateStatic>
prvInitialiseMutex():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:475
		if( pxNewQueue != NULL )
     c24:	4604      	mov	r4, r0
     c26:	b138      	cbz	r0, c38 <xQueueCreateMutexStatic+0x24>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:481
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
     c28:	2300      	movs	r3, #0
     c2a:	6083      	str	r3, [r0, #8]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:482
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
     c2c:	6003      	str	r3, [r0, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:485
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
     c2e:	60c3      	str	r3, [r0, #12]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:490
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
     c30:	461a      	mov	r2, r3
     c32:	4619      	mov	r1, r3
     c34:	f7ff ff40 	bl	ab8 <xQueueGenericSend>
xQueueCreateMutexStatic():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:532
	}
     c38:	4620      	mov	r0, r4
     c3a:	b002      	add	sp, #8
     c3c:	bd10      	pop	{r4, pc}

00000c3e <xQueueCreateMutex>:
xQueueCreateMutex():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:504
	{
     c3e:	b510      	push	{r4, lr}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:508
		xNewQueue = xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
     c40:	4602      	mov	r2, r0
     c42:	2100      	movs	r1, #0
     c44:	2001      	movs	r0, #1
     c46:	f7ff ff11 	bl	a6c <xQueueGenericCreate>
prvInitialiseMutex():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:475
		if( pxNewQueue != NULL )
     c4a:	4604      	mov	r4, r0
     c4c:	b138      	cbz	r0, c5e <xQueueCreateMutex+0x20>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:481
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
     c4e:	2300      	movs	r3, #0
     c50:	6083      	str	r3, [r0, #8]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:482
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
     c52:	6003      	str	r3, [r0, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:485
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
     c54:	60c3      	str	r3, [r0, #12]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:490
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
     c56:	461a      	mov	r2, r3
     c58:	4619      	mov	r1, r3
     c5a:	f7ff ff2d 	bl	ab8 <xQueueGenericSend>
xQueueCreateMutex():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:512
	}
     c5e:	4620      	mov	r0, r4
     c60:	bd10      	pop	{r4, pc}
     c62:	Address 0x00000c62 is out of bounds.


00000c64 <xQueueGenericSendFromISR>:
xQueueGenericSendFromISR():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:958
{
     c64:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
     c68:	4689      	mov	r9, r1
     c6a:	4690      	mov	r8, r2
     c6c:	461f      	mov	r7, r3
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:963
	configASSERT( pxQueue );
     c6e:	4604      	mov	r4, r0
     c70:	b928      	cbnz	r0, c7e <xQueueGenericSendFromISR+0x1a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:963 (discriminator 1)
     c72:	4928      	ldr	r1, [pc, #160]	; (d14 <xQueueGenericSendFromISR+0xb0>)
     c74:	f240 30c3 	movw	r0, #963	; 0x3c3
     c78:	f003 fe80 	bl	497c <configASSERT_callback>
     c7c:	e7fe      	b.n	c7c <xQueueGenericSendFromISR+0x18>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:964
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
     c7e:	b939      	cbnz	r1, c90 <xQueueGenericSendFromISR+0x2c>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:964 (discriminator 1)
     c80:	6c03      	ldr	r3, [r0, #64]	; 0x40
     c82:	b12b      	cbz	r3, c90 <xQueueGenericSendFromISR+0x2c>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:964 (discriminator 2)
     c84:	4924      	ldr	r1, [pc, #144]	; (d18 <xQueueGenericSendFromISR+0xb4>)
     c86:	f44f 7071 	mov.w	r0, #964	; 0x3c4
     c8a:	f003 fe77 	bl	497c <configASSERT_callback>
     c8e:	e7fe      	b.n	c8e <xQueueGenericSendFromISR+0x2a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:965
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
     c90:	2f02      	cmp	r7, #2
     c92:	d108      	bne.n	ca6 <xQueueGenericSendFromISR+0x42>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:965 (discriminator 1)
     c94:	6be3      	ldr	r3, [r4, #60]	; 0x3c
     c96:	2b01      	cmp	r3, #1
     c98:	d005      	beq.n	ca6 <xQueueGenericSendFromISR+0x42>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:965 (discriminator 2)
     c9a:	4920      	ldr	r1, [pc, #128]	; (d1c <xQueueGenericSendFromISR+0xb8>)
     c9c:	f240 30c5 	movw	r0, #965	; 0x3c5
     ca0:	f003 fe6c 	bl	497c <configASSERT_callback>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:965 (discriminator 3)
     ca4:	e7fe      	b.n	ca4 <xQueueGenericSendFromISR+0x40>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:981
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
     ca6:	f7ff fd43 	bl	730 <vPortValidateInterruptPriority>
ulPortRaiseBASEPRI():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/portmacro.h:211
	__asm volatile
     caa:	f3ef 8611 	mrs	r6, BASEPRI
     cae:	f04f 0318 	mov.w	r3, #24
     cb2:	f383 8811 	msr	BASEPRI, r3
     cb6:	f3bf 8f6f 	isb	sy
     cba:	f3bf 8f4f 	dsb	sy
xQueueGenericSendFromISR():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:990
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
     cbe:	6ba2      	ldr	r2, [r4, #56]	; 0x38
     cc0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
     cc2:	429a      	cmp	r2, r3
     cc4:	d301      	bcc.n	cca <xQueueGenericSendFromISR+0x66>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:990 (discriminator 1)
     cc6:	2f02      	cmp	r7, #2
     cc8:	d122      	bne.n	d10 <xQueueGenericSendFromISR+0xac>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:992
			const int8_t cTxLock = pxQueue->cTxLock;
     cca:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1001
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
     cce:	463a      	mov	r2, r7
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:992
			const int8_t cTxLock = pxQueue->cTxLock;
     cd0:	b26d      	sxtb	r5, r5
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1001
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
     cd2:	4649      	mov	r1, r9
     cd4:	4620      	mov	r0, r4
     cd6:	f7ff fdbf 	bl	858 <prvCopyDataToQueue>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1005
			if( cTxLock == queueUNLOCKED )
     cda:	1c6b      	adds	r3, r5, #1
     cdc:	d113      	bne.n	d06 <xQueueGenericSendFromISR+0xa2>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1060
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
     cde:	6a63      	ldr	r3, [r4, #36]	; 0x24
     ce0:	b90b      	cbnz	r3, ce6 <xQueueGenericSendFromISR+0x82>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1094
			xReturn = pdPASS;
     ce2:	2001      	movs	r0, #1
     ce4:	e00b      	b.n	cfe <xQueueGenericSendFromISR+0x9a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1062
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
     ce6:	f104 0024 	add.w	r0, r4, #36	; 0x24
     cea:	f000 fdf1 	bl	18d0 <xTaskRemoveFromEventList>
     cee:	2800      	cmp	r0, #0
     cf0:	d0f7      	beq.n	ce2 <xQueueGenericSendFromISR+0x7e>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1066
							if( pxHigherPriorityTaskWoken != NULL )
     cf2:	f1b8 0f00 	cmp.w	r8, #0
     cf6:	d0f4      	beq.n	ce2 <xQueueGenericSendFromISR+0x7e>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1068
								*pxHigherPriorityTaskWoken = pdTRUE;
     cf8:	2001      	movs	r0, #1
     cfa:	f8c8 0000 	str.w	r0, [r8]
vPortSetBASEPRI():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/portmacro.h:229
	__asm volatile
     cfe:	f386 8811 	msr	BASEPRI, r6
xQueueGenericSendFromISR():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1105
}
     d02:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1091
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
     d06:	3501      	adds	r5, #1
     d08:	b26d      	sxtb	r5, r5
     d0a:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
     d0e:	e7e8      	b.n	ce2 <xQueueGenericSendFromISR+0x7e>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1099
			xReturn = errQUEUE_FULL;
     d10:	2000      	movs	r0, #0
     d12:	e7f4      	b.n	cfe <xQueueGenericSendFromISR+0x9a>
     d14:	0000b1c5 	.word	0x0000b1c5
     d18:	0000b1cd 	.word	0x0000b1cd
     d1c:	0000b21d 	.word	0x0000b21d

00000d20 <xQueueGiveFromISR>:
xQueueGiveFromISR():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1109
{
     d20:	b570      	push	{r4, r5, r6, lr}
     d22:	460d      	mov	r5, r1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1120
	configASSERT( pxQueue );
     d24:	4604      	mov	r4, r0
     d26:	b928      	cbnz	r0, d34 <xQueueGiveFromISR+0x14>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1120 (discriminator 1)
     d28:	4923      	ldr	r1, [pc, #140]	; (db8 <xQueueGiveFromISR+0x98>)
     d2a:	f44f 608c 	mov.w	r0, #1120	; 0x460
     d2e:	f003 fe25 	bl	497c <configASSERT_callback>
     d32:	e7fe      	b.n	d32 <xQueueGiveFromISR+0x12>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1124
	configASSERT( pxQueue->uxItemSize == 0 );
     d34:	6c03      	ldr	r3, [r0, #64]	; 0x40
     d36:	b12b      	cbz	r3, d44 <xQueueGiveFromISR+0x24>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1124 (discriminator 1)
     d38:	4920      	ldr	r1, [pc, #128]	; (dbc <xQueueGiveFromISR+0x9c>)
     d3a:	f240 4064 	movw	r0, #1124	; 0x464
     d3e:	f003 fe1d 	bl	497c <configASSERT_callback>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1124 (discriminator 2)
     d42:	e7fe      	b.n	d42 <xQueueGiveFromISR+0x22>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1129
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
     d44:	6803      	ldr	r3, [r0, #0]
     d46:	b93b      	cbnz	r3, d58 <xQueueGiveFromISR+0x38>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1129 (discriminator 1)
     d48:	6883      	ldr	r3, [r0, #8]
     d4a:	b12b      	cbz	r3, d58 <xQueueGiveFromISR+0x38>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1129 (discriminator 2)
     d4c:	491c      	ldr	r1, [pc, #112]	; (dc0 <xQueueGiveFromISR+0xa0>)
     d4e:	f240 4069 	movw	r0, #1129	; 0x469
     d52:	f003 fe13 	bl	497c <configASSERT_callback>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1129 (discriminator 3)
     d56:	e7fe      	b.n	d56 <xQueueGiveFromISR+0x36>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1145
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
     d58:	f7ff fcea 	bl	730 <vPortValidateInterruptPriority>
ulPortRaiseBASEPRI():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/portmacro.h:211
	__asm volatile
     d5c:	f3ef 8611 	mrs	r6, BASEPRI
     d60:	f04f 0318 	mov.w	r3, #24
     d64:	f383 8811 	msr	BASEPRI, r3
     d68:	f3bf 8f6f 	isb	sy
     d6c:	f3bf 8f4f 	dsb	sy
xQueueGiveFromISR():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1149
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
     d70:	6ba2      	ldr	r2, [r4, #56]	; 0x38
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1154
		if( uxMessagesWaiting < pxQueue->uxLength )
     d72:	6be3      	ldr	r3, [r4, #60]	; 0x3c
     d74:	4293      	cmp	r3, r2
     d76:	d91c      	bls.n	db2 <xQueueGiveFromISR+0x92>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1156
			const int8_t cTxLock = pxQueue->cTxLock;
     d78:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1166
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
     d7c:	3201      	adds	r2, #1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1156
			const int8_t cTxLock = pxQueue->cTxLock;
     d7e:	b25b      	sxtb	r3, r3
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1166
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
     d80:	63a2      	str	r2, [r4, #56]	; 0x38
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1170
			if( cTxLock == queueUNLOCKED )
     d82:	1c5a      	adds	r2, r3, #1
     d84:	d110      	bne.n	da8 <xQueueGiveFromISR+0x88>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1225
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
     d86:	6a63      	ldr	r3, [r4, #36]	; 0x24
     d88:	b90b      	cbnz	r3, d8e <xQueueGiveFromISR+0x6e>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1259
			xReturn = pdPASS;
     d8a:	2001      	movs	r0, #1
     d8c:	e009      	b.n	da2 <xQueueGiveFromISR+0x82>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1227
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
     d8e:	f104 0024 	add.w	r0, r4, #36	; 0x24
     d92:	f000 fd9d 	bl	18d0 <xTaskRemoveFromEventList>
     d96:	2800      	cmp	r0, #0
     d98:	d0f7      	beq.n	d8a <xQueueGiveFromISR+0x6a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1231
							if( pxHigherPriorityTaskWoken != NULL )
     d9a:	2d00      	cmp	r5, #0
     d9c:	d0f5      	beq.n	d8a <xQueueGiveFromISR+0x6a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1233
								*pxHigherPriorityTaskWoken = pdTRUE;
     d9e:	2001      	movs	r0, #1
     da0:	6028      	str	r0, [r5, #0]
vPortSetBASEPRI():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/portmacro.h:229
	__asm volatile
     da2:	f386 8811 	msr	BASEPRI, r6
xQueueGiveFromISR():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1270
}
     da6:	bd70      	pop	{r4, r5, r6, pc}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1256
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
     da8:	3301      	adds	r3, #1
     daa:	b25b      	sxtb	r3, r3
     dac:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
     db0:	e7eb      	b.n	d8a <xQueueGiveFromISR+0x6a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1264
			xReturn = errQUEUE_FULL;
     db2:	2000      	movs	r0, #0
     db4:	e7f5      	b.n	da2 <xQueueGiveFromISR+0x82>
     db6:	bf00      	nop
     db8:	0000b1c5 	.word	0x0000b1c5
     dbc:	0000b2ba 	.word	0x0000b2ba
     dc0:	0000b2d3 	.word	0x0000b2d3

00000dc4 <xQueueReceive>:
xQueueReceive():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1274
{
     dc4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
     dc8:	b085      	sub	sp, #20
     dca:	460f      	mov	r7, r1
     dcc:	9201      	str	r2, [sp, #4]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1280
	configASSERT( ( pxQueue ) );
     dce:	4604      	mov	r4, r0
     dd0:	b928      	cbnz	r0, dde <xQueueReceive+0x1a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1280 (discriminator 1)
     dd2:	4947      	ldr	r1, [pc, #284]	; (ef0 <xQueueReceive+0x12c>)
     dd4:	f44f 60a0 	mov.w	r0, #1280	; 0x500
     dd8:	f003 fdd0 	bl	497c <configASSERT_callback>
     ddc:	e7fe      	b.n	ddc <xQueueReceive+0x18>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1284
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
     dde:	b939      	cbnz	r1, df0 <xQueueReceive+0x2c>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1284 (discriminator 1)
     de0:	6c03      	ldr	r3, [r0, #64]	; 0x40
     de2:	b12b      	cbz	r3, df0 <xQueueReceive+0x2c>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1284 (discriminator 2)
     de4:	4943      	ldr	r1, [pc, #268]	; (ef4 <xQueueReceive+0x130>)
     de6:	f240 5004 	movw	r0, #1284	; 0x504
     dea:	f003 fdc7 	bl	497c <configASSERT_callback>
     dee:	e7fe      	b.n	dee <xQueueReceive+0x2a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1289
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
     df0:	f000 feb2 	bl	1b58 <xTaskGetSchedulerState>
     df4:	4606      	mov	r6, r0
     df6:	b938      	cbnz	r0, e08 <xQueueReceive+0x44>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1289 (discriminator 1)
     df8:	9b01      	ldr	r3, [sp, #4]
     dfa:	b133      	cbz	r3, e0a <xQueueReceive+0x46>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1289 (discriminator 2)
     dfc:	493e      	ldr	r1, [pc, #248]	; (ef8 <xQueueReceive+0x134>)
     dfe:	f240 5009 	movw	r0, #1289	; 0x509
     e02:	f003 fdbb 	bl	497c <configASSERT_callback>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1289 (discriminator 3)
     e06:	e7fe      	b.n	e06 <xQueueReceive+0x42>
     e08:	2600      	movs	r6, #0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1364
		prvLockQueue( pxQueue );
     e0a:	f04f 0800 	mov.w	r8, #0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1378
					portYIELD_WITHIN_API();
     e0e:	f8df 90ec 	ldr.w	r9, [pc, #236]	; efc <xQueueReceive+0x138>
     e12:	e03b      	b.n	e8c <xQueueReceive+0xc8>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1336
				if( xTicksToWait == ( TickType_t ) 0 )
     e14:	9d01      	ldr	r5, [sp, #4]
     e16:	b91d      	cbnz	r5, e20 <xQueueReceive+0x5c>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1340
					taskEXIT_CRITICAL();
     e18:	f7ff fb96 	bl	548 <vPortExitCritical>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1403
				return errQUEUE_EMPTY;
     e1c:	2000      	movs	r0, #0
     e1e:	e052      	b.n	ec6 <xQueueReceive+0x102>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1344
				else if( xEntryTimeSet == pdFALSE )
     e20:	b916      	cbnz	r6, e28 <xQueueReceive+0x64>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1348
					vTaskInternalSetTimeOutState( &xTimeOut );
     e22:	a802      	add	r0, sp, #8
     e24:	f000 fd94 	bl	1950 <vTaskInternalSetTimeOutState>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1358
		taskEXIT_CRITICAL();
     e28:	f7ff fb8e 	bl	548 <vPortExitCritical>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1363
		vTaskSuspendAll();
     e2c:	f000 fba6 	bl	157c <vTaskSuspendAll>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1364
		prvLockQueue( pxQueue );
     e30:	f7ff fb68 	bl	504 <vPortEnterCritical>
     e34:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
     e38:	2bff      	cmp	r3, #255	; 0xff
     e3a:	bf08      	it	eq
     e3c:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
     e40:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
     e44:	2bff      	cmp	r3, #255	; 0xff
     e46:	bf08      	it	eq
     e48:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
     e4c:	f7ff fb7c 	bl	548 <vPortExitCritical>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1367
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
     e50:	a901      	add	r1, sp, #4
     e52:	a802      	add	r0, sp, #8
     e54:	f000 fd88 	bl	1968 <xTaskCheckForTimeOut>
     e58:	2800      	cmp	r0, #0
     e5a:	d13d      	bne.n	ed8 <xQueueReceive+0x114>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1371
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
     e5c:	4620      	mov	r0, r4
     e5e:	f7ff fcf0 	bl	842 <prvIsQueueEmpty>
     e62:	b398      	cbz	r0, ecc <xQueueReceive+0x108>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1374
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
     e64:	9901      	ldr	r1, [sp, #4]
     e66:	f104 0024 	add.w	r0, r4, #36	; 0x24
     e6a:	f000 fd19 	bl	18a0 <vTaskPlaceOnEventList>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1375
				prvUnlockQueue( pxQueue );
     e6e:	4620      	mov	r0, r4
     e70:	f7ff fd3c 	bl	8ec <prvUnlockQueue>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1376
				if( xTaskResumeAll() == pdFALSE )
     e74:	f000 fc1c 	bl	16b0 <xTaskResumeAll>
     e78:	b938      	cbnz	r0, e8a <xQueueReceive+0xc6>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1378
					portYIELD_WITHIN_API();
     e7a:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
     e7e:	f8c9 3000 	str.w	r3, [r9]
     e82:	f3bf 8f4f 	dsb	sy
     e86:	f3bf 8f6f 	isb	sy
     e8a:	2601      	movs	r6, #1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1299
		taskENTER_CRITICAL();
     e8c:	f7ff fb3a 	bl	504 <vPortEnterCritical>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1301
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
     e90:	6ba5      	ldr	r5, [r4, #56]	; 0x38
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1305
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
     e92:	2d00      	cmp	r5, #0
     e94:	d0be      	beq.n	e14 <xQueueReceive+0x50>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1308
				prvCopyDataFromQueue( pxQueue, pvBuffer );
     e96:	4639      	mov	r1, r7
     e98:	4620      	mov	r0, r4
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1310
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
     e9a:	3d01      	subs	r5, #1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1308
				prvCopyDataFromQueue( pxQueue, pvBuffer );
     e9c:	f7ff fd11 	bl	8c2 <prvCopyDataFromQueue>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1310
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
     ea0:	63a5      	str	r5, [r4, #56]	; 0x38
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1315
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
     ea2:	6923      	ldr	r3, [r4, #16]
     ea4:	b163      	cbz	r3, ec0 <xQueueReceive+0xfc>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1317
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
     ea6:	f104 0010 	add.w	r0, r4, #16
     eaa:	f000 fd11 	bl	18d0 <xTaskRemoveFromEventList>
     eae:	b138      	cbz	r0, ec0 <xQueueReceive+0xfc>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1319
						queueYIELD_IF_USING_PREEMPTION();
     eb0:	4b12      	ldr	r3, [pc, #72]	; (efc <xQueueReceive+0x138>)
     eb2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
     eb6:	601a      	str	r2, [r3, #0]
     eb8:	f3bf 8f4f 	dsb	sy
     ebc:	f3bf 8f6f 	isb	sy
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1331
				taskEXIT_CRITICAL();
     ec0:	f7ff fb42 	bl	548 <vPortExitCritical>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1332
				return pdPASS;
     ec4:	2001      	movs	r0, #1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1411
}
     ec6:	b005      	add	sp, #20
     ec8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1389
				prvUnlockQueue( pxQueue );
     ecc:	4620      	mov	r0, r4
     ece:	f7ff fd0d 	bl	8ec <prvUnlockQueue>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1390
				( void ) xTaskResumeAll();
     ed2:	f000 fbed 	bl	16b0 <xTaskResumeAll>
     ed6:	e7d8      	b.n	e8a <xQueueReceive+0xc6>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1397
			prvUnlockQueue( pxQueue );
     ed8:	4620      	mov	r0, r4
     eda:	f7ff fd07 	bl	8ec <prvUnlockQueue>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1398
			( void ) xTaskResumeAll();
     ede:	f000 fbe7 	bl	16b0 <xTaskResumeAll>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1400
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
     ee2:	4620      	mov	r0, r4
     ee4:	f7ff fcad 	bl	842 <prvIsQueueEmpty>
     ee8:	2800      	cmp	r0, #0
     eea:	d0ce      	beq.n	e8a <xQueueReceive+0xc6>
     eec:	e796      	b.n	e1c <xQueueReceive+0x58>
     eee:	bf00      	nop
     ef0:	0000b33a 	.word	0x0000b33a
     ef4:	0000b346 	.word	0x0000b346
     ef8:	0000b264 	.word	0x0000b264
     efc:	e000ed04 	.word	0xe000ed04

00000f00 <xQueueSemaphoreTake>:
xQueueSemaphoreTake():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1415
{
     f00:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1425
	configASSERT( ( pxQueue ) );
     f04:	4604      	mov	r4, r0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1415
{
     f06:	9101      	str	r1, [sp, #4]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1425
	configASSERT( ( pxQueue ) );
     f08:	b928      	cbnz	r0, f16 <xQueueSemaphoreTake+0x16>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1425 (discriminator 1)
     f0a:	4958      	ldr	r1, [pc, #352]	; (106c <xQueueSemaphoreTake+0x16c>)
     f0c:	f240 5091 	movw	r0, #1425	; 0x591
     f10:	f003 fd34 	bl	497c <configASSERT_callback>
     f14:	e7fe      	b.n	f14 <xQueueSemaphoreTake+0x14>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1429
	configASSERT( pxQueue->uxItemSize == 0 );
     f16:	6c05      	ldr	r5, [r0, #64]	; 0x40
     f18:	b12d      	cbz	r5, f26 <xQueueSemaphoreTake+0x26>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1429 (discriminator 1)
     f1a:	4955      	ldr	r1, [pc, #340]	; (1070 <xQueueSemaphoreTake+0x170>)
     f1c:	f240 5095 	movw	r0, #1429	; 0x595
     f20:	f003 fd2c 	bl	497c <configASSERT_callback>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1429 (discriminator 2)
     f24:	e7fe      	b.n	f24 <xQueueSemaphoreTake+0x24>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1434
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
     f26:	f000 fe17 	bl	1b58 <xTaskGetSchedulerState>
     f2a:	4606      	mov	r6, r0
     f2c:	b938      	cbnz	r0, f3e <xQueueSemaphoreTake+0x3e>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1434 (discriminator 1)
     f2e:	9b01      	ldr	r3, [sp, #4]
     f30:	b153      	cbz	r3, f48 <xQueueSemaphoreTake+0x48>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1434 (discriminator 2)
     f32:	4950      	ldr	r1, [pc, #320]	; (1074 <xQueueSemaphoreTake+0x174>)
     f34:	f240 509a 	movw	r0, #1434	; 0x59a
     f38:	f003 fd20 	bl	497c <configASSERT_callback>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1434 (discriminator 3)
     f3c:	e7fe      	b.n	f3c <xQueueSemaphoreTake+0x3c>
     f3e:	462e      	mov	r6, r5
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1535
		prvLockQueue( pxQueue );
     f40:	2700      	movs	r7, #0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1569
					portYIELD_WITHIN_API();
     f42:	f8df 8138 	ldr.w	r8, [pc, #312]	; 107c <xQueueSemaphoreTake+0x17c>
     f46:	e04e      	b.n	fe6 <xQueueSemaphoreTake+0xe6>
     f48:	4605      	mov	r5, r0
     f4a:	e7f9      	b.n	f40 <xQueueSemaphoreTake+0x40>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1498
				if( xTicksToWait == ( TickType_t ) 0 )
     f4c:	9b01      	ldr	r3, [sp, #4]
     f4e:	b94b      	cbnz	r3, f64 <xQueueSemaphoreTake+0x64>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1505
						configASSERT( xInheritanceOccurred == pdFALSE );
     f50:	b12d      	cbz	r5, f5e <xQueueSemaphoreTake+0x5e>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1505 (discriminator 1)
     f52:	4949      	ldr	r1, [pc, #292]	; (1078 <xQueueSemaphoreTake+0x178>)
     f54:	f240 50e1 	movw	r0, #1505	; 0x5e1
     f58:	f003 fd10 	bl	497c <configASSERT_callback>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1505 (discriminator 4)
     f5c:	e7fe      	b.n	f5c <xQueueSemaphoreTake+0x5c>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1511
					taskEXIT_CRITICAL();
     f5e:	f7ff faf3 	bl	548 <vPortExitCritical>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1513
					return errQUEUE_EMPTY;
     f62:	e05e      	b.n	1022 <xQueueSemaphoreTake+0x122>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1515
				else if( xEntryTimeSet == pdFALSE )
     f64:	b916      	cbnz	r6, f6c <xQueueSemaphoreTake+0x6c>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1519
					vTaskInternalSetTimeOutState( &xTimeOut );
     f66:	a802      	add	r0, sp, #8
     f68:	f000 fcf2 	bl	1950 <vTaskInternalSetTimeOutState>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1529
		taskEXIT_CRITICAL();
     f6c:	f7ff faec 	bl	548 <vPortExitCritical>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1534
		vTaskSuspendAll();
     f70:	f000 fb04 	bl	157c <vTaskSuspendAll>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1535
		prvLockQueue( pxQueue );
     f74:	f7ff fac6 	bl	504 <vPortEnterCritical>
     f78:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
     f7c:	2bff      	cmp	r3, #255	; 0xff
     f7e:	bf08      	it	eq
     f80:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
     f84:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
     f88:	2bff      	cmp	r3, #255	; 0xff
     f8a:	bf08      	it	eq
     f8c:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
     f90:	f7ff fada 	bl	548 <vPortExitCritical>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1538
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
     f94:	a901      	add	r1, sp, #4
     f96:	a802      	add	r0, sp, #8
     f98:	f000 fce6 	bl	1968 <xTaskCheckForTimeOut>
     f9c:	2800      	cmp	r0, #0
     f9e:	d14a      	bne.n	1036 <xQueueSemaphoreTake+0x136>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1544
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
     fa0:	4620      	mov	r0, r4
     fa2:	f7ff fc4e 	bl	842 <prvIsQueueEmpty>
     fa6:	2800      	cmp	r0, #0
     fa8:	d03f      	beq.n	102a <xQueueSemaphoreTake+0x12a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1550
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
     faa:	6823      	ldr	r3, [r4, #0]
     fac:	b93b      	cbnz	r3, fbe <xQueueSemaphoreTake+0xbe>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1552
						taskENTER_CRITICAL();
     fae:	f7ff faa9 	bl	504 <vPortEnterCritical>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1554
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
     fb2:	68a0      	ldr	r0, [r4, #8]
     fb4:	f000 fde0 	bl	1b78 <xTaskPriorityInherit>
     fb8:	4605      	mov	r5, r0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1556
						taskEXIT_CRITICAL();
     fba:	f7ff fac5 	bl	548 <vPortExitCritical>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1565
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
     fbe:	9901      	ldr	r1, [sp, #4]
     fc0:	f104 0024 	add.w	r0, r4, #36	; 0x24
     fc4:	f000 fc6c 	bl	18a0 <vTaskPlaceOnEventList>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1566
				prvUnlockQueue( pxQueue );
     fc8:	4620      	mov	r0, r4
     fca:	f7ff fc8f 	bl	8ec <prvUnlockQueue>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1567
				if( xTaskResumeAll() == pdFALSE )
     fce:	f000 fb6f 	bl	16b0 <xTaskResumeAll>
     fd2:	b938      	cbnz	r0, fe4 <xQueueSemaphoreTake+0xe4>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1569
					portYIELD_WITHIN_API();
     fd4:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
     fd8:	f8c8 3000 	str.w	r3, [r8]
     fdc:	f3bf 8f4f 	dsb	sy
     fe0:	f3bf 8f6f 	isb	sy
     fe4:	2601      	movs	r6, #1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1444
		taskENTER_CRITICAL();
     fe6:	f7ff fa8d 	bl	504 <vPortEnterCritical>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1448
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
     fea:	6ba3      	ldr	r3, [r4, #56]	; 0x38
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1452
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
     fec:	2b00      	cmp	r3, #0
     fee:	d0ad      	beq.n	f4c <xQueueSemaphoreTake+0x4c>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1458
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
     ff0:	3b01      	subs	r3, #1
     ff2:	63a3      	str	r3, [r4, #56]	; 0x38
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1462
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
     ff4:	6823      	ldr	r3, [r4, #0]
     ff6:	b913      	cbnz	r3, ffe <xQueueSemaphoreTake+0xfe>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1466
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
     ff8:	f000 feb6 	bl	1d68 <pvTaskIncrementMutexHeldCount>
     ffc:	60a0      	str	r0, [r4, #8]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1477
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
     ffe:	6923      	ldr	r3, [r4, #16]
    1000:	b163      	cbz	r3, 101c <xQueueSemaphoreTake+0x11c>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1479
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
    1002:	f104 0010 	add.w	r0, r4, #16
    1006:	f000 fc63 	bl	18d0 <xTaskRemoveFromEventList>
    100a:	b138      	cbz	r0, 101c <xQueueSemaphoreTake+0x11c>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1481
						queueYIELD_IF_USING_PREEMPTION();
    100c:	4b1b      	ldr	r3, [pc, #108]	; (107c <xQueueSemaphoreTake+0x17c>)
    100e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    1012:	601a      	str	r2, [r3, #0]
    1014:	f3bf 8f4f 	dsb	sy
    1018:	f3bf 8f6f 	isb	sy
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1493
				taskEXIT_CRITICAL();
    101c:	f7ff fa94 	bl	548 <vPortExitCritical>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1494
				return pdPASS;
    1020:	2501      	movs	r5, #1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1629
}
    1022:	4628      	mov	r0, r5
    1024:	b004      	add	sp, #16
    1026:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1580
				prvUnlockQueue( pxQueue );
    102a:	4620      	mov	r0, r4
    102c:	f7ff fc5e 	bl	8ec <prvUnlockQueue>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1581
				( void ) xTaskResumeAll();
    1030:	f000 fb3e 	bl	16b0 <xTaskResumeAll>
    1034:	e7d6      	b.n	fe4 <xQueueSemaphoreTake+0xe4>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1587
			prvUnlockQueue( pxQueue );
    1036:	4620      	mov	r0, r4
    1038:	f7ff fc58 	bl	8ec <prvUnlockQueue>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1588
			( void ) xTaskResumeAll();
    103c:	f000 fb38 	bl	16b0 <xTaskResumeAll>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1594
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
    1040:	4620      	mov	r0, r4
    1042:	f7ff fbfe 	bl	842 <prvIsQueueEmpty>
    1046:	2800      	cmp	r0, #0
    1048:	d0cc      	beq.n	fe4 <xQueueSemaphoreTake+0xe4>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1601
					if( xInheritanceOccurred != pdFALSE )
    104a:	2d00      	cmp	r5, #0
    104c:	d0e9      	beq.n	1022 <xQueueSemaphoreTake+0x122>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1603
						taskENTER_CRITICAL();
    104e:	f7ff fa59 	bl	504 <vPortEnterCritical>
prvGetDisinheritPriorityAfterTimeout():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2055
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
    1052:	6a61      	ldr	r1, [r4, #36]	; 0x24
    1054:	b119      	cbz	r1, 105e <xQueueSemaphoreTake+0x15e>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2057
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
    1056:	6b23      	ldr	r3, [r4, #48]	; 0x30
    1058:	6819      	ldr	r1, [r3, #0]
    105a:	f1c1 010a 	rsb	r1, r1, #10
xQueueSemaphoreTake():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1613
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
    105e:	68a0      	ldr	r0, [r4, #8]
    1060:	f000 fe2a 	bl	1cb8 <vTaskPriorityDisinheritAfterTimeout>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1621
				return errQUEUE_EMPTY;
    1064:	2500      	movs	r5, #0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1615
						taskEXIT_CRITICAL();
    1066:	f7ff fa6f 	bl	548 <vPortExitCritical>
    106a:	e7da      	b.n	1022 <xQueueSemaphoreTake+0x122>
    106c:	0000b33a 	.word	0x0000b33a
    1070:	0000b2ba 	.word	0x0000b2ba
    1074:	0000b264 	.word	0x0000b264
    1078:	0000b3e4 	.word	0x0000b3e4
    107c:	e000ed04 	.word	0xe000ed04

00001080 <xQueueReceiveFromISR>:
xQueueReceiveFromISR():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1782
{
    1080:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    1084:	4689      	mov	r9, r1
    1086:	4690      	mov	r8, r2
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1787
	configASSERT( pxQueue );
    1088:	4605      	mov	r5, r0
    108a:	b928      	cbnz	r0, 1098 <xQueueReceiveFromISR+0x18>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1787 (discriminator 1)
    108c:	4921      	ldr	r1, [pc, #132]	; (1114 <xQueueReceiveFromISR+0x94>)
    108e:	f240 60fb 	movw	r0, #1787	; 0x6fb
    1092:	f003 fc73 	bl	497c <configASSERT_callback>
    1096:	e7fe      	b.n	1096 <xQueueReceiveFromISR+0x16>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1788
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
    1098:	b939      	cbnz	r1, 10aa <xQueueReceiveFromISR+0x2a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1788 (discriminator 1)
    109a:	6c03      	ldr	r3, [r0, #64]	; 0x40
    109c:	b12b      	cbz	r3, 10aa <xQueueReceiveFromISR+0x2a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1788 (discriminator 2)
    109e:	491e      	ldr	r1, [pc, #120]	; (1118 <xQueueReceiveFromISR+0x98>)
    10a0:	f240 60fc 	movw	r0, #1788	; 0x6fc
    10a4:	f003 fc6a 	bl	497c <configASSERT_callback>
    10a8:	e7fe      	b.n	10a8 <xQueueReceiveFromISR+0x28>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1804
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
    10aa:	f7ff fb41 	bl	730 <vPortValidateInterruptPriority>
ulPortRaiseBASEPRI():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/portmacro.h:211
	__asm volatile
    10ae:	f3ef 8711 	mrs	r7, BASEPRI
    10b2:	f04f 0318 	mov.w	r3, #24
    10b6:	f383 8811 	msr	BASEPRI, r3
    10ba:	f3bf 8f6f 	isb	sy
    10be:	f3bf 8f4f 	dsb	sy
xQueueReceiveFromISR():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1808
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
    10c2:	6bac      	ldr	r4, [r5, #56]	; 0x38
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1811
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
    10c4:	b31c      	cbz	r4, 110e <xQueueReceiveFromISR+0x8e>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1813
			const int8_t cRxLock = pxQueue->cRxLock;
    10c6:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1817
			prvCopyDataFromQueue( pxQueue, pvBuffer );
    10ca:	4649      	mov	r1, r9
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1813
			const int8_t cRxLock = pxQueue->cRxLock;
    10cc:	b276      	sxtb	r6, r6
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1817
			prvCopyDataFromQueue( pxQueue, pvBuffer );
    10ce:	4628      	mov	r0, r5
    10d0:	f7ff fbf7 	bl	8c2 <prvCopyDataFromQueue>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1818
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
    10d4:	3c01      	subs	r4, #1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1824
			if( cRxLock == queueUNLOCKED )
    10d6:	1c73      	adds	r3, r6, #1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1818
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
    10d8:	63ac      	str	r4, [r5, #56]	; 0x38
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1824
			if( cRxLock == queueUNLOCKED )
    10da:	d113      	bne.n	1104 <xQueueReceiveFromISR+0x84>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1826
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
    10dc:	692b      	ldr	r3, [r5, #16]
    10de:	b90b      	cbnz	r3, 10e4 <xQueueReceiveFromISR+0x64>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1858
			xReturn = pdPASS;
    10e0:	2001      	movs	r0, #1
    10e2:	e00b      	b.n	10fc <xQueueReceiveFromISR+0x7c>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1828
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
    10e4:	f105 0010 	add.w	r0, r5, #16
    10e8:	f000 fbf2 	bl	18d0 <xTaskRemoveFromEventList>
    10ec:	2800      	cmp	r0, #0
    10ee:	d0f7      	beq.n	10e0 <xQueueReceiveFromISR+0x60>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1832
						if( pxHigherPriorityTaskWoken != NULL )
    10f0:	f1b8 0f00 	cmp.w	r8, #0
    10f4:	d0f4      	beq.n	10e0 <xQueueReceiveFromISR+0x60>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1834
							*pxHigherPriorityTaskWoken = pdTRUE;
    10f6:	2001      	movs	r0, #1
    10f8:	f8c8 0000 	str.w	r0, [r8]
vPortSetBASEPRI():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/portmacro.h:229
	__asm volatile
    10fc:	f387 8811 	msr	BASEPRI, r7
xQueueReceiveFromISR():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1869
}
    1100:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1855
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
    1104:	3601      	adds	r6, #1
    1106:	b276      	sxtb	r6, r6
    1108:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
    110c:	e7e8      	b.n	10e0 <xQueueReceiveFromISR+0x60>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1862
			xReturn = pdFAIL;
    110e:	4620      	mov	r0, r4
    1110:	e7f4      	b.n	10fc <xQueueReceiveFromISR+0x7c>
    1112:	bf00      	nop
    1114:	0000b1c5 	.word	0x0000b1c5
    1118:	0000b399 	.word	0x0000b399

0000111c <vQueueDelete>:
vQueueDelete():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1972
{
    111c:	b508      	push	{r3, lr}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1975
	configASSERT( pxQueue );
    111e:	b928      	cbnz	r0, 112c <vQueueDelete+0x10>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1975 (discriminator 1)
    1120:	4906      	ldr	r1, [pc, #24]	; (113c <vQueueDelete+0x20>)
    1122:	f240 70b7 	movw	r0, #1975	; 0x7b7
    1126:	f003 fc29 	bl	497c <configASSERT_callback>
    112a:	e7fe      	b.n	112a <vQueueDelete+0xe>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1994
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
    112c:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
    1130:	b91b      	cbnz	r3, 113a <vQueueDelete+0x1e>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2010
}
    1132:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:1996
			vPortFree( pxQueue );
    1136:	f7ff bb36 	b.w	7a6 <vPortFree>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/queue.c:2010
}
    113a:	bd08      	pop	{r3, pc}
    113c:	0000b1c5 	.word	0x0000b1c5

00001140 <prvResetRunTimeStatsInList>:
prvResetRunTimeStatsInList():
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:27
}

static void prvResetRunTimeStatsInList(List_t *pxList) {
  volatile tskTCB *pxNextTCB, *pxFirstTCB;

  listGET_OWNER_OF_NEXT_ENTRY(pxFirstTCB, pxList);
    1140:	6843      	ldr	r3, [r0, #4]
    1142:	685b      	ldr	r3, [r3, #4]
    1144:	6043      	str	r3, [r0, #4]
    1146:	f100 0208 	add.w	r2, r0, #8
    114a:	4293      	cmp	r3, r2
    114c:	bf04      	itt	eq
    114e:	68c3      	ldreq	r3, [r0, #12]
    1150:	6043      	streq	r3, [r0, #4]
    1152:	6843      	ldr	r3, [r0, #4]
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:24
static void prvResetRunTimeStatsInList(List_t *pxList) {
    1154:	b530      	push	{r4, r5, lr}
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:27
  listGET_OWNER_OF_NEXT_ENTRY(pxFirstTCB, pxList);
    1156:	68dc      	ldr	r4, [r3, #12]
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:30
  do {
    listGET_OWNER_OF_NEXT_ENTRY(pxNextTCB, pxList);
    pxNextTCB->ulRunTimeCounter = 0;
    1158:	2500      	movs	r5, #0
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:29 (discriminator 4)
    listGET_OWNER_OF_NEXT_ENTRY(pxNextTCB, pxList);
    115a:	685b      	ldr	r3, [r3, #4]
    115c:	429a      	cmp	r2, r3
    115e:	bf08      	it	eq
    1160:	6853      	ldreq	r3, [r2, #4]
    1162:	68d9      	ldr	r1, [r3, #12]
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:31 (discriminator 4)
  } while (pxNextTCB != pxFirstTCB);
    1164:	428c      	cmp	r4, r1
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:30 (discriminator 4)
    pxNextTCB->ulRunTimeCounter = 0;
    1166:	650d      	str	r5, [r1, #80]	; 0x50
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:31 (discriminator 4)
  } while (pxNextTCB != pxFirstTCB);
    1168:	d1f7      	bne.n	115a <prvResetRunTimeStatsInList+0x1a>
    116a:	6043      	str	r3, [r0, #4]
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:32
}
    116c:	bd30      	pop	{r4, r5, pc}
    116e:	Address 0x0000116e is out of bounds.


00001170 <prvAddNewTaskToReadyList>:
prvAddNewTaskToReadyList():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1073
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
    1170:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    1174:	4604      	mov	r4, r0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1076
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
    1176:	f7ff f9c5 	bl	504 <vPortEnterCritical>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1078
	{
		uxCurrentNumberOfTasks++;
    117a:	4b2d      	ldr	r3, [pc, #180]	; (1230 <prvAddNewTaskToReadyList+0xc0>)
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1079
		if( pxCurrentTCB == NULL )
    117c:	4d2d      	ldr	r5, [pc, #180]	; (1234 <prvAddNewTaskToReadyList+0xc4>)
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1078
		uxCurrentNumberOfTasks++;
    117e:	681a      	ldr	r2, [r3, #0]
    1180:	4f2d      	ldr	r7, [pc, #180]	; (1238 <prvAddNewTaskToReadyList+0xc8>)
    1182:	3201      	adds	r2, #1
    1184:	601a      	str	r2, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1079
		if( pxCurrentTCB == NULL )
    1186:	682e      	ldr	r6, [r5, #0]
    1188:	2e00      	cmp	r6, #0
    118a:	d146      	bne.n	121a <prvAddNewTaskToReadyList+0xaa>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1083
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
    118c:	602c      	str	r4, [r5, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1085

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
    118e:	681b      	ldr	r3, [r3, #0]
    1190:	2b01      	cmp	r3, #1
    1192:	d11c      	bne.n	11ce <prvAddNewTaskToReadyList+0x5e>
    1194:	46b8      	mov	r8, r7
prvInitialiseTaskLists():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3552
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
    1196:	4640      	mov	r0, r8
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3550
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
    1198:	3601      	adds	r6, #1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3552
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
    119a:	f7ff fb11 	bl	7c0 <vListInitialise>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3550
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
    119e:	2e0a      	cmp	r6, #10
    11a0:	f108 0814 	add.w	r8, r8, #20
    11a4:	d1f7      	bne.n	1196 <prvAddNewTaskToReadyList+0x26>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3555
	}

	vListInitialise( &xDelayedTaskList1 );
    11a6:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 1260 <prvAddNewTaskToReadyList+0xf0>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3556
	vListInitialise( &xDelayedTaskList2 );
    11aa:	4e24      	ldr	r6, [pc, #144]	; (123c <prvAddNewTaskToReadyList+0xcc>)
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3555
	vListInitialise( &xDelayedTaskList1 );
    11ac:	4640      	mov	r0, r8
    11ae:	f7ff fb07 	bl	7c0 <vListInitialise>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3556
	vListInitialise( &xDelayedTaskList2 );
    11b2:	4630      	mov	r0, r6
    11b4:	f7ff fb04 	bl	7c0 <vListInitialise>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3557
	vListInitialise( &xPendingReadyList );
    11b8:	4821      	ldr	r0, [pc, #132]	; (1240 <prvAddNewTaskToReadyList+0xd0>)
    11ba:	f7ff fb01 	bl	7c0 <vListInitialise>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3567
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
    11be:	4821      	ldr	r0, [pc, #132]	; (1244 <prvAddNewTaskToReadyList+0xd4>)
    11c0:	f7ff fafe 	bl	7c0 <vListInitialise>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3573
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
    11c4:	4b20      	ldr	r3, [pc, #128]	; (1248 <prvAddNewTaskToReadyList+0xd8>)
    11c6:	f8c3 8000 	str.w	r8, [r3]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3574
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
    11ca:	4b20      	ldr	r3, [pc, #128]	; (124c <prvAddNewTaskToReadyList+0xdc>)
    11cc:	601e      	str	r6, [r3, #0]
prvAddNewTaskToReadyList():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1119
		uxTaskNumber++;
    11ce:	4a20      	ldr	r2, [pc, #128]	; (1250 <prvAddNewTaskToReadyList+0xe0>)
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1129
		prvAddTaskToReadyList( pxNewTCB );
    11d0:	4920      	ldr	r1, [pc, #128]	; (1254 <prvAddNewTaskToReadyList+0xe4>)
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1119
		uxTaskNumber++;
    11d2:	6813      	ldr	r3, [r2, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1129
		prvAddTaskToReadyList( pxNewTCB );
    11d4:	6808      	ldr	r0, [r1, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1119
		uxTaskNumber++;
    11d6:	3301      	adds	r3, #1
    11d8:	6013      	str	r3, [r2, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1129
		prvAddTaskToReadyList( pxNewTCB );
    11da:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1124
			pxNewTCB->uxTCBNumber = uxTaskNumber;
    11dc:	6423      	str	r3, [r4, #64]	; 0x40
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1129
		prvAddTaskToReadyList( pxNewTCB );
    11de:	2301      	movs	r3, #1
    11e0:	4093      	lsls	r3, r2
    11e2:	4303      	orrs	r3, r0
    11e4:	2014      	movs	r0, #20
    11e6:	600b      	str	r3, [r1, #0]
    11e8:	fb00 7002 	mla	r0, r0, r2, r7
    11ec:	1d21      	adds	r1, r4, #4
    11ee:	f7ff faf5 	bl	7dc <vListInsertEnd>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1133
	taskEXIT_CRITICAL();
    11f2:	f7ff f9a9 	bl	548 <vPortExitCritical>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1135
	if( xSchedulerRunning != pdFALSE )
    11f6:	4b18      	ldr	r3, [pc, #96]	; (1258 <prvAddNewTaskToReadyList+0xe8>)
    11f8:	681b      	ldr	r3, [r3, #0]
    11fa:	b163      	cbz	r3, 1216 <prvAddNewTaskToReadyList+0xa6>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1139
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
    11fc:	682b      	ldr	r3, [r5, #0]
    11fe:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    1200:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    1202:	429a      	cmp	r2, r3
    1204:	d207      	bcs.n	1216 <prvAddNewTaskToReadyList+0xa6>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1141
			taskYIELD_IF_USING_PREEMPTION();
    1206:	4b15      	ldr	r3, [pc, #84]	; (125c <prvAddNewTaskToReadyList+0xec>)
    1208:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    120c:	601a      	str	r2, [r3, #0]
    120e:	f3bf 8f4f 	dsb	sy
    1212:	f3bf 8f6f 	isb	sy
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1152
}
    1216:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1102
			if( xSchedulerRunning == pdFALSE )
    121a:	4b0f      	ldr	r3, [pc, #60]	; (1258 <prvAddNewTaskToReadyList+0xe8>)
    121c:	681b      	ldr	r3, [r3, #0]
    121e:	2b00      	cmp	r3, #0
    1220:	d1d5      	bne.n	11ce <prvAddNewTaskToReadyList+0x5e>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1104
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
    1222:	682b      	ldr	r3, [r5, #0]
    1224:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    1226:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    1228:	429a      	cmp	r2, r3
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1106
					pxCurrentTCB = pxNewTCB;
    122a:	bf98      	it	ls
    122c:	602c      	strls	r4, [r5, #0]
    122e:	e7ce      	b.n	11ce <prvAddNewTaskToReadyList+0x5e>
    1230:	1000041c 	.word	0x1000041c
    1234:	10000344 	.word	0x10000344
    1238:	10000350 	.word	0x10000350
    123c:	10000444 	.word	0x10000444
    1240:	10000464 	.word	0x10000464
    1244:	1000047c 	.word	0x1000047c
    1248:	10000348 	.word	0x10000348
    124c:	1000034c 	.word	0x1000034c
    1250:	10000428 	.word	0x10000428
    1254:	1000042c 	.word	0x1000042c
    1258:	10000478 	.word	0x10000478
    125c:	e000ed04 	.word	0xe000ed04
    1260:	10000430 	.word	0x10000430

00001264 <prvIdleTask>:
prvIdleTask():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3335
{
    1264:	b508      	push	{r3, lr}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3374
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
    1266:	4c07      	ldr	r4, [pc, #28]	; (1284 <prvIdleTask+0x20>)
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3376
				taskYIELD();
    1268:	4d07      	ldr	r5, [pc, #28]	; (1288 <prvIdleTask+0x24>)
    126a:	f04f 5680 	mov.w	r6, #268435456	; 0x10000000
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3374
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
    126e:	6823      	ldr	r3, [r4, #0]
    1270:	2b01      	cmp	r3, #1
    1272:	d904      	bls.n	127e <prvIdleTask+0x1a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3376
				taskYIELD();
    1274:	602e      	str	r6, [r5, #0]
    1276:	f3bf 8f4f 	dsb	sy
    127a:	f3bf 8f6f 	isb	sy
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3394
			vApplicationIdleHook();
    127e:	f003 fb75 	bl	496c <vApplicationIdleHook>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3351
		prvCheckTasksWaitingTermination();
    1282:	e7f4      	b.n	126e <prvIdleTask+0xa>
    1284:	10000350 	.word	0x10000350
    1288:	e000ed04 	.word	0xe000ed04

0000128c <prvResetNextTaskUnblockTime>:
prvResetNextTaskUnblockTime():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3884

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
    128c:	4a06      	ldr	r2, [pc, #24]	; (12a8 <prvResetNextTaskUnblockTime+0x1c>)
    128e:	6813      	ldr	r3, [r2, #0]
    1290:	6819      	ldr	r1, [r3, #0]
    1292:	4b06      	ldr	r3, [pc, #24]	; (12ac <prvResetNextTaskUnblockTime+0x20>)
    1294:	b919      	cbnz	r1, 129e <prvResetNextTaskUnblockTime+0x12>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3890
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
    1296:	f04f 32ff 	mov.w	r2, #4294967295
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3899
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
    129a:	601a      	str	r2, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3901
	}
}
    129c:	4770      	bx	lr
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3898
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    129e:	6812      	ldr	r2, [r2, #0]
    12a0:	68d2      	ldr	r2, [r2, #12]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3899
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
    12a2:	68d2      	ldr	r2, [r2, #12]
    12a4:	6852      	ldr	r2, [r2, #4]
    12a6:	e7f8      	b.n	129a <prvResetNextTaskUnblockTime+0xe>
    12a8:	10000348 	.word	0x10000348
    12ac:	1000045c 	.word	0x1000045c

000012b0 <prvInitialiseNewTask.isra.2>:
prvInitialiseNewTask():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:821
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
    12b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    12b4:	e9dd 6409 	ldrd	r6, r4, [sp, #36]	; 0x24
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:851
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
    12b8:	ea4f 0982 	mov.w	r9, r2, lsl #2
    12bc:	464a      	mov	r2, r9
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:821
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
    12be:	4607      	mov	r7, r0
    12c0:	460d      	mov	r5, r1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:851
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
    12c2:	6b20      	ldr	r0, [r4, #48]	; 0x30
    12c4:	21a5      	movs	r1, #165	; 0xa5
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:821
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
    12c6:	4698      	mov	r8, r3
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:851
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
    12c8:	f004 f9da 	bl	5680 <memset>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:861
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
    12cc:	6b23      	ldr	r3, [r4, #48]	; 0x30
    12ce:	f1a9 0904 	sub.w	r9, r9, #4
    12d2:	4499      	add	r9, r3
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:862
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
    12d4:	f029 0907 	bic.w	r9, r9, #7
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:889
	if( pcName != NULL )
    12d8:	b39d      	cbz	r5, 1342 <prvInitialiseNewTask.isra.2+0x92>
    12da:	1e6b      	subs	r3, r5, #1
    12dc:	f104 0234 	add.w	r2, r4, #52	; 0x34
    12e0:	350b      	adds	r5, #11
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:893
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
    12e2:	f813 1f01 	ldrb.w	r1, [r3, #1]!
    12e6:	f802 1b01 	strb.w	r1, [r2], #1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:898
			if( pcName[ x ] == ( char ) 0x00 )
    12ea:	b109      	cbz	r1, 12f0 <prvInitialiseNewTask.isra.2+0x40>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:891
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
    12ec:	42ab      	cmp	r3, r5
    12ee:	d1f8      	bne.n	12e2 <prvInitialiseNewTask.isra.2+0x32>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:910
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
    12f0:	2300      	movs	r3, #0
    12f2:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:921
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
    12f6:	9d08      	ldr	r5, [sp, #32]
    12f8:	2d09      	cmp	r5, #9
    12fa:	bf28      	it	cs
    12fc:	2509      	movcs	r5, #9
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:934
		pxNewTCB->uxMutexesHeld = 0;
    12fe:	f04f 0a00 	mov.w	sl, #0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:930
	pxNewTCB->uxPriority = uxPriority;
    1302:	62e5      	str	r5, [r4, #44]	; 0x2c
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:933
		pxNewTCB->uxBasePriority = uxPriority;
    1304:	64a5      	str	r5, [r4, #72]	; 0x48
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:938
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
    1306:	1d20      	adds	r0, r4, #4
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:934
		pxNewTCB->uxMutexesHeld = 0;
    1308:	f8c4 a04c 	str.w	sl, [r4, #76]	; 0x4c
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:938
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
    130c:	f7ff fa63 	bl	7d6 <vListInitialiseItem>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:946
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    1310:	f1c5 050a 	rsb	r5, r5, #10
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:939
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
    1314:	f104 0018 	add.w	r0, r4, #24
    1318:	f7ff fa5d 	bl	7d6 <vListInitialiseItem>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:989
		pxNewTCB->ulNotifiedValue = 0;
    131c:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:943
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
    1320:	6124      	str	r4, [r4, #16]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:946
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    1322:	61a5      	str	r5, [r4, #24]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:947
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
    1324:	6264      	str	r4, [r4, #36]	; 0x24
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:963
		pxNewTCB->ulRunTimeCounter = 0UL;
    1326:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:990
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
    132a:	f884 a058 	strb.w	sl, [r4, #88]	; 0x58
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1053
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
    132e:	4642      	mov	r2, r8
    1330:	4639      	mov	r1, r7
    1332:	4648      	mov	r0, r9
    1334:	f7ff f8bc 	bl	4b0 <pxPortInitialiseStack>
    1338:	6020      	str	r0, [r4, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1059
	if( pxCreatedTask != NULL )
    133a:	b106      	cbz	r6, 133e <prvInitialiseNewTask.isra.2+0x8e>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1063
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
    133c:	6034      	str	r4, [r6, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1069
}
    133e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:916
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
    1342:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
    1346:	e7d6      	b.n	12f6 <prvInitialiseNewTask.isra.2+0x46>

00001348 <prvAddCurrentTaskToDelayedList>:
prvAddCurrentTaskToDelayedList():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:5082
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
    1348:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:5084
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
    134a:	4b1b      	ldr	r3, [pc, #108]	; (13b8 <prvAddCurrentTaskToDelayedList+0x70>)
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:5097
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    134c:	4e1b      	ldr	r6, [pc, #108]	; (13bc <prvAddCurrentTaskToDelayedList+0x74>)
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:5084
const TickType_t xConstTickCount = xTickCount;
    134e:	681c      	ldr	r4, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:5082
{
    1350:	4605      	mov	r5, r0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:5097
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    1352:	6830      	ldr	r0, [r6, #0]
    1354:	3004      	adds	r0, #4
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:5082
{
    1356:	460f      	mov	r7, r1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:5097
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    1358:	f7ff fa63 	bl	822 <uxListRemove>
    135c:	4633      	mov	r3, r6
    135e:	b940      	cbnz	r0, 1372 <prvAddCurrentTaskToDelayedList+0x2a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:5101
	{
		/* The current task must be in a ready list, so there is no need to
		check, and the port reset macro can be called directly. */
		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority ); /*lint !e931 pxCurrentTCB cannot change as it is the calling task.  pxCurrentTCB->uxPriority and uxTopReadyPriority cannot change as called with scheduler suspended or in a critical section. */
    1360:	6831      	ldr	r1, [r6, #0]
    1362:	4e17      	ldr	r6, [pc, #92]	; (13c0 <prvAddCurrentTaskToDelayedList+0x78>)
    1364:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
    1366:	6832      	ldr	r2, [r6, #0]
    1368:	2001      	movs	r0, #1
    136a:	4088      	lsls	r0, r1
    136c:	ea22 0200 	bic.w	r2, r2, r0
    1370:	6032      	str	r2, [r6, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:5110
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
    1372:	1c6a      	adds	r2, r5, #1
    1374:	d107      	bne.n	1386 <prvAddCurrentTaskToDelayedList+0x3e>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:5110 (discriminator 1)
    1376:	b137      	cbz	r7, 1386 <prvAddCurrentTaskToDelayedList+0x3e>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:5115
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
    1378:	6819      	ldr	r1, [r3, #0]
    137a:	4812      	ldr	r0, [pc, #72]	; (13c4 <prvAddCurrentTaskToDelayedList+0x7c>)
    137c:	3104      	adds	r1, #4
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:5190

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
    137e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:5115
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
    1382:	f7ff ba2b 	b.w	7dc <vListInsertEnd>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:5125
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
    1386:	681a      	ldr	r2, [r3, #0]
    1388:	1964      	adds	r4, r4, r5
    138a:	6054      	str	r4, [r2, #4]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:5127
			if( xTimeToWake < xConstTickCount )
    138c:	d307      	bcc.n	139e <prvAddCurrentTaskToDelayedList+0x56>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:5131
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
    138e:	4a0e      	ldr	r2, [pc, #56]	; (13c8 <prvAddCurrentTaskToDelayedList+0x80>)
    1390:	6810      	ldr	r0, [r2, #0]
    1392:	6819      	ldr	r1, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:5190
}
    1394:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:5131
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
    1398:	3104      	adds	r1, #4
    139a:	f7ff ba2b 	b.w	7f4 <vListInsert>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:5137
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
    139e:	4a0b      	ldr	r2, [pc, #44]	; (13cc <prvAddCurrentTaskToDelayedList+0x84>)
    13a0:	6810      	ldr	r0, [r2, #0]
    13a2:	6819      	ldr	r1, [r3, #0]
    13a4:	3104      	adds	r1, #4
    13a6:	f7ff fa25 	bl	7f4 <vListInsert>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:5142
				if( xTimeToWake < xNextTaskUnblockTime )
    13aa:	4b09      	ldr	r3, [pc, #36]	; (13d0 <prvAddCurrentTaskToDelayedList+0x88>)
    13ac:	681a      	ldr	r2, [r3, #0]
    13ae:	42a2      	cmp	r2, r4
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:5144
					xNextTaskUnblockTime = xTimeToWake;
    13b0:	bf88      	it	hi
    13b2:	601c      	strhi	r4, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:5190
}
    13b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    13b6:	bf00      	nop
    13b8:	10000490 	.word	0x10000490
    13bc:	10000344 	.word	0x10000344
    13c0:	1000042c 	.word	0x1000042c
    13c4:	1000047c 	.word	0x1000047c
    13c8:	1000034c 	.word	0x1000034c
    13cc:	10000348 	.word	0x10000348
    13d0:	1000045c 	.word	0x1000045c

000013d4 <xTaskCreateStatic>:
xTaskCreateStatic():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:585
	{
    13d4:	b570      	push	{r4, r5, r6, lr}
    13d6:	b086      	sub	sp, #24
    13d8:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:589
		configASSERT( puxStackBuffer != NULL );
    13dc:	b92d      	cbnz	r5, 13ea <xTaskCreateStatic+0x16>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:589 (discriminator 1)
    13de:	4915      	ldr	r1, [pc, #84]	; (1434 <xTaskCreateStatic+0x60>)
    13e0:	f240 204d 	movw	r0, #589	; 0x24d
    13e4:	f003 faca 	bl	497c <configASSERT_callback>
    13e8:	e7fe      	b.n	13e8 <xTaskCreateStatic+0x14>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:590
		configASSERT( pxTaskBuffer != NULL );
    13ea:	b92c      	cbnz	r4, 13f8 <xTaskCreateStatic+0x24>
    13ec:	4912      	ldr	r1, [pc, #72]	; (1438 <xTaskCreateStatic+0x64>)
    13ee:	f240 204e 	movw	r0, #590	; 0x24e
    13f2:	f003 fac3 	bl	497c <configASSERT_callback>
    13f6:	e7fe      	b.n	13f6 <xTaskCreateStatic+0x22>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:597
			volatile size_t xSize = sizeof( StaticTask_t );
    13f8:	265c      	movs	r6, #92	; 0x5c
    13fa:	9605      	str	r6, [sp, #20]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:598
			configASSERT( xSize == sizeof( TCB_t ) );
    13fc:	9e05      	ldr	r6, [sp, #20]
    13fe:	2e5c      	cmp	r6, #92	; 0x5c
    1400:	d005      	beq.n	140e <xTaskCreateStatic+0x3a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:598 (discriminator 1)
    1402:	490e      	ldr	r1, [pc, #56]	; (143c <xTaskCreateStatic+0x68>)
    1404:	f240 2056 	movw	r0, #598	; 0x256
    1408:	f003 fab8 	bl	497c <configASSERT_callback>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:598 (discriminator 3)
    140c:	e7fe      	b.n	140c <xTaskCreateStatic+0x38>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:609
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
    140e:	6325      	str	r5, [r4, #48]	; 0x30
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:615
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
    1410:	2502      	movs	r5, #2
    1412:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:619
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
    1416:	ad04      	add	r5, sp, #16
    1418:	9501      	str	r5, [sp, #4]
    141a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
    141c:	9402      	str	r4, [sp, #8]
    141e:	9500      	str	r5, [sp, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:599
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
    1420:	9e05      	ldr	r6, [sp, #20]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:619
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
    1422:	f7ff ff45 	bl	12b0 <prvInitialiseNewTask.isra.2>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:620
			prvAddNewTaskToReadyList( pxNewTCB );
    1426:	4620      	mov	r0, r4
    1428:	f7ff fea2 	bl	1170 <prvAddNewTaskToReadyList>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:628
	}
    142c:	9804      	ldr	r0, [sp, #16]
    142e:	b006      	add	sp, #24
    1430:	bd70      	pop	{r4, r5, r6, pc}
    1432:	bf00      	nop
    1434:	0000b4d5 	.word	0x0000b4d5
    1438:	0000b4ec 	.word	0x0000b4ec
    143c:	0000b501 	.word	0x0000b501

00001440 <xTaskCreate>:
xTaskCreate():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:736
	{
    1440:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    1444:	4607      	mov	r7, r0
    1446:	b085      	sub	sp, #20
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:770
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
    1448:	0090      	lsls	r0, r2, #2
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:736
	{
    144a:	4688      	mov	r8, r1
    144c:	4616      	mov	r6, r2
    144e:	4699      	mov	r9, r3
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:770
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
    1450:	f7ff f99a 	bl	788 <pvPortMalloc>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:772
			if( pxStack != NULL )
    1454:	4605      	mov	r5, r0
    1456:	b1e8      	cbz	r0, 1494 <xTaskCreate+0x54>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:775
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
    1458:	205c      	movs	r0, #92	; 0x5c
    145a:	f7ff f995 	bl	788 <pvPortMalloc>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:777
				if( pxNewTCB != NULL )
    145e:	4604      	mov	r4, r0
    1460:	b1a8      	cbz	r0, 148e <xTaskCreate+0x4e>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:802
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
    1462:	2300      	movs	r3, #0
    1464:	f880 3059 	strb.w	r3, [r0, #89]	; 0x59
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:806
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
    1468:	9b0d      	ldr	r3, [sp, #52]	; 0x34
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:780
					pxNewTCB->pxStack = pxStack;
    146a:	6305      	str	r5, [r0, #48]	; 0x30
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:806
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
    146c:	9301      	str	r3, [sp, #4]
    146e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    1470:	9002      	str	r0, [sp, #8]
    1472:	9300      	str	r3, [sp, #0]
    1474:	4632      	mov	r2, r6
    1476:	464b      	mov	r3, r9
    1478:	4641      	mov	r1, r8
    147a:	4638      	mov	r0, r7
    147c:	f7ff ff18 	bl	12b0 <prvInitialiseNewTask.isra.2>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:807
			prvAddNewTaskToReadyList( pxNewTCB );
    1480:	4620      	mov	r0, r4
    1482:	f7ff fe75 	bl	1170 <prvAddNewTaskToReadyList>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:808
			xReturn = pdPASS;
    1486:	2001      	movs	r0, #1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:816
	}
    1488:	b005      	add	sp, #20
    148a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:786
					vPortFree( pxStack );
    148e:	4628      	mov	r0, r5
    1490:	f7ff f989 	bl	7a6 <vPortFree>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:812
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
    1494:	f04f 30ff 	mov.w	r0, #4294967295
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:815
		return xReturn;
    1498:	e7f6      	b.n	1488 <xTaskCreate+0x48>
    149a:	Address 0x0000149a is out of bounds.


0000149c <eTaskGetState>:
eTaskGetState():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1379
	{
    149c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1384
		configASSERT( pxTCB );
    149e:	4604      	mov	r4, r0
    14a0:	b928      	cbnz	r0, 14ae <eTaskGetState+0x12>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1384 (discriminator 1)
    14a2:	4914      	ldr	r1, [pc, #80]	; (14f4 <eTaskGetState+0x58>)
    14a4:	f44f 60ad 	mov.w	r0, #1384	; 0x568
    14a8:	f003 fa68 	bl	497c <configASSERT_callback>
    14ac:	e7fe      	b.n	14ac <eTaskGetState+0x10>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1386
		if( pxTCB == pxCurrentTCB )
    14ae:	4b12      	ldr	r3, [pc, #72]	; (14f8 <eTaskGetState+0x5c>)
    14b0:	681b      	ldr	r3, [r3, #0]
    14b2:	4283      	cmp	r3, r0
    14b4:	d018      	beq.n	14e8 <eTaskGetState+0x4c>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1393
			taskENTER_CRITICAL();
    14b6:	f7ff f825 	bl	504 <vPortEnterCritical>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1396
				pxDelayedList = pxDelayedTaskList;
    14ba:	4b10      	ldr	r3, [pc, #64]	; (14fc <eTaskGetState+0x60>)
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1395
				pxStateList = listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
    14bc:	6965      	ldr	r5, [r4, #20]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1396
				pxDelayedList = pxDelayedTaskList;
    14be:	681f      	ldr	r7, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1397
				pxOverflowedDelayedList = pxOverflowDelayedTaskList;
    14c0:	4b0f      	ldr	r3, [pc, #60]	; (1500 <eTaskGetState+0x64>)
    14c2:	681e      	ldr	r6, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1399
			taskEXIT_CRITICAL();
    14c4:	f7ff f840 	bl	548 <vPortExitCritical>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1401
			if( ( pxStateList == pxDelayedList ) || ( pxStateList == pxOverflowedDelayedList ) )
    14c8:	42bd      	cmp	r5, r7
    14ca:	d011      	beq.n	14f0 <eTaskGetState+0x54>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1401 (discriminator 1)
    14cc:	42b5      	cmp	r5, r6
    14ce:	d00f      	beq.n	14f0 <eTaskGetState+0x54>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1409
				else if( pxStateList == &xSuspendedTaskList )
    14d0:	4b0c      	ldr	r3, [pc, #48]	; (1504 <eTaskGetState+0x68>)
    14d2:	429d      	cmp	r5, r3
    14d4:	d10a      	bne.n	14ec <eTaskGetState+0x50>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1414
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
    14d6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    14d8:	b953      	cbnz	r3, 14f0 <eTaskGetState+0x54>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1422
							if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
    14da:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1428
								eReturn = eSuspended;
    14de:	2b01      	cmp	r3, #1
    14e0:	bf0c      	ite	eq
    14e2:	2002      	moveq	r0, #2
    14e4:	2003      	movne	r0, #3
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1463
	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
    14e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1389
			eReturn = eRunning;
    14e8:	2000      	movs	r0, #0
    14ea:	e7fc      	b.n	14e6 <eTaskGetState+0x4a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1458
				eReturn = eReady;
    14ec:	2001      	movs	r0, #1
    14ee:	e7fa      	b.n	14e6 <eTaskGetState+0x4a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1405
				eReturn = eBlocked;
    14f0:	2002      	movs	r0, #2
    14f2:	e7f8      	b.n	14e6 <eTaskGetState+0x4a>
    14f4:	0000b404 	.word	0x0000b404
    14f8:	10000344 	.word	0x10000344
    14fc:	10000348 	.word	0x10000348
    1500:	1000034c 	.word	0x1000034c
    1504:	1000047c 	.word	0x1000047c

00001508 <vTaskStartScheduler>:
vTaskStartScheduler():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1968
{
    1508:	b510      	push	{r4, lr}
    150a:	b088      	sub	sp, #32
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1974
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
    150c:	2400      	movs	r4, #0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1980
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
    150e:	aa07      	add	r2, sp, #28
    1510:	a906      	add	r1, sp, #24
    1512:	a805      	add	r0, sp, #20
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1975
		StackType_t *pxIdleTaskStackBuffer = NULL;
    1514:	e9cd 4405 	strd	r4, r4, [sp, #20]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1980
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
    1518:	f003 fa50 	bl	49bc <vApplicationGetIdleTaskMemory>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1981
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
    151c:	9b05      	ldr	r3, [sp, #20]
    151e:	9302      	str	r3, [sp, #8]
    1520:	9b06      	ldr	r3, [sp, #24]
    1522:	9a07      	ldr	r2, [sp, #28]
    1524:	490f      	ldr	r1, [pc, #60]	; (1564 <vTaskStartScheduler+0x5c>)
    1526:	4810      	ldr	r0, [pc, #64]	; (1568 <vTaskStartScheduler+0x60>)
    1528:	e9cd 4300 	strd	r4, r3, [sp]
    152c:	4623      	mov	r3, r4
    152e:	f7ff ff51 	bl	13d4 <xTaskCreateStatic>
    1532:	4b0e      	ldr	r3, [pc, #56]	; (156c <vTaskStartScheduler+0x64>)
    1534:	6018      	str	r0, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1989
		if( xIdleTaskHandle != NULL )
    1536:	b190      	cbz	r0, 155e <vTaskStartScheduler+0x56>
vPortRaiseBASEPRI():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/portmacro.h:195
	__asm volatile
    1538:	f04f 0318 	mov.w	r3, #24
    153c:	f383 8811 	msr	BASEPRI, r3
    1540:	f3bf 8f6f 	isb	sy
    1544:	f3bf 8f4f 	dsb	sy
vTaskStartScheduler():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2049
		xNextTaskUnblockTime = portMAX_DELAY;
    1548:	4b09      	ldr	r3, [pc, #36]	; (1570 <vTaskStartScheduler+0x68>)
    154a:	f04f 32ff 	mov.w	r2, #4294967295
    154e:	601a      	str	r2, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2050
		xSchedulerRunning = pdTRUE;
    1550:	4b08      	ldr	r3, [pc, #32]	; (1574 <vTaskStartScheduler+0x6c>)
    1552:	2201      	movs	r2, #1
    1554:	601a      	str	r2, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2051
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
    1556:	4b08      	ldr	r3, [pc, #32]	; (1578 <vTaskStartScheduler+0x70>)
    1558:	601c      	str	r4, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2065
		if( xPortStartScheduler() != pdFALSE )
    155a:	f7ff f869 	bl	630 <xPortStartScheduler>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2086
}
    155e:	b008      	add	sp, #32
    1560:	bd10      	pop	{r4, pc}
    1562:	bf00      	nop
    1564:	0000b47b 	.word	0x0000b47b
    1568:	00001265 	.word	0x00001265
    156c:	10000458 	.word	0x10000458
    1570:	1000045c 	.word	0x1000045c
    1574:	10000478 	.word	0x10000478
    1578:	10000490 	.word	0x10000490

0000157c <vTaskSuspendAll>:
vTaskSuspendAll():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2106
	++uxSchedulerSuspended;
    157c:	4a02      	ldr	r2, [pc, #8]	; (1588 <vTaskSuspendAll+0xc>)
    157e:	6813      	ldr	r3, [r2, #0]
    1580:	3301      	adds	r3, #1
    1582:	6013      	str	r3, [r2, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2108
}
    1584:	4770      	bx	lr
    1586:	bf00      	nop
    1588:	10000424 	.word	0x10000424

0000158c <xTaskIncrementTick>:
xTaskIncrementTick():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2666
{
    158c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2675
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
    1590:	4b3b      	ldr	r3, [pc, #236]	; (1680 <xTaskIncrementTick+0xf4>)
    1592:	681b      	ldr	r3, [r3, #0]
    1594:	2b00      	cmp	r3, #0
    1596:	d16b      	bne.n	1670 <xTaskIncrementTick+0xe4>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2679
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
    1598:	4b3a      	ldr	r3, [pc, #232]	; (1684 <xTaskIncrementTick+0xf8>)
    159a:	681c      	ldr	r4, [r3, #0]
    159c:	3401      	adds	r4, #1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2683
		xTickCount = xConstTickCount;
    159e:	601c      	str	r4, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2685
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
    15a0:	b9a4      	cbnz	r4, 15cc <xTaskIncrementTick+0x40>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2687
			taskSWITCH_DELAYED_LISTS();
    15a2:	4b39      	ldr	r3, [pc, #228]	; (1688 <xTaskIncrementTick+0xfc>)
    15a4:	681a      	ldr	r2, [r3, #0]
    15a6:	6812      	ldr	r2, [r2, #0]
    15a8:	b12a      	cbz	r2, 15b6 <xTaskIncrementTick+0x2a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2687 (discriminator 1)
    15aa:	4938      	ldr	r1, [pc, #224]	; (168c <xTaskIncrementTick+0x100>)
    15ac:	f640 207f 	movw	r0, #2687	; 0xa7f
    15b0:	f003 f9e4 	bl	497c <configASSERT_callback>
    15b4:	e7fe      	b.n	15b4 <xTaskIncrementTick+0x28>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2687 (discriminator 2)
    15b6:	4a36      	ldr	r2, [pc, #216]	; (1690 <xTaskIncrementTick+0x104>)
    15b8:	6819      	ldr	r1, [r3, #0]
    15ba:	6810      	ldr	r0, [r2, #0]
    15bc:	6018      	str	r0, [r3, #0]
    15be:	6011      	str	r1, [r2, #0]
    15c0:	4a34      	ldr	r2, [pc, #208]	; (1694 <xTaskIncrementTick+0x108>)
    15c2:	6813      	ldr	r3, [r2, #0]
    15c4:	3301      	adds	r3, #1
    15c6:	6013      	str	r3, [r2, #0]
    15c8:	f7ff fe60 	bl	128c <prvResetNextTaskUnblockTime>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2698
		if( xConstTickCount >= xNextTaskUnblockTime )
    15cc:	4d32      	ldr	r5, [pc, #200]	; (1698 <xTaskIncrementTick+0x10c>)
    15ce:	4f33      	ldr	r7, [pc, #204]	; (169c <xTaskIncrementTick+0x110>)
    15d0:	682b      	ldr	r3, [r5, #0]
    15d2:	42a3      	cmp	r3, r4
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2669
BaseType_t xSwitchRequired = pdFALSE;
    15d4:	f04f 0b00 	mov.w	fp, #0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2698
		if( xConstTickCount >= xNextTaskUnblockTime )
    15d8:	d911      	bls.n	15fe <xTaskIncrementTick+0x72>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2781
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
    15da:	683a      	ldr	r2, [r7, #0]
    15dc:	4b30      	ldr	r3, [pc, #192]	; (16a0 <xTaskIncrementTick+0x114>)
    15de:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
    15e0:	2214      	movs	r2, #20
    15e2:	434a      	muls	r2, r1
    15e4:	589a      	ldr	r2, [r3, r2]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2783
				xSwitchRequired = pdTRUE;
    15e6:	2a02      	cmp	r2, #2
    15e8:	bf28      	it	cs
    15ea:	f04f 0b01 	movcs.w	fp, #1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2822
		if( xYieldPending != pdFALSE )
    15ee:	4a2d      	ldr	r2, [pc, #180]	; (16a4 <xTaskIncrementTick+0x118>)
    15f0:	6812      	ldr	r2, [r2, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2824
			xSwitchRequired = pdTRUE;
    15f2:	2a00      	cmp	r2, #0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2834
}
    15f4:	bf0c      	ite	eq
    15f6:	4658      	moveq	r0, fp
    15f8:	2001      	movne	r0, #1
    15fa:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2702
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
    15fe:	f8df a088 	ldr.w	sl, [pc, #136]	; 1688 <xTaskIncrementTick+0xfc>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2752
					prvAddTaskToReadyList( pxTCB );
    1602:	f8df 90a8 	ldr.w	r9, [pc, #168]	; 16ac <xTaskIncrementTick+0x120>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2702
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
    1606:	f8da 2000 	ldr.w	r2, [sl]
    160a:	6812      	ldr	r2, [r2, #0]
    160c:	b91a      	cbnz	r2, 1616 <xTaskIncrementTick+0x8a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2709
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    160e:	f04f 32ff 	mov.w	r2, #4294967295
    1612:	602a      	str	r2, [r5, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2710
					break;
    1614:	e7e1      	b.n	15da <xTaskIncrementTick+0x4e>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2718
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    1616:	f8da 2000 	ldr.w	r2, [sl]
    161a:	68d2      	ldr	r2, [r2, #12]
    161c:	68d6      	ldr	r6, [r2, #12]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2719
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
    161e:	6871      	ldr	r1, [r6, #4]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2721
					if( xConstTickCount < xItemValue )
    1620:	428c      	cmp	r4, r1
    1622:	d201      	bcs.n	1628 <xTaskIncrementTick+0x9c>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2728
						xNextTaskUnblockTime = xItemValue;
    1624:	6029      	str	r1, [r5, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2729
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
    1626:	e7d8      	b.n	15da <xTaskIncrementTick+0x4e>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2737
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
    1628:	f106 0804 	add.w	r8, r6, #4
    162c:	4640      	mov	r0, r8
    162e:	f7ff f8f8 	bl	822 <uxListRemove>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2741
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
    1632:	6ab1      	ldr	r1, [r6, #40]	; 0x28
    1634:	b119      	cbz	r1, 163e <xTaskIncrementTick+0xb2>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2743
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
    1636:	f106 0018 	add.w	r0, r6, #24
    163a:	f7ff f8f2 	bl	822 <uxListRemove>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2752
					prvAddTaskToReadyList( pxTCB );
    163e:	6af0      	ldr	r0, [r6, #44]	; 0x2c
    1640:	f8d9 3000 	ldr.w	r3, [r9]
    1644:	2201      	movs	r2, #1
    1646:	fa02 f100 	lsl.w	r1, r2, r0
    164a:	4319      	orrs	r1, r3
    164c:	4b14      	ldr	r3, [pc, #80]	; (16a0 <xTaskIncrementTick+0x114>)
    164e:	f8c9 1000 	str.w	r1, [r9]
    1652:	f04f 0c14 	mov.w	ip, #20
    1656:	4641      	mov	r1, r8
    1658:	fb0c 3000 	mla	r0, ip, r0, r3
    165c:	f7ff f8be 	bl	7dc <vListInsertEnd>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2762
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
    1660:	6838      	ldr	r0, [r7, #0]
    1662:	6af1      	ldr	r1, [r6, #44]	; 0x2c
    1664:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2764
							xSwitchRequired = pdTRUE;
    1666:	4291      	cmp	r1, r2
    1668:	bf28      	it	cs
    166a:	f04f 0b01 	movcs.w	fp, #1
    166e:	e7ca      	b.n	1606 <xTaskIncrementTick+0x7a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2809
		++uxPendedTicks;
    1670:	4a0d      	ldr	r2, [pc, #52]	; (16a8 <xTaskIncrementTick+0x11c>)
    1672:	6813      	ldr	r3, [r2, #0]
    1674:	3301      	adds	r3, #1
    1676:	6013      	str	r3, [r2, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2669
BaseType_t xSwitchRequired = pdFALSE;
    1678:	f04f 0b00 	mov.w	fp, #0
    167c:	e7b7      	b.n	15ee <xTaskIncrementTick+0x62>
    167e:	bf00      	nop
    1680:	10000424 	.word	0x10000424
    1684:	10000490 	.word	0x10000490
    1688:	10000348 	.word	0x10000348
    168c:	0000b51a 	.word	0x0000b51a
    1690:	1000034c 	.word	0x1000034c
    1694:	10000460 	.word	0x10000460
    1698:	1000045c 	.word	0x1000045c
    169c:	10000344 	.word	0x10000344
    16a0:	10000350 	.word	0x10000350
    16a4:	10000494 	.word	0x10000494
    16a8:	10000420 	.word	0x10000420
    16ac:	1000042c 	.word	0x1000042c

000016b0 <xTaskResumeAll>:
xTaskResumeAll():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2175
{
    16b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2181
	configASSERT( uxSchedulerSuspended );
    16b4:	4c2f      	ldr	r4, [pc, #188]	; (1774 <xTaskResumeAll+0xc4>)
    16b6:	6823      	ldr	r3, [r4, #0]
    16b8:	b92b      	cbnz	r3, 16c6 <xTaskResumeAll+0x16>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2181 (discriminator 1)
    16ba:	492f      	ldr	r1, [pc, #188]	; (1778 <xTaskResumeAll+0xc8>)
    16bc:	f640 0085 	movw	r0, #2181	; 0x885
    16c0:	f003 f95c 	bl	497c <configASSERT_callback>
    16c4:	e7fe      	b.n	16c4 <xTaskResumeAll+0x14>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2188
	taskENTER_CRITICAL();
    16c6:	f7fe ff1d 	bl	504 <vPortEnterCritical>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2190
		--uxSchedulerSuspended;
    16ca:	6823      	ldr	r3, [r4, #0]
    16cc:	3b01      	subs	r3, #1
    16ce:	6023      	str	r3, [r4, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2192
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
    16d0:	6824      	ldr	r4, [r4, #0]
    16d2:	b12c      	cbz	r4, 16e0 <xTaskResumeAll+0x30>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2177
BaseType_t xAlreadyYielded = pdFALSE;
    16d4:	2400      	movs	r4, #0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2278
	taskEXIT_CRITICAL();
    16d6:	f7fe ff37 	bl	548 <vPortExitCritical>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2281
}
    16da:	4620      	mov	r0, r4
    16dc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2194
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
    16e0:	4b26      	ldr	r3, [pc, #152]	; (177c <xTaskResumeAll+0xcc>)
    16e2:	681b      	ldr	r3, [r3, #0]
    16e4:	2b00      	cmp	r3, #0
    16e6:	d0f5      	beq.n	16d4 <xTaskResumeAll+0x24>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2198
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
    16e8:	4d25      	ldr	r5, [pc, #148]	; (1780 <xTaskResumeAll+0xd0>)
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2203
					prvAddTaskToReadyList( pxTCB );
    16ea:	4e26      	ldr	r6, [pc, #152]	; (1784 <xTaskResumeAll+0xd4>)
    16ec:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 1798 <xTaskResumeAll+0xe8>
    16f0:	e01f      	b.n	1732 <xTaskResumeAll+0x82>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2200
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    16f2:	68eb      	ldr	r3, [r5, #12]
    16f4:	68dc      	ldr	r4, [r3, #12]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2202
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
    16f6:	f104 0904 	add.w	r9, r4, #4
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2201
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
    16fa:	f104 0018 	add.w	r0, r4, #24
    16fe:	f7ff f890 	bl	822 <uxListRemove>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2202
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
    1702:	4648      	mov	r0, r9
    1704:	f7ff f88d 	bl	822 <uxListRemove>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2203
					prvAddTaskToReadyList( pxTCB );
    1708:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    170a:	6831      	ldr	r1, [r6, #0]
    170c:	2701      	movs	r7, #1
    170e:	fa07 f302 	lsl.w	r3, r7, r2
    1712:	2014      	movs	r0, #20
    1714:	430b      	orrs	r3, r1
    1716:	fb00 8002 	mla	r0, r0, r2, r8
    171a:	4649      	mov	r1, r9
    171c:	6033      	str	r3, [r6, #0]
    171e:	f7ff f85d 	bl	7dc <vListInsertEnd>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2207
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
    1722:	4b19      	ldr	r3, [pc, #100]	; (1788 <xTaskResumeAll+0xd8>)
    1724:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    1726:	681b      	ldr	r3, [r3, #0]
    1728:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    172a:	429a      	cmp	r2, r3
    172c:	d301      	bcc.n	1732 <xTaskResumeAll+0x82>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2209
						xYieldPending = pdTRUE;
    172e:	4b17      	ldr	r3, [pc, #92]	; (178c <xTaskResumeAll+0xdc>)
    1730:	601f      	str	r7, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2198
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
    1732:	682b      	ldr	r3, [r5, #0]
    1734:	2b00      	cmp	r3, #0
    1736:	d1dc      	bne.n	16f2 <xTaskResumeAll+0x42>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2217
				if( pxTCB != NULL )
    1738:	b10c      	cbz	r4, 173e <xTaskResumeAll+0x8e>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2225
					prvResetNextTaskUnblockTime();
    173a:	f7ff fda7 	bl	128c <prvResetNextTaskUnblockTime>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2233
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
    173e:	4d14      	ldr	r5, [pc, #80]	; (1790 <xTaskResumeAll+0xe0>)
    1740:	682c      	ldr	r4, [r5, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2235
					if( uxPendedCounts > ( UBaseType_t ) 0U )
    1742:	b144      	cbz	r4, 1756 <xTaskResumeAll+0xa6>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2241
								xYieldPending = pdTRUE;
    1744:	4e11      	ldr	r6, [pc, #68]	; (178c <xTaskResumeAll+0xdc>)
    1746:	2701      	movs	r7, #1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2239
							if( xTaskIncrementTick() != pdFALSE )
    1748:	f7ff ff20 	bl	158c <xTaskIncrementTick>
    174c:	b100      	cbz	r0, 1750 <xTaskResumeAll+0xa0>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2241
								xYieldPending = pdTRUE;
    174e:	6037      	str	r7, [r6, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2248
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
    1750:	3c01      	subs	r4, #1
    1752:	d1f9      	bne.n	1748 <xTaskResumeAll+0x98>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2250
						uxPendedTicks = 0;
    1754:	602c      	str	r4, [r5, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2258
				if( xYieldPending != pdFALSE )
    1756:	4b0d      	ldr	r3, [pc, #52]	; (178c <xTaskResumeAll+0xdc>)
    1758:	681b      	ldr	r3, [r3, #0]
    175a:	2b00      	cmp	r3, #0
    175c:	d0ba      	beq.n	16d4 <xTaskResumeAll+0x24>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2265
					taskYIELD_IF_USING_PREEMPTION();
    175e:	4b0d      	ldr	r3, [pc, #52]	; (1794 <xTaskResumeAll+0xe4>)
    1760:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    1764:	601a      	str	r2, [r3, #0]
    1766:	f3bf 8f4f 	dsb	sy
    176a:	f3bf 8f6f 	isb	sy
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2262
						xAlreadyYielded = pdTRUE;
    176e:	2401      	movs	r4, #1
    1770:	e7b1      	b.n	16d6 <xTaskResumeAll+0x26>
    1772:	bf00      	nop
    1774:	10000424 	.word	0x10000424
    1778:	0000b57f 	.word	0x0000b57f
    177c:	1000041c 	.word	0x1000041c
    1780:	10000464 	.word	0x10000464
    1784:	1000042c 	.word	0x1000042c
    1788:	10000344 	.word	0x10000344
    178c:	10000494 	.word	0x10000494
    1790:	10000420 	.word	0x10000420
    1794:	e000ed04 	.word	0xe000ed04
    1798:	10000350 	.word	0x10000350

0000179c <vTaskDelay>:
vTaskDelay():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1334
	{
    179c:	b508      	push	{r3, lr}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1338
		if( xTicksToDelay > ( TickType_t ) 0U )
    179e:	b940      	cbnz	r0, 17b2 <vTaskDelay+0x16>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1365
			portYIELD_WITHIN_API();
    17a0:	4b0d      	ldr	r3, [pc, #52]	; (17d8 <vTaskDelay+0x3c>)
    17a2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    17a6:	601a      	str	r2, [r3, #0]
    17a8:	f3bf 8f4f 	dsb	sy
    17ac:	f3bf 8f6f 	isb	sy
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1371
	}
    17b0:	bd08      	pop	{r3, pc}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1340
			configASSERT( uxSchedulerSuspended == 0 );
    17b2:	4b0a      	ldr	r3, [pc, #40]	; (17dc <vTaskDelay+0x40>)
    17b4:	6819      	ldr	r1, [r3, #0]
    17b6:	b129      	cbz	r1, 17c4 <vTaskDelay+0x28>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1340 (discriminator 1)
    17b8:	4909      	ldr	r1, [pc, #36]	; (17e0 <vTaskDelay+0x44>)
    17ba:	f240 503c 	movw	r0, #1340	; 0x53c
    17be:	f003 f8dd 	bl	497c <configASSERT_callback>
    17c2:	e7fe      	b.n	17c2 <vTaskDelay+0x26>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1341
			vTaskSuspendAll();
    17c4:	f7ff feda 	bl	157c <vTaskSuspendAll>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1352
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
    17c8:	f7ff fdbe 	bl	1348 <prvAddCurrentTaskToDelayedList>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1354
			xAlreadyYielded = xTaskResumeAll();
    17cc:	f7ff ff70 	bl	16b0 <xTaskResumeAll>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:1363
		if( xAlreadyYielded == pdFALSE )
    17d0:	2800      	cmp	r0, #0
    17d2:	d0e5      	beq.n	17a0 <vTaskDelay+0x4>
    17d4:	e7ec      	b.n	17b0 <vTaskDelay+0x14>
    17d6:	bf00      	nop
    17d8:	e000ed04 	.word	0xe000ed04
    17dc:	10000424 	.word	0x10000424
    17e0:	0000b435 	.word	0x0000b435

000017e4 <vTaskSwitchContext>:
vTaskSwitchContext():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2948
{
    17e4:	b538      	push	{r3, r4, r5, lr}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2949
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
    17e6:	4b27      	ldr	r3, [pc, #156]	; (1884 <vTaskSwitchContext+0xa0>)
    17e8:	681a      	ldr	r2, [r3, #0]
    17ea:	4b27      	ldr	r3, [pc, #156]	; (1888 <vTaskSwitchContext+0xa4>)
    17ec:	b112      	cbz	r2, 17f4 <vTaskSwitchContext+0x10>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2953
		xYieldPending = pdTRUE;
    17ee:	2201      	movs	r2, #1
    17f0:	601a      	str	r2, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3017
}
    17f2:	bd38      	pop	{r3, r4, r5, pc}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2957
		xYieldPending = pdFALSE;
    17f4:	601a      	str	r2, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2965
				ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
    17f6:	f003 f8ed 	bl	49d4 <freertos_hooks__get_run_time_counter_value>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2975
			if( ulTotalRunTime > ulTaskSwitchedInTime )
    17fa:	4a24      	ldr	r2, [pc, #144]	; (188c <vTaskSwitchContext+0xa8>)
    17fc:	4c24      	ldr	r4, [pc, #144]	; (1890 <vTaskSwitchContext+0xac>)
    17fe:	6815      	ldr	r5, [r2, #0]
    1800:	42a8      	cmp	r0, r5
    1802:	d904      	bls.n	180e <vTaskSwitchContext+0x2a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2977
				pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
    1804:	6821      	ldr	r1, [r4, #0]
    1806:	6d0b      	ldr	r3, [r1, #80]	; 0x50
    1808:	1b5b      	subs	r3, r3, r5
    180a:	4403      	add	r3, r0
    180c:	650b      	str	r3, [r1, #80]	; 0x50
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2988
		taskCHECK_FOR_STACK_OVERFLOW();
    180e:	6823      	ldr	r3, [r4, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2983
			ulTaskSwitchedInTime = ulTotalRunTime;
    1810:	6010      	str	r0, [r2, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2988
		taskCHECK_FOR_STACK_OVERFLOW();
    1812:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    1814:	681a      	ldr	r2, [r3, #0]
    1816:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
    181a:	d10b      	bne.n	1834 <vTaskSwitchContext+0x50>
    181c:	685a      	ldr	r2, [r3, #4]
    181e:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
    1822:	d107      	bne.n	1834 <vTaskSwitchContext+0x50>
    1824:	689a      	ldr	r2, [r3, #8]
    1826:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
    182a:	d103      	bne.n	1834 <vTaskSwitchContext+0x50>
    182c:	68db      	ldr	r3, [r3, #12]
    182e:	f1b3 3fa5 	cmp.w	r3, #2779096485	; 0xa5a5a5a5
    1832:	d004      	beq.n	183e <vTaskSwitchContext+0x5a>
    1834:	6820      	ldr	r0, [r4, #0]
    1836:	6821      	ldr	r1, [r4, #0]
    1838:	3134      	adds	r1, #52	; 0x34
    183a:	f003 f881 	bl	4940 <vApplicationStackOverflowHook>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2999
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    183e:	4b15      	ldr	r3, [pc, #84]	; (1894 <vTaskSwitchContext+0xb0>)
    1840:	681b      	ldr	r3, [r3, #0]
ucPortCountLeadingZeros():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\portable\gcc\arm_cm4f/portmacro.h:134
		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
    1842:	fab3 f383 	clz	r3, r3
    1846:	b2db      	uxtb	r3, r3
vTaskSwitchContext():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2999
    1848:	f1c3 031f 	rsb	r3, r3, #31
    184c:	2214      	movs	r2, #20
    184e:	4912      	ldr	r1, [pc, #72]	; (1898 <vTaskSwitchContext+0xb4>)
    1850:	435a      	muls	r2, r3
    1852:	1888      	adds	r0, r1, r2
    1854:	588d      	ldr	r5, [r1, r2]
    1856:	b92d      	cbnz	r5, 1864 <vTaskSwitchContext+0x80>
    1858:	4910      	ldr	r1, [pc, #64]	; (189c <vTaskSwitchContext+0xb8>)
    185a:	f640 30b7 	movw	r0, #2999	; 0xbb7
    185e:	f003 f88d 	bl	497c <configASSERT_callback>
    1862:	e7fe      	b.n	1862 <vTaskSwitchContext+0x7e>
    1864:	6845      	ldr	r5, [r0, #4]
    1866:	3208      	adds	r2, #8
    1868:	686d      	ldr	r5, [r5, #4]
    186a:	6045      	str	r5, [r0, #4]
    186c:	440a      	add	r2, r1
    186e:	4295      	cmp	r5, r2
    1870:	bf04      	itt	eq
    1872:	686a      	ldreq	r2, [r5, #4]
    1874:	6042      	streq	r2, [r0, #4]
    1876:	2214      	movs	r2, #20
    1878:	fb02 1303 	mla	r3, r2, r3, r1
    187c:	685b      	ldr	r3, [r3, #4]
    187e:	68db      	ldr	r3, [r3, #12]
    1880:	6023      	str	r3, [r4, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3017
}
    1882:	e7b6      	b.n	17f2 <vTaskSwitchContext+0xe>
    1884:	10000424 	.word	0x10000424
    1888:	10000494 	.word	0x10000494
    188c:	10000418 	.word	0x10000418
    1890:	10000344 	.word	0x10000344
    1894:	1000042c 	.word	0x1000042c
    1898:	10000350 	.word	0x10000350
    189c:	0000b480 	.word	0x0000b480

000018a0 <vTaskPlaceOnEventList>:
vTaskPlaceOnEventList():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3021
{
    18a0:	b510      	push	{r4, lr}
    18a2:	460c      	mov	r4, r1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3022
	configASSERT( pxEventList );
    18a4:	b928      	cbnz	r0, 18b2 <vTaskPlaceOnEventList+0x12>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3022 (discriminator 1)
    18a6:	4908      	ldr	r1, [pc, #32]	; (18c8 <vTaskPlaceOnEventList+0x28>)
    18a8:	f640 30ce 	movw	r0, #3022	; 0xbce
    18ac:	f003 f866 	bl	497c <configASSERT_callback>
    18b0:	e7fe      	b.n	18b0 <vTaskPlaceOnEventList+0x10>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3031
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
    18b2:	4b06      	ldr	r3, [pc, #24]	; (18cc <vTaskPlaceOnEventList+0x2c>)
    18b4:	6819      	ldr	r1, [r3, #0]
    18b6:	3118      	adds	r1, #24
    18b8:	f7fe ff9c 	bl	7f4 <vListInsert>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3033
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
    18bc:	4620      	mov	r0, r4
    18be:	2101      	movs	r1, #1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3034
}
    18c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3033
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
    18c4:	f7ff bd40 	b.w	1348 <prvAddCurrentTaskToDelayedList>
    18c8:	0000b44f 	.word	0x0000b44f
    18cc:	10000344 	.word	0x10000344

000018d0 <xTaskRemoveFromEventList>:
xTaskRemoveFromEventList():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3095
{
    18d0:	b538      	push	{r3, r4, r5, lr}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3112
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    18d2:	68c3      	ldr	r3, [r0, #12]
    18d4:	68dc      	ldr	r4, [r3, #12]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3113
	configASSERT( pxUnblockedTCB );
    18d6:	b92c      	cbnz	r4, 18e4 <xTaskRemoveFromEventList+0x14>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3113 (discriminator 1)
    18d8:	4916      	ldr	r1, [pc, #88]	; (1934 <xTaskRemoveFromEventList+0x64>)
    18da:	f640 4029 	movw	r0, #3113	; 0xc29
    18de:	f003 f84d 	bl	497c <configASSERT_callback>
    18e2:	e7fe      	b.n	18e2 <xTaskRemoveFromEventList+0x12>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3114
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
    18e4:	f104 0518 	add.w	r5, r4, #24
    18e8:	4628      	mov	r0, r5
    18ea:	f7fe ff9a 	bl	822 <uxListRemove>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3116
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
    18ee:	4b12      	ldr	r3, [pc, #72]	; (1938 <xTaskRemoveFromEventList+0x68>)
    18f0:	681b      	ldr	r3, [r3, #0]
    18f2:	b9e3      	cbnz	r3, 192e <xTaskRemoveFromEventList+0x5e>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3118
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
    18f4:	1d25      	adds	r5, r4, #4
    18f6:	4628      	mov	r0, r5
    18f8:	f7fe ff93 	bl	822 <uxListRemove>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3119
		prvAddTaskToReadyList( pxUnblockedTCB );
    18fc:	490f      	ldr	r1, [pc, #60]	; (193c <xTaskRemoveFromEventList+0x6c>)
    18fe:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    1900:	6808      	ldr	r0, [r1, #0]
    1902:	2301      	movs	r3, #1
    1904:	4093      	lsls	r3, r2
    1906:	4303      	orrs	r3, r0
    1908:	600b      	str	r3, [r1, #0]
    190a:	4b0d      	ldr	r3, [pc, #52]	; (1940 <xTaskRemoveFromEventList+0x70>)
    190c:	2014      	movs	r0, #20
    190e:	4629      	mov	r1, r5
    1910:	fb00 3002 	mla	r0, r0, r2, r3
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3139
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
    1914:	f7fe ff62 	bl	7dc <vListInsertEnd>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3142
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
    1918:	4b0a      	ldr	r3, [pc, #40]	; (1944 <xTaskRemoveFromEventList+0x74>)
    191a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    191c:	681b      	ldr	r3, [r3, #0]
    191e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    1920:	429a      	cmp	r2, r3
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3151
		xYieldPending = pdTRUE;
    1922:	bf83      	ittte	hi
    1924:	4b08      	ldrhi	r3, [pc, #32]	; (1948 <xTaskRemoveFromEventList+0x78>)
    1926:	2001      	movhi	r0, #1
    1928:	6018      	strhi	r0, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3155
		xReturn = pdFALSE;
    192a:	2000      	movls	r0, #0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3159
}
    192c:	bd38      	pop	{r3, r4, r5, pc}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3139
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
    192e:	4629      	mov	r1, r5
    1930:	4806      	ldr	r0, [pc, #24]	; (194c <xTaskRemoveFromEventList+0x7c>)
    1932:	e7ef      	b.n	1914 <xTaskRemoveFromEventList+0x44>
    1934:	0000b570 	.word	0x0000b570
    1938:	10000424 	.word	0x10000424
    193c:	1000042c 	.word	0x1000042c
    1940:	10000350 	.word	0x10000350
    1944:	10000344 	.word	0x10000344
    1948:	10000494 	.word	0x10000494
    194c:	10000464 	.word	0x10000464

00001950 <vTaskInternalSetTimeOutState>:
vTaskInternalSetTimeOutState():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3211
	pxTimeOut->xOverflowCount = xNumOfOverflows;
    1950:	4b03      	ldr	r3, [pc, #12]	; (1960 <vTaskInternalSetTimeOutState+0x10>)
    1952:	681b      	ldr	r3, [r3, #0]
    1954:	6003      	str	r3, [r0, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3212
	pxTimeOut->xTimeOnEntering = xTickCount;
    1956:	4b03      	ldr	r3, [pc, #12]	; (1964 <vTaskInternalSetTimeOutState+0x14>)
    1958:	681b      	ldr	r3, [r3, #0]
    195a:	6043      	str	r3, [r0, #4]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3213
}
    195c:	4770      	bx	lr
    195e:	bf00      	nop
    1960:	10000460 	.word	0x10000460
    1964:	10000490 	.word	0x10000490

00001968 <xTaskCheckForTimeOut>:
xTaskCheckForTimeOut():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3217
{
    1968:	b570      	push	{r4, r5, r6, lr}
    196a:	460c      	mov	r4, r1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3220
	configASSERT( pxTimeOut );
    196c:	4605      	mov	r5, r0
    196e:	b928      	cbnz	r0, 197c <xTaskCheckForTimeOut+0x14>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3220 (discriminator 1)
    1970:	4916      	ldr	r1, [pc, #88]	; (19cc <xTaskCheckForTimeOut+0x64>)
    1972:	f640 4094 	movw	r0, #3220	; 0xc94
    1976:	f003 f801 	bl	497c <configASSERT_callback>
    197a:	e7fe      	b.n	197a <xTaskCheckForTimeOut+0x12>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3221
	configASSERT( pxTicksToWait );
    197c:	b929      	cbnz	r1, 198a <xTaskCheckForTimeOut+0x22>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3221 (discriminator 1)
    197e:	4914      	ldr	r1, [pc, #80]	; (19d0 <xTaskCheckForTimeOut+0x68>)
    1980:	f640 4095 	movw	r0, #3221	; 0xc95
    1984:	f002 fffa 	bl	497c <configASSERT_callback>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3221 (discriminator 2)
    1988:	e7fe      	b.n	1988 <xTaskCheckForTimeOut+0x20>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3223
	taskENTER_CRITICAL();
    198a:	f7fe fdbb 	bl	504 <vPortEnterCritical>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3226
		const TickType_t xConstTickCount = xTickCount;
    198e:	4b11      	ldr	r3, [pc, #68]	; (19d4 <xTaskCheckForTimeOut+0x6c>)
    1990:	6819      	ldr	r1, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3241
			if( *pxTicksToWait == portMAX_DELAY )
    1992:	6823      	ldr	r3, [r4, #0]
    1994:	1c5a      	adds	r2, r3, #1
    1996:	d010      	beq.n	19ba <xTaskCheckForTimeOut+0x52>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3251
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
    1998:	480f      	ldr	r0, [pc, #60]	; (19d8 <xTaskCheckForTimeOut+0x70>)
    199a:	682e      	ldr	r6, [r5, #0]
    199c:	6800      	ldr	r0, [r0, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3227
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
    199e:	686a      	ldr	r2, [r5, #4]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3251
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
    19a0:	4286      	cmp	r6, r0
    19a2:	d001      	beq.n	19a8 <xTaskCheckForTimeOut+0x40>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3251 (discriminator 1)
    19a4:	428a      	cmp	r2, r1
    19a6:	d90f      	bls.n	19c8 <xTaskCheckForTimeOut+0x60>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3227
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
    19a8:	1a88      	subs	r0, r1, r2
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3260
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
    19aa:	4283      	cmp	r3, r0
    19ac:	d90a      	bls.n	19c4 <xTaskCheckForTimeOut+0x5c>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3263
			*pxTicksToWait -= xElapsedTime;
    19ae:	1a5b      	subs	r3, r3, r1
    19b0:	4413      	add	r3, r2
    19b2:	6023      	str	r3, [r4, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3264
			vTaskInternalSetTimeOutState( pxTimeOut );
    19b4:	4628      	mov	r0, r5
    19b6:	f7ff ffcb 	bl	1950 <vTaskInternalSetTimeOutState>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3246
				xReturn = pdFALSE;
    19ba:	2400      	movs	r4, #0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3273
	taskEXIT_CRITICAL();
    19bc:	f7fe fdc4 	bl	548 <vPortExitCritical>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3276
}
    19c0:	4620      	mov	r0, r4
    19c2:	bd70      	pop	{r4, r5, r6, pc}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3269
			*pxTicksToWait = 0;
    19c4:	2300      	movs	r3, #0
    19c6:	6023      	str	r3, [r4, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3258
			xReturn = pdTRUE;
    19c8:	2401      	movs	r4, #1
    19ca:	e7f7      	b.n	19bc <xTaskCheckForTimeOut+0x54>
    19cc:	0000b471 	.word	0x0000b471
    19d0:	0000b4c7 	.word	0x0000b4c7
    19d4:	10000490 	.word	0x10000490
    19d8:	10000460 	.word	0x10000460

000019dc <vTaskMissedYield>:
vTaskMissedYield():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3281
	xYieldPending = pdTRUE;
    19dc:	4b01      	ldr	r3, [pc, #4]	; (19e4 <vTaskMissedYield+0x8>)
    19de:	2201      	movs	r2, #1
    19e0:	601a      	str	r2, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3282
}
    19e2:	4770      	bx	lr
    19e4:	10000494 	.word	0x10000494

000019e8 <vTaskGetInfo>:
vTaskGetInfo():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3610
	{
    19e8:	b570      	push	{r4, r5, r6, lr}
    19ea:	460c      	mov	r4, r1
    19ec:	4616      	mov	r6, r2
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3614
		pxTCB = prvGetTCBFromHandle( xTask );
    19ee:	4605      	mov	r5, r0
    19f0:	b908      	cbnz	r0, 19f6 <vTaskGetInfo+0xe>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3614 (discriminator 1)
    19f2:	4a1b      	ldr	r2, [pc, #108]	; (1a60 <vTaskGetInfo+0x78>)
    19f4:	6815      	ldr	r5, [r2, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3616 (discriminator 4)
		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
    19f6:	6025      	str	r5, [r4, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3617 (discriminator 4)
		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
    19f8:	f105 0234 	add.w	r2, r5, #52	; 0x34
    19fc:	6062      	str	r2, [r4, #4]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3618 (discriminator 4)
		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
    19fe:	6aea      	ldr	r2, [r5, #44]	; 0x2c
    1a00:	6122      	str	r2, [r4, #16]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3619 (discriminator 4)
		pxTaskStatus->pxStackBase = pxTCB->pxStack;
    1a02:	6b2a      	ldr	r2, [r5, #48]	; 0x30
    1a04:	61e2      	str	r2, [r4, #28]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3620 (discriminator 4)
		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
    1a06:	6c2a      	ldr	r2, [r5, #64]	; 0x40
    1a08:	60a2      	str	r2, [r4, #8]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3624 (discriminator 4)
			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
    1a0a:	6caa      	ldr	r2, [r5, #72]	; 0x48
    1a0c:	6162      	str	r2, [r4, #20]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3645 (discriminator 4)
		if( eState != eInvalid )
    1a0e:	2b05      	cmp	r3, #5
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3634 (discriminator 4)
			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
    1a10:	6d2a      	ldr	r2, [r5, #80]	; 0x50
    1a12:	61a2      	str	r2, [r4, #24]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3645 (discriminator 4)
		if( eState != eInvalid )
    1a14:	d01a      	beq.n	1a4c <vTaskGetInfo+0x64>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3647
			if( pxTCB == pxCurrentTCB )
    1a16:	4a12      	ldr	r2, [pc, #72]	; (1a60 <vTaskGetInfo+0x78>)
    1a18:	6812      	ldr	r2, [r2, #0]
    1a1a:	42aa      	cmp	r2, r5
    1a1c:	d10a      	bne.n	1a34 <vTaskGetInfo+0x4c>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3649
				pxTaskStatus->eCurrentState = eRunning;
    1a1e:	2300      	movs	r3, #0
    1a20:	7323      	strb	r3, [r4, #12]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3682
		if( xGetFreeStackSpace != pdFALSE )
    1a22:	b1d6      	cbz	r6, 1a5a <vTaskGetInfo+0x72>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3690
				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack );
    1a24:	6b29      	ldr	r1, [r5, #48]	; 0x30
prvTaskCheckFreeStackSpace():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3740
	uint32_t ulCount = 0U;
    1a26:	2300      	movs	r3, #0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3742
		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
    1a28:	5cca      	ldrb	r2, [r1, r3]
    1a2a:	2aa5      	cmp	r2, #165	; 0xa5
    1a2c:	d013      	beq.n	1a56 <vTaskGetInfo+0x6e>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3748
		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller architectures. */
    1a2e:	089b      	lsrs	r3, r3, #2
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3750
		return ( configSTACK_DEPTH_TYPE ) ulCount;
    1a30:	8423      	strh	r3, [r4, #32]
vTaskGetInfo():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3698
	}
    1a32:	bd70      	pop	{r4, r5, r6, pc}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3660
					if( eState == eSuspended )
    1a34:	2b03      	cmp	r3, #3
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3653
				pxTaskStatus->eCurrentState = eState;
    1a36:	7323      	strb	r3, [r4, #12]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3660
					if( eState == eSuspended )
    1a38:	d1f3      	bne.n	1a22 <vTaskGetInfo+0x3a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3662
						vTaskSuspendAll();
    1a3a:	f7ff fd9f 	bl	157c <vTaskSuspendAll>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3664
							if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
    1a3e:	6aab      	ldr	r3, [r5, #40]	; 0x28
    1a40:	b10b      	cbz	r3, 1a46 <vTaskGetInfo+0x5e>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3666
								pxTaskStatus->eCurrentState = eBlocked;
    1a42:	2302      	movs	r3, #2
    1a44:	7323      	strb	r3, [r4, #12]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3669
						( void ) xTaskResumeAll();
    1a46:	f7ff fe33 	bl	16b0 <xTaskResumeAll>
    1a4a:	e7ea      	b.n	1a22 <vTaskGetInfo+0x3a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3677
			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
    1a4c:	4628      	mov	r0, r5
    1a4e:	f7ff fd25 	bl	149c <eTaskGetState>
    1a52:	7320      	strb	r0, [r4, #12]
    1a54:	e7e5      	b.n	1a22 <vTaskGetInfo+0x3a>
prvTaskCheckFreeStackSpace():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3745
			ulCount++;
    1a56:	3301      	adds	r3, #1
    1a58:	e7e6      	b.n	1a28 <vTaskGetInfo+0x40>
vTaskGetInfo():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3696
			pxTaskStatus->usStackHighWaterMark = 0;
    1a5a:	8426      	strh	r6, [r4, #32]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3698
	}
    1a5c:	e7e9      	b.n	1a32 <vTaskGetInfo+0x4a>
    1a5e:	bf00      	nop
    1a60:	10000344 	.word	0x10000344

00001a64 <prvListTasksWithinSingleList>:
prvListTasksWithinSingleList():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3706
	{
    1a64:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3710
		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
    1a68:	680d      	ldr	r5, [r1, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3706
	{
    1a6a:	4681      	mov	r9, r0
    1a6c:	460c      	mov	r4, r1
    1a6e:	4693      	mov	fp, r2
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3710
		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
    1a70:	b315      	cbz	r5, 1ab8 <prvListTasksWithinSingleList+0x54>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3712
			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    1a72:	684b      	ldr	r3, [r1, #4]
    1a74:	685b      	ldr	r3, [r3, #4]
    1a76:	604b      	str	r3, [r1, #4]
    1a78:	f101 0608 	add.w	r6, r1, #8
    1a7c:	42b3      	cmp	r3, r6
    1a7e:	bf04      	itt	eq
    1a80:	68cb      	ldreq	r3, [r1, #12]
    1a82:	604b      	streq	r3, [r1, #4]
    1a84:	684b      	ldr	r3, [r1, #4]
    1a86:	f8d3 800c 	ldr.w	r8, [r3, #12]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3708
	UBaseType_t uxTask = 0;
    1a8a:	2500      	movs	r5, #0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3721
				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
    1a8c:	f04f 0a24 	mov.w	sl, #36	; 0x24
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3720
				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
    1a90:	6863      	ldr	r3, [r4, #4]
    1a92:	685b      	ldr	r3, [r3, #4]
    1a94:	6063      	str	r3, [r4, #4]
    1a96:	429e      	cmp	r6, r3
    1a98:	bf04      	itt	eq
    1a9a:	6873      	ldreq	r3, [r6, #4]
    1a9c:	6063      	streq	r3, [r4, #4]
    1a9e:	6863      	ldr	r3, [r4, #4]
    1aa0:	68df      	ldr	r7, [r3, #12]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3721
				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
    1aa2:	fb0a 9105 	mla	r1, sl, r5, r9
    1aa6:	465b      	mov	r3, fp
    1aa8:	2201      	movs	r2, #1
    1aaa:	4638      	mov	r0, r7
    1aac:	f7ff ff9c 	bl	19e8 <vTaskGetInfo>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3723
			} while( pxNextTCB != pxFirstTCB );
    1ab0:	45b8      	cmp	r8, r7
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3722
				uxTask++;
    1ab2:	f105 0501 	add.w	r5, r5, #1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3723
			} while( pxNextTCB != pxFirstTCB );
    1ab6:	d1eb      	bne.n	1a90 <prvListTasksWithinSingleList+0x2c>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3731
	}
    1ab8:	4628      	mov	r0, r5
    1aba:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1abe:	Address 0x00001abe is out of bounds.


00001ac0 <uxTaskGetSystemState>:
uxTaskGetSystemState():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2486
	{
    1ac0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    1ac4:	4605      	mov	r5, r0
    1ac6:	4690      	mov	r8, r2
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2489
		vTaskSuspendAll();
    1ac8:	f7ff fd58 	bl	157c <vTaskSuspendAll>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2492
			if( uxArraySize >= uxCurrentNumberOfTasks )
    1acc:	4b1d      	ldr	r3, [pc, #116]	; (1b44 <uxTaskGetSystemState+0x84>)
    1ace:	681b      	ldr	r3, [r3, #0]
    1ad0:	428b      	cmp	r3, r1
    1ad2:	d834      	bhi.n	1b3e <uxTaskGetSystemState+0x7e>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2499
					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists[ uxQueue ] ), eReady );
    1ad4:	f8df 907c 	ldr.w	r9, [pc, #124]	; 1b54 <uxTaskGetSystemState+0x94>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2487
	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
    1ad8:	270a      	movs	r7, #10
    1ada:	2400      	movs	r4, #0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2499
					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists[ uxQueue ] ), eReady );
    1adc:	f04f 0a14 	mov.w	sl, #20
    1ae0:	2624      	movs	r6, #36	; 0x24
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2498 (discriminator 1)
					uxQueue--;
    1ae2:	3f01      	subs	r7, #1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2499 (discriminator 1)
					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists[ uxQueue ] ), eReady );
    1ae4:	fb06 5004 	mla	r0, r6, r4, r5
    1ae8:	2201      	movs	r2, #1
    1aea:	fb0a 9107 	mla	r1, sl, r7, r9
    1aee:	f7ff ffb9 	bl	1a64 <prvListTasksWithinSingleList>
    1af2:	4404      	add	r4, r0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2501 (discriminator 1)
				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    1af4:	2f00      	cmp	r7, #0
    1af6:	d1f4      	bne.n	1ae2 <uxTaskGetSystemState+0x22>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2505
				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelayedTaskList, eBlocked );
    1af8:	4b13      	ldr	r3, [pc, #76]	; (1b48 <uxTaskGetSystemState+0x88>)
    1afa:	2202      	movs	r2, #2
    1afc:	6819      	ldr	r1, [r3, #0]
    1afe:	fb06 5004 	mla	r0, r6, r4, r5
    1b02:	f7ff ffaf 	bl	1a64 <prvListTasksWithinSingleList>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2506
				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverflowDelayedTaskList, eBlocked );
    1b06:	4b11      	ldr	r3, [pc, #68]	; (1b4c <uxTaskGetSystemState+0x8c>)
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2505
				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelayedTaskList, eBlocked );
    1b08:	4404      	add	r4, r0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2506
				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverflowDelayedTaskList, eBlocked );
    1b0a:	6819      	ldr	r1, [r3, #0]
    1b0c:	2202      	movs	r2, #2
    1b0e:	fb06 5004 	mla	r0, r6, r4, r5
    1b12:	f7ff ffa7 	bl	1a64 <prvListTasksWithinSingleList>
    1b16:	4404      	add	r4, r0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2520
					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList, eSuspended );
    1b18:	fb06 5004 	mla	r0, r6, r4, r5
    1b1c:	2203      	movs	r2, #3
    1b1e:	490c      	ldr	r1, [pc, #48]	; (1b50 <uxTaskGetSystemState+0x90>)
    1b20:	f7ff ffa0 	bl	1a64 <prvListTasksWithinSingleList>
    1b24:	4404      	add	r4, r0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2526
					if( pulTotalRunTime != NULL )
    1b26:	f1b8 0f00 	cmp.w	r8, #0
    1b2a:	d003      	beq.n	1b34 <uxTaskGetSystemState+0x74>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2531
							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
    1b2c:	f002 ff52 	bl	49d4 <freertos_hooks__get_run_time_counter_value>
    1b30:	f8c8 0000 	str.w	r0, [r8]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2549
		( void ) xTaskResumeAll();
    1b34:	f7ff fdbc 	bl	16b0 <xTaskResumeAll>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2552
	}
    1b38:	4620      	mov	r0, r4
    1b3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:2487
	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
    1b3e:	2400      	movs	r4, #0
    1b40:	e7f8      	b.n	1b34 <uxTaskGetSystemState+0x74>
    1b42:	bf00      	nop
    1b44:	1000041c 	.word	0x1000041c
    1b48:	10000348 	.word	0x10000348
    1b4c:	1000034c 	.word	0x1000034c
    1b50:	1000047c 	.word	0x1000047c
    1b54:	10000350 	.word	0x10000350

00001b58 <xTaskGetSchedulerState>:
xTaskGetSchedulerState():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3927
		if( xSchedulerRunning == pdFALSE )
    1b58:	4b05      	ldr	r3, [pc, #20]	; (1b70 <xTaskGetSchedulerState+0x18>)
    1b5a:	681b      	ldr	r3, [r3, #0]
    1b5c:	b133      	cbz	r3, 1b6c <xTaskGetSchedulerState+0x14>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3933
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
    1b5e:	4b05      	ldr	r3, [pc, #20]	; (1b74 <xTaskGetSchedulerState+0x1c>)
    1b60:	681b      	ldr	r3, [r3, #0]
    1b62:	2b00      	cmp	r3, #0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3939
				xReturn = taskSCHEDULER_SUSPENDED;
    1b64:	bf0c      	ite	eq
    1b66:	2002      	moveq	r0, #2
    1b68:	2000      	movne	r0, #0
    1b6a:	4770      	bx	lr
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3929
			xReturn = taskSCHEDULER_NOT_STARTED;
    1b6c:	2001      	movs	r0, #1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3944
	}
    1b6e:	4770      	bx	lr
    1b70:	10000478 	.word	0x10000478
    1b74:	10000424 	.word	0x10000424

00001b78 <xTaskPriorityInherit>:
xTaskPriorityInherit():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3952
	{
    1b78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3959
		if( pxMutexHolder != NULL )
    1b7c:	4604      	mov	r4, r0
    1b7e:	2800      	cmp	r0, #0
    1b80:	d035      	beq.n	1bee <xTaskPriorityInherit+0x76>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3964
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
    1b82:	4a23      	ldr	r2, [pc, #140]	; (1c10 <xTaskPriorityInherit+0x98>)
    1b84:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
    1b86:	6811      	ldr	r1, [r2, #0]
    1b88:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
    1b8a:	428b      	cmp	r3, r1
    1b8c:	4617      	mov	r7, r2
    1b8e:	d236      	bcs.n	1bfe <xTaskPriorityInherit+0x86>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3969
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
    1b90:	6982      	ldr	r2, [r0, #24]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3980
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
    1b92:	4d20      	ldr	r5, [pc, #128]	; (1c14 <xTaskPriorityInherit+0x9c>)
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3969
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
    1b94:	2a00      	cmp	r2, #0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3971
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    1b96:	bfa1      	itttt	ge
    1b98:	683a      	ldrge	r2, [r7, #0]
    1b9a:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
    1b9c:	f1c2 020a 	rsbge	r2, r2, #10
    1ba0:	6182      	strge	r2, [r0, #24]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3980
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
    1ba2:	2614      	movs	r6, #20
    1ba4:	6942      	ldr	r2, [r0, #20]
    1ba6:	fb06 5303 	mla	r3, r6, r3, r5
    1baa:	429a      	cmp	r2, r3
    1bac:	d121      	bne.n	1bf2 <xTaskPriorityInherit+0x7a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3982
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    1bae:	f100 0804 	add.w	r8, r0, #4
    1bb2:	4640      	mov	r0, r8
    1bb4:	f7fe fe35 	bl	822 <uxListRemove>
    1bb8:	4b17      	ldr	r3, [pc, #92]	; (1c18 <xTaskPriorityInherit+0xa0>)
    1bba:	b948      	cbnz	r0, 1bd0 <xTaskPriorityInherit+0x58>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3984
						taskRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority );
    1bbc:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
    1bbe:	4346      	muls	r6, r0
    1bc0:	59aa      	ldr	r2, [r5, r6]
    1bc2:	b92a      	cbnz	r2, 1bd0 <xTaskPriorityInherit+0x58>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3984 (discriminator 1)
    1bc4:	681a      	ldr	r2, [r3, #0]
    1bc6:	2101      	movs	r1, #1
    1bc8:	4081      	lsls	r1, r0
    1bca:	ea22 0201 	bic.w	r2, r2, r1
    1bce:	601a      	str	r2, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3992
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
    1bd0:	683a      	ldr	r2, [r7, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3993
					prvAddTaskToReadyList( pxMutexHolderTCB );
    1bd2:	6819      	ldr	r1, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3992
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
    1bd4:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
    1bd6:	62e2      	str	r2, [r4, #44]	; 0x2c
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3993
					prvAddTaskToReadyList( pxMutexHolderTCB );
    1bd8:	2401      	movs	r4, #1
    1bda:	fa04 f002 	lsl.w	r0, r4, r2
    1bde:	4308      	orrs	r0, r1
    1be0:	6018      	str	r0, [r3, #0]
    1be2:	2014      	movs	r0, #20
    1be4:	4641      	mov	r1, r8
    1be6:	fb00 5002 	mla	r0, r0, r2, r5
    1bea:	f7fe fdf7 	bl	7dc <vListInsertEnd>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3954
	BaseType_t xReturn = pdFALSE;
    1bee:	4620      	mov	r0, r4
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4030
		return xReturn;
    1bf0:	e003      	b.n	1bfa <xTaskPriorityInherit+0x82>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:3998
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
    1bf2:	683b      	ldr	r3, [r7, #0]
    1bf4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    1bf6:	62c3      	str	r3, [r0, #44]	; 0x2c
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4004
				xReturn = pdTRUE;
    1bf8:	2001      	movs	r0, #1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4031
	}
    1bfa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4008
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
    1bfe:	6813      	ldr	r3, [r2, #0]
    1c00:	6c80      	ldr	r0, [r0, #72]	; 0x48
    1c02:	6adc      	ldr	r4, [r3, #44]	; 0x2c
    1c04:	42a0      	cmp	r0, r4
    1c06:	bf2c      	ite	cs
    1c08:	2000      	movcs	r0, #0
    1c0a:	2001      	movcc	r0, #1
    1c0c:	e7f5      	b.n	1bfa <xTaskPriorityInherit+0x82>
    1c0e:	bf00      	nop
    1c10:	10000344 	.word	0x10000344
    1c14:	10000350 	.word	0x10000350
    1c18:	1000042c 	.word	0x1000042c

00001c1c <xTaskPriorityDisinherit>:
xTaskPriorityDisinherit():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4039
	{
    1c1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4043
		if( pxMutexHolder != NULL )
    1c1e:	4604      	mov	r4, r0
    1c20:	b908      	cbnz	r0, 1c26 <xTaskPriorityDisinherit+0xa>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4041
	BaseType_t xReturn = pdFALSE;
    1c22:	2000      	movs	r0, #0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4111
	}
    1c24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4049
			configASSERT( pxTCB == pxCurrentTCB );
    1c26:	4b1f      	ldr	r3, [pc, #124]	; (1ca4 <xTaskPriorityDisinherit+0x88>)
    1c28:	681b      	ldr	r3, [r3, #0]
    1c2a:	4283      	cmp	r3, r0
    1c2c:	d005      	beq.n	1c3a <xTaskPriorityDisinherit+0x1e>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4049 (discriminator 1)
    1c2e:	491e      	ldr	r1, [pc, #120]	; (1ca8 <xTaskPriorityDisinherit+0x8c>)
    1c30:	f640 70d1 	movw	r0, #4049	; 0xfd1
    1c34:	f002 fea2 	bl	497c <configASSERT_callback>
    1c38:	e7fe      	b.n	1c38 <xTaskPriorityDisinherit+0x1c>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4050
			configASSERT( pxTCB->uxMutexesHeld );
    1c3a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    1c3c:	b92b      	cbnz	r3, 1c4a <xTaskPriorityDisinherit+0x2e>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4050 (discriminator 1)
    1c3e:	491b      	ldr	r1, [pc, #108]	; (1cac <xTaskPriorityDisinherit+0x90>)
    1c40:	f640 70d2 	movw	r0, #4050	; 0xfd2
    1c44:	f002 fe9a 	bl	497c <configASSERT_callback>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4050 (discriminator 2)
    1c48:	e7fe      	b.n	1c48 <xTaskPriorityDisinherit+0x2c>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4055
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
    1c4a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
    1c4c:	6c82      	ldr	r2, [r0, #72]	; 0x48
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4051
			( pxTCB->uxMutexesHeld )--;
    1c4e:	3b01      	subs	r3, #1
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4055
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
    1c50:	4291      	cmp	r1, r2
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4051
			( pxTCB->uxMutexesHeld )--;
    1c52:	64c3      	str	r3, [r0, #76]	; 0x4c
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4055
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
    1c54:	d0e5      	beq.n	1c22 <xTaskPriorityDisinherit+0x6>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4058
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
    1c56:	2b00      	cmp	r3, #0
    1c58:	d1e3      	bne.n	1c22 <xTaskPriorityDisinherit+0x6>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4065
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    1c5a:	1d05      	adds	r5, r0, #4
    1c5c:	4628      	mov	r0, r5
    1c5e:	f7fe fde0 	bl	822 <uxListRemove>
    1c62:	4e13      	ldr	r6, [pc, #76]	; (1cb0 <xTaskPriorityDisinherit+0x94>)
    1c64:	4a13      	ldr	r2, [pc, #76]	; (1cb4 <xTaskPriorityDisinherit+0x98>)
    1c66:	b950      	cbnz	r0, 1c7e <xTaskPriorityDisinherit+0x62>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4067
						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
    1c68:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
    1c6a:	2114      	movs	r1, #20
    1c6c:	4379      	muls	r1, r7
    1c6e:	5873      	ldr	r3, [r6, r1]
    1c70:	b92b      	cbnz	r3, 1c7e <xTaskPriorityDisinherit+0x62>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4067 (discriminator 1)
    1c72:	6813      	ldr	r3, [r2, #0]
    1c74:	2001      	movs	r0, #1
    1c76:	40b8      	lsls	r0, r7
    1c78:	ea23 0300 	bic.w	r3, r3, r0
    1c7c:	6013      	str	r3, [r2, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4077
					pxTCB->uxPriority = pxTCB->uxBasePriority;
    1c7e:	6ca3      	ldr	r3, [r4, #72]	; 0x48
    1c80:	62e3      	str	r3, [r4, #44]	; 0x2c
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4082
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    1c82:	f1c3 010a 	rsb	r1, r3, #10
    1c86:	61a1      	str	r1, [r4, #24]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4083
					prvAddTaskToReadyList( pxTCB );
    1c88:	6811      	ldr	r1, [r2, #0]
    1c8a:	2401      	movs	r4, #1
    1c8c:	fa04 f003 	lsl.w	r0, r4, r3
    1c90:	4308      	orrs	r0, r1
    1c92:	6010      	str	r0, [r2, #0]
    1c94:	2014      	movs	r0, #20
    1c96:	fb00 6003 	mla	r0, r0, r3, r6
    1c9a:	4629      	mov	r1, r5
    1c9c:	f7fe fd9e 	bl	7dc <vListInsertEnd>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4093
					xReturn = pdTRUE;
    1ca0:	4620      	mov	r0, r4
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4110
		return xReturn;
    1ca2:	e7bf      	b.n	1c24 <xTaskPriorityDisinherit+0x8>
    1ca4:	10000344 	.word	0x10000344
    1ca8:	0000b545 	.word	0x0000b545
    1cac:	0000b55b 	.word	0x0000b55b
    1cb0:	10000350 	.word	0x10000350
    1cb4:	1000042c 	.word	0x1000042c

00001cb8 <vTaskPriorityDisinheritAfterTimeout>:
vTaskPriorityDisinheritAfterTimeout():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4119
	{
    1cb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4124
		if( pxMutexHolder != NULL )
    1cba:	4604      	mov	r4, r0
    1cbc:	2800      	cmp	r0, #0
    1cbe:	d047      	beq.n	1d50 <vTaskPriorityDisinheritAfterTimeout+0x98>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4128
			configASSERT( pxTCB->uxMutexesHeld );
    1cc0:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
    1cc2:	b92a      	cbnz	r2, 1cd0 <vTaskPriorityDisinheritAfterTimeout+0x18>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4128 (discriminator 1)
    1cc4:	4923      	ldr	r1, [pc, #140]	; (1d54 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
    1cc6:	f44f 5081 	mov.w	r0, #4128	; 0x1020
    1cca:	f002 fe57 	bl	497c <configASSERT_callback>
    1cce:	e7fe      	b.n	1cce <vTaskPriorityDisinheritAfterTimeout+0x16>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4134
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
    1cd0:	6c83      	ldr	r3, [r0, #72]	; 0x48
    1cd2:	4299      	cmp	r1, r3
    1cd4:	bf38      	it	cc
    1cd6:	4619      	movcc	r1, r3
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4144
			if( pxTCB->uxPriority != uxPriorityToUse )
    1cd8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
    1cda:	428b      	cmp	r3, r1
    1cdc:	d038      	beq.n	1d50 <vTaskPriorityDisinheritAfterTimeout+0x98>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4150
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
    1cde:	2a01      	cmp	r2, #1
    1ce0:	d136      	bne.n	1d50 <vTaskPriorityDisinheritAfterTimeout+0x98>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4155
					configASSERT( pxTCB != pxCurrentTCB );
    1ce2:	4a1d      	ldr	r2, [pc, #116]	; (1d58 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
    1ce4:	6812      	ldr	r2, [r2, #0]
    1ce6:	4282      	cmp	r2, r0
    1ce8:	d105      	bne.n	1cf6 <vTaskPriorityDisinheritAfterTimeout+0x3e>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4155 (discriminator 1)
    1cea:	491c      	ldr	r1, [pc, #112]	; (1d5c <vTaskPriorityDisinheritAfterTimeout+0xa4>)
    1cec:	f241 003b 	movw	r0, #4155	; 0x103b
    1cf0:	f002 fe44 	bl	497c <configASSERT_callback>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4155 (discriminator 2)
    1cf4:	e7fe      	b.n	1cf4 <vTaskPriorityDisinheritAfterTimeout+0x3c>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4166
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
    1cf6:	6982      	ldr	r2, [r0, #24]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4181
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
    1cf8:	4d19      	ldr	r5, [pc, #100]	; (1d60 <vTaskPriorityDisinheritAfterTimeout+0xa8>)
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4162
					pxTCB->uxPriority = uxPriorityToUse;
    1cfa:	62c1      	str	r1, [r0, #44]	; 0x2c
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4166
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
    1cfc:	2a00      	cmp	r2, #0
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4181
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
    1cfe:	f04f 0614 	mov.w	r6, #20
    1d02:	6942      	ldr	r2, [r0, #20]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4168
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    1d04:	bfa8      	it	ge
    1d06:	f1c1 010a 	rsbge	r1, r1, #10
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4181
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
    1d0a:	fb06 5303 	mla	r3, r6, r3, r5
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4168
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
    1d0e:	bfa8      	it	ge
    1d10:	6181      	strge	r1, [r0, #24]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4181
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
    1d12:	429a      	cmp	r2, r3
    1d14:	d11c      	bne.n	1d50 <vTaskPriorityDisinheritAfterTimeout+0x98>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4183
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
    1d16:	1d07      	adds	r7, r0, #4
    1d18:	4638      	mov	r0, r7
    1d1a:	f7fe fd82 	bl	822 <uxListRemove>
    1d1e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
    1d20:	4c10      	ldr	r4, [pc, #64]	; (1d64 <vTaskPriorityDisinheritAfterTimeout+0xac>)
    1d22:	b940      	cbnz	r0, 1d36 <vTaskPriorityDisinheritAfterTimeout+0x7e>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4185
							taskRESET_READY_PRIORITY( pxTCB->uxPriority );
    1d24:	4356      	muls	r6, r2
    1d26:	59ab      	ldr	r3, [r5, r6]
    1d28:	b92b      	cbnz	r3, 1d36 <vTaskPriorityDisinheritAfterTimeout+0x7e>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4185 (discriminator 1)
    1d2a:	6823      	ldr	r3, [r4, #0]
    1d2c:	2101      	movs	r1, #1
    1d2e:	4091      	lsls	r1, r2
    1d30:	ea23 0301 	bic.w	r3, r3, r1
    1d34:	6023      	str	r3, [r4, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4192
						prvAddTaskToReadyList( pxTCB );
    1d36:	6821      	ldr	r1, [r4, #0]
    1d38:	2301      	movs	r3, #1
    1d3a:	4093      	lsls	r3, r2
    1d3c:	430b      	orrs	r3, r1
    1d3e:	2014      	movs	r0, #20
    1d40:	6023      	str	r3, [r4, #0]
    1d42:	4639      	mov	r1, r7
    1d44:	fb00 5002 	mla	r0, r0, r2, r5
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4213
	}
    1d48:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4192
						prvAddTaskToReadyList( pxTCB );
    1d4c:	f7fe bd46 	b.w	7dc <vListInsertEnd>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4213
	}
    1d50:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1d52:	bf00      	nop
    1d54:	0000b55b 	.word	0x0000b55b
    1d58:	10000344 	.word	0x10000344
    1d5c:	0000b45b 	.word	0x0000b45b
    1d60:	10000350 	.word	0x10000350
    1d64:	1000042c 	.word	0x1000042c

00001d68 <pvTaskIncrementMutexHeldCount>:
pvTaskIncrementMutexHeldCount():
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4553
		if( pxCurrentTCB != NULL )
    1d68:	4b04      	ldr	r3, [pc, #16]	; (1d7c <pvTaskIncrementMutexHeldCount+0x14>)
    1d6a:	681a      	ldr	r2, [r3, #0]
    1d6c:	b11a      	cbz	r2, 1d76 <pvTaskIncrementMutexHeldCount+0xe>
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4555
			( pxCurrentTCB->uxMutexesHeld )++;
    1d6e:	6819      	ldr	r1, [r3, #0]
    1d70:	6cca      	ldr	r2, [r1, #76]	; 0x4c
    1d72:	3201      	adds	r2, #1
    1d74:	64ca      	str	r2, [r1, #76]	; 0x4c
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4558
		return pxCurrentTCB;
    1d76:	6818      	ldr	r0, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos\source/tasks.c:4559
	}
    1d78:	4770      	bx	lr
    1d7a:	bf00      	nop
    1d7c:	10000344 	.word	0x10000344

00001d80 <vTaskResetRunTimeStats>:
vTaskResetRunTimeStats():
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:34

void vTaskResetRunTimeStats(void) {
    1d80:	b570      	push	{r4, r5, r6, lr}
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:36
  BaseType_t uxQueue = configMAX_PRIORITIES;
  vTaskSuspendAll();
    1d82:	f7ff fbfb 	bl	157c <vTaskSuspendAll>
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:40
  {
    do {
      uxQueue--;
      if (listLIST_IS_EMPTY(&(pxReadyTasksLists[uxQueue])) == pdFALSE) {
    1d86:	4d14      	ldr	r5, [pc, #80]	; (1dd8 <vTaskResetRunTimeStats+0x58>)
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:35
  BaseType_t uxQueue = configMAX_PRIORITIES;
    1d88:	240a      	movs	r4, #10
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:40
      if (listLIST_IS_EMPTY(&(pxReadyTasksLists[uxQueue])) == pdFALSE) {
    1d8a:	2614      	movs	r6, #20
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:39
      uxQueue--;
    1d8c:	3c01      	subs	r4, #1
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:40
      if (listLIST_IS_EMPTY(&(pxReadyTasksLists[uxQueue])) == pdFALSE) {
    1d8e:	fb06 f304 	mul.w	r3, r6, r4
    1d92:	18e8      	adds	r0, r5, r3
    1d94:	58eb      	ldr	r3, [r5, r3]
    1d96:	b10b      	cbz	r3, 1d9c <vTaskResetRunTimeStats+0x1c>
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:41
        prvResetRunTimeStatsInList((List_t *)&(pxReadyTasksLists[uxQueue]));
    1d98:	f7ff f9d2 	bl	1140 <prvResetRunTimeStatsInList>
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:43
      }
    } while (uxQueue > (unsigned portBASE_TYPE)tskIDLE_PRIORITY);
    1d9c:	2c00      	cmp	r4, #0
    1d9e:	d1f5      	bne.n	1d8c <vTaskResetRunTimeStats+0xc>
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:45

    if (listLIST_IS_EMPTY(pxDelayedTaskList) == pdFALSE) {
    1da0:	4b0e      	ldr	r3, [pc, #56]	; (1ddc <vTaskResetRunTimeStats+0x5c>)
    1da2:	681a      	ldr	r2, [r3, #0]
    1da4:	6812      	ldr	r2, [r2, #0]
    1da6:	b112      	cbz	r2, 1dae <vTaskResetRunTimeStats+0x2e>
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:46
      prvResetRunTimeStatsInList((List_t *)pxDelayedTaskList);
    1da8:	6818      	ldr	r0, [r3, #0]
    1daa:	f7ff f9c9 	bl	1140 <prvResetRunTimeStatsInList>
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:49
    }

    if (listLIST_IS_EMPTY(pxOverflowDelayedTaskList) == pdFALSE) {
    1dae:	4b0c      	ldr	r3, [pc, #48]	; (1de0 <vTaskResetRunTimeStats+0x60>)
    1db0:	681a      	ldr	r2, [r3, #0]
    1db2:	6812      	ldr	r2, [r2, #0]
    1db4:	b112      	cbz	r2, 1dbc <vTaskResetRunTimeStats+0x3c>
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:50
      prvResetRunTimeStatsInList((List_t *)pxOverflowDelayedTaskList);
    1db6:	6818      	ldr	r0, [r3, #0]
    1db8:	f7ff f9c2 	bl	1140 <prvResetRunTimeStatsInList>
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:63
    }
#endif

#if (INCLUDE_vTaskSuspend == 1)
    {
      if (listLIST_IS_EMPTY(&xSuspendedTaskList) == pdFALSE) {
    1dbc:	4809      	ldr	r0, [pc, #36]	; (1de4 <vTaskResetRunTimeStats+0x64>)
    1dbe:	6803      	ldr	r3, [r0, #0]
    1dc0:	b10b      	cbz	r3, 1dc6 <vTaskResetRunTimeStats+0x46>
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:64
        prvResetRunTimeStatsInList((List_t *)&xSuspendedTaskList);
    1dc2:	f7ff f9bd 	bl	1140 <prvResetRunTimeStatsInList>
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:68
      }
    }
#endif
    ulTaskSwitchedInTime = 0;
    1dc6:	4b08      	ldr	r3, [pc, #32]	; (1de8 <vTaskResetRunTimeStats+0x68>)
    1dc8:	2200      	movs	r2, #0
    1dca:	601a      	str	r2, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:69
    portRESET_TIMER_FOR_RUN_TIME_STATS();
    1dcc:	f002 fe0c 	bl	49e8 <freertos_hooks__reset_run_time_stats>
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:72
  }
  xTaskResumeAll();
}
    1dd0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:71
  xTaskResumeAll();
    1dd4:	f7ff bc6c 	b.w	16b0 <xTaskResumeAll>
    1dd8:	10000350 	.word	0x10000350
    1ddc:	10000348 	.word	0x10000348
    1de0:	1000034c 	.word	0x1000034c
    1de4:	1000047c 	.word	0x1000047c
    1de8:	10000418 	.word	0x10000418

00001dec <vRunTimeStatIsrEntry>:
vRunTimeStatIsrEntry():
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:74

void vRunTimeStatIsrEntry(void) {
    1dec:	b510      	push	{r4, lr}
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:75
  unsigned long ulTempCounter = portGET_RUN_TIME_COUNTER_VALUE();
    1dee:	f002 fdf1 	bl	49d4 <freertos_hooks__get_run_time_counter_value>
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:78

  // Add the time spent in the previously running task's counter.
  if (NULL != pxCurrentTCB) {
    1df2:	4b06      	ldr	r3, [pc, #24]	; (1e0c <vRunTimeStatIsrEntry+0x20>)
    1df4:	4a06      	ldr	r2, [pc, #24]	; (1e10 <vRunTimeStatIsrEntry+0x24>)
    1df6:	6819      	ldr	r1, [r3, #0]
    1df8:	b129      	cbz	r1, 1e06 <vRunTimeStatIsrEntry+0x1a>
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:79
    pxCurrentTCB->ulRunTimeCounter += (ulTempCounter - ulTaskSwitchedInTime);
    1dfa:	6819      	ldr	r1, [r3, #0]
    1dfc:	6814      	ldr	r4, [r2, #0]
    1dfe:	6d0b      	ldr	r3, [r1, #80]	; 0x50
    1e00:	1b1b      	subs	r3, r3, r4
    1e02:	4403      	add	r3, r0
    1e04:	650b      	str	r3, [r1, #80]	; 0x50
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:83
  }

  // Save the current time to log how long the ISR is going to take.
  ulTaskSwitchedInTime = ulTempCounter;
    1e06:	6010      	str	r0, [r2, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:84
}
    1e08:	bd10      	pop	{r4, pc}
    1e0a:	bf00      	nop
    1e0c:	10000344 	.word	0x10000344
    1e10:	10000418 	.word	0x10000418

00001e14 <vRunTimeStatIsrExit>:
vRunTimeStatIsrExit():
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:85
void vRunTimeStatIsrExit(void) {
    1e14:	b508      	push	{r3, lr}
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:86
  unsigned long ulTempCounter = portGET_RUN_TIME_COUNTER_VALUE();
    1e16:	f002 fddd 	bl	49d4 <freertos_hooks__get_run_time_counter_value>
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:94
  // We don't need this because whatever is the "leftover" for the counters, that is
  // is the overhead itself!
  // ulISROverhead += ( ulTempCounter - ulTaskSwitchedInTime );

  // Save the current time so next time when task is switched out, it will use this time-stamp.
  ulTaskSwitchedInTime = ulTempCounter;
    1e1a:	4b01      	ldr	r3, [pc, #4]	; (1e20 <vRunTimeStatIsrExit+0xc>)
    1e1c:	6018      	str	r0, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l1_freertos/freertos_tasks.mods:95
}
    1e1e:	bd08      	pop	{r3, pc}
    1e20:	10000418 	.word	0x10000418

00001e24 <sl_string__initialize>:
sl_string__initialize():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:106
 *                      P U B L I C    F U N C T I O N S
 *
 ******************************************************************************/

sl_string_t sl_string__initialize(void *memory,
                                  sl_string_size_t memory_size_max) {
    1e24:	b538      	push	{r3, r4, r5, lr}
    1e26:	460d      	mov	r5, r1
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:111
  sl_string_t string = NULL;

  // We need memory to hold sizeof(sl_string_size_t) plus 1 char for a
  // meaningful string and 1 char for NULL
  if ((NULL != memory) &&
    1e28:	4604      	mov	r4, r0
    1e2a:	b158      	cbz	r0, 1e44 <sl_string__initialize+0x20>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:111 (discriminator 1)
    1e2c:	2903      	cmp	r1, #3
    1e2e:	d90b      	bls.n	1e48 <sl_string__initialize+0x24>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:113
      (memory_size_max >= (sizeof(sl_string_size_t) + 2U))) {
    memset(memory, 0, memory_size_max);
    1e30:	460a      	mov	r2, r1
    1e32:	2100      	movs	r1, #0
    1e34:	f003 fc24 	bl	5680 <memset>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:116

    void *header = memory;
    void *string_start = (memory + sizeof(sl_string_size_t));
    1e38:	4623      	mov	r3, r4
sl_byte_convert__to_network_from_uint16():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:36
  bytes[0] = (uint8_t)(source_value >> 8);
    1e3a:	0a2a      	lsrs	r2, r5, #8
    1e3c:	f803 2b02 	strb.w	r2, [r3], #2
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:37
  bytes[1] = (uint8_t)(source_value >> 0);
    1e40:	7065      	strb	r5, [r4, #1]
    1e42:	461c      	mov	r4, r3
sl_string__initialize():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:124

    string = (sl_string_t)string_start;
  }

  return string;
}
    1e44:	4620      	mov	r0, r4
    1e46:	bd38      	pop	{r3, r4, r5, pc}
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:107
  sl_string_t string = NULL;
    1e48:	2400      	movs	r4, #0
    1e4a:	e7fb      	b.n	1e44 <sl_string__initialize+0x20>

00001e4c <sl_string__get_capacity>:
sl_byte_convert__from_network_to_uint16():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:41
  return (((uint16_t)bytes[0] << 8) | (uint16_t)bytes[1]);
    1e4c:	f810 3c02 	ldrb.w	r3, [r0, #-2]
    1e50:	f810 0c01 	ldrb.w	r0, [r0, #-1]
    1e54:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
sl_string__get_capacity():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:144
  const sl_string_size_t capacity = sl_byte_convert__from_network_to_uint16(
      (const uint8_t *)(string - sizeof(sl_string_size_t)));

  // It is okay to to subtract (sizeof() + 1U) from capacity as we
  // check to ensure the memory meets a minimum value during initialization.
  return (sl_string_size_t)(capacity - sizeof(sl_string_size_t) - 1U);
    1e58:	3803      	subs	r0, #3
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:145
}
    1e5a:	b280      	uxth	r0, r0
    1e5c:	4770      	bx	lr

00001e5e <sl_string__get_capacity_including_null_char>:
sl_string__get_capacity_including_null_char():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:148

sl_string_size_t
sl_string__get_capacity_including_null_char(const sl_string_t string) {
    1e5e:	b508      	push	{r3, lr}
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:149
  return sl_string__get_capacity(string) + 1U;
    1e60:	f7ff fff4 	bl	1e4c <sl_string__get_capacity>
    1e64:	3001      	adds	r0, #1
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:150
}
    1e66:	b280      	uxth	r0, r0
    1e68:	bd08      	pop	{r3, pc}

00001e6a <sl_string__get_length>:
sl_string__get_length():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:152

sl_string_size_t sl_string__get_length(const sl_string_t string) {
    1e6a:	b508      	push	{r3, lr}
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:153
  return (NULL == string) ? 0U : (sl_string_size_t)strlen(string);
    1e6c:	b110      	cbz	r0, 1e74 <sl_string__get_length+0xa>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:153 (discriminator 1)
    1e6e:	f004 fdf0 	bl	6a52 <strlen>
    1e72:	b280      	uxth	r0, r0
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:154 (discriminator 4)
}
    1e74:	bd08      	pop	{r3, pc}

00001e76 <sl_string__is_full>:
sl_string__is_full():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:156

bool sl_string__is_full(const sl_string_t string) {
    1e76:	b510      	push	{r4, lr}
    1e78:	4604      	mov	r4, r0
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:157
  const sl_string_size_t length = sl_string__get_length(string);
    1e7a:	f7ff fff6 	bl	1e6a <sl_string__get_length>
    1e7e:	4602      	mov	r2, r0
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:158
  const sl_string_size_t capacity = sl_string__get_capacity(string);
    1e80:	4620      	mov	r0, r4
    1e82:	f7ff ffe3 	bl	1e4c <sl_string__get_capacity>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:160
  return (length >= capacity);
}
    1e86:	4282      	cmp	r2, r0
    1e88:	bf34      	ite	cc
    1e8a:	2000      	movcc	r0, #0
    1e8c:	2001      	movcs	r0, #1
    1e8e:	bd10      	pop	{r4, pc}

00001e90 <sl_string__to_int>:
sl_string__to_int():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:164

const char *sl_string__c_str(const sl_string_t string) { return string; }

int sl_string__to_int(const sl_string_t string) { return atoi(string); }
    1e90:	f003 bb24 	b.w	54dc <atoi>

00001e94 <sl_string__clear>:
sl_string__clear():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:196
  }

  return is_alpha_num;
}

void sl_string__clear(sl_string_t string) { *string = '\0'; }
    1e94:	2300      	movs	r3, #0
    1e96:	7003      	strb	r3, [r0, #0]
    1e98:	4770      	bx	lr

00001e9a <sl_string__vprintf>:
sl_string__vprintf():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:230

  return chars_printed;
}

sl_string_size_t sl_string__vprintf(sl_string_t string, const char *format,
                                    va_list args) {
    1e9a:	b510      	push	{r4, lr}
    1e9c:	4604      	mov	r4, r0
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:232
  const sl_string_size_t capacity =
      sl_string__get_capacity_including_null_char(string);
    1e9e:	f7ff ffde 	bl	1e5e <sl_string__get_capacity_including_null_char>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:233
  const int chars_printed = vsnprintf(string, capacity, format, args);
    1ea2:	4613      	mov	r3, r2
    1ea4:	460a      	mov	r2, r1
    1ea6:	4601      	mov	r1, r0
    1ea8:	4620      	mov	r0, r4
    1eaa:	f005 fcd7 	bl	785c <vsniprintf>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:234
  return sl_string__private_return_positive_or_zero(chars_printed);
    1eae:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:235
}
    1eb2:	b280      	uxth	r0, r0
    1eb4:	bd10      	pop	{r4, pc}

00001eb6 <sl_string__printf>:
sl_string__printf():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:219
                                   ...) {
    1eb6:	b40e      	push	{r1, r2, r3}
    1eb8:	b503      	push	{r0, r1, lr}
    1eba:	aa03      	add	r2, sp, #12
    1ebc:	f852 1b04 	ldr.w	r1, [r2], #4
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:221
  va_start(args, format);
    1ec0:	9201      	str	r2, [sp, #4]
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:223
      sl_string__vprintf(string, format, args);
    1ec2:	f7ff ffea 	bl	1e9a <sl_string__vprintf>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:227
}
    1ec6:	b002      	add	sp, #8
    1ec8:	f85d eb04 	ldr.w	lr, [sp], #4
    1ecc:	b003      	add	sp, #12
    1ece:	4770      	bx	lr

00001ed0 <sl_string__scanf>:
sl_string__scanf():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:259
      vsnprintf(string + existing_length, remaining_capacity, format, args);

  return sl_string__private_return_positive_or_zero(chars_printed);
}

size_t sl_string__scanf(const sl_string_t string, const char *format, ...) {
    1ed0:	b40e      	push	{r1, r2, r3}
    1ed2:	b503      	push	{r0, r1, lr}
    1ed4:	aa03      	add	r2, sp, #12
    1ed6:	f852 1b04 	ldr.w	r1, [r2], #4
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:261
  va_list args;
  va_start(args, format);
    1eda:	9201      	str	r2, [sp, #4]
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:263

  const int number_of_parsed_params = vsscanf(string, format, args);
    1edc:	f005 fcf0 	bl	78c0 <vsiscanf>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:268
  va_end(args);

  return (number_of_parsed_params > 0)
             ? (sl_string_size_t)number_of_parsed_params
             : 0U;
    1ee0:	2800      	cmp	r0, #0
    1ee2:	bfcc      	ite	gt
    1ee4:	b280      	uxthgt	r0, r0
    1ee6:	2000      	movle	r0, #0
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:269
}
    1ee8:	b002      	add	sp, #8
    1eea:	f85d eb04 	ldr.w	lr, [sp], #4
    1eee:	b003      	add	sp, #12
    1ef0:	4770      	bx	lr

00001ef2 <sl_string__set>:
sl_string__set():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:302
  }

  return token_count;
}

bool sl_string__set(sl_string_t string, const char *source) {
    1ef2:	b538      	push	{r3, r4, r5, lr}
    1ef4:	4605      	mov	r5, r0
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:305
  bool result = false;

  if (NULL != source) {
    1ef6:	460c      	mov	r4, r1
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:306
    const sl_string_size_t source_length = (sl_string_size_t)strlen(source);
    1ef8:	4608      	mov	r0, r1
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:305
  if (NULL != source) {
    1efa:	b171      	cbz	r1, 1f1a <sl_string__set+0x28>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:306
    const sl_string_size_t source_length = (sl_string_size_t)strlen(source);
    1efc:	f004 fda9 	bl	6a52 <strlen>
    1f00:	4601      	mov	r1, r0
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:307
    const sl_string_size_t destination_length = sl_string__get_capacity(string);
    1f02:	4628      	mov	r0, r5
    1f04:	f7ff ffa2 	bl	1e4c <sl_string__get_capacity>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:308
    if (destination_length >= source_length) {
    1f08:	b289      	uxth	r1, r1
    1f0a:	4281      	cmp	r1, r0
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:307
    const sl_string_size_t destination_length = sl_string__get_capacity(string);
    1f0c:	4602      	mov	r2, r0
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:308
    if (destination_length >= source_length) {
    1f0e:	d805      	bhi.n	1f1c <sl_string__set+0x2a>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:309
      strncpy(string, source, destination_length);
    1f10:	4621      	mov	r1, r4
    1f12:	4628      	mov	r0, r5
    1f14:	f004 fdda 	bl	6acc <strncpy>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:310
      result = true;
    1f18:	2001      	movs	r0, #1
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:315
    }
  }

  return result;
}
    1f1a:	bd38      	pop	{r3, r4, r5, pc}
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:303
  bool result = false;
    1f1c:	2000      	movs	r0, #0
    1f1e:	e7fc      	b.n	1f1a <sl_string__set+0x28>

00001f20 <sl_string__initialize_from>:
sl_string__initialize_from():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:128
                                       const char *copy_from) {
    1f20:	b538      	push	{r3, r4, r5, lr}
    1f22:	4615      	mov	r5, r2
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:129
  sl_string_t string = sl_string__initialize(memory, memory_size_max);
    1f24:	f7ff ff7e 	bl	1e24 <sl_string__initialize>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:131
  if (NULL != string) {
    1f28:	4604      	mov	r4, r0
    1f2a:	b110      	cbz	r0, 1f32 <sl_string__initialize_from+0x12>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:132
    (void)sl_string__set(string, copy_from);
    1f2c:	4629      	mov	r1, r5
    1f2e:	f7ff ffe0 	bl	1ef2 <sl_string__set>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:136
}
    1f32:	4620      	mov	r0, r4
    1f34:	bd38      	pop	{r3, r4, r5, pc}

00001f36 <sl_string__insert_at>:
sl_string__insert_at():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:318

bool sl_string__insert_at(sl_string_t string, sl_string_size_t index_position,
                          const char *insert) {
    1f36:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    1f3a:	4605      	mov	r5, r0
    1f3c:	460f      	mov	r7, r1
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:321
  bool result = false;

  if (NULL != insert) {
    1f3e:	4614      	mov	r4, r2
    1f40:	b30a      	cbz	r2, 1f86 <sl_string__insert_at+0x50>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:322
    if (index_position <= sl_string__get_length(string)) {
    1f42:	f7ff ff92 	bl	1e6a <sl_string__get_length>
    1f46:	42b8      	cmp	r0, r7
    1f48:	4606      	mov	r6, r0
    1f4a:	d31c      	bcc.n	1f86 <sl_string__insert_at+0x50>
sl_string__private_ensure_enough_memory_for_insertion():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:59
      (sl_string_size_t)strlen(insertion_string);
    1f4c:	4620      	mov	r0, r4
    1f4e:	f004 fd80 	bl	6a52 <strlen>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:60
  const sl_string_size_t memory_required =
    1f52:	1832      	adds	r2, r6, r0
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:59
      (sl_string_size_t)strlen(insertion_string);
    1f54:	4680      	mov	r8, r0
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:63
  return memory_required <= sl_string__get_capacity(string);
    1f56:	4628      	mov	r0, r5
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:60
  const sl_string_size_t memory_required =
    1f58:	b292      	uxth	r2, r2
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:63
  return memory_required <= sl_string__get_capacity(string);
    1f5a:	f7ff ff77 	bl	1e4c <sl_string__get_capacity>
sl_string__insert_at():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:323
      if (sl_string__private_ensure_enough_memory_for_insertion(string,
    1f5e:	4282      	cmp	r2, r0
    1f60:	d811      	bhi.n	1f86 <sl_string__insert_at+0x50>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:330
        const size_t length_of_insertion_string = strlen(insert);

        char *position_of_insertion = string + index_position;
        char *destination_of_substring =
            position_of_insertion + length_of_insertion_string;
        const sl_string_size_t length_to_be_moved =
    1f62:	f1c7 0201 	rsb	r2, r7, #1
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:327
        char *position_of_insertion = string + index_position;
    1f66:	443d      	add	r5, r7
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:330
        const sl_string_size_t length_to_be_moved =
    1f68:	4432      	add	r2, r6
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:334
            sl_string__get_length(string) - index_position +
            1U; // Plus 1 for the null term

        memmove(destination_of_substring, position_of_insertion,
    1f6a:	b292      	uxth	r2, r2
    1f6c:	4629      	mov	r1, r5
    1f6e:	eb05 0008 	add.w	r0, r5, r8
    1f72:	f003 fb6b 	bl	564c <memmove>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:336
                length_to_be_moved);
        strncpy(position_of_insertion, insert, length_of_insertion_string);
    1f76:	4642      	mov	r2, r8
    1f78:	4621      	mov	r1, r4
    1f7a:	4628      	mov	r0, r5
    1f7c:	f004 fda6 	bl	6acc <strncpy>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:338

        result = true;
    1f80:	2001      	movs	r0, #1
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:344
      }
    }
  }

  return result;
}
    1f82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:319
  bool result = false;
    1f86:	2000      	movs	r0, #0
    1f88:	e7fb      	b.n	1f82 <sl_string__insert_at+0x4c>

00001f8a <sl_string__append>:
sl_string__append():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:346

bool sl_string__append(sl_string_t string, const char *append) {
    1f8a:	b570      	push	{r4, r5, r6, lr}
    1f8c:	4606      	mov	r6, r0
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:349
  bool result = false;

  if (NULL != append) {
    1f8e:	460c      	mov	r4, r1
    1f90:	b1a9      	cbz	r1, 1fbe <sl_string__append+0x34>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:351
    const sl_string_size_t length_of_original_string =
        sl_string__get_length(string);
    1f92:	f7ff ff6a 	bl	1e6a <sl_string__get_length>
    1f96:	4605      	mov	r5, r0
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:353
    const sl_string_size_t length_of_insertion_string =
        (sl_string_size_t)strlen(append);
    1f98:	4620      	mov	r0, r4
    1f9a:	f004 fd5a 	bl	6a52 <strlen>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:352
    const sl_string_size_t length_of_insertion_string =
    1f9e:	b282      	uxth	r2, r0
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:354
    const sl_string_size_t total_length =
    1fa0:	18a9      	adds	r1, r5, r2
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:357
        length_of_original_string + length_of_insertion_string;

    if (total_length <= sl_string__get_capacity(string)) {
    1fa2:	4630      	mov	r0, r6
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:354
    const sl_string_size_t total_length =
    1fa4:	b289      	uxth	r1, r1
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:357
    if (total_length <= sl_string__get_capacity(string)) {
    1fa6:	f7ff ff51 	bl	1e4c <sl_string__get_capacity>
    1faa:	4288      	cmp	r0, r1
    1fac:	d307      	bcc.n	1fbe <sl_string__append+0x34>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:358
      const sl_string_size_t length_to_copy_including_null =
    1fae:	3201      	adds	r2, #1
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:360
          (1U + length_of_insertion_string);
      memcpy((string + length_of_original_string), append,
    1fb0:	b292      	uxth	r2, r2
    1fb2:	4621      	mov	r1, r4
    1fb4:	1970      	adds	r0, r6, r5
    1fb6:	f003 fb3b 	bl	5630 <memcpy>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:362
             length_to_copy_including_null);
      result = true;
    1fba:	2001      	movs	r0, #1
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:367
    }
  }

  return result;
}
    1fbc:	bd70      	pop	{r4, r5, r6, pc}
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:347
  bool result = false;
    1fbe:	2000      	movs	r0, #0
    1fc0:	e7fc      	b.n	1fbc <sl_string__append+0x32>

00001fc2 <sl_string__append_char>:
sl_string__append_char():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:369

bool sl_string__append_char(sl_string_t string, char append) {
    1fc2:	b507      	push	{r0, r1, r2, lr}
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:370
  const char string_to_append[] = {append, '\0'};
    1fc4:	2300      	movs	r3, #0
    1fc6:	f88d 1004 	strb.w	r1, [sp, #4]
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:371
  return sl_string__append(string, string_to_append);
    1fca:	a901      	add	r1, sp, #4
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:370
  const char string_to_append[] = {append, '\0'};
    1fcc:	f88d 3005 	strb.w	r3, [sp, #5]
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:371
  return sl_string__append(string, string_to_append);
    1fd0:	f7ff ffdb 	bl	1f8a <sl_string__append>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:372
}
    1fd4:	b003      	add	sp, #12
    1fd6:	f85d fb04 	ldr.w	pc, [sp], #4

00001fda <sl_string__equals_to_ignore_case>:
sl_string__equals_to_ignore_case():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:385

  return equal;
}

bool sl_string__equals_to_ignore_case(const sl_string_t string,
                                      const char *compare_with_case_ignored) {
    1fda:	b508      	push	{r3, lr}
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:388
  bool equal = false;

  if (NULL != compare_with_case_ignored) {
    1fdc:	b129      	cbz	r1, 1fea <sl_string__equals_to_ignore_case+0x10>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:389
    equal = (0 == strcasecmp(string, compare_with_case_ignored));
    1fde:	f004 fd0f 	bl	6a00 <strcasecmp>
    1fe2:	fab0 f080 	clz	r0, r0
    1fe6:	0940      	lsrs	r0, r0, #5
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:393
  }

  return equal;
}
    1fe8:	bd08      	pop	{r3, pc}
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:386
  bool equal = false;
    1fea:	4608      	mov	r0, r1
    1fec:	e7fc      	b.n	1fe8 <sl_string__equals_to_ignore_case+0xe>

00001fee <sl_string__begins_with_limited_chars>:
sl_string__begins_with_limited_chars():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:547
                                              substring_length);
}

bool sl_string__begins_with_limited_chars(
    const sl_string_t string, const char *begin_with,
    size_t max_chars_of_begin_with_to_compare) {
    1fee:	b570      	push	{r4, r5, r6, lr}
    1ff0:	4606      	mov	r6, r0
    1ff2:	4615      	mov	r5, r2
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:550
  bool result = false;

  if (NULL != begin_with) {
    1ff4:	460c      	mov	r4, r1
    1ff6:	b161      	cbz	r1, 2012 <sl_string__begins_with_limited_chars+0x24>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:551
    const sl_string_size_t string_length = sl_string__get_length(string);
    1ff8:	f7ff ff37 	bl	1e6a <sl_string__get_length>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:555

    // strncmp/strncasecmp are used here instead of strstr as it
    // allows to check only the beginning of the string
    if (string_length >= max_chars_of_begin_with_to_compare) {
    1ffc:	42a8      	cmp	r0, r5
    1ffe:	d308      	bcc.n	2012 <sl_string__begins_with_limited_chars+0x24>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:557
      if (0 ==
          strncmp(string, begin_with, max_chars_of_begin_with_to_compare)) {
    2000:	462a      	mov	r2, r5
    2002:	4621      	mov	r1, r4
    2004:	4630      	mov	r0, r6
    2006:	f004 fd4f 	bl	6aa8 <strncmp>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:556
      if (0 ==
    200a:	fab0 f080 	clz	r0, r0
    200e:	0940      	lsrs	r0, r0, #5
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:564
      }
    }
  }

  return result;
}
    2010:	bd70      	pop	{r4, r5, r6, pc}
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:548
  bool result = false;
    2012:	2000      	movs	r0, #0
    2014:	e7fc      	b.n	2010 <sl_string__begins_with_limited_chars+0x22>

00002016 <sl_string__begins_with_ignore_case>:
sl_string__begins_with_ignore_case():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:567

bool sl_string__begins_with_ignore_case(const sl_string_t string,
                                        const char *begin_with_case_ignored) {
    2016:	b570      	push	{r4, r5, r6, lr}
    2018:	4605      	mov	r5, r0
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:570
  bool result = false;

  if (NULL != begin_with_case_ignored) {
    201a:	460c      	mov	r4, r1
    201c:	b181      	cbz	r1, 2040 <sl_string__begins_with_ignore_case+0x2a>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:571
    const sl_string_size_t string_length = sl_string__get_length(string);
    201e:	f7ff ff24 	bl	1e6a <sl_string__get_length>
    2022:	4606      	mov	r6, r0
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:572
    const size_t substring_length = strlen(begin_with_case_ignored);
    2024:	4620      	mov	r0, r4
    2026:	f004 fd14 	bl	6a52 <strlen>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:576

    // strncmp/strncasecmp are used here instead of strstr as it
    // allows to check only the beginning of the string
    if (string_length >= substring_length) {
    202a:	4286      	cmp	r6, r0
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:572
    const size_t substring_length = strlen(begin_with_case_ignored);
    202c:	4602      	mov	r2, r0
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:576
    if (string_length >= substring_length) {
    202e:	d307      	bcc.n	2040 <sl_string__begins_with_ignore_case+0x2a>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:577
      if (0 == strncasecmp(string, begin_with_case_ignored, substring_length)) {
    2030:	4621      	mov	r1, r4
    2032:	4628      	mov	r0, r5
    2034:	f004 fd16 	bl	6a64 <strncasecmp>
    2038:	fab0 f080 	clz	r0, r0
    203c:	0940      	lsrs	r0, r0, #5
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:584
      }
    }
  }

  return result;
}
    203e:	bd70      	pop	{r4, r5, r6, pc}
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:568
  bool result = false;
    2040:	2000      	movs	r0, #0
    2042:	e7fc      	b.n	203e <sl_string__begins_with_ignore_case+0x28>

00002044 <sl_string__begins_with_whole_word>:
sl_string__begins_with_whole_word():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:588

bool sl_string__begins_with_whole_word(const sl_string_t string,
                                       const char *begin_with,
                                       const char *delimiter_string) {
    2044:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    2048:	4607      	mov	r7, r0
    204a:	4614      	mov	r4, r2
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:591
  bool result = false;

  if ((NULL != begin_with) && (NULL != delimiter_string)) {
    204c:	460d      	mov	r5, r1
    204e:	b1c9      	cbz	r1, 2084 <sl_string__begins_with_whole_word+0x40>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:591 (discriminator 1)
    2050:	b1c2      	cbz	r2, 2084 <sl_string__begins_with_whole_word+0x40>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:592
    const sl_string_size_t string_length = sl_string__get_length(string);
    2052:	f7ff ff0a 	bl	1e6a <sl_string__get_length>
    2056:	4680      	mov	r8, r0
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:593
    const size_t substring_length = strlen(begin_with);
    2058:	4628      	mov	r0, r5
    205a:	f004 fcfa 	bl	6a52 <strlen>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:597

    // strncmp/strncasecmp are used here instead of strstr as it
    // allows to check only the beginning of the string
    if (string_length >= substring_length) {
    205e:	4580      	cmp	r8, r0
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:593
    const size_t substring_length = strlen(begin_with);
    2060:	4606      	mov	r6, r0
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:597
    if (string_length >= substring_length) {
    2062:	d30f      	bcc.n	2084 <sl_string__begins_with_whole_word+0x40>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:598
      if (0 == strncmp(string, begin_with, substring_length)) {
    2064:	4602      	mov	r2, r0
    2066:	4629      	mov	r1, r5
    2068:	4638      	mov	r0, r7
    206a:	f004 fd1d 	bl	6aa8 <strncmp>
    206e:	b948      	cbnz	r0, 2084 <sl_string__begins_with_whole_word+0x40>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:599
        result = ((*delimiter_string == string[substring_length]) ||
    2070:	5db8      	ldrb	r0, [r7, r6]
    2072:	7823      	ldrb	r3, [r4, #0]
    2074:	4283      	cmp	r3, r0
    2076:	bf1a      	itte	ne
    2078:	fab0 f080 	clzne	r0, r0
    207c:	0940      	lsrne	r0, r0, #5
    207e:	2001      	moveq	r0, #1
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:606
      }
    }
  }

  return result;
}
    2080:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:589
  bool result = false;
    2084:	2000      	movs	r0, #0
    2086:	e7fb      	b.n	2080 <sl_string__begins_with_whole_word+0x3c>

00002088 <sl_string__ends_with_newline>:
sl_string__ends_with_newline():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:665
  }

  return result;
}

bool sl_string__ends_with_newline(const sl_string_t string) {
    2088:	b510      	push	{r4, lr}
    208a:	4604      	mov	r4, r0
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:667
  bool status = false;
  const sl_string_size_t length = sl_string__get_length(string);
    208c:	f7ff feed 	bl	1e6a <sl_string__get_length>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:669

  if (length > 0U) {
    2090:	b140      	cbz	r0, 20a4 <sl_string__ends_with_newline+0x1c>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:670
    const sl_string_size_t last_index = length - 1U;
    2092:	3801      	subs	r0, #1
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:671
    const char last_char = string[last_index];
    2094:	b280      	uxth	r0, r0
    2096:	5c20      	ldrb	r0, [r4, r0]
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:672
    status = ('\r' == last_char) || ('\n' == last_char);
    2098:	280d      	cmp	r0, #13
    209a:	d004      	beq.n	20a6 <sl_string__ends_with_newline+0x1e>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:672 (discriminator 2)
    209c:	f1a0 030a 	sub.w	r3, r0, #10
    20a0:	4258      	negs	r0, r3
    20a2:	4158      	adcs	r0, r3
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:676
  }

  return status;
}
    20a4:	bd10      	pop	{r4, pc}
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:672
    status = ('\r' == last_char) || ('\n' == last_char);
    20a6:	2001      	movs	r0, #1
    20a8:	e7fc      	b.n	20a4 <sl_string__ends_with_newline+0x1c>

000020aa <sl_string__erase_after>:
sl_string__erase_after():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:711
  return sl_string__erase_after(string, index_position, 1);
}

bool sl_string__erase_after(sl_string_t string,
                            sl_string_size_t erase_index_position,
                            sl_string_size_t n_chars) {
    20aa:	b570      	push	{r4, r5, r6, lr}
    20ac:	460c      	mov	r4, r1
    20ae:	4605      	mov	r5, r0
    20b0:	4616      	mov	r6, r2
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:712
  const sl_string_size_t string_length = sl_string__get_length(string);
    20b2:	f7ff feda 	bl	1e6a <sl_string__get_length>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:715
  bool result = false;

  if (erase_index_position < string_length) {
    20b6:	42a0      	cmp	r0, r4
    20b8:	d911      	bls.n	20de <sl_string__erase_after+0x34>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:716
    n_chars = (n_chars > (string_length - erase_index_position))
    20ba:	1b01      	subs	r1, r0, r4
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:718
                  ? (string_length - erase_index_position)
                  : n_chars;
    20bc:	42b1      	cmp	r1, r6
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:719
    const sl_string_size_t num_chars_to_move =
    20be:	f1c4 0301 	rsb	r3, r4, #1
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:718
                  : n_chars;
    20c2:	460a      	mov	r2, r1
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:719
    const sl_string_size_t num_chars_to_move =
    20c4:	4418      	add	r0, r3
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:718
                  : n_chars;
    20c6:	bfa8      	it	ge
    20c8:	4632      	movge	r2, r6
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:719
    const sl_string_size_t num_chars_to_move =
    20ca:	1a80      	subs	r0, r0, r2
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:723
        string_length - erase_index_position - n_chars + 1U;

    memmove(string + erase_index_position,
            string + erase_index_position + n_chars, num_chars_to_move);
    20cc:	fa14 f182 	uxtah	r1, r4, r2
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:722
    memmove(string + erase_index_position,
    20d0:	4429      	add	r1, r5
    20d2:	b282      	uxth	r2, r0
    20d4:	1928      	adds	r0, r5, r4
    20d6:	f003 fab9 	bl	564c <memmove>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:724
    result = true;
    20da:	2001      	movs	r0, #1
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:728
  }

  return result;
}
    20dc:	bd70      	pop	{r4, r5, r6, pc}
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:713
  bool result = false;
    20de:	2000      	movs	r0, #0
    20e0:	e7fc      	b.n	20dc <sl_string__erase_after+0x32>

000020e2 <sl_string__erase_first>:
sl_string__erase_first():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:693
  return sl_string__erase_after(string, 0, n_chars);
    20e2:	460a      	mov	r2, r1
    20e4:	2100      	movs	r1, #0
    20e6:	f7ff bfe0 	b.w	20aa <sl_string__erase_after>

000020ea <sl_string__erase_last>:
sl_string__erase_last():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:696
bool sl_string__erase_last(sl_string_t string, sl_string_size_t n_chars) {
    20ea:	b538      	push	{r3, r4, r5, lr}
    20ec:	460c      	mov	r4, r1
    20ee:	4605      	mov	r5, r0
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:697
  const sl_string_size_t string_length = sl_string__get_length(string);
    20f0:	f7ff febb 	bl	1e6a <sl_string__get_length>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:698
  const sl_string_size_t start_of_erase_index =
    20f4:	42a0      	cmp	r0, r4
    20f6:	bf24      	itt	cs
    20f8:	1b00      	subcs	r0, r0, r4
    20fa:	b281      	uxthcs	r1, r0
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:702
  return sl_string__erase_after(string, start_of_erase_index, n_chars);
    20fc:	4622      	mov	r2, r4
    20fe:	4628      	mov	r0, r5
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:698
  const sl_string_size_t start_of_erase_index =
    2100:	bf38      	it	cc
    2102:	2100      	movcc	r1, #0
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:703
}
    2104:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:702
  return sl_string__erase_after(string, start_of_erase_index, n_chars);
    2108:	f7ff bfcf 	b.w	20aa <sl_string__erase_after>

0000210c <sl_string__erase_at_substring>:
sl_string__erase_at_substring():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:731

bool sl_string__erase_at_substring(sl_string_t string,
                                   const char *erase_at_substring) {
    210c:	b510      	push	{r4, lr}
    210e:	4604      	mov	r4, r0
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:732
  const char *found = strstr(string, erase_at_substring);
    2110:	f004 fcef 	bl	6af2 <strstr>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:733
  const bool found_something_to_erase = (NULL != found);
    2114:	1e03      	subs	r3, r0, #0
sl_utils__pointer_distance():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:46
  return (pointer_to_last - string);
    2116:	bf1f      	itttt	ne
    2118:	1b1b      	subne	r3, r3, r4
sl_string__erase_at_substring():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:738

  if (found_something_to_erase) {
    const sl_string_size_t position =
        (sl_string_size_t)sl_utils__pointer_distance(found, string);
    string[position] = '\0';
    211a:	b29b      	uxthne	r3, r3
    211c:	2200      	movne	r2, #0
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:733
  const bool found_something_to_erase = (NULL != found);
    211e:	2001      	movne	r0, #1
    2120:	bf0c      	ite	eq
    2122:	2000      	moveq	r0, #0
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:738
    string[position] = '\0';
    2124:	54e2      	strbne	r2, [r4, r3]
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:742
  }

  return found_something_to_erase;
}
    2126:	bd10      	pop	{r4, pc}

00002128 <sl_string__erase_first_word>:
sl_string__erase_first_word():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:744

bool sl_string__erase_first_word(sl_string_t string, char word_separater) {
    2128:	b510      	push	{r4, lr}
    212a:	4604      	mov	r4, r0
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:746
  bool result = false;
  const char *word_ptr = strchr(string, (int)word_separater);
    212c:	f004 fc84 	bl	6a38 <strchr>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:748

  if (NULL != word_ptr) {
    2130:	b138      	cbz	r0, 2142 <sl_string__erase_first_word+0x1a>
sl_utils__pointer_distance():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:46
  return (pointer_to_last - string);
    2132:	1b01      	subs	r1, r0, r4
sl_string__erase_first_word():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:749
    const sl_string_size_t n_chars =
    2134:	3101      	adds	r1, #1
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:751
        (sl_string_size_t)sl_utils__pointer_distance(word_ptr, string) + 1U;
    result = sl_string__erase_first(
    2136:	4620      	mov	r0, r4
    2138:	b289      	uxth	r1, r1
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:756
        string, n_chars); // Plus 1 to also erase the word_seperator
  }

  return result;
}
    213a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:751
    result = sl_string__erase_first(
    213e:	f7ff bfd0 	b.w	20e2 <sl_string__erase_first>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:756
}
    2142:	bd10      	pop	{r4, pc}

00002144 <sl_string__erase_int>:
sl_string__erase_int():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:775
  }

  return chars_removed;
}

bool sl_string__erase_int(sl_string_t string, int *erased_int) {
    2144:	b570      	push	{r4, r5, r6, lr}
    2146:	4606      	mov	r6, r0
    2148:	4605      	mov	r5, r0
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:779
  bool parsed = false;

  const char *c = string;
  while (('\0' != *c) && (0U == isdigit((int)*c))) {
    214a:	4811      	ldr	r0, [pc, #68]	; (2190 <sl_string__erase_int+0x4c>)
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:775
bool sl_string__erase_int(sl_string_t string, int *erased_int) {
    214c:	460c      	mov	r4, r1
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:779
  while (('\0' != *c) && (0U == isdigit((int)*c))) {
    214e:	462b      	mov	r3, r5
    2150:	f813 1b01 	ldrb.w	r1, [r3], #1
    2154:	b1c9      	cbz	r1, 218a <sl_string__erase_int+0x46>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:779 (discriminator 1)
    2156:	5c0a      	ldrb	r2, [r1, r0]
    2158:	0752      	lsls	r2, r2, #29
    215a:	d514      	bpl.n	2186 <sl_string__erase_int+0x42>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:783
    ++c; // Skip chars until a digit
  }

  if (('\0' != *c) && (NULL != erased_int) && (0U != isdigit((int)*c))) {
    215c:	b124      	cbz	r4, 2168 <sl_string__erase_int+0x24>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:784 (discriminator 2)
    *erased_int = atoi(c);
    215e:	4628      	mov	r0, r5
    2160:	f003 f9bc 	bl	54dc <atoi>
    2164:	6020      	str	r0, [r4, #0]
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:785 (discriminator 2)
    parsed = true;
    2166:	2401      	movs	r4, #1
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:788
  }

  while (('\0' != *c) && (0U != isdigit((int)*c))) {
    2168:	4a09      	ldr	r2, [pc, #36]	; (2190 <sl_string__erase_int+0x4c>)
    216a:	4629      	mov	r1, r5
    216c:	f815 3b01 	ldrb.w	r3, [r5], #1
    2170:	b113      	cbz	r3, 2178 <sl_string__erase_int+0x34>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:788 (discriminator 1)
    2172:	5c9b      	ldrb	r3, [r3, r2]
    2174:	075b      	lsls	r3, r3, #29
    2176:	d4f8      	bmi.n	216a <sl_string__erase_int+0x26>
sl_utils__pointer_distance():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:46
  return (pointer_to_last - string);
    2178:	1b89      	subs	r1, r1, r6
sl_string__erase_int():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:795
  }

  // Erase the integer we processed above
  const sl_string_size_t chars_to_erase =
      (sl_string_size_t)sl_utils__pointer_distance(c, string);
  (void)sl_string__erase_first(string, chars_to_erase);
    217a:	b289      	uxth	r1, r1
    217c:	4630      	mov	r0, r6
    217e:	f7ff ffb0 	bl	20e2 <sl_string__erase_first>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:798

  return parsed;
}
    2182:	4620      	mov	r0, r4
    2184:	bd70      	pop	{r4, r5, r6, pc}
    2186:	461d      	mov	r5, r3
    2188:	e7e1      	b.n	214e <sl_string__erase_int+0xa>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:776
  bool parsed = false;
    218a:	460c      	mov	r4, r1
    218c:	e7ec      	b.n	2168 <sl_string__erase_int+0x24>
    218e:	bf00      	nop
    2190:	0000bd24 	.word	0x0000bd24

00002194 <sl_string__trim_end>:
sl_string__trim_end():
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:800

bool sl_string__trim_end(sl_string_t string, const char *chars_to_trim) {
    2194:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2196:	4606      	mov	r6, r0
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:803
  bool result = false;

  if (NULL != chars_to_trim) {
    2198:	460c      	mov	r4, r1
    219a:	b1c9      	cbz	r1, 21d0 <sl_string__trim_end+0x3c>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:804
    const sl_string_size_t string_length = sl_string__get_length(string);
    219c:	f7ff fe65 	bl	1e6a <sl_string__get_length>
    21a0:	4605      	mov	r5, r0
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:805
    const size_t trim_char_length = strlen(chars_to_trim);
    21a2:	4620      	mov	r0, r4
    21a4:	f004 fc55 	bl	6a52 <strlen>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:807

    for (int character = ((int)string_length - 1); character >= 0;
    21a8:	1e6b      	subs	r3, r5, #1
    21aa:	4433      	add	r3, r6
    21ac:	4420      	add	r0, r4
    21ae:	3e01      	subs	r6, #1
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:813
         character--) {
      bool trim_done = false;

      for (size_t trim_char = 0; trim_char < trim_char_length; trim_char++) {
        if (chars_to_trim[trim_char] == string[character]) {
          string[character] = '\0';
    21b0:	2100      	movs	r1, #0
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:807 (discriminator 1)
    for (int character = ((int)string_length - 1); character >= 0;
    21b2:	42b3      	cmp	r3, r6
    21b4:	d002      	beq.n	21bc <sl_string__trim_end+0x28>
    21b6:	4622      	mov	r2, r4
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:811 (discriminator 1)
      for (size_t trim_char = 0; trim_char < trim_char_length; trim_char++) {
    21b8:	4282      	cmp	r2, r0
    21ba:	d101      	bne.n	21c0 <sl_string__trim_end+0x2c>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:823

      if (!trim_done) {
        break;
      }
    }
    result = true;
    21bc:	2001      	movs	r0, #1
    21be:	e008      	b.n	21d2 <sl_string__trim_end+0x3e>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:812
        if (chars_to_trim[trim_char] == string[character]) {
    21c0:	f812 5b01 	ldrb.w	r5, [r2], #1
    21c4:	781f      	ldrb	r7, [r3, #0]
    21c6:	42af      	cmp	r7, r5
    21c8:	d1f6      	bne.n	21b8 <sl_string__trim_end+0x24>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:813
          string[character] = '\0';
    21ca:	f803 1901 	strb.w	r1, [r3], #-1
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:819
      if (!trim_done) {
    21ce:	e7f0      	b.n	21b2 <sl_string__trim_end+0x1e>
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:801
  bool result = false;
    21d0:	4608      	mov	r0, r1
C:\road_max_fury/lpc40xx_freertos\l2_utils\string/sl_string.c:827
  }

  return result;
}
    21d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

000021d4 <board_io__initialize>:
board_io__initialize():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/board_io.c:35

static const uint32_t board_io__sd_card_cs_pin = (1 << 8);
static const uint32_t board_io__sd_card_detect_pin = (1 << 9);
static gpio_s board_io__led0, board_io__led1, board_io__led2, board_io__led3;

void board_io__initialize(void) {
    21d4:	b507      	push	{r0, r1, r2, lr}
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/board_io.c:39
  // Note: return type of gpio__construct_with_function() because we do not need
  // GPIO instance after its configuration

  gpio__construct_with_function(GPIO__PORT_0, 2,
    21d6:	2201      	movs	r2, #1
    21d8:	2102      	movs	r1, #2
    21da:	2000      	movs	r0, #0
    21dc:	f000 f8f4 	bl	23c8 <gpio__construct_with_function>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/board_io.c:41
                                GPIO__FUNCTION_1); // P0.2 - Uart-0 Tx
  gpio__construct_with_function(GPIO__PORT_0, 3,
    21e0:	2201      	movs	r2, #1
    21e2:	2103      	movs	r1, #3
    21e4:	2000      	movs	r0, #0
    21e6:	f000 f8ef 	bl	23c8 <gpio__construct_with_function>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/board_io.c:45
                                GPIO__FUNCTION_1); // P0.3 - Uart-0 Rx

  // SPI bus 2 (SSP2)
  gpio__construct_with_function(GPIO__PORT_1, 0,
    21ea:	2204      	movs	r2, #4
    21ec:	2100      	movs	r1, #0
    21ee:	2001      	movs	r0, #1
    21f0:	f000 f8ea 	bl	23c8 <gpio__construct_with_function>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/board_io.c:47
                                GPIO__FUNCTION_4); // P1.0 - SCK2
  gpio__construct_with_function(GPIO__PORT_1, 1,
    21f4:	2101      	movs	r1, #1
    21f6:	2204      	movs	r2, #4
    21f8:	4608      	mov	r0, r1
    21fa:	f000 f8e5 	bl	23c8 <gpio__construct_with_function>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/board_io.c:49
                                GPIO__FUNCTION_4); // P1.1 - MOSI2
  gpio__construct_with_function(GPIO__PORT_1, 4,
    21fe:	2204      	movs	r2, #4
    2200:	4611      	mov	r1, r2
    2202:	2001      	movs	r0, #1
    2204:	f000 f8e0 	bl	23c8 <gpio__construct_with_function>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/board_io.c:53
                                GPIO__FUNCTION_4); // P1.4 - MISO2

  // SD card
  gpio__construct_as_output(GPIO__PORT_1, 8); // SD card CS
    2208:	2108      	movs	r1, #8
    220a:	2001      	movs	r0, #1
    220c:	f000 f932 	bl	2474 <gpio__construct_as_output>
board_io__sd_card_ds():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/board_io.c:80
  gpio__construct_as_input(GPIO__PORT_0, 29); // SW0
}

// Note: Not using gpio.h API here to optimize the speed of SSP CS selection
void board_io__sd_card_cs(void) { LPC_GPIO1->CLR = board_io__sd_card_cs_pin; }
void board_io__sd_card_ds(void) { LPC_GPIO1->SET = board_io__sd_card_cs_pin; }
    2210:	4b2b      	ldr	r3, [pc, #172]	; (22c0 <board_io__initialize+0xec>)
    2212:	f44f 7280 	mov.w	r2, #256	; 0x100
    2216:	619a      	str	r2, [r3, #24]
board_io__initialize():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/board_io.c:55
  gpio__construct_as_input(GPIO__PORT_1, 9); // SD card detect
    2218:	2109      	movs	r1, #9
    221a:	2001      	movs	r0, #1
    221c:	f000 f90a 	bl	2434 <gpio__construct_as_input>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/board_io.c:58
  const gpio_s sda_2 = gpio__construct_with_function(
    2220:	2202      	movs	r2, #2
    2222:	210a      	movs	r1, #10
    2224:	2000      	movs	r0, #0
    2226:	f000 f8cf 	bl	23c8 <gpio__construct_with_function>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/board_io.c:60
  const gpio_s scl_2 = gpio__construct_with_function(
    222a:	2202      	movs	r2, #2
    222c:	210b      	movs	r1, #11
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/board_io.c:58
  const gpio_s sda_2 = gpio__construct_with_function(
    222e:	f8ad 0000 	strh.w	r0, [sp]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/board_io.c:60
  const gpio_s scl_2 = gpio__construct_with_function(
    2232:	2000      	movs	r0, #0
    2234:	f000 f8c8 	bl	23c8 <gpio__construct_with_function>
    2238:	f8ad 0004 	strh.w	r0, [sp, #4]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/board_io.c:62
  gpio__enable_open_drain(sda_2);
    223c:	9800      	ldr	r0, [sp, #0]
    223e:	f000 f8d2 	bl	23e6 <gpio__enable_open_drain>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/board_io.c:63
  gpio__enable_open_drain(scl_2);
    2242:	9801      	ldr	r0, [sp, #4]
    2244:	f000 f8cf 	bl	23e6 <gpio__enable_open_drain>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/board_io.c:66
  board_io__led3 = gpio__construct_as_output(GPIO__PORT_2, 3);
    2248:	2103      	movs	r1, #3
    224a:	2002      	movs	r0, #2
    224c:	f000 f912 	bl	2474 <gpio__construct_as_output>
    2250:	4b1c      	ldr	r3, [pc, #112]	; (22c4 <board_io__initialize+0xf0>)
    2252:	b200      	sxth	r0, r0
    2254:	7018      	strb	r0, [r3, #0]
    2256:	f3c0 2007 	ubfx	r0, r0, #8, #8
    225a:	7058      	strb	r0, [r3, #1]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/board_io.c:67
  board_io__led2 = gpio__construct_as_output(GPIO__PORT_1, 26);
    225c:	211a      	movs	r1, #26
    225e:	2001      	movs	r0, #1
    2260:	f000 f908 	bl	2474 <gpio__construct_as_output>
    2264:	4b18      	ldr	r3, [pc, #96]	; (22c8 <board_io__initialize+0xf4>)
    2266:	b200      	sxth	r0, r0
    2268:	7018      	strb	r0, [r3, #0]
    226a:	f3c0 2007 	ubfx	r0, r0, #8, #8
    226e:	7058      	strb	r0, [r3, #1]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/board_io.c:68
  board_io__led1 = gpio__construct_as_output(GPIO__PORT_1, 24);
    2270:	2118      	movs	r1, #24
    2272:	2001      	movs	r0, #1
    2274:	f000 f8fe 	bl	2474 <gpio__construct_as_output>
    2278:	4b14      	ldr	r3, [pc, #80]	; (22cc <board_io__initialize+0xf8>)
    227a:	b200      	sxth	r0, r0
    227c:	7018      	strb	r0, [r3, #0]
    227e:	f3c0 2007 	ubfx	r0, r0, #8, #8
    2282:	7058      	strb	r0, [r3, #1]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/board_io.c:69
  board_io__led0 = gpio__construct_as_output(GPIO__PORT_1, 18);
    2284:	2112      	movs	r1, #18
    2286:	2001      	movs	r0, #1
    2288:	f000 f8f4 	bl	2474 <gpio__construct_as_output>
    228c:	4b10      	ldr	r3, [pc, #64]	; (22d0 <board_io__initialize+0xfc>)
    228e:	b200      	sxth	r0, r0
    2290:	7018      	strb	r0, [r3, #0]
    2292:	f3c0 2007 	ubfx	r0, r0, #8, #8
    2296:	7058      	strb	r0, [r3, #1]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/board_io.c:72
  gpio__construct_as_input(GPIO__PORT_1, 10); // SW3
    2298:	210a      	movs	r1, #10
    229a:	2001      	movs	r0, #1
    229c:	f000 f8ca 	bl	2434 <gpio__construct_as_input>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/board_io.c:73
  gpio__construct_as_input(GPIO__PORT_1, 15); // SW2
    22a0:	210f      	movs	r1, #15
    22a2:	2001      	movs	r0, #1
    22a4:	f000 f8c6 	bl	2434 <gpio__construct_as_input>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/board_io.c:74
  gpio__construct_as_input(GPIO__PORT_0, 30); // SW1
    22a8:	211e      	movs	r1, #30
    22aa:	2000      	movs	r0, #0
    22ac:	f000 f8c2 	bl	2434 <gpio__construct_as_input>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/board_io.c:75
  gpio__construct_as_input(GPIO__PORT_0, 29); // SW0
    22b0:	211d      	movs	r1, #29
    22b2:	2000      	movs	r0, #0
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/board_io.c:76
}
    22b4:	b003      	add	sp, #12
    22b6:	f85d eb04 	ldr.w	lr, [sp], #4
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/board_io.c:75
  gpio__construct_as_input(GPIO__PORT_0, 29); // SW0
    22ba:	f000 b8bb 	b.w	2434 <gpio__construct_as_input>
    22be:	bf00      	nop
    22c0:	20098020 	.word	0x20098020
    22c4:	1000049e 	.word	0x1000049e
    22c8:	1000049c 	.word	0x1000049c
    22cc:	1000049a 	.word	0x1000049a
    22d0:	10000498 	.word	0x10000498

000022d4 <board_io__sd_card_cs>:
board_io__sd_card_cs():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/board_io.c:79
void board_io__sd_card_cs(void) { LPC_GPIO1->CLR = board_io__sd_card_cs_pin; }
    22d4:	4b02      	ldr	r3, [pc, #8]	; (22e0 <board_io__sd_card_cs+0xc>)
    22d6:	f44f 7280 	mov.w	r2, #256	; 0x100
    22da:	61da      	str	r2, [r3, #28]
    22dc:	4770      	bx	lr
    22de:	bf00      	nop
    22e0:	20098020 	.word	0x20098020

000022e4 <board_io__sd_card_ds>:
board_io__sd_card_ds():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/board_io.c:80
void board_io__sd_card_ds(void) { LPC_GPIO1->SET = board_io__sd_card_cs_pin; }
    22e4:	4b02      	ldr	r3, [pc, #8]	; (22f0 <board_io__sd_card_ds+0xc>)
    22e6:	f44f 7280 	mov.w	r2, #256	; 0x100
    22ea:	619a      	str	r2, [r3, #24]
    22ec:	4770      	bx	lr
    22ee:	bf00      	nop
    22f0:	20098020 	.word	0x20098020

000022f4 <board_io__sd_card_is_present>:
board_io__sd_card_is_present():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/board_io.c:84

bool board_io__sd_card_is_present(void) {
  const uint32_t card_present_bitmask =
      (LPC_GPIO1->PIN & board_io__sd_card_detect_pin);
    22f4:	4b03      	ldr	r3, [pc, #12]	; (2304 <board_io__sd_card_is_present+0x10>)
    22f6:	6958      	ldr	r0, [r3, #20]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/board_io.c:85
  return (0 == card_present_bitmask); // Signal is active low
    22f8:	f480 7000 	eor.w	r0, r0, #512	; 0x200
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/board_io.c:86
}
    22fc:	f3c0 2040 	ubfx	r0, r0, #9, #1
    2300:	4770      	bx	lr
    2302:	bf00      	nop
    2304:	20098020 	.word	0x20098020

00002308 <board_io__get_led0>:
board_io__get_led0():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/board_io.c:88

gpio_s board_io__get_led0(void) { return board_io__led0; }
    2308:	4b07      	ldr	r3, [pc, #28]	; (2328 <board_io__get_led0+0x20>)
    230a:	b082      	sub	sp, #8
    230c:	881b      	ldrh	r3, [r3, #0]
    230e:	f8ad 3004 	strh.w	r3, [sp, #4]
    2312:	f89d 3004 	ldrb.w	r3, [sp, #4]
    2316:	2000      	movs	r0, #0
    2318:	f363 0007 	bfi	r0, r3, #0, #8
    231c:	f89d 3005 	ldrb.w	r3, [sp, #5]
    2320:	f363 200f 	bfi	r0, r3, #8, #8
    2324:	b002      	add	sp, #8
    2326:	4770      	bx	lr
    2328:	10000498 	.word	0x10000498

0000232c <board_io__get_led1>:
board_io__get_led1():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/board_io.c:89
gpio_s board_io__get_led1(void) { return board_io__led1; }
    232c:	4b07      	ldr	r3, [pc, #28]	; (234c <board_io__get_led1+0x20>)
    232e:	b082      	sub	sp, #8
    2330:	881b      	ldrh	r3, [r3, #0]
    2332:	f8ad 3004 	strh.w	r3, [sp, #4]
    2336:	f89d 3004 	ldrb.w	r3, [sp, #4]
    233a:	2000      	movs	r0, #0
    233c:	f363 0007 	bfi	r0, r3, #0, #8
    2340:	f89d 3005 	ldrb.w	r3, [sp, #5]
    2344:	f363 200f 	bfi	r0, r3, #8, #8
    2348:	b002      	add	sp, #8
    234a:	4770      	bx	lr
    234c:	1000049a 	.word	0x1000049a

00002350 <board_io__get_led2>:
board_io__get_led2():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/board_io.c:90
gpio_s board_io__get_led2(void) { return board_io__led2; }
    2350:	4b07      	ldr	r3, [pc, #28]	; (2370 <board_io__get_led2+0x20>)
    2352:	b082      	sub	sp, #8
    2354:	881b      	ldrh	r3, [r3, #0]
    2356:	f8ad 3004 	strh.w	r3, [sp, #4]
    235a:	f89d 3004 	ldrb.w	r3, [sp, #4]
    235e:	2000      	movs	r0, #0
    2360:	f363 0007 	bfi	r0, r3, #0, #8
    2364:	f89d 3005 	ldrb.w	r3, [sp, #5]
    2368:	f363 200f 	bfi	r0, r3, #8, #8
    236c:	b002      	add	sp, #8
    236e:	4770      	bx	lr
    2370:	1000049c 	.word	0x1000049c

00002374 <board_io__get_led3>:
board_io__get_led3():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/board_io.c:91
gpio_s board_io__get_led3(void) { return board_io__led3; }
    2374:	4b07      	ldr	r3, [pc, #28]	; (2394 <board_io__get_led3+0x20>)
    2376:	b082      	sub	sp, #8
    2378:	881b      	ldrh	r3, [r3, #0]
    237a:	f8ad 3004 	strh.w	r3, [sp, #4]
    237e:	f89d 3004 	ldrb.w	r3, [sp, #4]
    2382:	2000      	movs	r0, #0
    2384:	f363 0007 	bfi	r0, r3, #0, #8
    2388:	f89d 3005 	ldrb.w	r3, [sp, #5]
    238c:	f363 200f 	bfi	r0, r3, #8, #8
    2390:	b002      	add	sp, #8
    2392:	4770      	bx	lr
    2394:	1000049e 	.word	0x1000049e

00002398 <gpio__set_function>:
gpio__set_function():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:64
  gpio_s gpio = gpio__construct(port, pin_number_0_to_31);
  gpio__set_function(gpio, function);
  return gpio;
}

void gpio__set_function(gpio_s gpio, gpio__function_e function) {
    2398:	b082      	sub	sp, #8
gpio__get_iocon():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:23
  volatile uint32_t *pin_iocon = (port_offset + gpio.pin_number);
    239a:	b2c3      	uxtb	r3, r0
gpio__set_function():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:64
void gpio__set_function(gpio_s gpio, gpio__function_e function) {
    239c:	f8ad 0004 	strh.w	r0, [sp, #4]
gpio__get_iocon():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:23
  volatile uint32_t *pin_iocon = (port_offset + gpio.pin_number);
    23a0:	f3c0 2007 	ubfx	r0, r0, #8, #8
    23a4:	0080      	lsls	r0, r0, #2
    23a6:	eb00 10c3 	add.w	r0, r0, r3, lsl #7
    23aa:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
    23ae:	f500 3030 	add.w	r0, r0, #180224	; 0x2c000
gpio__set_function():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:70
  volatile uint32_t *pin_iocon = gpio__get_iocon(gpio);

  // Reference chapter 7: table 83
  const uint32_t config_mask = UINT32_C(7);
  *pin_iocon &= ~(config_mask << 0);
  *pin_iocon |= ((uint32_t)function & config_mask);
    23b2:	f001 0107 	and.w	r1, r1, #7
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:69
  *pin_iocon &= ~(config_mask << 0);
    23b6:	6803      	ldr	r3, [r0, #0]
    23b8:	f023 0307 	bic.w	r3, r3, #7
    23bc:	6003      	str	r3, [r0, #0]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:70
  *pin_iocon |= ((uint32_t)function & config_mask);
    23be:	6803      	ldr	r3, [r0, #0]
    23c0:	4319      	orrs	r1, r3
    23c2:	6001      	str	r1, [r0, #0]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:71
}
    23c4:	b002      	add	sp, #8
    23c6:	4770      	bx	lr

000023c8 <gpio__construct_with_function>:
gpio__construct_with_function():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:58
                                     gpio__function_e function) {
    23c8:	b537      	push	{r0, r1, r2, r4, r5, lr}
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:60
  gpio__set_function(gpio, function);
    23ca:	f88d 1001 	strb.w	r1, [sp, #1]
    23ce:	f88d 0000 	strb.w	r0, [sp]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:58
                                     gpio__function_e function) {
    23d2:	4604      	mov	r4, r0
    23d4:	460d      	mov	r5, r1
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:60
  gpio__set_function(gpio, function);
    23d6:	9800      	ldr	r0, [sp, #0]
    23d8:	4611      	mov	r1, r2
    23da:	f7ff ffdd 	bl	2398 <gpio__set_function>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:62
}
    23de:	ea44 2005 	orr.w	r0, r4, r5, lsl #8
    23e2:	b003      	add	sp, #12
    23e4:	bd30      	pop	{r4, r5, pc}

000023e6 <gpio__enable_open_drain>:
gpio__enable_open_drain():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:73

void gpio__enable_open_drain(gpio_s gpio) {
    23e6:	b082      	sub	sp, #8
gpio__get_iocon():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:23
  volatile uint32_t *pin_iocon = (port_offset + gpio.pin_number);
    23e8:	b2c3      	uxtb	r3, r0
gpio__enable_open_drain():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:73
void gpio__enable_open_drain(gpio_s gpio) {
    23ea:	f8ad 0004 	strh.w	r0, [sp, #4]
gpio__get_iocon():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:23
  volatile uint32_t *pin_iocon = (port_offset + gpio.pin_number);
    23ee:	f3c0 2007 	ubfx	r0, r0, #8, #8
    23f2:	0080      	lsls	r0, r0, #2
    23f4:	eb00 10c3 	add.w	r0, r0, r3, lsl #7
    23f8:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
    23fc:	f500 3030 	add.w	r0, r0, #180224	; 0x2c000
gpio__enable_open_drain():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:75
  volatile uint32_t *pin_iocon = gpio__get_iocon(gpio);
  *pin_iocon |= (UINT32_C(1) << 10);
    2400:	6803      	ldr	r3, [r0, #0]
    2402:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
    2406:	6003      	str	r3, [r0, #0]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:76
}
    2408:	b002      	add	sp, #8
    240a:	4770      	bx	lr

0000240c <gpio__set_as_input>:
gpio__set_as_input():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:78

void gpio__set_as_input(gpio_s gpio) {
    240c:	b082      	sub	sp, #8
gpio__get_struct():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:9
  return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number];
    240e:	4b08      	ldr	r3, [pc, #32]	; (2430 <gpio__set_as_input+0x24>)
gpio__set_as_input():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:78
void gpio__set_as_input(gpio_s gpio) {
    2410:	f8ad 0004 	strh.w	r0, [sp, #4]
gpio__get_struct():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:9
  return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number];
    2414:	b2c0      	uxtb	r0, r0
gpio__get_pin_mask():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    2416:	2201      	movs	r2, #1
gpio__get_struct():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:9
  return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number];
    2418:	f853 1020 	ldr.w	r1, [r3, r0, lsl #2]
gpio__get_pin_mask():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    241c:	f89d 0005 	ldrb.w	r0, [sp, #5]
gpio__set_as_input():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:79
  gpio__get_struct(gpio)->DIR &= ~gpio__get_pin_mask(gpio);
    2420:	680b      	ldr	r3, [r1, #0]
gpio__get_pin_mask():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    2422:	4082      	lsls	r2, r0
gpio__set_as_input():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:79
  gpio__get_struct(gpio)->DIR &= ~gpio__get_pin_mask(gpio);
    2424:	ea23 0302 	bic.w	r3, r3, r2
    2428:	600b      	str	r3, [r1, #0]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:80
}
    242a:	b002      	add	sp, #8
    242c:	4770      	bx	lr
    242e:	bf00      	nop
    2430:	0000b594 	.word	0x0000b594

00002434 <gpio__construct_as_input>:
gpio__construct_as_input():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:43
gpio_s gpio__construct_as_input(gpio__port_e port, uint8_t pin_number_0_to_31) {
    2434:	b537      	push	{r0, r1, r2, r4, r5, lr}
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:45
  gpio__set_as_input(gpio);
    2436:	f88d 0000 	strb.w	r0, [sp]
    243a:	f88d 1001 	strb.w	r1, [sp, #1]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:43
gpio_s gpio__construct_as_input(gpio__port_e port, uint8_t pin_number_0_to_31) {
    243e:	4604      	mov	r4, r0
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:45
  gpio__set_as_input(gpio);
    2440:	9800      	ldr	r0, [sp, #0]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:43
gpio_s gpio__construct_as_input(gpio__port_e port, uint8_t pin_number_0_to_31) {
    2442:	460d      	mov	r5, r1
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:45
  gpio__set_as_input(gpio);
    2444:	f7ff ffe2 	bl	240c <gpio__set_as_input>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:47
}
    2448:	ea44 2005 	orr.w	r0, r4, r5, lsl #8
    244c:	b003      	add	sp, #12
    244e:	bd30      	pop	{r4, r5, pc}

00002450 <gpio__set_as_output>:
gpio__set_as_output():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:82

void gpio__set_as_output(gpio_s gpio) {
    2450:	b082      	sub	sp, #8
gpio__get_struct():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:9
  return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number];
    2452:	4b07      	ldr	r3, [pc, #28]	; (2470 <gpio__set_as_output+0x20>)
gpio__set_as_output():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:82
void gpio__set_as_output(gpio_s gpio) {
    2454:	f8ad 0004 	strh.w	r0, [sp, #4]
gpio__get_struct():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:9
  return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number];
    2458:	b2c0      	uxtb	r0, r0
    245a:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
gpio__get_pin_mask():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    245e:	f89d 0005 	ldrb.w	r0, [sp, #5]
gpio__set_as_output():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:83
  gpio__get_struct(gpio)->DIR |= gpio__get_pin_mask(gpio);
    2462:	6811      	ldr	r1, [r2, #0]
gpio__get_pin_mask():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    2464:	2301      	movs	r3, #1
    2466:	4083      	lsls	r3, r0
gpio__set_as_output():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:83
  gpio__get_struct(gpio)->DIR |= gpio__get_pin_mask(gpio);
    2468:	430b      	orrs	r3, r1
    246a:	6013      	str	r3, [r2, #0]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:84
}
    246c:	b002      	add	sp, #8
    246e:	4770      	bx	lr
    2470:	0000b594 	.word	0x0000b594

00002474 <gpio__construct_as_output>:
gpio__construct_as_output():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:50
                                 uint8_t pin_number_0_to_31) {
    2474:	b537      	push	{r0, r1, r2, r4, r5, lr}
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:52
  gpio__set_as_output(gpio);
    2476:	f88d 0000 	strb.w	r0, [sp]
    247a:	f88d 1001 	strb.w	r1, [sp, #1]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:50
                                 uint8_t pin_number_0_to_31) {
    247e:	4604      	mov	r4, r0
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:52
  gpio__set_as_output(gpio);
    2480:	9800      	ldr	r0, [sp, #0]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:50
                                 uint8_t pin_number_0_to_31) {
    2482:	460d      	mov	r5, r1
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:52
  gpio__set_as_output(gpio);
    2484:	f7ff ffe4 	bl	2450 <gpio__set_as_output>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:54
}
    2488:	ea44 2005 	orr.w	r0, r4, r5, lsl #8
    248c:	b003      	add	sp, #12
    248e:	bd30      	pop	{r4, r5, pc}

00002490 <gpio__get>:
gpio__get():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:86

bool gpio__get(gpio_s gpio) {
    2490:	b082      	sub	sp, #8
gpio__get_struct():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:9
  return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number];
    2492:	4b08      	ldr	r3, [pc, #32]	; (24b4 <gpio__get+0x24>)
gpio__get():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:86
bool gpio__get(gpio_s gpio) {
    2494:	f8ad 0004 	strh.w	r0, [sp, #4]
gpio__get_struct():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:9
  return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number];
    2498:	b2c0      	uxtb	r0, r0
gpio__get_pin_mask():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    249a:	f89d 1005 	ldrb.w	r1, [sp, #5]
gpio__get_struct():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:9
  return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number];
    249e:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
gpio__get():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:87
  return (gpio__get_struct(gpio)->PIN & gpio__get_pin_mask(gpio));
    24a2:	695a      	ldr	r2, [r3, #20]
gpio__get_pin_mask():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    24a4:	2301      	movs	r3, #1
    24a6:	408b      	lsls	r3, r1
gpio__get():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:87
  return (gpio__get_struct(gpio)->PIN & gpio__get_pin_mask(gpio));
    24a8:	4213      	tst	r3, r2
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:88
}
    24aa:	bf14      	ite	ne
    24ac:	2001      	movne	r0, #1
    24ae:	2000      	moveq	r0, #0
    24b0:	b002      	add	sp, #8
    24b2:	4770      	bx	lr
    24b4:	0000b594 	.word	0x0000b594

000024b8 <gpio__set>:
gpio__get_struct():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:9
  return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number];
    24b8:	b2c2      	uxtb	r2, r0
    24ba:	4b05      	ldr	r3, [pc, #20]	; (24d0 <gpio__set+0x18>)
gpio__get_pin_mask():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    24bc:	f3c0 2007 	ubfx	r0, r0, #8, #8
gpio__get_struct():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:9
  return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number];
    24c0:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
gpio__get_pin_mask():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    24c4:	2301      	movs	r3, #1
gpio__set():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:90

void gpio__set(gpio_s gpio) {
    24c6:	b082      	sub	sp, #8
gpio__get_pin_mask():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    24c8:	4083      	lsls	r3, r0
gpio__set():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:91
  gpio__get_struct(gpio)->SET = gpio__get_pin_mask(gpio);
    24ca:	6193      	str	r3, [r2, #24]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:92
}
    24cc:	b002      	add	sp, #8
    24ce:	4770      	bx	lr
    24d0:	0000b594 	.word	0x0000b594

000024d4 <gpio__reset>:
gpio__get_struct():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:9
  return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number];
    24d4:	b2c2      	uxtb	r2, r0
    24d6:	4b05      	ldr	r3, [pc, #20]	; (24ec <gpio__reset+0x18>)
gpio__get_pin_mask():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    24d8:	f3c0 2007 	ubfx	r0, r0, #8, #8
gpio__get_struct():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:9
  return (LPC_GPIO_TypeDef *)gpio_memory_map[gpio.port_number];
    24dc:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
gpio__get_pin_mask():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    24e0:	2301      	movs	r3, #1
gpio__reset():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:94

void gpio__reset(gpio_s gpio) {
    24e2:	b082      	sub	sp, #8
gpio__get_pin_mask():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:13
  return (UINT32_C(1) << gpio.pin_number);
    24e4:	4083      	lsls	r3, r0
gpio__reset():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:95
  gpio__get_struct(gpio)->CLR = gpio__get_pin_mask(gpio);
    24e6:	61d3      	str	r3, [r2, #28]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:96
}
    24e8:	b002      	add	sp, #8
    24ea:	4770      	bx	lr
    24ec:	0000b594 	.word	0x0000b594

000024f0 <gpio__toggle>:
gpio__toggle():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:98

void gpio__toggle(gpio_s gpio) {
    24f0:	b507      	push	{r0, r1, r2, lr}
    24f2:	f8ad 0004 	strh.w	r0, [sp, #4]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:100
  // Avoiding XOR logic with PIN register to make it thread safe
  if (gpio__get(gpio)) {
    24f6:	9801      	ldr	r0, [sp, #4]
    24f8:	f7ff ffca 	bl	2490 <gpio__get>
    24fc:	b128      	cbz	r0, 250a <gpio__toggle+0x1a>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:101
    gpio__reset(gpio);
    24fe:	9801      	ldr	r0, [sp, #4]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:105
  } else {
    gpio__set(gpio);
  }
}
    2500:	b003      	add	sp, #12
    2502:	f85d eb04 	ldr.w	lr, [sp], #4
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:101
    gpio__reset(gpio);
    2506:	f7ff bfe5 	b.w	24d4 <gpio__reset>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:103
    gpio__set(gpio);
    250a:	9801      	ldr	r0, [sp, #4]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:105
}
    250c:	b003      	add	sp, #12
    250e:	f85d eb04 	ldr.w	lr, [sp], #4
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/gpio.c:103
    gpio__set(gpio);
    2512:	f7ff bfd1 	b.w	24b8 <gpio__set>
    2516:	Address 0x00002516 is out of bounds.


00002518 <hw_timer__enable>:
hw_timer__enable():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:19
    {LPC_TIM2, LPC_PERIPHERAL__TIMER2},
    {LPC_TIM3, LPC_PERIPHERAL__TIMER3},
};

void hw_timer__enable(lpc_timer_e timer, const uint32_t prescalar_divider,
                      function__void_f isr_callback) {
    2518:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:21
  // Peripheral must be turned on before accessing its registers
  lpc_peripheral__turn_on_power_to(hw_timers[timer].peripheral_id);
    251c:	4c0f      	ldr	r4, [pc, #60]	; (255c <hw_timer__enable+0x44>)
    251e:	eb04 03c0 	add.w	r3, r4, r0, lsl #3
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:19
                      function__void_f isr_callback) {
    2522:	4606      	mov	r6, r0
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:21
  lpc_peripheral__turn_on_power_to(hw_timers[timer].peripheral_id);
    2524:	791d      	ldrb	r5, [r3, #4]
    2526:	4628      	mov	r0, r5
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:19
                      function__void_f isr_callback) {
    2528:	460f      	mov	r7, r1
    252a:	4690      	mov	r8, r2
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:21
  lpc_peripheral__turn_on_power_to(hw_timers[timer].peripheral_id);
    252c:	f000 fa0e 	bl	294c <lpc_peripheral__turn_on_power_to>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:23

  hw_timers[timer].registers->TCR = 0;
    2530:	f854 4036 	ldr.w	r4, [r4, r6, lsl #3]
    2534:	2300      	movs	r3, #0
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:26
  hw_timers[timer].registers->TC = 0;

  hw_timers[timer].registers->IR = 0x3F; // Clear all interrupts
    2536:	223f      	movs	r2, #63	; 0x3f
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:23
  hw_timers[timer].registers->TCR = 0;
    2538:	6063      	str	r3, [r4, #4]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:36
  hw_timers[timer].registers->MR3 = 0;

  /* Interrupt can be enabled because we can assume the timer is not setup
   * for interrupt yet through hw_timer__enable_match_isr()
   */
  lpc_peripheral__enable_interrupt(hw_timers[timer].peripheral_id,
    253a:	4641      	mov	r1, r8
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:24
  hw_timers[timer].registers->TC = 0;
    253c:	60a3      	str	r3, [r4, #8]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:36
  lpc_peripheral__enable_interrupt(hw_timers[timer].peripheral_id,
    253e:	4628      	mov	r0, r5
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:26
  hw_timers[timer].registers->IR = 0x3F; // Clear all interrupts
    2540:	6022      	str	r2, [r4, #0]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:27
  hw_timers[timer].registers->MCR = 0;   // Clear all match register settings
    2542:	6163      	str	r3, [r4, #20]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:28
  hw_timers[timer].registers->MR0 = 0;
    2544:	61a3      	str	r3, [r4, #24]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:29
  hw_timers[timer].registers->MR1 = 0;
    2546:	61e3      	str	r3, [r4, #28]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:30
  hw_timers[timer].registers->MR2 = 0;
    2548:	6223      	str	r3, [r4, #32]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:31
  hw_timers[timer].registers->MR3 = 0;
    254a:	6263      	str	r3, [r4, #36]	; 0x24
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:36
  lpc_peripheral__enable_interrupt(hw_timers[timer].peripheral_id,
    254c:	f000 fa22 	bl	2994 <lpc_peripheral__enable_interrupt>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:40
                                   isr_callback);

  hw_timers[timer].registers->PR = prescalar_divider;
  hw_timers[timer].registers->TCR = 1; // Enable
    2550:	2301      	movs	r3, #1
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:39
  hw_timers[timer].registers->PR = prescalar_divider;
    2552:	60e7      	str	r7, [r4, #12]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:40
  hw_timers[timer].registers->TCR = 1; // Enable
    2554:	6063      	str	r3, [r4, #4]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:41
}
    2556:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    255a:	bf00      	nop
    255c:	0000b5ac 	.word	0x0000b5ac

00002560 <hw_timer__enable_match_isr>:
hw_timer__enable_match_isr():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:46

void hw_timer__enable_match_isr(lpc_timer_e timer, lpc_timer__mr_e mr_type,
                                const uint32_t mr_value) {
  const uint32_t interrupt_on_match = (uint32_t)mr_type * 3; // 3 bits per MR
  hw_timers[timer].registers->MCR |= (1 << interrupt_on_match);
    2560:	4b07      	ldr	r3, [pc, #28]	; (2580 <hw_timer__enable_match_isr+0x20>)
    2562:	f853 3030 	ldr.w	r3, [r3, r0, lsl #3]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:44
                                const uint32_t mr_value) {
    2566:	b530      	push	{r4, r5, lr}
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:46
  hw_timers[timer].registers->MCR |= (1 << interrupt_on_match);
    2568:	2001      	movs	r0, #1
    256a:	695c      	ldr	r4, [r3, #20]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:45
  const uint32_t interrupt_on_match = (uint32_t)mr_type * 3; // 3 bits per MR
    256c:	eb01 0541 	add.w	r5, r1, r1, lsl #1
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:46
  hw_timers[timer].registers->MCR |= (1 << interrupt_on_match);
    2570:	40a8      	lsls	r0, r5
    2572:	4320      	orrs	r0, r4
    2574:	6158      	str	r0, [r3, #20]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:49

  // Four MR registers are contiguous and they start from &MR0
  volatile uint32_t *mr_base = &(hw_timers[timer].registers->MR0);
    2576:	3318      	adds	r3, #24
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:52
  volatile uint32_t *mr_register = mr_base + mr_type;

  *mr_register = mr_value;
    2578:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:53
}
    257c:	bd30      	pop	{r4, r5, pc}
    257e:	bf00      	nop
    2580:	0000b5ac 	.word	0x0000b5ac

00002584 <hw_timer__acknowledge_interrupt>:
hw_timer__acknowledge_interrupt():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:57

void hw_timer__acknowledge_interrupt(lpc_timer_e timer,
                                     lpc_timer__mr_e mr_type) {
  hw_timers[timer].registers->IR = (1 << (uint32_t)mr_type);
    2584:	4b03      	ldr	r3, [pc, #12]	; (2594 <hw_timer__acknowledge_interrupt+0x10>)
    2586:	f853 2030 	ldr.w	r2, [r3, r0, lsl #3]
    258a:	2301      	movs	r3, #1
    258c:	fa03 f101 	lsl.w	r1, r3, r1
    2590:	6011      	str	r1, [r2, #0]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:58
}
    2592:	4770      	bx	lr
    2594:	0000b5ac 	.word	0x0000b5ac

00002598 <hw_timer__get_value>:
hw_timer__get_value():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:61

uint32_t hw_timer__get_value(lpc_timer_e timer) {
  return hw_timers[timer].registers->TC;
    2598:	4b02      	ldr	r3, [pc, #8]	; (25a4 <hw_timer__get_value+0xc>)
    259a:	f853 3030 	ldr.w	r3, [r3, r0, lsl #3]
    259e:	6898      	ldr	r0, [r3, #8]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:62
}
    25a0:	4770      	bx	lr
    25a2:	bf00      	nop
    25a4:	0000b5ac 	.word	0x0000b5ac

000025a8 <hw_timer__set_value>:
hw_timer__set_value():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:65

void hw_timer__set_value(lpc_timer_e timer, uint32_t tc_value) {
  hw_timers[timer].registers->TC = tc_value;
    25a8:	4b02      	ldr	r3, [pc, #8]	; (25b4 <hw_timer__set_value+0xc>)
    25aa:	f853 3030 	ldr.w	r3, [r3, r0, lsl #3]
    25ae:	6099      	str	r1, [r3, #8]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/hw_timer.c:66
}
    25b0:	4770      	bx	lr
    25b2:	bf00      	nop
    25b4:	0000b5ac 	.word	0x0000b5ac

000025b8 <i2c__transfer_unprotected>:
i2c__transfer_unprotected():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:260

static bool i2c__transfer_unprotected(i2c_s *i2c, uint8_t slave_address,
                                      uint8_t starting_slave_memory_address,
                                      uint8_t *input_byte_pointer,
                                      const uint8_t *output_byte_pointer,
                                      uint32_t number_of_bytes_to_transfer) {
    25b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    25bc:	4604      	mov	r4, r0
    25be:	4617      	mov	r7, r2
    25c0:	461e      	mov	r6, r3
    25c2:	4688      	mov	r8, r1
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:264
  bool status = false;
  const uint32_t timeout_ms = 3000;
  const bool rtos_is_running =
      (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
    25c4:	f7ff fac8 	bl	1b58 <xTaskGetSchedulerState>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:266

  xSemaphoreTake(i2c->transfer_complete_signal,
    25c8:	2100      	movs	r1, #0
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:264
      (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
    25ca:	4605      	mov	r5, r0
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:266
  xSemaphoreTake(i2c->transfer_complete_signal,
    25cc:	6860      	ldr	r0, [r4, #4]
    25ce:	f7fe fc97 	bl	f00 <xQueueSemaphoreTake>
i2c__kick_off_transfer():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:294
static void i2c__kick_off_transfer(i2c_s *i2c, uint8_t slave_address,
                                   uint8_t starting_slave_memory_address,
                                   uint8_t *input_byte_pointer,
                                   const uint8_t *output_byte_pointer,
                                   uint32_t number_of_bytes_to_transfer) {
  i2c->error_code = 0;
    25d2:	2300      	movs	r3, #0
    25d4:	7323      	strb	r3, [r4, #12]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:299
  i2c->slave_address = slave_address;
  i2c->starting_slave_memory_address = starting_slave_memory_address;

  i2c->input_byte_pointer = input_byte_pointer;
  i2c->output_byte_pointer = output_byte_pointer;
    25d6:	9b06      	ldr	r3, [sp, #24]
    25d8:	6163      	str	r3, [r4, #20]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:300
  i2c->number_of_bytes_to_transfer = number_of_bytes_to_transfer;
    25da:	9b07      	ldr	r3, [sp, #28]
    25dc:	61a3      	str	r3, [r4, #24]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:306

  // Send START, I2C State Machine will finish the rest through interrupts; @see
  // i2c__handle_state_machine()
  I2C__DEBUG_PRINTF("Starting transfer with device address: 0x%02X",
                    (unsigned)slave_address);
  i2c__set_start_flag(i2c->registers);
    25de:	6823      	ldr	r3, [r4, #0]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:295
  i2c->slave_address = slave_address;
    25e0:	f884 800d 	strb.w	r8, [r4, #13]
i2c__set_start_flag():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:110
static void i2c__set_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONSET = 0x20; }
    25e4:	2220      	movs	r2, #32
i2c__transfer_unprotected():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:274
  if (rtos_is_running) {
    25e6:	2d02      	cmp	r5, #2
i2c__kick_off_transfer():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:296
  i2c->starting_slave_memory_address = starting_slave_memory_address;
    25e8:	73a7      	strb	r7, [r4, #14]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:298
  i2c->input_byte_pointer = input_byte_pointer;
    25ea:	6126      	str	r6, [r4, #16]
i2c__set_start_flag():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:110
static void i2c__set_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONSET = 0x20; }
    25ec:	601a      	str	r2, [r3, #0]
i2c__transfer_unprotected():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:274
  if (rtos_is_running) {
    25ee:	d10b      	bne.n	2608 <i2c__transfer_unprotected+0x50>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:275
    if (xSemaphoreTake(i2c->transfer_complete_signal, timeout_ms)) {
    25f0:	f640 31b8 	movw	r1, #3000	; 0xbb8
    25f4:	6860      	ldr	r0, [r4, #4]
    25f6:	f7fe fc83 	bl	f00 <xQueueSemaphoreTake>
    25fa:	b118      	cbz	r0, 2604 <i2c__transfer_unprotected+0x4c>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:283
    status = (0 == i2c->error_code);
    25fc:	7b20      	ldrb	r0, [r4, #12]
    25fe:	fab0 f080 	clz	r0, r0
    2602:	0940      	lsrs	r0, r0, #5
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:287
}
    2604:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:281 (discriminator 1)
    while (!xSemaphoreTake(i2c->transfer_complete_signal, 0)) {
    2608:	2100      	movs	r1, #0
    260a:	6860      	ldr	r0, [r4, #4]
    260c:	f7fe fc78 	bl	f00 <xQueueSemaphoreTake>
    2610:	2800      	cmp	r0, #0
    2612:	d0f9      	beq.n	2608 <i2c__transfer_unprotected+0x50>
    2614:	e7f2      	b.n	25fc <i2c__transfer_unprotected+0x44>
    2616:	Address 0x00002616 is out of bounds.


00002618 <i2c__handle_interrupt>:
i2c__handle_state_machine():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:349
   * I2C__STATE_MR_SLAVE_NACK_SENT --> (stop) For 1  byte :
   *I2C__STATE_MR_SLAVE_NACK_SENT --> (stop)
   ***********************************************************************************************************
   */

  LPC_I2C_TypeDef *lpc_i2c = i2c->registers;
    2618:	6803      	ldr	r3, [r0, #0]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:350
  const unsigned i2c_state = lpc_i2c->STAT;
    261a:	685a      	ldr	r2, [r3, #4]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:353
  I2C__DEBUG_PRINTF("  HW State: 0x%02X", i2c_state);

  switch (i2c_state) {
    261c:	2a28      	cmp	r2, #40	; 0x28
i2c__handle_interrupt():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:473
  }

  return true;
}

static void i2c__handle_interrupt(i2c_s *i2c) {
    261e:	b513      	push	{r0, r1, r4, lr}
i2c__handle_state_machine():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:353
  switch (i2c_state) {
    2620:	d057      	beq.n	26d2 <i2c__handle_interrupt+0xba>
    2622:	d80a      	bhi.n	263a <i2c__handle_interrupt+0x22>
    2624:	2a10      	cmp	r2, #16
    2626:	d02c      	beq.n	2682 <i2c__handle_interrupt+0x6a>
    2628:	2a18      	cmp	r2, #24
    262a:	d032      	beq.n	2692 <i2c__handle_interrupt+0x7a>
    262c:	2a08      	cmp	r2, #8
    262e:	d109      	bne.n	2644 <i2c__handle_interrupt+0x2c>
i2c__write_address():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:92
  return (slave_address & 0xFE);
    2630:	7b41      	ldrb	r1, [r0, #13]
i2c__handle_state_machine():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:356
    lpc_i2c->DAT = i2c__write_address(i2c->slave_address);
    2632:	f001 01fe 	and.w	r1, r1, #254	; 0xfe
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:373
      lpc_i2c->DAT = i2c->starting_slave_memory_address;
    2636:	6099      	str	r1, [r3, #8]
i2c__clear_si_flag_for_hw_to_take_next_action():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:108
  i2c->CONCLR = 0x08;
    2638:	e028      	b.n	268c <i2c__handle_interrupt+0x74>
i2c__handle_state_machine():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:353
  switch (i2c_state) {
    263a:	2a40      	cmp	r2, #64	; 0x40
    263c:	d063      	beq.n	2706 <i2c__handle_interrupt+0xee>
    263e:	d80d      	bhi.n	265c <i2c__handle_interrupt+0x44>
    2640:	2a38      	cmp	r2, #56	; 0x38
    2642:	d077      	beq.n	2734 <i2c__handle_interrupt+0x11c>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:453
    i2c->error_code = lpc_i2c->STAT;
    2644:	685a      	ldr	r2, [r3, #4]
    2646:	7302      	strb	r2, [r0, #12]
i2c__clear_start_flag():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:111
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    2648:	2220      	movs	r2, #32
    264a:	619a      	str	r2, [r3, #24]
i2c__set_stop():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:464
  i2c->CONSET = stop_bit;
    264c:	2210      	movs	r2, #16
    264e:	601a      	str	r2, [r3, #0]
i2c__clear_si_flag_for_hw_to_take_next_action():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:108
  i2c->CONCLR = 0x08;
    2650:	2208      	movs	r2, #8
    2652:	619a      	str	r2, [r3, #24]
i2c__set_stop():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:467
  while (i2c->CONSET & stop_bit) {
    2654:	681a      	ldr	r2, [r3, #0]
    2656:	06d2      	lsls	r2, r2, #27
    2658:	d4fc      	bmi.n	2654 <i2c__handle_interrupt+0x3c>
    265a:	e026      	b.n	26aa <i2c__handle_interrupt+0x92>
i2c__handle_state_machine():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:353
  switch (i2c_state) {
    265c:	2a50      	cmp	r2, #80	; 0x50
    265e:	d05b      	beq.n	2718 <i2c__handle_interrupt+0x100>
    2660:	2a58      	cmp	r2, #88	; 0x58
    2662:	d1ef      	bne.n	2644 <i2c__handle_interrupt+0x2c>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:436
    *(i2c->input_byte_pointer) = lpc_i2c->DAT;
    2664:	6902      	ldr	r2, [r0, #16]
    2666:	6899      	ldr	r1, [r3, #8]
    2668:	7011      	strb	r1, [r2, #0]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:437
    i2c->number_of_bytes_to_transfer = 0;
    266a:	2200      	movs	r2, #0
    266c:	6182      	str	r2, [r0, #24]
i2c__clear_start_flag():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:111
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    266e:	2220      	movs	r2, #32
    2670:	619a      	str	r2, [r3, #24]
i2c__set_stop():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:464
  i2c->CONSET = stop_bit;
    2672:	2210      	movs	r2, #16
    2674:	601a      	str	r2, [r3, #0]
i2c__clear_si_flag_for_hw_to_take_next_action():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:108
  i2c->CONCLR = 0x08;
    2676:	2208      	movs	r2, #8
    2678:	619a      	str	r2, [r3, #24]
i2c__set_stop():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:467
  while (i2c->CONSET & stop_bit) {
    267a:	681a      	ldr	r2, [r3, #0]
    267c:	06d1      	lsls	r1, r2, #27
    267e:	d4fc      	bmi.n	267a <i2c__handle_interrupt+0x62>
    2680:	e013      	b.n	26aa <i2c__handle_interrupt+0x92>
i2c__read_address():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:89
  return (slave_address | 0x01);
    2682:	7b42      	ldrb	r2, [r0, #13]
i2c__handle_state_machine():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:361
    lpc_i2c->DAT = i2c__read_address(i2c->slave_address);
    2684:	f042 0201 	orr.w	r2, r2, #1
    2688:	609a      	str	r2, [r3, #8]
i2c__clear_si_flag_for_hw_to_take_next_action():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:108
  i2c->CONCLR = 0x08;
    268a:	2208      	movs	r2, #8
    268c:	619a      	str	r2, [r3, #24]
i2c__handle_interrupt():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:482
    long higher_priority_task_woke = 0;
    xSemaphoreGiveFromISR(i2c->transfer_complete_signal,
                          &higher_priority_task_woke);
    portEND_SWITCHING_ISR(higher_priority_task_woke);
  }
}
    268e:	b002      	add	sp, #8
    2690:	bd10      	pop	{r4, pc}
i2c__handle_state_machine():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:370
    if (0 == i2c->number_of_bytes_to_transfer) {
    2692:	6984      	ldr	r4, [r0, #24]
i2c__clear_start_flag():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:111
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    2694:	2120      	movs	r1, #32
    2696:	6199      	str	r1, [r3, #24]
i2c__handle_state_machine():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:370
    if (0 == i2c->number_of_bytes_to_transfer) {
    2698:	2208      	movs	r2, #8
    269a:	b9c4      	cbnz	r4, 26ce <i2c__handle_interrupt+0xb6>
i2c__clear_start_flag():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:111
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    269c:	6199      	str	r1, [r3, #24]
i2c__set_stop():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:464
  i2c->CONSET = stop_bit;
    269e:	2110      	movs	r1, #16
    26a0:	6019      	str	r1, [r3, #0]
i2c__clear_si_flag_for_hw_to_take_next_action():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:108
  i2c->CONCLR = 0x08;
    26a2:	619a      	str	r2, [r3, #24]
i2c__set_stop():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:467
  while (i2c->CONSET & stop_bit) {
    26a4:	681a      	ldr	r2, [r3, #0]
    26a6:	06d1      	lsls	r1, r2, #27
    26a8:	d4fc      	bmi.n	26a4 <i2c__handle_interrupt+0x8c>
i2c__handle_interrupt():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:477
    long higher_priority_task_woke = 0;
    26aa:	2300      	movs	r3, #0
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:478
    xSemaphoreGiveFromISR(i2c->transfer_complete_signal,
    26ac:	a901      	add	r1, sp, #4
    26ae:	6840      	ldr	r0, [r0, #4]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:477
    long higher_priority_task_woke = 0;
    26b0:	9301      	str	r3, [sp, #4]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:478
    xSemaphoreGiveFromISR(i2c->transfer_complete_signal,
    26b2:	f7fe fb35 	bl	d20 <xQueueGiveFromISR>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:480
    portEND_SWITCHING_ISR(higher_priority_task_woke);
    26b6:	9b01      	ldr	r3, [sp, #4]
    26b8:	2b00      	cmp	r3, #0
    26ba:	d0e8      	beq.n	268e <i2c__handle_interrupt+0x76>
    26bc:	4b1f      	ldr	r3, [pc, #124]	; (273c <i2c__handle_interrupt+0x124>)
    26be:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    26c2:	601a      	str	r2, [r3, #0]
    26c4:	f3bf 8f4f 	dsb	sy
    26c8:	f3bf 8f6f 	isb	sy
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:482
}
    26cc:	e7df      	b.n	268e <i2c__handle_interrupt+0x76>
i2c__handle_state_machine():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:373
      lpc_i2c->DAT = i2c->starting_slave_memory_address;
    26ce:	7b81      	ldrb	r1, [r0, #14]
    26d0:	e7b1      	b.n	2636 <i2c__handle_interrupt+0x1e>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:382
    if (i2c__is_read_address(i2c->slave_address)) {
    26d2:	7b42      	ldrb	r2, [r0, #13]
    26d4:	07d2      	lsls	r2, r2, #31
    26d6:	d502      	bpl.n	26de <i2c__handle_interrupt+0xc6>
i2c__set_start_flag():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:110
static void i2c__set_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONSET = 0x20; }
    26d8:	2220      	movs	r2, #32
i2c__set_ack_flag():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:112
static void i2c__set_ack_flag(LPC_I2C_TypeDef *i2c) { i2c->CONSET = 0x04; }
    26da:	601a      	str	r2, [r3, #0]
i2c__clear_si_flag_for_hw_to_take_next_action():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:108
  i2c->CONCLR = 0x08;
    26dc:	e7d5      	b.n	268a <i2c__handle_interrupt+0x72>
i2c__handle_state_machine():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:386
      if (0 == i2c->number_of_bytes_to_transfer) {
    26de:	6982      	ldr	r2, [r0, #24]
    26e0:	b94a      	cbnz	r2, 26f6 <i2c__handle_interrupt+0xde>
i2c__clear_start_flag():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:111
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    26e2:	2220      	movs	r2, #32
    26e4:	619a      	str	r2, [r3, #24]
i2c__set_stop():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:464
  i2c->CONSET = stop_bit;
    26e6:	2210      	movs	r2, #16
    26e8:	601a      	str	r2, [r3, #0]
i2c__clear_si_flag_for_hw_to_take_next_action():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:108
  i2c->CONCLR = 0x08;
    26ea:	2208      	movs	r2, #8
    26ec:	619a      	str	r2, [r3, #24]
i2c__set_stop():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:467
  while (i2c->CONSET & stop_bit) {
    26ee:	681a      	ldr	r2, [r3, #0]
    26f0:	06d4      	lsls	r4, r2, #27
    26f2:	d4fc      	bmi.n	26ee <i2c__handle_interrupt+0xd6>
    26f4:	e7d9      	b.n	26aa <i2c__handle_interrupt+0x92>
i2c__handle_state_machine():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:389
        lpc_i2c->DAT = *(i2c->output_byte_pointer);
    26f6:	6941      	ldr	r1, [r0, #20]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:391
        --(i2c->number_of_bytes_to_transfer);
    26f8:	3a01      	subs	r2, #1
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:389
        lpc_i2c->DAT = *(i2c->output_byte_pointer);
    26fa:	f811 4b01 	ldrb.w	r4, [r1], #1
    26fe:	609c      	str	r4, [r3, #8]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:390
        ++(i2c->output_byte_pointer);
    2700:	6141      	str	r1, [r0, #20]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:391
        --(i2c->number_of_bytes_to_transfer);
    2702:	6182      	str	r2, [r0, #24]
i2c__clear_si_flag_for_hw_to_take_next_action():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:108
  i2c->CONCLR = 0x08;
    2704:	e7c1      	b.n	268a <i2c__handle_interrupt+0x72>
i2c__clear_start_flag():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:111
static void i2c__clear_start_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x20; }
    2706:	2220      	movs	r2, #32
    2708:	619a      	str	r2, [r3, #24]
i2c__handle_state_machine():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:406
    if (i2c->number_of_bytes_to_transfer > 1) {
    270a:	6982      	ldr	r2, [r0, #24]
    270c:	2a01      	cmp	r2, #1
    270e:	f04f 0204 	mov.w	r2, #4
    2712:	d8e2      	bhi.n	26da <i2c__handle_interrupt+0xc2>
i2c__set_nack_flag():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:113
static void i2c__set_nack_flag(LPC_I2C_TypeDef *i2c) { i2c->CONCLR = 0x04; }
    2714:	619a      	str	r2, [r3, #24]
    2716:	e7b8      	b.n	268a <i2c__handle_interrupt+0x72>
i2c__handle_state_machine():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:419
    *(i2c->input_byte_pointer) = lpc_i2c->DAT;
    2718:	6902      	ldr	r2, [r0, #16]
    271a:	6899      	ldr	r1, [r3, #8]
    271c:	7011      	strb	r1, [r2, #0]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:420
    ++(i2c->input_byte_pointer);
    271e:	6902      	ldr	r2, [r0, #16]
    2720:	3201      	adds	r2, #1
    2722:	6102      	str	r2, [r0, #16]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:421
    --(i2c->number_of_bytes_to_transfer);
    2724:	6982      	ldr	r2, [r0, #24]
    2726:	3a01      	subs	r2, #1
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:423
    if (1 == i2c->number_of_bytes_to_transfer) { // Only 1 more byte remaining
    2728:	2a01      	cmp	r2, #1
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:421
    --(i2c->number_of_bytes_to_transfer);
    272a:	6182      	str	r2, [r0, #24]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:423
    if (1 == i2c->number_of_bytes_to_transfer) { // Only 1 more byte remaining
    272c:	f04f 0204 	mov.w	r2, #4
    2730:	d1d3      	bne.n	26da <i2c__handle_interrupt+0xc2>
    2732:	e7ef      	b.n	2714 <i2c__handle_interrupt+0xfc>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:445
    i2c->error_code = lpc_i2c->STAT;
    2734:	685b      	ldr	r3, [r3, #4]
    2736:	7303      	strb	r3, [r0, #12]
i2c__handle_interrupt():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:476
  if (stop_sent) {
    2738:	e7b7      	b.n	26aa <i2c__handle_interrupt+0x92>
    273a:	bf00      	nop
    273c:	e000ed04 	.word	0xe000ed04

00002740 <i2c2_isr>:
i2c2_isr():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:117
static void i2c2_isr(void) { i2c__handle_interrupt(&i2c_structs[I2C__2]); }
    2740:	4801      	ldr	r0, [pc, #4]	; (2748 <i2c2_isr+0x8>)
    2742:	f7ff bf69 	b.w	2618 <i2c__handle_interrupt>
    2746:	bf00      	nop
    2748:	10000040 	.word	0x10000040

0000274c <i2c1_isr>:
i2c1_isr():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:116
static void i2c1_isr(void) { i2c__handle_interrupt(&i2c_structs[I2C__1]); }
    274c:	4801      	ldr	r0, [pc, #4]	; (2754 <i2c1_isr+0x8>)
    274e:	f7ff bf63 	b.w	2618 <i2c__handle_interrupt>
    2752:	bf00      	nop
    2754:	10000024 	.word	0x10000024

00002758 <i2c0_isr>:
i2c0_isr():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:115
static void i2c0_isr(void) { i2c__handle_interrupt(&i2c_structs[I2C__0]); }
    2758:	4801      	ldr	r0, [pc, #4]	; (2760 <i2c0_isr+0x8>)
    275a:	f7ff bf5d 	b.w	2618 <i2c__handle_interrupt>
    275e:	bf00      	nop
    2760:	10000008 	.word	0x10000008

00002764 <i2c__initialize>:
i2c__initialize():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:126
                     uint32_t peripheral_clock_hz) {
    2764:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:127
  const function__void_f isrs[] = {i2c0_isr, i2c1_isr, i2c2_isr};
    2768:	4b28      	ldr	r3, [pc, #160]	; (280c <i2c__initialize+0xa8>)
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:126
                     uint32_t peripheral_clock_hz) {
    276a:	4606      	mov	r6, r0
    276c:	4615      	mov	r5, r2
    276e:	4688      	mov	r8, r1
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:127
  const function__void_f isrs[] = {i2c0_isr, i2c1_isr, i2c2_isr};
    2770:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:126
                     uint32_t peripheral_clock_hz) {
    2774:	b085      	sub	sp, #20
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:127
  const function__void_f isrs[] = {i2c0_isr, i2c1_isr, i2c2_isr};
    2776:	ab04      	add	r3, sp, #16
    2778:	e903 0007 	stmdb	r3, {r0, r1, r2}
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:128
  const lpc_peripheral_e peripheral_ids[] = {
    277c:	f640 330a 	movw	r3, #2826	; 0xb0a
    2780:	f8ad 3000 	strh.w	r3, [sp]
    2784:	230c      	movs	r3, #12
    2786:	f88d 3002 	strb.w	r3, [sp, #2]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:137
  LPC_I2C_TypeDef *lpc_i2c = i2c->registers;
    278a:	231c      	movs	r3, #28
    278c:	4373      	muls	r3, r6
    278e:	4a20      	ldr	r2, [pc, #128]	; (2810 <i2c__initialize+0xac>)
    2790:	58d4      	ldr	r4, [r2, r3]
    2792:	eb02 0903 	add.w	r9, r2, r3
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:138
  const lpc_peripheral_e peripheral_id = peripheral_ids[i2c_number];
    2796:	ab04      	add	r3, sp, #16
    2798:	4433      	add	r3, r6
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:143
  i2c->transfer_complete_signal = xSemaphoreCreateBinary();
    279a:	2203      	movs	r2, #3
    279c:	2100      	movs	r1, #0
    279e:	2001      	movs	r0, #1
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:138
  const lpc_peripheral_e peripheral_id = peripheral_ids[i2c_number];
    27a0:	f813 7c10 	ldrb.w	r7, [r3, #-16]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:143
  i2c->transfer_complete_signal = xSemaphoreCreateBinary();
    27a4:	f7fe f962 	bl	a6c <xQueueGenericCreate>
    27a8:	f8c9 0004 	str.w	r0, [r9, #4]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:144
  i2c->mutex = xSemaphoreCreateMutex();
    27ac:	2001      	movs	r0, #1
    27ae:	f7fe fa46 	bl	c3e <xQueueCreateMutex>
    27b2:	f8c9 0008 	str.w	r0, [r9, #8]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:150
  lpc_peripheral__turn_on_power_to(peripheral_id);
    27b6:	4638      	mov	r0, r7
    27b8:	f000 f8c8 	bl	294c <lpc_peripheral__turn_on_power_to>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:151
  lpc_i2c->CONCLR = 0x6C; // Clear ALL I2C Flags
    27bc:	236c      	movs	r3, #108	; 0x6c
    27be:	61a3      	str	r3, [r4, #24]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:169
                               : desired_i2c_bus_speed_in_hz;
    27c0:	4a14      	ldr	r2, [pc, #80]	; (2814 <i2c__initialize+0xb0>)
    27c2:	4b15      	ldr	r3, [pc, #84]	; (2818 <i2c__initialize+0xb4>)
    27c4:	4590      	cmp	r8, r2
    27c6:	bf88      	it	hi
    27c8:	4698      	movhi	r8, r3
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:171
  lpc_i2c->SCLH = (half_clock_divider * percent_high) / 100;
    27ca:	2328      	movs	r3, #40	; 0x28
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:170
  const uint32_t half_clock_divider = (peripheral_clock_hz / freq_hz) / 2;
    27cc:	fbb5 f2f8 	udiv	r2, r5, r8
    27d0:	0852      	lsrs	r2, r2, #1
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:171
  lpc_i2c->SCLH = (half_clock_divider * percent_high) / 100;
    27d2:	2164      	movs	r1, #100	; 0x64
    27d4:	4353      	muls	r3, r2
    27d6:	fbb3 f3f1 	udiv	r3, r3, r1
    27da:	6123      	str	r3, [r4, #16]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:172
  lpc_i2c->SCLL = (half_clock_divider * percent_low) / 100;
    27dc:	233c      	movs	r3, #60	; 0x3c
    27de:	435a      	muls	r2, r3
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:175
  lpc_i2c->ADR0 = lpc_i2c->ADR1 = lpc_i2c->ADR2 = lpc_i2c->ADR3 = 0;
    27e0:	2300      	movs	r3, #0
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:172
  lpc_i2c->SCLL = (half_clock_divider * percent_low) / 100;
    27e2:	fbb2 f2f1 	udiv	r2, r2, r1
    27e6:	6162      	str	r2, [r4, #20]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:175
  lpc_i2c->ADR0 = lpc_i2c->ADR1 = lpc_i2c->ADR2 = lpc_i2c->ADR3 = 0;
    27e8:	62a3      	str	r3, [r4, #40]	; 0x28
    27ea:	6263      	str	r3, [r4, #36]	; 0x24
    27ec:	6223      	str	r3, [r4, #32]
    27ee:	60e3      	str	r3, [r4, #12]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:178
  lpc_i2c->CONSET = 0x40;
    27f0:	2340      	movs	r3, #64	; 0x40
    27f2:	6023      	str	r3, [r4, #0]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:179
  lpc_peripheral__enable_interrupt(peripheral_id, isrs[i2c_number]);
    27f4:	ab04      	add	r3, sp, #16
    27f6:	eb03 0686 	add.w	r6, r3, r6, lsl #2
    27fa:	4638      	mov	r0, r7
    27fc:	f856 1c0c 	ldr.w	r1, [r6, #-12]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:180
}
    2800:	b005      	add	sp, #20
    2802:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:179
  lpc_peripheral__enable_interrupt(peripheral_id, isrs[i2c_number]);
    2806:	f000 b8c5 	b.w	2994 <lpc_peripheral__enable_interrupt>
    280a:	bf00      	nop
    280c:	0000b5cc 	.word	0x0000b5cc
    2810:	10000008 	.word	0x10000008
    2814:	000f4240 	.word	0x000f4240
    2818:	000186a0 	.word	0x000186a0

0000281c <i2c__read_slave_data>:
i2c__read_slave_data():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:204
                          uint32_t number_of_bytes_to_transfer) {
    281c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    2820:	460f      	mov	r7, r1
    2822:	4690      	mov	r8, r2
i2c__transfer():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:243
  if ((NULL != input_byte_pointer) ^ (NULL != output_byte_pointer)) {
    2824:	461d      	mov	r5, r3
    2826:	b923      	cbnz	r3, 2832 <i2c__read_slave_data+0x16>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:240
  bool status = false;
    2828:	2500      	movs	r5, #0
i2c__read_slave_data():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:210
}
    282a:	4628      	mov	r0, r5
    282c:	b002      	add	sp, #8
    282e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
i2c__transfer():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:244
    if (xSemaphoreTake(i2c->mutex, portMAX_DELAY)) {
    2832:	4c0f      	ldr	r4, [pc, #60]	; (2870 <i2c__read_slave_data+0x54>)
    2834:	231c      	movs	r3, #28
    2836:	fb03 4400 	mla	r4, r3, r0, r4
    283a:	f04f 31ff 	mov.w	r1, #4294967295
    283e:	68a0      	ldr	r0, [r4, #8]
    2840:	f7fe fb5e 	bl	f00 <xQueueSemaphoreTake>
    2844:	2800      	cmp	r0, #0
    2846:	d0ef      	beq.n	2828 <i2c__read_slave_data+0xc>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:245
      status = i2c__transfer_unprotected(
    2848:	2600      	movs	r6, #0
    284a:	9b08      	ldr	r3, [sp, #32]
    284c:	9301      	str	r3, [sp, #4]
    284e:	4642      	mov	r2, r8
    2850:	462b      	mov	r3, r5
    2852:	f047 0101 	orr.w	r1, r7, #1
    2856:	9600      	str	r6, [sp, #0]
    2858:	4620      	mov	r0, r4
    285a:	f7ff fead 	bl	25b8 <i2c__transfer_unprotected>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:248
      xSemaphoreGive(i2c->mutex);
    285e:	4633      	mov	r3, r6
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:245
      status = i2c__transfer_unprotected(
    2860:	4605      	mov	r5, r0
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:248
      xSemaphoreGive(i2c->mutex);
    2862:	4632      	mov	r2, r6
    2864:	4631      	mov	r1, r6
    2866:	68a0      	ldr	r0, [r4, #8]
    2868:	f7fe f926 	bl	ab8 <xQueueGenericSend>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:253
  return status;
    286c:	e7dd      	b.n	282a <i2c__read_slave_data+0xe>
    286e:	bf00      	nop
    2870:	10000008 	.word	0x10000008

00002874 <i2c__read_single>:
i2c__read_single():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:194
                         uint8_t slave_memory_address) {
    2874:	b51f      	push	{r0, r1, r2, r3, r4, lr}
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:195
  uint8_t byte = 0;
    2876:	2300      	movs	r3, #0
    2878:	f88d 300f 	strb.w	r3, [sp, #15]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:196
  i2c__read_slave_data(i2c_number, slave_address, slave_memory_address, &byte,
    287c:	2301      	movs	r3, #1
    287e:	9300      	str	r3, [sp, #0]
    2880:	f10d 030f 	add.w	r3, sp, #15
    2884:	f7ff ffca 	bl	281c <i2c__read_slave_data>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:199
}
    2888:	f89d 000f 	ldrb.w	r0, [sp, #15]
    288c:	b005      	add	sp, #20
    288e:	f85d fb04 	ldr.w	pc, [sp], #4
    2892:	Address 0x00002892 is out of bounds.


00002894 <i2c__write_slave_data>:
i2c__write_slave_data():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:221
                           uint32_t number_of_bytes_to_transfer) {
    2894:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    2896:	460e      	mov	r6, r1
    2898:	4617      	mov	r7, r2
i2c__transfer():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:243
  if ((NULL != input_byte_pointer) ^ (NULL != output_byte_pointer)) {
    289a:	461d      	mov	r5, r3
    289c:	b91b      	cbnz	r3, 28a6 <i2c__write_slave_data+0x12>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:240
  bool status = false;
    289e:	2500      	movs	r5, #0
i2c__write_slave_data():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:227
}
    28a0:	4628      	mov	r0, r5
    28a2:	b003      	add	sp, #12
    28a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
i2c__transfer():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:244
    if (xSemaphoreTake(i2c->mutex, portMAX_DELAY)) {
    28a6:	4c0e      	ldr	r4, [pc, #56]	; (28e0 <i2c__write_slave_data+0x4c>)
    28a8:	231c      	movs	r3, #28
    28aa:	fb03 4400 	mla	r4, r3, r0, r4
    28ae:	f04f 31ff 	mov.w	r1, #4294967295
    28b2:	68a0      	ldr	r0, [r4, #8]
    28b4:	f7fe fb24 	bl	f00 <xQueueSemaphoreTake>
    28b8:	2800      	cmp	r0, #0
    28ba:	d0f0      	beq.n	289e <i2c__write_slave_data+0xa>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:245
      status = i2c__transfer_unprotected(
    28bc:	9b08      	ldr	r3, [sp, #32]
    28be:	463a      	mov	r2, r7
    28c0:	e9cd 5300 	strd	r5, r3, [sp]
    28c4:	f006 01fe 	and.w	r1, r6, #254	; 0xfe
    28c8:	2300      	movs	r3, #0
    28ca:	4620      	mov	r0, r4
    28cc:	f7ff fe74 	bl	25b8 <i2c__transfer_unprotected>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:248
      xSemaphoreGive(i2c->mutex);
    28d0:	2300      	movs	r3, #0
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:245
      status = i2c__transfer_unprotected(
    28d2:	4605      	mov	r5, r0
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:248
      xSemaphoreGive(i2c->mutex);
    28d4:	461a      	mov	r2, r3
    28d6:	4619      	mov	r1, r3
    28d8:	68a0      	ldr	r0, [r4, #8]
    28da:	f7fe f8ed 	bl	ab8 <xQueueGenericSend>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:253
  return status;
    28de:	e7df      	b.n	28a0 <i2c__write_slave_data+0xc>
    28e0:	10000008 	.word	0x10000008

000028e4 <i2c__detect>:
i2c__detect():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:182
bool i2c__detect(i2c_e i2c_number, uint8_t slave_address) {
    28e4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:187
  uint8_t unused = 0;
    28e6:	2200      	movs	r2, #0
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:189
  return i2c__write_slave_data(i2c_number, slave_address, dummy_register,
    28e8:	9200      	str	r2, [sp, #0]
    28ea:	f10d 030f 	add.w	r3, sp, #15
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:187
  uint8_t unused = 0;
    28ee:	f88d 200f 	strb.w	r2, [sp, #15]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:189
  return i2c__write_slave_data(i2c_number, slave_address, dummy_register,
    28f2:	f7ff ffcf 	bl	2894 <i2c__write_slave_data>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:191
}
    28f6:	b005      	add	sp, #20
    28f8:	f85d fb04 	ldr.w	pc, [sp], #4

000028fc <i2c__write_single>:
i2c__write_single():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:213
                       uint8_t slave_memory_address, uint8_t value) {
    28fc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    28fe:	f88d 300f 	strb.w	r3, [sp, #15]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:214
  return i2c__write_slave_data(i2c_number, slave_address, slave_memory_address,
    2902:	2301      	movs	r3, #1
    2904:	9300      	str	r3, [sp, #0]
    2906:	f10d 030f 	add.w	r3, sp, #15
    290a:	f7ff ffc3 	bl	2894 <i2c__write_slave_data>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/i2c.c:216
}
    290e:	b005      	add	sp, #20
    2910:	f85d fb04 	ldr.w	pc, [sp], #4

00002914 <lpc_peripheral__halt_handler>:
lpc_peripheral__halt_handler():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/lpc_peripherals.c:41 (discriminator 1)
// clang-format on

/// An unregistered interrupt handler is a forever loop
static void lpc_peripheral__halt_handler(void) {
  while (1) {
  }
    2914:	e7fe      	b.n	2914 <lpc_peripheral__halt_handler>
    2916:	Address 0x00002916 is out of bounds.


00002918 <lpc_peripheral__interrupt_dispatcher>:
lpc_peripheral__interrupt_dispatcher():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/lpc_peripherals.c:108
/**
 * This function is intentionally not declared at the header file
 * This is registered by the startup code and registered as the interrupt
 * callback for each peripheral
 */
void lpc_peripheral__interrupt_dispatcher(void) {
    2918:	b508      	push	{r3, lr}
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/lpc_peripherals.c:109
  vRunTimeStatIsrEntry();
    291a:	f7ff fa67 	bl	1dec <vRunTimeStatIsrEntry>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/lpc_peripherals.c:115

  /* Get the IRQ number we are in.  Note that ICSR's real ISR bits are offset
   * by 16. We can read ICSR register too, but let's just read 8-bits directly.
   */
  const uint8_t isr_num =
      (*((uint8_t *)0xE000ED04)) - 16; // (SCB->ICSR & 0xFF) - 16;
    291e:	4b08      	ldr	r3, [pc, #32]	; (2940 <lpc_peripheral__interrupt_dispatcher+0x28>)
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/lpc_peripherals.c:119

  /* Lookup the function pointer we want to call and make the call */
  function__void_f isr_to_service = lpc_peripheral__isr_registrations[isr_num];
  isr_to_service();
    2920:	4a08      	ldr	r2, [pc, #32]	; (2944 <lpc_peripheral__interrupt_dispatcher+0x2c>)
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/lpc_peripherals.c:114
  const uint8_t isr_num =
    2922:	781b      	ldrb	r3, [r3, #0]
    2924:	3b10      	subs	r3, #16
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/lpc_peripherals.c:118
  function__void_f isr_to_service = lpc_peripheral__isr_registrations[isr_num];
    2926:	b2db      	uxtb	r3, r3
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/lpc_peripherals.c:119
  isr_to_service();
    2928:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
    292c:	4798      	blx	r3
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/lpc_peripherals.c:123

  // http://www.keil.com/support/docs/3928.htm
  static volatile int memory_write_to_avoid_spurious_interrupt;
  memory_write_to_avoid_spurious_interrupt = 0;
    292e:	4b06      	ldr	r3, [pc, #24]	; (2948 <lpc_peripheral__interrupt_dispatcher+0x30>)
    2930:	2200      	movs	r2, #0
    2932:	601a      	str	r2, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/lpc_peripherals.c:124
  (void)memory_write_to_avoid_spurious_interrupt; // Avoid 'variable set but not
    2934:	681b      	ldr	r3, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/lpc_peripherals.c:128
                                                  // used' warning

  vRunTimeStatIsrExit();
}
    2936:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/lpc_peripherals.c:127
  vRunTimeStatIsrExit();
    293a:	f7ff ba6b 	b.w	1e14 <vRunTimeStatIsrExit>
    293e:	bf00      	nop
    2940:	e000ed04 	.word	0xe000ed04
    2944:	1000005c 	.word	0x1000005c
    2948:	100004a0 	.word	0x100004a0

0000294c <lpc_peripheral__turn_on_power_to>:
lpc_peripheral__turn_on_power_to():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/lpc_peripherals.c:131

void lpc_peripheral__turn_on_power_to(lpc_peripheral_e peripheral) {
  if (peripheral < sizeof(lpc_peripheral_pconp_bit_map)) {
    294c:	2824      	cmp	r0, #36	; 0x24
    294e:	d809      	bhi.n	2964 <lpc_peripheral__turn_on_power_to+0x18>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/lpc_peripherals.c:133
    const uint32_t power_on_bit =
        (uint32_t)lpc_peripheral_pconp_bit_map[peripheral];
    2950:	4b05      	ldr	r3, [pc, #20]	; (2968 <lpc_peripheral__turn_on_power_to+0x1c>)
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/lpc_peripherals.c:134
    LPC_SC->PCONP |= (UINT32_C(1) << power_on_bit);
    2952:	4a06      	ldr	r2, [pc, #24]	; (296c <lpc_peripheral__turn_on_power_to+0x20>)
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/lpc_peripherals.c:132
    const uint32_t power_on_bit =
    2954:	5c18      	ldrb	r0, [r3, r0]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/lpc_peripherals.c:134
    LPC_SC->PCONP |= (UINT32_C(1) << power_on_bit);
    2956:	f8d2 10c4 	ldr.w	r1, [r2, #196]	; 0xc4
    295a:	2301      	movs	r3, #1
    295c:	4083      	lsls	r3, r0
    295e:	430b      	orrs	r3, r1
    2960:	f8c2 30c4 	str.w	r3, [r2, #196]	; 0xc4
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/lpc_peripherals.c:136
  }
}
    2964:	4770      	bx	lr
    2966:	bf00      	nop
    2968:	0000b5d8 	.word	0x0000b5d8
    296c:	400fc000 	.word	0x400fc000

00002970 <lpc_peripheral__is_powered_on>:
lpc_peripheral__is_powered_on():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/lpc_peripherals.c:141

bool lpc_peripheral__is_powered_on(lpc_peripheral_e peripheral) {
  bool powered_on = false;

  if (peripheral < sizeof(lpc_peripheral_pconp_bit_map)) {
    2970:	2824      	cmp	r0, #36	; 0x24
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/lpc_peripherals.c:144
    const uint32_t power_on_bit =
        (uint32_t)lpc_peripheral_pconp_bit_map[peripheral];
    powered_on = 0 != (LPC_SC->PCONP & (UINT32_C(1) << power_on_bit));
    2972:	bf9f      	itttt	ls
    2974:	4b05      	ldrls	r3, [pc, #20]	; (298c <lpc_peripheral__is_powered_on+0x1c>)
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/lpc_peripherals.c:143
        (uint32_t)lpc_peripheral_pconp_bit_map[peripheral];
    2976:	4a06      	ldrls	r2, [pc, #24]	; (2990 <lpc_peripheral__is_powered_on+0x20>)
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/lpc_peripherals.c:144
    powered_on = 0 != (LPC_SC->PCONP & (UINT32_C(1) << power_on_bit));
    2978:	f8d3 30c4 	ldrls.w	r3, [r3, #196]	; 0xc4
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/lpc_peripherals.c:142
    const uint32_t power_on_bit =
    297c:	5c10      	ldrbls	r0, [r2, r0]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/lpc_peripherals.c:144
    powered_on = 0 != (LPC_SC->PCONP & (UINT32_C(1) << power_on_bit));
    297e:	bf9a      	itte	ls
    2980:	fa23 f000 	lsrls.w	r0, r3, r0
    2984:	f000 0001 	andls.w	r0, r0, #1
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/lpc_peripherals.c:139
  bool powered_on = false;
    2988:	2000      	movhi	r0, #0
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/lpc_peripherals.c:148
  }

  return powered_on;
}
    298a:	4770      	bx	lr
    298c:	400fc000 	.word	0x400fc000
    2990:	0000b5d8 	.word	0x0000b5d8

00002994 <lpc_peripheral__enable_interrupt>:
lpc_peripheral__enable_interrupt():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/lpc_peripherals.c:152

void lpc_peripheral__enable_interrupt(lpc_peripheral_e peripheral,
                                      function__void_f isr_callback) {
  lpc_peripheral__isr_registrations[peripheral] = isr_callback;
    2994:	4b07      	ldr	r3, [pc, #28]	; (29b4 <lpc_peripheral__enable_interrupt+0x20>)
    2996:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/lpc_peripherals.c:171
   *
   * Unless you really know what you are doing, never call NVIC_SetPriority()
   * with a priority other than: NVIC_SetPriority(peripheral,
   * RTOS_HIGHEST_INTERRUPT_PRIORITY + 1);
   */
  const IRQn_Type irq_type = (IRQn_Type)peripheral;
    299a:	b243      	sxtb	r3, r0
__NVIC_EnableIRQ():
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\arm-software\cmsis\core/core_cm4.h:1681
  if ((int32_t)(IRQn) >= 0)
    299c:	2b00      	cmp	r3, #0
    299e:	db08      	blt.n	29b2 <lpc_peripheral__enable_interrupt+0x1e>
C:\road_max_fury/lpc40xx_freertos\l0_lowlevel\arm-software\cmsis\core/core_cm4.h:1684
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    29a0:	2201      	movs	r2, #1
    29a2:	f000 001f 	and.w	r0, r0, #31
    29a6:	fa02 f000 	lsl.w	r0, r2, r0
    29aa:	095b      	lsrs	r3, r3, #5
    29ac:	4a02      	ldr	r2, [pc, #8]	; (29b8 <lpc_peripheral__enable_interrupt+0x24>)
    29ae:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
lpc_peripheral__enable_interrupt():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/lpc_peripherals.c:173
  NVIC_EnableIRQ(irq_type); // Use CMS API
}
    29b2:	4770      	bx	lr
    29b4:	1000005c 	.word	0x1000005c
    29b8:	e000e100 	.word	0xe000e100

000029bc <ssp2__dma_transfer_block>:
ssp2__dma_transfer_block():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:123
  // (uint32_t)(&(LPC_SSP2->DR)); ssp2__dma_rx->CSrcAddr =
  // (uint32_t)(&(LPC_SSP2->DR));
}

ssp_dma_error_e ssp2__dma_transfer_block(unsigned char *buffer_pointer,
                                         uint32_t num_bytes, bool is_write_op) {
    29bc:	b573      	push	{r0, r1, r4, r5, r6, lr}
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:124
  uint32_t dummyBuffer = 0xffffffff;
    29be:	f04f 33ff 	mov.w	r3, #4294967295
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:127

  // DMA is limited to 12-bit transfer size
  if (num_bytes >= 0x1000) {
    29c2:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:124
  uint32_t dummyBuffer = 0xffffffff;
    29c6:	9301      	str	r3, [sp, #4]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:127
  if (num_bytes >= 0x1000) {
    29c8:	d236      	bcs.n	2a38 <ssp2__dma_transfer_block+0x7c>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:132
    return SSP_DMA__ERROR_LENGTH;
  }

  // DMA channels should not be busy
  if ((ssp2__dma_tx->CConfig & 1) || (ssp2__dma_rx->CConfig & 1)) {
    29ca:	4c1d      	ldr	r4, [pc, #116]	; (2a40 <ssp2__dma_transfer_block+0x84>)
    29cc:	6923      	ldr	r3, [r4, #16]
    29ce:	07de      	lsls	r6, r3, #31
    29d0:	d434      	bmi.n	2a3c <ssp2__dma_transfer_block+0x80>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:132 (discriminator 1)
    29d2:	4b1c      	ldr	r3, [pc, #112]	; (2a44 <ssp2__dma_transfer_block+0x88>)
    29d4:	691d      	ldr	r5, [r3, #16]
    29d6:	07ed      	lsls	r5, r5, #31
    29d8:	d430      	bmi.n	2a3c <ssp2__dma_transfer_block+0x80>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:182

  /**
   * Clear existing terminal count and error interrupts otherwise
   * DMA will not start.
   */
  LPC_GPDMA->IntTCClear =
    29da:	4d1b      	ldr	r5, [pc, #108]	; (2a48 <ssp2__dma_transfer_block+0x8c>)
    29dc:	2603      	movs	r6, #3
    29de:	60ae      	str	r6, [r5, #8]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:184
      (1 << SSP2__DMA_RX_CHANNEL) | (1 << SSP2__DMA_TX_CHANNEL);
  LPC_GPDMA->IntErrClr =
    29e0:	612e      	str	r6, [r5, #16]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:199
   *      - Increment destination
   *
   * Note: Setting destination burst of 2 or 4 bytes makes no difference (1 <<
   * 15)
   */
  ssp2__dma_rx->CSrcAddr = (uint32_t)(&(LPC_SSP2->DR));
    29e2:	4d1a      	ldr	r5, [pc, #104]	; (2a4c <ssp2__dma_transfer_block+0x90>)
    29e4:	601d      	str	r5, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:200
  if (is_write_op) {
    29e6:	b302      	cbz	r2, 2a2a <ssp2__dma_transfer_block+0x6e>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:201
    ssp2__dma_rx->CDestAddr = (uint32_t)(&dummyBuffer);
    29e8:	ae01      	add	r6, sp, #4
    29ea:	605e      	str	r6, [r3, #4]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:202
    ssp2__dma_rx->CControl = num_bytes | terminal_count_interrupt_enable;
    29ec:	f041 4600 	orr.w	r6, r1, #2147483648	; 0x80000000
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:205
  } else {
    ssp2__dma_rx->CDestAddr = (uint32_t)buffer_pointer;
    ssp2__dma_rx->CControl = num_bytes | increment_destination_address |
    29f0:	60de      	str	r6, [r3, #12]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:208
                             terminal_count_interrupt_enable;
  }
  ssp2__dma_rx->CConfig =
    29f2:	f241 060f 	movw	r6, #4111	; 0x100f
    29f6:	611e      	str	r6, [r3, #16]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:220
   *      - Increment source data
   * For read operation:
   *      - Source data is buffer with 0xFF
   *      - Don't increment source data
   */
  if (is_write_op) {
    29f8:	b1da      	cbz	r2, 2a32 <ssp2__dma_transfer_block+0x76>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:221
    ssp2__dma_tx->CSrcAddr = (uint32_t)(buffer_pointer);
    29fa:	6020      	str	r0, [r4, #0]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:222
    ssp2__dma_tx->CControl = num_bytes | increment_source_address;
    29fc:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:228
  } else {
    ssp2__dma_tx->CSrcAddr = (uint32_t)(&dummyBuffer);
    ssp2__dma_tx->CControl = num_bytes;
  }
  ssp2__dma_tx->CDestAddr = (uint32_t)(&(LPC_SSP2->DR));
  ssp2__dma_tx->CConfig =
    2a00:	f640 1281 	movw	r2, #2433	; 0x981
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:225
    ssp2__dma_tx->CControl = num_bytes;
    2a04:	60e1      	str	r1, [r4, #12]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:227
  ssp2__dma_tx->CDestAddr = (uint32_t)(&(LPC_SSP2->DR));
    2a06:	6065      	str	r5, [r4, #4]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:228
  ssp2__dma_tx->CConfig =
    2a08:	6122      	str	r2, [r4, #16]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:236
  /**
   * Channel must be fully configured and then enabled separately.
   * Setting DMACR's Rx/Tx bits should trigger the DMA
   */
  static const uint32_t enable_rx_tx_dma_triggers = 0x03;
  LPC_SSP2->DMACR |= enable_rx_tx_dma_triggers;
    2a0a:	4a11      	ldr	r2, [pc, #68]	; (2a50 <ssp2__dma_transfer_block+0x94>)
    2a0c:	6a51      	ldr	r1, [r2, #36]	; 0x24
    2a0e:	f041 0103 	orr.w	r1, r1, #3
    2a12:	6251      	str	r1, [r2, #36]	; 0x24
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:238 (discriminator 1)

  while ((ssp2__dma_rx->CControl & 0xfff)) {
    2a14:	68d8      	ldr	r0, [r3, #12]
    2a16:	f3c0 000b 	ubfx	r0, r0, #0, #12
    2a1a:	2800      	cmp	r0, #0
    2a1c:	d1fa      	bne.n	2a14 <ssp2__dma_transfer_block+0x58>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:241
    ; // Poll for DMA transfer to complete
  }
  LPC_SSP2->DMACR &= ~enable_rx_tx_dma_triggers;
    2a1e:	6a53      	ldr	r3, [r2, #36]	; 0x24
    2a20:	f023 0303 	bic.w	r3, r3, #3
    2a24:	6253      	str	r3, [r2, #36]	; 0x24
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:244

  return SSP_DMA__ERROR_NONE;
    2a26:	b002      	add	sp, #8
    2a28:	bd70      	pop	{r4, r5, r6, pc}
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:204
    ssp2__dma_rx->CDestAddr = (uint32_t)buffer_pointer;
    2a2a:	6058      	str	r0, [r3, #4]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:205
    ssp2__dma_rx->CControl = num_bytes | increment_destination_address |
    2a2c:	f041 4608 	orr.w	r6, r1, #2281701376	; 0x88000000
    2a30:	e7de      	b.n	29f0 <ssp2__dma_transfer_block+0x34>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:224
    ssp2__dma_tx->CSrcAddr = (uint32_t)(&dummyBuffer);
    2a32:	aa01      	add	r2, sp, #4
    2a34:	6022      	str	r2, [r4, #0]
    2a36:	e7e3      	b.n	2a00 <ssp2__dma_transfer_block+0x44>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:128
    return SSP_DMA__ERROR_LENGTH;
    2a38:	2001      	movs	r0, #1
    2a3a:	e7f4      	b.n	2a26 <ssp2__dma_transfer_block+0x6a>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:133
    return SSP_DMA__ERROR_BUSY;
    2a3c:	2002      	movs	r0, #2
    2a3e:	e7f2      	b.n	2a26 <ssp2__dma_transfer_block+0x6a>
    2a40:	20080100 	.word	0x20080100
    2a44:	20080120 	.word	0x20080120
    2a48:	20080000 	.word	0x20080000
    2a4c:	400ac008 	.word	0x400ac008
    2a50:	400ac000 	.word	0x400ac000

00002a54 <ssp2__set_max_clock>:
ssp2__set_max_clock():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:69
void ssp2__set_max_clock(uint32_t max_clock_khz) {
    2a54:	b510      	push	{r4, lr}
    2a56:	4604      	mov	r4, r0
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:71
  const uint32_t cpu_clock_khz = clock__get_core_clock_hz() / 1000UL;
    2a58:	f7fd fbe0 	bl	21c <clock__get_core_clock_hz>
    2a5c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
    2a60:	fbb0 f0f3 	udiv	r0, r0, r3
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:70
  uint8_t divider = 2;
    2a64:	2302      	movs	r3, #2
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:74
  while (max_clock_khz < (cpu_clock_khz / divider) && divider <= 254) {
    2a66:	fbb0 f2f3 	udiv	r2, r0, r3
    2a6a:	42a2      	cmp	r2, r4
    2a6c:	d802      	bhi.n	2a74 <ssp2__set_max_clock+0x20>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:78
  LPC_SSP2->CPSR = divider;
    2a6e:	4a03      	ldr	r2, [pc, #12]	; (2a7c <ssp2__set_max_clock+0x28>)
    2a70:	6113      	str	r3, [r2, #16]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:79
}
    2a72:	bd10      	pop	{r4, pc}
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:75
    divider += 2;
    2a74:	3302      	adds	r3, #2
    2a76:	b2db      	uxtb	r3, r3
    2a78:	e7f5      	b.n	2a66 <ssp2__set_max_clock+0x12>
    2a7a:	bf00      	nop
    2a7c:	400ac000 	.word	0x400ac000

00002a80 <ssp2__initialize>:
ssp2__initialize():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:59
void ssp2__initialize(uint32_t max_clock_khz) {
    2a80:	b510      	push	{r4, lr}
    2a82:	4604      	mov	r4, r0
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:60
  lpc_peripheral__turn_on_power_to(LPC_PERIPHERAL__SSP2);
    2a84:	2024      	movs	r0, #36	; 0x24
    2a86:	f7ff ff61 	bl	294c <lpc_peripheral__turn_on_power_to>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:62
  LPC_SSP2->CR0 = 7;        // 8-bit mode
    2a8a:	4b0b      	ldr	r3, [pc, #44]	; (2ab8 <ssp2__initialize+0x38>)
    2a8c:	2207      	movs	r2, #7
    2a8e:	601a      	str	r2, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:63
  LPC_SSP2->CR1 = (1 << 1); // Enable SSP as Master
    2a90:	2202      	movs	r2, #2
    2a92:	605a      	str	r2, [r3, #4]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:64
  ssp2__set_max_clock(max_clock_khz);
    2a94:	4620      	mov	r0, r4
    2a96:	f7ff ffdd 	bl	2a54 <ssp2__set_max_clock>
ssp2__dma_init():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:104
  lpc_peripheral__turn_on_power_to(LPC_PERIPHERAL__GPDMA);
    2a9a:	201a      	movs	r0, #26
    2a9c:	f7ff ff56 	bl	294c <lpc_peripheral__turn_on_power_to>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:107
  LPC_GPDMA->Config = enable_bitmask;
    2aa0:	4b06      	ldr	r3, [pc, #24]	; (2abc <ssp2__initialize+0x3c>)
    2aa2:	2201      	movs	r2, #1
    2aa4:	631a      	str	r2, [r3, #48]	; 0x30
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:108
  while (!(LPC_GPDMA->Config & enable_bitmask)) {
    2aa6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
    2aa8:	07d2      	lsls	r2, r2, #31
    2aaa:	d5fc      	bpl.n	2aa6 <ssp2__initialize+0x26>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:113
  ssp2__dma_rx->CLLI = 0;
    2aac:	4a04      	ldr	r2, [pc, #16]	; (2ac0 <ssp2__initialize+0x40>)
    2aae:	2300      	movs	r3, #0
    2ab0:	6093      	str	r3, [r2, #8]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:114
  ssp2__dma_tx->CLLI = 0;
    2ab2:	f842 3c18 	str.w	r3, [r2, #-24]
ssp2__initialize():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:67
}
    2ab6:	bd10      	pop	{r4, pc}
    2ab8:	400ac000 	.word	0x400ac000
    2abc:	20080000 	.word	0x20080000
    2ac0:	20080120 	.word	0x20080120

00002ac4 <ssp2__exchange_byte>:
ssp2__exchange_byte():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:82
  LPC_SSP2->DR = byte_to_transmit;
    2ac4:	4b03      	ldr	r3, [pc, #12]	; (2ad4 <ssp2__exchange_byte+0x10>)
    2ac6:	6098      	str	r0, [r3, #8]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:84 (discriminator 1)
  while (LPC_SSP2->SR & (1 << 4)) {
    2ac8:	68da      	ldr	r2, [r3, #12]
    2aca:	06d2      	lsls	r2, r2, #27
    2acc:	d4fc      	bmi.n	2ac8 <ssp2__exchange_byte+0x4>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:88
  return (uint8_t)(LPC_SSP2->DR & 0xFF);
    2ace:	6898      	ldr	r0, [r3, #8]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:89
}
    2ad0:	b2c0      	uxtb	r0, r0
    2ad2:	4770      	bx	lr
    2ad4:	400ac000 	.word	0x400ac000

00002ad8 <ssp2__dma_write_block>:
ssp2__dma_write_block():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:94
  ssp2__dma_transfer_block((unsigned char *)output_block, number_of_bytes,
    2ad8:	2201      	movs	r2, #1
    2ada:	f7ff bf6f 	b.w	29bc <ssp2__dma_transfer_block>

00002ade <ssp2__dma_read_block>:
ssp2__dma_read_block():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/ssp2.c:100
  ssp2__dma_transfer_block(input_block, number_of_bytes, !is_write_operation);
    2ade:	2200      	movs	r2, #0
    2ae0:	f7ff bf6c 	b.w	29bc <ssp2__dma_transfer_block>

00002ae4 <uart__isr_common>:
uart__isr_common():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:157
    receive_data_available = (2 << 0),
    receive_data_available_timeout = (6 << 0),
  } interrupt_reason_e;

  const interrupt_reason_e interrupt_reason =
      (interrupt_reason_e)((uart_type->registers->IIR & 0xE) >> 1);
    2ae4:	6802      	ldr	r2, [r0, #0]
    2ae6:	6893      	ldr	r3, [r2, #8]
    2ae8:	f3c3 0342 	ubfx	r3, r3, #1, #3
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:159

  switch (interrupt_reason) {
    2aec:	2b02      	cmp	r3, #2
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:146
static void uart__isr_common(uart_s *uart_type) {
    2aee:	b573      	push	{r0, r1, r4, r5, r6, lr}
    2af0:	4606      	mov	r6, r0
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:159
  switch (interrupt_reason) {
    2af2:	d023      	beq.n	2b3c <uart__isr_common+0x58>
    2af4:	2b06      	cmp	r3, #6
    2af6:	d021      	beq.n	2b3c <uart__isr_common+0x58>
    2af8:	2b01      	cmp	r3, #1
    2afa:	d134      	bne.n	2b66 <uart__isr_common+0x82>
uart__load_pending_transmit_bytes():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:83
  char transmit_byte = 0;
    2afc:	2400      	movs	r4, #0
    2afe:	f88d 4003 	strb.w	r4, [sp, #3]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:85
  BaseType_t higher_priority_task_woke = 0;
    2b02:	9401      	str	r4, [sp, #4]
    2b04:	2510      	movs	r5, #16
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:88
    if (xQueueReceiveFromISR(uart_type->queue_transmit, &transmit_byte,
    2b06:	aa01      	add	r2, sp, #4
    2b08:	f10d 0103 	add.w	r1, sp, #3
    2b0c:	6870      	ldr	r0, [r6, #4]
    2b0e:	f7fe fab7 	bl	1080 <xQueueReceiveFromISR>
    2b12:	b148      	cbz	r0, 2b28 <uart__isr_common+0x44>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:90
      uart_type->registers->THR = transmit_byte;
    2b14:	6833      	ldr	r3, [r6, #0]
    2b16:	f89d 2003 	ldrb.w	r2, [sp, #3]
    2b1a:	701a      	strb	r2, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:91
      if (higher_priority_task_woke) {
    2b1c:	9b01      	ldr	r3, [sp, #4]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:92
        context_switch_required = true;
    2b1e:	2b00      	cmp	r3, #0
    2b20:	bf18      	it	ne
    2b22:	2401      	movne	r4, #1
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:87
  for (size_t counter = 0; counter < hw_fifo_size; counter++) {
    2b24:	3d01      	subs	r5, #1
    2b26:	d1ee      	bne.n	2b06 <uart__isr_common+0x22>
uart__isr_common():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:176
    (void)unused_to_clear_isr;
    break;
  }
  }

  portEND_SWITCHING_ISR(context_switch_required);
    2b28:	b30c      	cbz	r4, 2b6e <uart__isr_common+0x8a>
    2b2a:	4b12      	ldr	r3, [pc, #72]	; (2b74 <uart__isr_common+0x90>)
    2b2c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    2b30:	601a      	str	r2, [r3, #0]
    2b32:	f3bf 8f4f 	dsb	sy
    2b36:	f3bf 8f6f 	isb	sy
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:177
}
    2b3a:	e018      	b.n	2b6e <uart__isr_common+0x8a>
uart__clear_receive_fifo():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:106
  BaseType_t higher_priority_task_woke = 0;
    2b3c:	2400      	movs	r4, #0
    2b3e:	9401      	str	r4, [sp, #4]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:113
  while (uart_type->registers->LSR & char_available_bitmask) {
    2b40:	6833      	ldr	r3, [r6, #0]
    2b42:	7d1a      	ldrb	r2, [r3, #20]
    2b44:	07d2      	lsls	r2, r2, #31
    2b46:	d5ef      	bpl.n	2b28 <uart__isr_common+0x44>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:114
    const char received_byte = uart_type->registers->RBR;
    2b48:	781b      	ldrb	r3, [r3, #0]
    2b4a:	f88d 3003 	strb.w	r3, [sp, #3]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:115
    xQueueSendFromISR(uart_type->queue_receive, &received_byte,
    2b4e:	aa01      	add	r2, sp, #4
    2b50:	2300      	movs	r3, #0
    2b52:	f10d 0103 	add.w	r1, sp, #3
    2b56:	68b0      	ldr	r0, [r6, #8]
    2b58:	f7fe f884 	bl	c64 <xQueueGenericSendFromISR>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:118
    if (higher_priority_task_woke) {
    2b5c:	9b01      	ldr	r3, [sp, #4]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:119
      context_switch_required = true;
    2b5e:	2b00      	cmp	r3, #0
    2b60:	bf18      	it	ne
    2b62:	2401      	movne	r4, #1
    2b64:	e7ec      	b.n	2b40 <uart__isr_common+0x5c>
uart__isr_common():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:170
    volatile const uint32_t unused_to_clear_isr = uart_type->registers->LSR;
    2b66:	7d13      	ldrb	r3, [r2, #20]
    2b68:	b2db      	uxtb	r3, r3
    2b6a:	9301      	str	r3, [sp, #4]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:171
    (void)unused_to_clear_isr;
    2b6c:	9b01      	ldr	r3, [sp, #4]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:177
}
    2b6e:	b002      	add	sp, #8
    2b70:	bd70      	pop	{r4, r5, r6, pc}
    2b72:	bf00      	nop
    2b74:	e000ed04 	.word	0xe000ed04

00002b78 <uart3_isr>:
uart3_isr():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:144
static void uart3_isr(void) { uart__isr_common(&uarts[UART__3]); }
    2b78:	4801      	ldr	r0, [pc, #4]	; (2b80 <uart3_isr+0x8>)
    2b7a:	f7ff bfb3 	b.w	2ae4 <uart__isr_common>
    2b7e:	bf00      	nop
    2b80:	10000124 	.word	0x10000124

00002b84 <uart2_isr>:
uart2_isr():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:143
static void uart2_isr(void) { uart__isr_common(&uarts[UART__2]); }
    2b84:	4801      	ldr	r0, [pc, #4]	; (2b8c <uart2_isr+0x8>)
    2b86:	f7ff bfad 	b.w	2ae4 <uart__isr_common>
    2b8a:	bf00      	nop
    2b8c:	10000118 	.word	0x10000118

00002b90 <uart1_isr>:
uart1_isr():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:142
static void uart1_isr(void) { uart__isr_common(&uarts[UART__1]); }
    2b90:	4801      	ldr	r0, [pc, #4]	; (2b98 <uart1_isr+0x8>)
    2b92:	f7ff bfa7 	b.w	2ae4 <uart__isr_common>
    2b96:	bf00      	nop
    2b98:	1000010c 	.word	0x1000010c

00002b9c <uart0_isr>:
uart0_isr():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:141
static void uart0_isr(void) { uart__isr_common(&uarts[UART__0]); }
    2b9c:	4801      	ldr	r0, [pc, #4]	; (2ba4 <uart0_isr+0x8>)
    2b9e:	f7ff bfa1 	b.w	2ae4 <uart__isr_common>
    2ba2:	bf00      	nop
    2ba4:	10000100 	.word	0x10000100

00002ba8 <uart__init>:
uart__init():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:186
 *                      P U B L I C    F U N C T I O N S
 *
 ******************************************************************************/

void uart__init(uart_e uart, uint32_t peripheral_clock, uint32_t baud_rate) {
  lpc_peripheral__turn_on_power_to(uart_peripheral_ids[uart]);
    2ba8:	4b13      	ldr	r3, [pc, #76]	; (2bf8 <uart__init+0x50>)
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:185
void uart__init(uart_e uart, uint32_t peripheral_clock, uint32_t baud_rate) {
    2baa:	b570      	push	{r4, r5, r6, lr}
    2bac:	4615      	mov	r5, r2
    2bae:	4606      	mov	r6, r0
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:186
  lpc_peripheral__turn_on_power_to(uart_peripheral_ids[uart]);
    2bb0:	5c18      	ldrb	r0, [r3, r0]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:185
void uart__init(uart_e uart, uint32_t peripheral_clock, uint32_t baud_rate) {
    2bb2:	460c      	mov	r4, r1
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:190

  const float roundup_offset = 0.5;
  const uint16_t divider =
      (uint16_t)((peripheral_clock / (16 * baud_rate)) + roundup_offset);
    2bb4:	012d      	lsls	r5, r5, #4
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:186
  lpc_peripheral__turn_on_power_to(uart_peripheral_ids[uart]);
    2bb6:	f7ff fec9 	bl	294c <lpc_peripheral__turn_on_power_to>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:190
      (uint16_t)((peripheral_clock / (16 * baud_rate)) + roundup_offset);
    2bba:	fbb4 f3f5 	udiv	r3, r4, r5
    2bbe:	ee07 3a90 	vmov	s15, r3
    2bc2:	eef8 7a67 	vcvt.f32.u32	s15, s15
    2bc6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
    2bca:	ee77 7a87 	vadd.f32	s15, s15, s14
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:198

  // 2-stop bits helps improve baud rate error; you can remove this if bandwidth
  // is critical to you
  const uint8_t stop_bits_is_2 = (1 << 2);

  lpc_uart *uart_regs = uarts[uart].registers;
    2bce:	200c      	movs	r0, #12
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:189
  const uint16_t divider =
    2bd0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:198
  lpc_uart *uart_regs = uarts[uart].registers;
    2bd4:	4370      	muls	r0, r6
    2bd6:	4a09      	ldr	r2, [pc, #36]	; (2bfc <uart__init+0x54>)
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:189
  const uint16_t divider =
    2bd8:	ee17 3a90 	vmov	r3, s15
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:198
  lpc_uart *uart_regs = uarts[uart].registers;
    2bdc:	5812      	ldr	r2, [r2, r0]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:189
  const uint16_t divider =
    2bde:	b29b      	uxth	r3, r3
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:200

  uart_regs->LCR = dlab_bit; // Set DLAB bit to access DLM & DLL
    2be0:	2180      	movs	r1, #128	; 0x80
    2be2:	7311      	strb	r1, [r2, #12]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:201
  uart_regs->DLM = (divider >> 8) & 0xFF;
    2be4:	0a19      	lsrs	r1, r3, #8
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:202
  uart_regs->DLL = (divider >> 0) & 0xFF;
    2be6:	b2db      	uxtb	r3, r3
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:201
  uart_regs->DLM = (divider >> 8) & 0xFF;
    2be8:	7111      	strb	r1, [r2, #4]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:202
  uart_regs->DLL = (divider >> 0) & 0xFF;
    2bea:	7013      	strb	r3, [r2, #0]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:208

  /* Bootloader uses Uart0 fractional dividers and can wreck havoc in our baud
   * rate code, so re-initialize it Lesson learned: DO NOT RELY ON RESET VALUES
   */
  const uint32_t default_reset_fdr_value = (1 << 4);
  uart_regs->FDR = default_reset_fdr_value;
    2bec:	2310      	movs	r3, #16
    2bee:	f882 3028 	strb.w	r3, [r2, #40]	; 0x28
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:209
  uart_regs->LCR =
    2bf2:	2307      	movs	r3, #7
    2bf4:	7313      	strb	r3, [r2, #12]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:211
      eight_bit_datalen | stop_bits_is_2; // DLAB is reset back to zero also
}
    2bf6:	bd70      	pop	{r4, r5, r6, pc}
    2bf8:	0000b610 	.word	0x0000b610
    2bfc:	10000100 	.word	0x10000100

00002c00 <uart__is_initialized>:
uart__is_initialized():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:214

bool uart__is_initialized(uart_e uart) {
  return lpc_peripheral__is_powered_on(uart_peripheral_ids[uart]) &&
    2c00:	4b07      	ldr	r3, [pc, #28]	; (2c20 <uart__is_initialized+0x20>)
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:213
bool uart__is_initialized(uart_e uart) {
    2c02:	b510      	push	{r4, lr}
    2c04:	4604      	mov	r4, r0
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:214
  return lpc_peripheral__is_powered_on(uart_peripheral_ids[uart]) &&
    2c06:	5c18      	ldrb	r0, [r3, r0]
    2c08:	f7ff feb2 	bl	2970 <lpc_peripheral__is_powered_on>
    2c0c:	b138      	cbz	r0, 2c1e <uart__is_initialized+0x1e>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:215 (discriminator 1)
         (0 != uarts[uart].registers->LCR);
    2c0e:	200c      	movs	r0, #12
    2c10:	4360      	muls	r0, r4
    2c12:	4b04      	ldr	r3, [pc, #16]	; (2c24 <uart__is_initialized+0x24>)
    2c14:	581b      	ldr	r3, [r3, r0]
    2c16:	7b18      	ldrb	r0, [r3, #12]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:214 (discriminator 1)
  return lpc_peripheral__is_powered_on(uart_peripheral_ids[uart]) &&
    2c18:	3000      	adds	r0, #0
    2c1a:	bf18      	it	ne
    2c1c:	2001      	movne	r0, #1
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:216 (discriminator 6)
}
    2c1e:	bd10      	pop	{r4, pc}
    2c20:	0000b610 	.word	0x0000b610
    2c24:	10000100 	.word	0x10000100

00002c28 <uart__is_transmit_queue_initialized>:
uart__is_transmit_queue_enabled():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:71
  return (NULL != uarts[uart].queue_transmit);
    2c28:	4a04      	ldr	r2, [pc, #16]	; (2c3c <uart__is_transmit_queue_initialized+0x14>)
    2c2a:	230c      	movs	r3, #12
    2c2c:	fb03 2000 	mla	r0, r3, r0, r2
    2c30:	6840      	ldr	r0, [r0, #4]
uart__is_transmit_queue_initialized():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:220

bool uart__is_transmit_queue_initialized(uart_e uart) {
  return uart__is_transmit_queue_enabled(uart);
}
    2c32:	3000      	adds	r0, #0
    2c34:	bf18      	it	ne
    2c36:	2001      	movne	r0, #1
    2c38:	4770      	bx	lr
    2c3a:	bf00      	nop
    2c3c:	10000100 	.word	0x10000100

00002c40 <uart__enable_queues>:
uart__enable_queues():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:223

bool uart__enable_queues(uart_e uart, QueueHandle_t queue_receive,
                         QueueHandle_t queue_transmit) {
    2c40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    2c44:	4605      	mov	r5, r0
    2c46:	4688      	mov	r8, r1
    2c48:	4616      	mov	r6, r2
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:228
  bool status = false;
  uart_s *uart_type = &uarts[uart];

  // We can only access UART registers after its power has been enabled
  if (uart__is_initialized(uart)) {
    2c4a:	f7ff ffd9 	bl	2c00 <uart__is_initialized>
    2c4e:	4607      	mov	r7, r0
    2c50:	b918      	cbnz	r0, 2c5a <uart__enable_queues+0x1a>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:224
  bool status = false;
    2c52:	2700      	movs	r7, #0
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:249
      uart__enable_receive_and_transmit_interrupts(uart);
    }
  }

  return status;
}
    2c54:	4638      	mov	r0, r7
    2c56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
uart__is_receive_queue_enabled():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:68
  return (NULL != uarts[uart].queue_receive);
    2c5a:	4c15      	ldr	r4, [pc, #84]	; (2cb0 <uart__enable_queues+0x70>)
    2c5c:	230c      	movs	r3, #12
    2c5e:	fb03 4305 	mla	r3, r3, r5, r4
uart__enable_queues():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:230
    if (!uart__is_receive_queue_enabled(uart) && NULL != queue_receive) {
    2c62:	689a      	ldr	r2, [r3, #8]
    2c64:	b922      	cbnz	r2, 2c70 <uart__enable_queues+0x30>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:230 (discriminator 1)
    2c66:	f1b8 0f00 	cmp.w	r8, #0
    2c6a:	d001      	beq.n	2c70 <uart__enable_queues+0x30>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:231
      uart_type->queue_receive = queue_receive;
    2c6c:	f8c3 8008 	str.w	r8, [r3, #8]
uart__is_transmit_queue_enabled():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:71
  return (NULL != uarts[uart].queue_transmit);
    2c70:	230c      	movs	r3, #12
    2c72:	fb03 4305 	mla	r3, r3, r5, r4
uart__enable_queues():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:235
    if (!uart__is_transmit_queue_enabled(uart) && NULL != queue_transmit) {
    2c76:	685a      	ldr	r2, [r3, #4]
    2c78:	b90a      	cbnz	r2, 2c7e <uart__enable_queues+0x3e>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:235 (discriminator 1)
    2c7a:	b106      	cbz	r6, 2c7e <uart__enable_queues+0x3e>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:236
      uart_type->queue_transmit = queue_transmit;
    2c7c:	605e      	str	r6, [r3, #4]
uart__is_receive_queue_enabled():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:68
  return (NULL != uarts[uart].queue_receive);
    2c7e:	260c      	movs	r6, #12
    2c80:	436e      	muls	r6, r5
    2c82:	19a3      	adds	r3, r4, r6
uart__enable_queues():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:241
    status = uart__is_receive_queue_enabled(uart) &&
    2c84:	689a      	ldr	r2, [r3, #8]
    2c86:	2a00      	cmp	r2, #0
    2c88:	d0e3      	beq.n	2c52 <uart__enable_queues+0x12>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:243
    if (status) {
    2c8a:	685b      	ldr	r3, [r3, #4]
    2c8c:	2b00      	cmp	r3, #0
    2c8e:	d0e0      	beq.n	2c52 <uart__enable_queues+0x12>
uart__enable_receive_and_transmit_interrupts():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:128
  lpc_peripheral__enable_interrupt(uart_peripheral_ids[uart], uart__isrs[uart]);
    2c90:	4b08      	ldr	r3, [pc, #32]	; (2cb4 <uart__enable_queues+0x74>)
    2c92:	f853 1025 	ldr.w	r1, [r3, r5, lsl #2]
    2c96:	4b08      	ldr	r3, [pc, #32]	; (2cb8 <uart__enable_queues+0x78>)
    2c98:	5d58      	ldrb	r0, [r3, r5]
    2c9a:	f7ff fe7b 	bl	2994 <lpc_peripheral__enable_interrupt>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:133
  uart_type->registers->FCR = enable_rx_tx_fifo;
    2c9e:	59a3      	ldr	r3, [r4, r6]
    2ca0:	2241      	movs	r2, #65	; 0x41
    2ca2:	721a      	strb	r2, [r3, #8]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:134
  uart_type->registers->FCR = reset_rx_tx_fifo;
    2ca4:	2206      	movs	r2, #6
    2ca6:	721a      	strb	r2, [r3, #8]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:138
  uart_type->registers->IER = enable_rx_tx_interrupts;
    2ca8:	2207      	movs	r2, #7
    2caa:	605a      	str	r2, [r3, #4]
    2cac:	e7d2      	b.n	2c54 <uart__enable_queues+0x14>
    2cae:	bf00      	nop
    2cb0:	10000100 	.word	0x10000100
    2cb4:	0000b600 	.word	0x0000b600
    2cb8:	0000b610 	.word	0x0000b610

00002cbc <uart__polled_put>:
uart__polled_put():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:282
  }

  return status;
}

bool uart__polled_put(uart_e uart, char output_byte) {
    2cbc:	b538      	push	{r3, r4, r5, lr}
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:284
  bool status = false;
  lpc_uart *uart_regs = uarts[uart].registers;
    2cbe:	230c      	movs	r3, #12
    2cc0:	4343      	muls	r3, r0
    2cc2:	4a07      	ldr	r2, [pc, #28]	; (2ce0 <uart__polled_put+0x24>)
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:282
bool uart__polled_put(uart_e uart, char output_byte) {
    2cc4:	460d      	mov	r5, r1
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:284
  lpc_uart *uart_regs = uarts[uart].registers;
    2cc6:	58d4      	ldr	r4, [r2, r3]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:286

  if (uart__is_initialized(uart)) {
    2cc8:	f7ff ff9a 	bl	2c00 <uart__is_initialized>
    2ccc:	b130      	cbz	r0, 2cdc <uart__polled_put+0x20>
uart__wait_for_transmit_to_complete():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:76
  while (!(uart_regs->LSR & transmitter_empty)) {
    2cce:	7d23      	ldrb	r3, [r4, #20]
    2cd0:	069a      	lsls	r2, r3, #26
    2cd2:	d5fc      	bpl.n	2cce <uart__polled_put+0x12>
uart__polled_put():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:291
    status = true;

    // Wait for any prior transmission to complete
    uart__wait_for_transmit_to_complete(uart_regs);
    uart_regs->THR = output_byte;
    2cd4:	7025      	strb	r5, [r4, #0]
uart__wait_for_transmit_to_complete():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:76
  while (!(uart_regs->LSR & transmitter_empty)) {
    2cd6:	7d23      	ldrb	r3, [r4, #20]
    2cd8:	069b      	lsls	r3, r3, #26
    2cda:	d5fc      	bpl.n	2cd6 <uart__polled_put+0x1a>
uart__polled_put():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:296
    uart__wait_for_transmit_to_complete(uart_regs);
  }

  return status;
}
    2cdc:	bd38      	pop	{r3, r4, r5, pc}
    2cde:	bf00      	nop
    2ce0:	10000100 	.word	0x10000100

00002ce4 <uart__get>:
uart__get():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:298

bool uart__get(uart_e uart, char *input_byte, uint32_t timeout_ms) {
    2ce4:	b570      	push	{r4, r5, r6, lr}
    2ce6:	4604      	mov	r4, r0
    2ce8:	4615      	mov	r5, r2
    2cea:	460e      	mov	r6, r1
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:301
  bool status = false;
  const bool rtos_is_running =
      taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
    2cec:	f7fe ff34 	bl	1b58 <xTaskGetSchedulerState>
uart__is_receive_queue_enabled():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:68
  return (NULL != uarts[uart].queue_receive);
    2cf0:	4b0f      	ldr	r3, [pc, #60]	; (2d30 <uart__get+0x4c>)
    2cf2:	220c      	movs	r2, #12
    2cf4:	fb02 3404 	mla	r4, r2, r4, r3
    2cf8:	68a4      	ldr	r4, [r4, #8]
uart__get():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:307

  /* If a user calls this function without the RTOS running, we fail gracefully.
   * We do not desire to perform polling because that would involve time keeping
   * without an RTOS which increases the driver complexity.
   */
  if (uart__is_receive_queue_enabled(uart) && rtos_is_running) {
    2cfa:	b1b4      	cbz	r4, 2d2a <uart__get+0x46>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:307 (discriminator 1)
    2cfc:	2802      	cmp	r0, #2
    2cfe:	d114      	bne.n	2d2a <uart__get+0x46>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:308
    status = xQueueReceive(uarts[uart].queue_receive, input_byte,
    2d00:	1c6b      	adds	r3, r5, #1
    2d02:	d009      	beq.n	2d18 <uart__get+0x34>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:309 (discriminator 1)
                           RTOS_MS_TO_TICKS(timeout_ms));
    2d04:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
    2d08:	fba5 0100 	umull	r0, r1, r5, r0
    2d0c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
    2d10:	2300      	movs	r3, #0
    2d12:	f002 fa61 	bl	51d8 <__aeabi_uldivmod>
    2d16:	4605      	mov	r5, r0
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:308 (discriminator 4)
    status = xQueueReceive(uarts[uart].queue_receive, input_byte,
    2d18:	462a      	mov	r2, r5
    2d1a:	4631      	mov	r1, r6
    2d1c:	4620      	mov	r0, r4
    2d1e:	f7fe f851 	bl	dc4 <xQueueReceive>
    2d22:	3000      	adds	r0, #0
    2d24:	bf18      	it	ne
    2d26:	2001      	movne	r0, #1
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:313
  }

  return status;
}
    2d28:	bd70      	pop	{r4, r5, r6, pc}
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:299
  bool status = false;
    2d2a:	2000      	movs	r0, #0
    2d2c:	e7fc      	b.n	2d28 <uart__get+0x44>
    2d2e:	bf00      	nop
    2d30:	10000100 	.word	0x10000100

00002d34 <uart__polled_get>:
uart__polled_get():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:251
bool uart__polled_get(uart_e uart, char *input_byte) {
    2d34:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    2d38:	4606      	mov	r6, r0
    2d3a:	460f      	mov	r7, r1
uart__is_receive_queue_enabled():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:68
  return (NULL != uarts[uart].queue_receive);
    2d3c:	4d12      	ldr	r5, [pc, #72]	; (2d88 <uart__polled_get+0x54>)
uart__polled_get():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:255
      taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
    2d3e:	f7fe ff0b 	bl	1b58 <xTaskGetSchedulerState>
uart__is_receive_queue_enabled():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:68
  return (NULL != uarts[uart].queue_receive);
    2d42:	240c      	movs	r4, #12
    2d44:	fb04 5306 	mla	r3, r4, r6, r5
uart__polled_get():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:255
      taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
    2d48:	4681      	mov	r9, r0
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:258
  if (uart__is_initialized(uart)) {
    2d4a:	4630      	mov	r0, r6
uart__is_receive_queue_enabled():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:68
  return (NULL != uarts[uart].queue_receive);
    2d4c:	f8d3 8008 	ldr.w	r8, [r3, #8]
uart__polled_get():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:258
  if (uart__is_initialized(uart)) {
    2d50:	f7ff ff56 	bl	2c00 <uart__is_initialized>
    2d54:	b1a0      	cbz	r0, 2d80 <uart__polled_get+0x4c>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:267
    if (rtos_is_running && queue_is_enabled) {
    2d56:	f1b9 0f02 	cmp.w	r9, #2
    2d5a:	d10a      	bne.n	2d72 <uart__polled_get+0x3e>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:267 (discriminator 1)
    2d5c:	f1b8 0f00 	cmp.w	r8, #0
    2d60:	d007      	beq.n	2d72 <uart__polled_get+0x3e>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:268
      status = uart__get(uart, input_byte, UINT32_MAX);
    2d62:	4639      	mov	r1, r7
    2d64:	4630      	mov	r0, r6
    2d66:	f04f 32ff 	mov.w	r2, #4294967295
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:280
}
    2d6a:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:268
      status = uart__get(uart, input_byte, UINT32_MAX);
    2d6e:	f7ff bfb9 	b.w	2ce4 <uart__get>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:270
      lpc_uart *uart_regs = uarts[uart].registers;
    2d72:	4374      	muls	r4, r6
    2d74:	592b      	ldr	r3, [r5, r4]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:273 (discriminator 1)
      while (!(uart_regs->LSR & char_available_bitmask)) {
    2d76:	7d1a      	ldrb	r2, [r3, #20]
    2d78:	07d2      	lsls	r2, r2, #31
    2d7a:	d5fc      	bpl.n	2d76 <uart__polled_get+0x42>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:275
      *input_byte = uart_regs->RBR;
    2d7c:	781b      	ldrb	r3, [r3, #0]
    2d7e:	703b      	strb	r3, [r7, #0]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:280
}
    2d80:	2000      	movs	r0, #0
    2d82:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    2d86:	bf00      	nop
    2d88:	10000100 	.word	0x10000100

00002d8c <uart__put>:
uart__put():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:315

bool uart__put(uart_e uart, char output_byte, uint32_t timeout_ms) {
    2d8c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
uart__is_transmit_queue_enabled():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:71
  return (NULL != uarts[uart].queue_transmit);
    2d8e:	4d1f      	ldr	r5, [pc, #124]	; (2e0c <uart__put+0x80>)
uart__put():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:315
bool uart__put(uart_e uart, char output_byte, uint32_t timeout_ms) {
    2d90:	f88d 1007 	strb.w	r1, [sp, #7]
    2d94:	4607      	mov	r7, r0
    2d96:	4616      	mov	r6, r2
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:318
  bool status = false;
  const bool rtos_is_running =
      taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
    2d98:	f7fe fede 	bl	1b58 <xTaskGetSchedulerState>
uart__is_transmit_queue_enabled():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:71
  return (NULL != uarts[uart].queue_transmit);
    2d9c:	230c      	movs	r3, #12
    2d9e:	fb03 5307 	mla	r3, r3, r7, r5
    2da2:	685c      	ldr	r4, [r3, #4]
uart__put():
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:320

  if (uart__is_transmit_queue_enabled(uart) && rtos_is_running) {
    2da4:	b364      	cbz	r4, 2e00 <uart__put+0x74>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:320 (discriminator 1)
    2da6:	2802      	cmp	r0, #2
    2da8:	d12d      	bne.n	2e06 <uart__put+0x7a>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:322
    // Deposit to the transmit queue for now
    status = xQueueSend(uarts[uart].queue_transmit, &output_byte,
    2daa:	1c71      	adds	r1, r6, #1
    2dac:	d009      	beq.n	2dc2 <uart__put+0x36>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:322 (discriminator 1)
    2dae:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
    2db2:	fba6 0100 	umull	r0, r1, r6, r0
    2db6:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
    2dba:	2300      	movs	r3, #0
    2dbc:	f002 fa0c 	bl	51d8 <__aeabi_uldivmod>
    2dc0:	4606      	mov	r6, r0
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:322 (discriminator 4)
    2dc2:	2300      	movs	r3, #0
    2dc4:	4632      	mov	r2, r6
    2dc6:	f10d 0107 	add.w	r1, sp, #7
    2dca:	4620      	mov	r0, r4
    2dcc:	f7fd fe74 	bl	ab8 <xQueueGenericSend>
    2dd0:	1c04      	adds	r4, r0, #0
    2dd2:	bf18      	it	ne
    2dd4:	2401      	movne	r4, #1
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:330 (discriminator 4)
    /* 'Transmit Complete Interrupt' may have already fired when we get here, so
     * if there is no further pending data to be sent, it will not fire again to
     * send any data. Hence, we check here in a critical section if transmit
     * holder register is empty, and kick-off the tranmisssion
     */
    portENTER_CRITICAL();
    2dd6:	f7fd fb95 	bl	504 <vPortEnterCritical>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:332 (discriminator 4)
    {
      lpc_uart *uart_regs = uarts[uart].registers;
    2dda:	200c      	movs	r0, #12
    2ddc:	4378      	muls	r0, r7
    2dde:	182b      	adds	r3, r5, r0
    2de0:	582d      	ldr	r5, [r5, r0]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:335 (discriminator 4)
      const uint32_t uart_tx_is_idle = (1 << 6);

      if (uart_regs->LSR & uart_tx_is_idle) {
    2de2:	7d2a      	ldrb	r2, [r5, #20]
    2de4:	0652      	lsls	r2, r2, #25
    2de6:	d509      	bpl.n	2dfc <uart__put+0x70>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:340
        /* Receive oldest char from the queue to send
         * Since we are inside a critical section, we use FromISR() FreeRTOS API
         * variant
         */
        if (xQueueReceiveFromISR(uarts[uart].queue_transmit, &output_byte,
    2de8:	2200      	movs	r2, #0
    2dea:	f10d 0107 	add.w	r1, sp, #7
    2dee:	6858      	ldr	r0, [r3, #4]
    2df0:	f7fe f946 	bl	1080 <xQueueReceiveFromISR>
    2df4:	b110      	cbz	r0, 2dfc <uart__put+0x70>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:342
                                 NULL)) {
          uart_regs->THR = output_byte;
    2df6:	f89d 3007 	ldrb.w	r3, [sp, #7]
    2dfa:	702b      	strb	r3, [r5, #0]
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:346
        }
      }
    }
    portEXIT_CRITICAL();
    2dfc:	f7fd fba4 	bl	548 <vPortExitCritical>
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:350
  }

  return status;
}
    2e00:	4620      	mov	r0, r4
    2e02:	b003      	add	sp, #12
    2e04:	bdf0      	pop	{r4, r5, r6, r7, pc}
C:\road_max_fury/lpc40xx_freertos\l3_drivers\sources/uart.c:316
  bool status = false;
    2e06:	2400      	movs	r4, #0
    2e08:	e7fa      	b.n	2e00 <uart__put+0x74>
    2e0a:	bf00      	nop
    2e0c:	10000100 	.word	0x10000100

00002e10 <app_cli__private_print_list_of_all_commands>:
app_cli__private_print_list_of_all_commands():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:93
}

static void
app_cli__private_print_list_of_all_commands(const app_cli_s *cli,
                                            app_cli__argument_t cli_argument,
                                            sl_string_t output) {
    2e10:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2e14:	4606      	mov	r6, r0
    2e16:	4614      	mov	r4, r2
    2e18:	4688      	mov	r8, r1
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:94
  (void)sl_string__printf(output, "\r\nList of commands (use help <name> to "
    2e1a:	4610      	mov	r0, r2
    2e1c:	491b      	ldr	r1, [pc, #108]	; (2e8c <app_cli__private_print_list_of_all_commands+0x7c>)
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:107
    if (strlen(iterator->help_message_for_command) > max_help_chars_to_print) {
      (void)sl_string__printf(output, "  %16s : %.50s ...",
                              iterator->command_name,
                              iterator->help_message_for_command);
    } else {
      (void)sl_string__printf(output, "  %16s : %s", iterator->command_name,
    2e1e:	f8df 907c 	ldr.w	r9, [pc, #124]	; 2e9c <app_cli__private_print_list_of_all_commands+0x8c>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:103
      (void)sl_string__printf(output, "  %16s : %.50s ...",
    2e22:	f8df a07c 	ldr.w	sl, [pc, #124]	; 2ea0 <app_cli__private_print_list_of_all_commands+0x90>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:114
    }

    // If a command's help is multi-line, truncate it at that position and add
    // "...." to indicate 'see more help'
    const bool ends_with_carriage_return =
        sl_string__erase_at_substring(output, "\r");
    2e26:	f8df b07c 	ldr.w	fp, [pc, #124]	; 2ea4 <app_cli__private_print_list_of_all_commands+0x94>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:94
  (void)sl_string__printf(output, "\r\nList of commands (use help <name> to "
    2e2a:	f7ff f844 	bl	1eb6 <sl_string__printf>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:96
  cli->output_function(cli_argument, output);
    2e2e:	68b3      	ldr	r3, [r6, #8]
    2e30:	4621      	mov	r1, r4
    2e32:	4640      	mov	r0, r8
    2e34:	4798      	blx	r3
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:99
  app_cli__command_s *iterator = cli->commands_head_pointer;
    2e36:	6835      	ldr	r5, [r6, #0]
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:101
  while (NULL != iterator) {
    2e38:	b90d      	cbnz	r5, 2e3e <app_cli__private_print_list_of_all_commands+0x2e>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:125
    (void)sl_string__append(output, "\r\n");
    cli->output_function(cli_argument, output);

    iterator = iterator->pointer_of_next_command;
  }
}
    2e3a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:102
    if (strlen(iterator->help_message_for_command) > max_help_chars_to_print) {
    2e3e:	686f      	ldr	r7, [r5, #4]
    2e40:	4638      	mov	r0, r7
    2e42:	f003 fe06 	bl	6a52 <strlen>
    2e46:	2832      	cmp	r0, #50	; 0x32
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:103
      (void)sl_string__printf(output, "  %16s : %.50s ...",
    2e48:	bf8c      	ite	hi
    2e4a:	4651      	movhi	r1, sl
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:107
      (void)sl_string__printf(output, "  %16s : %s", iterator->command_name,
    2e4c:	4649      	movls	r1, r9
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:103
      (void)sl_string__printf(output, "  %16s : %.50s ...",
    2e4e:	463b      	mov	r3, r7
    2e50:	682a      	ldr	r2, [r5, #0]
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:107
      (void)sl_string__printf(output, "  %16s : %s", iterator->command_name,
    2e52:	4620      	mov	r0, r4
    2e54:	f7ff f82f 	bl	1eb6 <sl_string__printf>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:114
        sl_string__erase_at_substring(output, "\r");
    2e58:	4659      	mov	r1, fp
    2e5a:	4620      	mov	r0, r4
    2e5c:	f7ff f956 	bl	210c <sl_string__erase_at_substring>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:115
    const bool ends_with_newline = sl_string__erase_at_substring(output, "\n");
    2e60:	490b      	ldr	r1, [pc, #44]	; (2e90 <app_cli__private_print_list_of_all_commands+0x80>)
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:114
        sl_string__erase_at_substring(output, "\r");
    2e62:	4607      	mov	r7, r0
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:115
    const bool ends_with_newline = sl_string__erase_at_substring(output, "\n");
    2e64:	4620      	mov	r0, r4
    2e66:	f7ff f951 	bl	210c <sl_string__erase_at_substring>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:116
    if (ends_with_carriage_return || ends_with_newline) {
    2e6a:	b907      	cbnz	r7, 2e6e <app_cli__private_print_list_of_all_commands+0x5e>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:116 (discriminator 1)
    2e6c:	b118      	cbz	r0, 2e76 <app_cli__private_print_list_of_all_commands+0x66>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:117
      (void)sl_string__append(output, "...");
    2e6e:	4909      	ldr	r1, [pc, #36]	; (2e94 <app_cli__private_print_list_of_all_commands+0x84>)
    2e70:	4620      	mov	r0, r4
    2e72:	f7ff f88a 	bl	1f8a <sl_string__append>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:120
    (void)sl_string__append(output, "\r\n");
    2e76:	4908      	ldr	r1, [pc, #32]	; (2e98 <app_cli__private_print_list_of_all_commands+0x88>)
    2e78:	4620      	mov	r0, r4
    2e7a:	f7ff f886 	bl	1f8a <sl_string__append>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:121
    cli->output_function(cli_argument, output);
    2e7e:	68b3      	ldr	r3, [r6, #8]
    2e80:	4621      	mov	r1, r4
    2e82:	4640      	mov	r0, r8
    2e84:	4798      	blx	r3
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:123
    iterator = iterator->pointer_of_next_command;
    2e86:	68ed      	ldr	r5, [r5, #12]
    2e88:	e7d6      	b.n	2e38 <app_cli__private_print_list_of_all_commands+0x28>
    2e8a:	bf00      	nop
    2e8c:	0000b614 	.word	0x0000b614
    2e90:	0000b65b 	.word	0x0000b65b
    2e94:	0000b7e5 	.word	0x0000b7e5
    2e98:	0000b65a 	.word	0x0000b65a
    2e9c:	0000b670 	.word	0x0000b670
    2ea0:	0000b65d 	.word	0x0000b65d
    2ea4:	0000b67c 	.word	0x0000b67c

00002ea8 <app_cli__initialize>:
app_cli__initialize():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:195
 *
 ******************************************************************************/

app_cli_s app_cli__initialize(size_t minimum_command_chars_to_match,
                              app_cli__print_string_function output_function,
                              const char *terminal_string) {
    2ea8:	b530      	push	{r4, r5, lr}
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:200
  static const size_t minimum_number_of_chars_to_match = 4;

  app_cli_s cli = {
      .commands_head_pointer = NULL,
      .minimum_command_chars_to_match = MAX_OF(minimum_number_of_chars_to_match,
    2eaa:	2904      	cmp	r1, #4
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:206
                                               minimum_command_chars_to_match),
      .output_function = output_function,
      .terminal_string = terminal_string,
  };

  return cli;
    2eac:	f04f 0500 	mov.w	r5, #0
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:200
      .minimum_command_chars_to_match = MAX_OF(minimum_number_of_chars_to_match,
    2eb0:	bf38      	it	cc
    2eb2:	2104      	movcc	r1, #4
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:206
  return cli;
    2eb4:	6005      	str	r5, [r0, #0]
    2eb6:	e9c0 1201 	strd	r1, r2, [r0, #4]
    2eba:	60c3      	str	r3, [r0, #12]
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:207
}
    2ebc:	bd30      	pop	{r4, r5, pc}

00002ebe <app_cli__add_command_handler>:
app_cli__add_command_handler():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:211

void app_cli__add_command_handler(
    app_cli_s *cli, app_cli__command_s *app_cli_command_static_memory) {
  if (NULL != app_cli_command_static_memory) {
    2ebe:	b111      	cbz	r1, 2ec6 <app_cli__add_command_handler+0x8>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:212
    app_cli_command_static_memory->pointer_of_next_command =
    2ec0:	6803      	ldr	r3, [r0, #0]
    2ec2:	60cb      	str	r3, [r1, #12]
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:214
        cli->commands_head_pointer;
    cli->commands_head_pointer = app_cli_command_static_memory;
    2ec4:	6001      	str	r1, [r0, #0]
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:216
  }
}
    2ec6:	4770      	bx	lr

00002ec8 <app_cli__process_input>:
app_cli__process_input():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:219

void app_cli__process_input(app_cli_s *cli, app_cli__argument_t cli_argument,
                            sl_string_t input_string) {
    2ec8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    2ecc:	4614      	mov	r4, r2
    2ece:	4605      	mov	r5, r0
    2ed0:	460f      	mov	r7, r1
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:220
  (void)sl_string__trim_end(input_string, "\r\n");
    2ed2:	4610      	mov	r0, r2
    2ed4:	4942      	ldr	r1, [pc, #264]	; (2fe0 <app_cli__process_input+0x118>)
    2ed6:	f7ff f95d 	bl	2194 <sl_string__trim_end>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:222

  if (sl_string__begins_with_ignore_case(input_string, "help")) {
    2eda:	4942      	ldr	r1, [pc, #264]	; (2fe4 <app_cli__process_input+0x11c>)
    2edc:	4620      	mov	r0, r4
    2ede:	f7ff f89a 	bl	2016 <sl_string__begins_with_ignore_case>
    2ee2:	2800      	cmp	r0, #0
    2ee4:	d033      	beq.n	2f4e <app_cli__process_input+0x86>
app_cli__private_handle_help():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:131
  if (sl_string__equals_to_ignore_case(command_string, "help")) {
    2ee6:	493f      	ldr	r1, [pc, #252]	; (2fe4 <app_cli__process_input+0x11c>)
    2ee8:	4620      	mov	r0, r4
    2eea:	f7ff f876 	bl	1fda <sl_string__equals_to_ignore_case>
    2eee:	b128      	cbz	r0, 2efc <app_cli__process_input+0x34>
app_cli__private_handle_unmatched_command():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:166
  app_cli__private_print_list_of_all_commands(cli, cli_argument, output_string);
    2ef0:	4622      	mov	r2, r4
    2ef2:	4639      	mov	r1, r7
    2ef4:	4628      	mov	r0, r5
    2ef6:	f7ff ff8b 	bl	2e10 <app_cli__private_print_list_of_all_commands>
    2efa:	e068      	b.n	2fce <app_cli__process_input+0x106>
app_cli__private_handle_help():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:138
    (void)sl_string__erase_first_word(command_string, ' ');
    2efc:	2120      	movs	r1, #32
    2efe:	4620      	mov	r0, r4
    2f00:	f7ff f912 	bl	2128 <sl_string__erase_first_word>
app_cli__private_find_command():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:36
    if (sl_string__begins_with_whole_word(input_string, iterator->command_name,
    2f04:	f8df 80f0 	ldr.w	r8, [pc, #240]	; 2ff8 <app_cli__process_input+0x130>
app_cli__private_handle_help():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:140
        app_cli__private_find_command(cli, command_string);
    2f08:	682e      	ldr	r6, [r5, #0]
app_cli__private_find_command():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:35
  while (NULL != iterator) {
    2f0a:	b90e      	cbnz	r6, 2f10 <app_cli__process_input+0x48>
app_cli__private_find_short_command():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:50
  app_cli__command_s *iterator = cli->commands_head_pointer;
    2f0c:	682e      	ldr	r6, [r5, #0]
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:52
  while (NULL != iterator) {
    2f0e:	e010      	b.n	2f32 <app_cli__process_input+0x6a>
app_cli__private_find_command():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:36
    if (sl_string__begins_with_whole_word(input_string, iterator->command_name,
    2f10:	4642      	mov	r2, r8
    2f12:	6831      	ldr	r1, [r6, #0]
    2f14:	4620      	mov	r0, r4
    2f16:	f7ff f895 	bl	2044 <sl_string__begins_with_whole_word>
    2f1a:	2800      	cmp	r0, #0
    2f1c:	d138      	bne.n	2f90 <app_cli__process_input+0xc8>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:41
    iterator = iterator->pointer_of_next_command;
    2f1e:	68f6      	ldr	r6, [r6, #12]
    2f20:	e7f3      	b.n	2f0a <app_cli__process_input+0x42>
app_cli__private_find_short_command():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:58
    if (sl_string__begins_with_limited_chars(
    2f22:	686a      	ldr	r2, [r5, #4]
    2f24:	6831      	ldr	r1, [r6, #0]
    2f26:	4620      	mov	r0, r4
    2f28:	f7ff f861 	bl	1fee <sl_string__begins_with_limited_chars>
    2f2c:	2800      	cmp	r0, #0
    2f2e:	d12f      	bne.n	2f90 <app_cli__process_input+0xc8>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:64
    iterator = iterator->pointer_of_next_command;
    2f30:	68f6      	ldr	r6, [r6, #12]
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:52
  while (NULL != iterator) {
    2f32:	2e00      	cmp	r6, #0
    2f34:	d1f5      	bne.n	2f22 <app_cli__process_input+0x5a>
app_cli__private_handle_help():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:146
      (void)sl_string__insert_at(command_string, 0,
    2f36:	4631      	mov	r1, r6
    2f38:	4a2b      	ldr	r2, [pc, #172]	; (2fe8 <app_cli__process_input+0x120>)
    2f3a:	4620      	mov	r0, r4
    2f3c:	f7fe fffb 	bl	1f36 <sl_string__insert_at>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:148
      cli->output_function(cli_argument, command_string);
    2f40:	68ab      	ldr	r3, [r5, #8]
    2f42:	4621      	mov	r1, r4
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:150
      cli->output_function(cli_argument, cli_command->help_message_for_command);
    2f44:	4638      	mov	r0, r7
    2f46:	4798      	blx	r3
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:152
    cli->output_function(cli_argument, "\r\n");
    2f48:	68ab      	ldr	r3, [r5, #8]
    2f4a:	4925      	ldr	r1, [pc, #148]	; (2fe0 <app_cli__process_input+0x118>)
    2f4c:	e03d      	b.n	2fca <app_cli__process_input+0x102>
app_cli__private_process_input():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:173
      app_cli__private_find_command(cli, input_string);
    2f4e:	682e      	ldr	r6, [r5, #0]
app_cli__private_find_command():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:36
    if (sl_string__begins_with_whole_word(input_string, iterator->command_name,
    2f50:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 2ff8 <app_cli__process_input+0x130>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:35
  while (NULL != iterator) {
    2f54:	b90e      	cbnz	r6, 2f5a <app_cli__process_input+0x92>
app_cli__private_find_short_command():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:50
  app_cli__command_s *iterator = cli->commands_head_pointer;
    2f56:	682e      	ldr	r6, [r5, #0]
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:52
  while (NULL != iterator) {
    2f58:	e00e      	b.n	2f78 <app_cli__process_input+0xb0>
app_cli__private_find_command():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:36
    if (sl_string__begins_with_whole_word(input_string, iterator->command_name,
    2f5a:	4642      	mov	r2, r8
    2f5c:	6831      	ldr	r1, [r6, #0]
    2f5e:	4620      	mov	r0, r4
    2f60:	f7ff f870 	bl	2044 <sl_string__begins_with_whole_word>
    2f64:	b9b8      	cbnz	r0, 2f96 <app_cli__process_input+0xce>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:41
    iterator = iterator->pointer_of_next_command;
    2f66:	68f6      	ldr	r6, [r6, #12]
    2f68:	e7f4      	b.n	2f54 <app_cli__process_input+0x8c>
app_cli__private_find_short_command():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:58
    if (sl_string__begins_with_limited_chars(
    2f6a:	686a      	ldr	r2, [r5, #4]
    2f6c:	6831      	ldr	r1, [r6, #0]
    2f6e:	4620      	mov	r0, r4
    2f70:	f7ff f83d 	bl	1fee <sl_string__begins_with_limited_chars>
    2f74:	b978      	cbnz	r0, 2f96 <app_cli__process_input+0xce>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:64
    iterator = iterator->pointer_of_next_command;
    2f76:	68f6      	ldr	r6, [r6, #12]
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:52
  while (NULL != iterator) {
    2f78:	2e00      	cmp	r6, #0
    2f7a:	d1f6      	bne.n	2f6a <app_cli__process_input+0xa2>
app_cli__private_handle_unmatched_command():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:162
  (void)sl_string__insert_at(
    2f7c:	4631      	mov	r1, r6
    2f7e:	4a1b      	ldr	r2, [pc, #108]	; (2fec <app_cli__process_input+0x124>)
    2f80:	4620      	mov	r0, r4
    2f82:	f7fe ffd8 	bl	1f36 <sl_string__insert_at>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:164
  cli->output_function(cli_argument, output_string);
    2f86:	68ab      	ldr	r3, [r5, #8]
    2f88:	4621      	mov	r1, r4
    2f8a:	4638      	mov	r0, r7
    2f8c:	4798      	blx	r3
    2f8e:	e7af      	b.n	2ef0 <app_cli__process_input+0x28>
app_cli__private_handle_help():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:150
      cli->output_function(cli_argument, cli_command->help_message_for_command);
    2f90:	68ab      	ldr	r3, [r5, #8]
    2f92:	6871      	ldr	r1, [r6, #4]
    2f94:	e7d6      	b.n	2f44 <app_cli__process_input+0x7c>
app_cli__private_handle_command():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:74
  (void)sl_string__erase_first_word(input_string, ' ');
    2f96:	2120      	movs	r1, #32
    2f98:	4620      	mov	r0, r4
    2f9a:	f7ff f8c5 	bl	2128 <sl_string__erase_first_word>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:75
  const app_cli_status_e command_status = command->app_cli_handler(
    2f9e:	68b3      	ldr	r3, [r6, #8]
    2fa0:	68aa      	ldr	r2, [r5, #8]
    2fa2:	4621      	mov	r1, r4
    2fa4:	4638      	mov	r0, r7
    2fa6:	4798      	blx	r3
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:78
  if (APP_CLI_STATUS__SUCCESS != command_status) {
    2fa8:	b188      	cbz	r0, 2fce <app_cli__process_input+0x106>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:81
    (void)sl_string__insert_at(output_string, 0, "Command failed: ");
    2faa:	4a11      	ldr	r2, [pc, #68]	; (2ff0 <app_cli__process_input+0x128>)
    2fac:	2100      	movs	r1, #0
    2fae:	4620      	mov	r0, r4
    2fb0:	f7fe ffc1 	bl	1f36 <sl_string__insert_at>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:82
    cli->output_function(cli_argument, output_string);
    2fb4:	68ab      	ldr	r3, [r5, #8]
    2fb6:	4621      	mov	r1, r4
    2fb8:	4638      	mov	r0, r7
    2fba:	4798      	blx	r3
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:84
    (void)sl_string__printf(output_string, "\r\nCommand help message: %s\r\n",
    2fbc:	490d      	ldr	r1, [pc, #52]	; (2ff4 <app_cli__process_input+0x12c>)
    2fbe:	6872      	ldr	r2, [r6, #4]
    2fc0:	4620      	mov	r0, r4
    2fc2:	f7fe ff78 	bl	1eb6 <sl_string__printf>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:86
    cli->output_function(cli_argument, output_string);
    2fc6:	68ab      	ldr	r3, [r5, #8]
    2fc8:	4621      	mov	r1, r4
    2fca:	4638      	mov	r0, r7
    2fcc:	4798      	blx	r3
app_cli__process_input():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:230
    app_cli__private_process_input(cli, cli_argument, input_string);
  }

  // Send a terminator to signal to any receiver that we are done outputting all
  // output from our handlers
  if (NULL != cli->terminal_string) {
    2fce:	68e9      	ldr	r1, [r5, #12]
    2fd0:	b121      	cbz	r1, 2fdc <app_cli__process_input+0x114>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:231
    cli->output_function(cli_argument, cli->terminal_string);
    2fd2:	68ab      	ldr	r3, [r5, #8]
    2fd4:	4638      	mov	r0, r7
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:233
  }
}
    2fd6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:231
    cli->output_function(cli_argument, cli->terminal_string);
    2fda:	4718      	bx	r3
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/app_cli.c:233
}
    2fdc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    2fe0:	0000b65a 	.word	0x0000b65a
    2fe4:	0000b67e 	.word	0x0000b67e
    2fe8:	0000b6b1 	.word	0x0000b6b1
    2fec:	0000b6da 	.word	0x0000b6da
    2ff0:	0000b683 	.word	0x0000b683
    2ff4:	0000b694 	.word	0x0000b694
    2ff8:	0000be2c 	.word	0x0000be2c

00002ffc <sj2_cli__output_function>:
sj2_cli__output_function():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/sj2_cli.c:58
  xTaskCreateStatic(sj2_cli__task, "cli", ARRAY_SIZE(task_stack),
                    &sj2_cli_struct, PRIORITY_HIGH, task_stack, &task_struct);
}

static void sj2_cli__output_function(app_cli__argument_t argument,
                                     const char *string) {
    2ffc:	b510      	push	{r4, lr}
    2ffe:	1e4c      	subs	r4, r1, #1
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/sj2_cli.c:59
  while (*string != '\0') {
    3000:	f814 0f01 	ldrb.w	r0, [r4, #1]!
    3004:	b900      	cbnz	r0, 3008 <sj2_cli__output_function+0xc>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/sj2_cli.c:63
    putchar(*string);
    ++string;
  }
}
    3006:	bd10      	pop	{r4, pc}
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/sj2_cli.c:60
    putchar(*string);
    3008:	f003 fb78 	bl	66fc <putchar>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/sj2_cli.c:61
    ++string;
    300c:	e7f8      	b.n	3000 <sj2_cli__output_function+0x4>
    300e:	Address 0x0000300e is out of bounds.


00003010 <sj2_cli__task>:
sj2_cli__task():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/sj2_cli.c:65

static void sj2_cli__task(void *task_parameter) {
    3010:	b570      	push	{r4, r5, r6, lr}
    3012:	b0a0      	sub	sp, #128	; 0x80
    3014:	4606      	mov	r6, r0
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/sj2_cli.c:72
  void *unused_cli_param = NULL;
  char string_memory[128];

  // Start by greeting the use with the 'help' command
  sl_string_t user_input =
      sl_string__initialize_from(string_memory, sizeof(string_memory), "help");
    3016:	4a1b      	ldr	r2, [pc, #108]	; (3084 <sj2_cli__task+0x74>)
    3018:	2180      	movs	r1, #128	; 0x80
    301a:	4668      	mov	r0, sp
    301c:	f7fe ff80 	bl	1f20 <sl_string__initialize_from>
    3020:	4604      	mov	r4, r0
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/sj2_cli.c:75 (discriminator 1)

  while (true) {
    app_cli__process_input(sj2_cli_struct, unused_cli_param, user_input);
    3022:	4630      	mov	r0, r6
    3024:	4622      	mov	r2, r4
    3026:	2100      	movs	r1, #0
    3028:	f7ff ff4e 	bl	2ec8 <app_cli__process_input>
sj2_cli__get_line():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/sj2_cli.c:81 (discriminator 1)
    sj2_cli__get_line(user_input);
  }
}

static void sj2_cli__get_line(sl_string_t input_line) {
  sl_string__clear(input_line);
    302c:	4620      	mov	r0, r4
    302e:	f7fe ff31 	bl	1e94 <sl_string__clear>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/sj2_cli.c:84

  // As long as user does not enter a full line, continue to get input
  while (!sl_string__ends_with_newline(input_line)) {
    3032:	4620      	mov	r0, r4
    3034:	f7ff f828 	bl	2088 <sl_string__ends_with_newline>
    3038:	2800      	cmp	r0, #0
    303a:	d1f2      	bne.n	3022 <sj2_cli__task+0x12>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/sj2_cli.c:85
    const char input_byte = getchar();
    303c:	f002 fad2 	bl	55e4 <getchar>
    3040:	b2c5      	uxtb	r5, r0
sj2_cli__handle_backspace_logic():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/sj2_cli.c:98

static void sj2_cli__handle_backspace_logic(sl_string_t input_line,
                                            char input_byte) {
  const char backspace = '\b';

  if (backspace == input_byte) {
    3042:	2d08      	cmp	r5, #8
    3044:	d116      	bne.n	3074 <sj2_cli__task+0x64>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/sj2_cli.c:99
    if (sl_string__get_length(input_line) > 0) {
    3046:	4620      	mov	r0, r4
    3048:	f7fe ff0f 	bl	1e6a <sl_string__get_length>
    304c:	b160      	cbz	r0, 3068 <sj2_cli__task+0x58>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/sj2_cli.c:100
      sl_string__erase_last(input_line, 1);
    304e:	2101      	movs	r1, #1
    3050:	4620      	mov	r0, r4
    3052:	f7ff f84a 	bl	20ea <sl_string__erase_last>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/sj2_cli.c:101
      putchar(backspace);
    3056:	4628      	mov	r0, r5
    3058:	f003 fb50 	bl	66fc <putchar>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/sj2_cli.c:102
      putchar(' ');
    305c:	2020      	movs	r0, #32
    305e:	f003 fb4d 	bl	66fc <putchar>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/sj2_cli.c:103
      putchar(backspace);
    3062:	4628      	mov	r0, r5
    3064:	f003 fb4a 	bl	66fc <putchar>
sj2_cli__get_line():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/sj2_cli.c:88
    if (sl_string__is_full(input_line)) {
    3068:	4620      	mov	r0, r4
    306a:	f7fe ff04 	bl	1e76 <sl_string__is_full>
    306e:	2800      	cmp	r0, #0
    3070:	d0df      	beq.n	3032 <sj2_cli__task+0x22>
    3072:	e7d6      	b.n	3022 <sj2_cli__task+0x12>
sj2_cli__handle_backspace_logic():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/sj2_cli.c:106
    }
  } else {
    putchar(input_byte);
    3074:	4628      	mov	r0, r5
    3076:	f003 fb41 	bl	66fc <putchar>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/sj2_cli.c:107
    sl_string__append_char(input_line, input_byte);
    307a:	4629      	mov	r1, r5
    307c:	4620      	mov	r0, r4
    307e:	f7fe ffa0 	bl	1fc2 <sl_string__append_char>
    3082:	e7f1      	b.n	3068 <sj2_cli__task+0x58>
    3084:	0000b67e 	.word	0x0000b67e

00003088 <sj2_cli__init>:
sj2_cli__init():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/sj2_cli.c:18
void sj2_cli__init(void) {
    3088:	b530      	push	{r4, r5, lr}
    308a:	b089      	sub	sp, #36	; 0x24
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/sj2_cli.c:23
  sj2_cli_struct = app_cli__initialize(4, sj2_cli__output_function, separator);
    308c:	ad04      	add	r5, sp, #16
    308e:	4628      	mov	r0, r5
    3090:	4b12      	ldr	r3, [pc, #72]	; (30dc <sj2_cli__init+0x54>)
    3092:	4a13      	ldr	r2, [pc, #76]	; (30e0 <sj2_cli__init+0x58>)
    3094:	4c13      	ldr	r4, [pc, #76]	; (30e4 <sj2_cli__init+0x5c>)
    3096:	2104      	movs	r1, #4
    3098:	f7ff ff06 	bl	2ea8 <app_cli__initialize>
    309c:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
    30a0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/sj2_cli.c:45
  app_cli__add_command_handler(&sj2_cli_struct, &task_list);
    30a4:	4620      	mov	r0, r4
    30a6:	4910      	ldr	r1, [pc, #64]	; (30e8 <sj2_cli__init+0x60>)
    30a8:	f7ff ff09 	bl	2ebe <app_cli__add_command_handler>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/sj2_cli.c:46
  app_cli__add_command_handler(&sj2_cli_struct, &i2c);
    30ac:	4620      	mov	r0, r4
    30ae:	490f      	ldr	r1, [pc, #60]	; (30ec <sj2_cli__init+0x64>)
    30b0:	f7ff ff05 	bl	2ebe <app_cli__add_command_handler>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/sj2_cli.c:47
  app_cli__add_command_handler(&sj2_cli_struct, &crash);
    30b4:	4620      	mov	r0, r4
    30b6:	490e      	ldr	r1, [pc, #56]	; (30f0 <sj2_cli__init+0x68>)
    30b8:	f7ff ff01 	bl	2ebe <app_cli__add_command_handler>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/sj2_cli.c:53
  xTaskCreateStatic(sj2_cli__task, "cli", ARRAY_SIZE(task_stack),
    30bc:	4b0d      	ldr	r3, [pc, #52]	; (30f4 <sj2_cli__init+0x6c>)
    30be:	9302      	str	r3, [sp, #8]
    30c0:	4b0d      	ldr	r3, [pc, #52]	; (30f8 <sj2_cli__init+0x70>)
    30c2:	9301      	str	r3, [sp, #4]
    30c4:	2303      	movs	r3, #3
    30c6:	9300      	str	r3, [sp, #0]
    30c8:	f44f 7200 	mov.w	r2, #512	; 0x200
    30cc:	4623      	mov	r3, r4
    30ce:	490b      	ldr	r1, [pc, #44]	; (30fc <sj2_cli__init+0x74>)
    30d0:	480b      	ldr	r0, [pc, #44]	; (3100 <sj2_cli__init+0x78>)
    30d2:	f7fe f97f 	bl	13d4 <xTaskCreateStatic>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli/sj2_cli.c:55
}
    30d6:	b009      	add	sp, #36	; 0x24
    30d8:	bd30      	pop	{r4, r5, pc}
    30da:	bf00      	nop
    30dc:	0000b70b 	.word	0x0000b70b
    30e0:	00002ffd 	.word	0x00002ffd
    30e4:	100004a4 	.word	0x100004a4
    30e8:	10000150 	.word	0x10000150
    30ec:	10000140 	.word	0x10000140
    30f0:	10000130 	.word	0x10000130
    30f4:	10000cb4 	.word	0x10000cb4
    30f8:	100004b4 	.word	0x100004b4
    30fc:	0000b75e 	.word	0x0000b75e
    3100:	00003011 	.word	0x00003011

00003104 <cli__i2c_read>:
cli__i2c_read():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:42

  return command_status;
}

static void cli__i2c_read(const sl_string_t command_params,
                          app_cli__print_string_function cli_output) {
    3104:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    3108:	b0e7      	sub	sp, #412	; 0x19c
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:43
  uint8_t buffer[256] = {0};
    310a:	f10d 0898 	add.w	r8, sp, #152	; 0x98
    310e:	f44f 7280 	mov.w	r2, #256	; 0x100
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:42
                          app_cli__print_string_function cli_output) {
    3112:	4681      	mov	r9, r0
    3114:	460e      	mov	r6, r1
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:43
  uint8_t buffer[256] = {0};
    3116:	4640      	mov	r0, r8
    3118:	2100      	movs	r1, #0
    311a:	f002 fab1 	bl	5680 <memset>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:48
  void *unused_cli_argument = NULL;

  char string_memory[128];
  sl_string_t output =
      sl_string__initialize(string_memory, sizeof(string_memory));
    311e:	2180      	movs	r1, #128	; 0x80
    3120:	a806      	add	r0, sp, #24
    3122:	f7fe fe7f 	bl	1e24 <sl_string__initialize>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:50

  unsigned slave_address = 0, slave_register = 0, count = 1;
    3126:	af05      	add	r7, sp, #20
    3128:	2301      	movs	r3, #1
    312a:	603b      	str	r3, [r7, #0]
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:48
      sl_string__initialize(string_memory, sizeof(string_memory));
    312c:	4605      	mov	r5, r0
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:50
  unsigned slave_address = 0, slave_register = 0, count = 1;
    312e:	2400      	movs	r4, #0
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:52

  if (sl_string__scanf(command_params, "%x %x %u", &slave_address,
    3130:	9700      	str	r7, [sp, #0]
    3132:	ab04      	add	r3, sp, #16
    3134:	aa03      	add	r2, sp, #12
    3136:	4920      	ldr	r1, [pc, #128]	; (31b8 <cli__i2c_read+0xb4>)
    3138:	4648      	mov	r0, r9
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:50
  unsigned slave_address = 0, slave_register = 0, count = 1;
    313a:	e9cd 4403 	strd	r4, r4, [sp, #12]
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:52
  if (sl_string__scanf(command_params, "%x %x %u", &slave_address,
    313e:	f7fe fec7 	bl	1ed0 <sl_string__scanf>
    3142:	2801      	cmp	r0, #1
    3144:	d930      	bls.n	31a8 <cli__i2c_read+0xa4>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:54
                       &slave_register, &count) >= 2) {
    if (i2c__read_slave_data(i2c_bus, slave_address, slave_register, &buffer[0],
    3146:	683b      	ldr	r3, [r7, #0]
    3148:	9300      	str	r3, [sp, #0]
    314a:	f89d 2010 	ldrb.w	r2, [sp, #16]
    314e:	f89d 100c 	ldrb.w	r1, [sp, #12]
    3152:	4643      	mov	r3, r8
    3154:	2002      	movs	r0, #2
    3156:	f7ff fb61 	bl	281c <i2c__read_slave_data>
    315a:	4681      	mov	r9, r0
    315c:	b1e0      	cbz	r0, 3198 <cli__i2c_read+0x94>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:56
                             count)) {
      sl_string__printf(output, "I2C Read of Slave 0x%02X\n", slave_address);
    315e:	9a03      	ldr	r2, [sp, #12]
    3160:	4916      	ldr	r1, [pc, #88]	; (31bc <cli__i2c_read+0xb8>)
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:60
      cli_output(unused_cli_argument, output);

      for (size_t index = 0; index < count; index++) {
        sl_string__printf(output, "  0x%02X: 0x%02X (%d)\n", index,
    3162:	f8df 9064 	ldr.w	r9, [pc, #100]	; 31c8 <cli__i2c_read+0xc4>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:56
      sl_string__printf(output, "I2C Read of Slave 0x%02X\n", slave_address);
    3166:	4628      	mov	r0, r5
    3168:	f7fe fea5 	bl	1eb6 <sl_string__printf>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:57
      cli_output(unused_cli_argument, output);
    316c:	4629      	mov	r1, r5
    316e:	4620      	mov	r0, r4
    3170:	47b0      	blx	r6
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:59 (discriminator 1)
      for (size_t index = 0; index < count; index++) {
    3172:	683b      	ldr	r3, [r7, #0]
    3174:	42a3      	cmp	r3, r4
    3176:	d802      	bhi.n	317e <cli__i2c_read+0x7a>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:74
    sl_string__set(
        output,
        "Command error: Read command should be 'i2c read 0xDD 0xRR <n>'\n");
    cli_output(unused_cli_argument, output);
  }
}
    3178:	b067      	add	sp, #412	; 0x19c
    317a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:60 (discriminator 3)
        sl_string__printf(output, "  0x%02X: 0x%02X (%d)\n", index,
    317e:	f818 3004 	ldrb.w	r3, [r8, r4]
    3182:	9300      	str	r3, [sp, #0]
    3184:	4622      	mov	r2, r4
    3186:	4649      	mov	r1, r9
    3188:	4628      	mov	r0, r5
    318a:	f7fe fe94 	bl	1eb6 <sl_string__printf>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:62 (discriminator 3)
        cli_output(unused_cli_argument, output);
    318e:	4629      	mov	r1, r5
    3190:	2000      	movs	r0, #0
    3192:	47b0      	blx	r6
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:59 (discriminator 3)
      for (size_t index = 0; index < count; index++) {
    3194:	3401      	adds	r4, #1
    3196:	e7ec      	b.n	3172 <cli__i2c_read+0x6e>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:65
      sl_string__set(output, "I2C bus error during i2c__read_slave_data()\n");
    3198:	4909      	ldr	r1, [pc, #36]	; (31c0 <cli__i2c_read+0xbc>)
    319a:	4628      	mov	r0, r5
    319c:	f7fe fea9 	bl	1ef2 <sl_string__set>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:66
      cli_output(unused_cli_argument, output);
    31a0:	4629      	mov	r1, r5
    31a2:	4648      	mov	r0, r9
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:72
    cli_output(unused_cli_argument, output);
    31a4:	47b0      	blx	r6
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:74
}
    31a6:	e7e7      	b.n	3178 <cli__i2c_read+0x74>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:69
    sl_string__set(
    31a8:	4906      	ldr	r1, [pc, #24]	; (31c4 <cli__i2c_read+0xc0>)
    31aa:	4628      	mov	r0, r5
    31ac:	f7fe fea1 	bl	1ef2 <sl_string__set>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:72
    cli_output(unused_cli_argument, output);
    31b0:	4629      	mov	r1, r5
    31b2:	4620      	mov	r0, r4
    31b4:	e7f6      	b.n	31a4 <cli__i2c_read+0xa0>
    31b6:	bf00      	nop
    31b8:	0000b875 	.word	0x0000b875
    31bc:	0000b87e 	.word	0x0000b87e
    31c0:	0000b8af 	.word	0x0000b8af
    31c4:	0000b8dc 	.word	0x0000b8dc
    31c8:	0000b898 	.word	0x0000b898

000031cc <cli__i2c_write>:
cli__i2c_write():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:77

static void cli__i2c_write(sl_string_t command_params,
                           app_cli__print_string_function cli_output) {
    31cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    31d0:	b0e7      	sub	sp, #412	; 0x19c
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:78
  unsigned slave_address = 0, slave_register = 0;
    31d2:	2400      	movs	r4, #0
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:80
  void *unused_cli_argument = NULL;
  uint8_t buffer[256] = {0};
    31d4:	f10d 0898 	add.w	r8, sp, #152	; 0x98
    31d8:	f44f 7280 	mov.w	r2, #256	; 0x100
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:77
                           app_cli__print_string_function cli_output) {
    31dc:	4681      	mov	r9, r0
    31de:	460f      	mov	r7, r1
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:80
  uint8_t buffer[256] = {0};
    31e0:	4640      	mov	r0, r8
    31e2:	4621      	mov	r1, r4
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:78
  unsigned slave_address = 0, slave_register = 0;
    31e4:	e9cd 4403 	strd	r4, r4, [sp, #12]
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:80
  uint8_t buffer[256] = {0};
    31e8:	f002 fa4a 	bl	5680 <memset>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:84

  char string_memory[128];
  sl_string_t output =
      sl_string__initialize(string_memory, sizeof(string_memory));
    31ec:	2180      	movs	r1, #128	; 0x80
    31ee:	a806      	add	r0, sp, #24
    31f0:	f7fe fe18 	bl	1e24 <sl_string__initialize>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:87

  // i2c write 0xDD 0xRR <value> <value> ...
  if (2 == sl_string__scanf(command_params, "%x %x", &slave_address,
    31f4:	ab04      	add	r3, sp, #16
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:84
      sl_string__initialize(string_memory, sizeof(string_memory));
    31f6:	4606      	mov	r6, r0
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:87
  if (2 == sl_string__scanf(command_params, "%x %x", &slave_address,
    31f8:	aa03      	add	r2, sp, #12
    31fa:	4929      	ldr	r1, [pc, #164]	; (32a0 <cli__i2c_write+0xd4>)
    31fc:	4648      	mov	r0, r9
    31fe:	f7fe fe67 	bl	1ed0 <sl_string__scanf>
    3202:	2802      	cmp	r0, #2
    3204:	d144      	bne.n	3290 <cli__i2c_write+0xc4>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:89
                            &slave_register)) {
    sl_string__erase_first_word(command_params, ' ');
    3206:	2120      	movs	r1, #32
    3208:	4648      	mov	r0, r9
    320a:	f7fe ff8d 	bl	2128 <sl_string__erase_first_word>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:90
    sl_string__erase_first_word(command_params, ' ');
    320e:	2120      	movs	r1, #32
    3210:	4648      	mov	r0, r9
    3212:	f7fe ff89 	bl	2128 <sl_string__erase_first_word>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:94

    // Store one or more write <value> parameters to buffer as specified by the
    // user
    int value_to_write = 0;
    3216:	9405      	str	r4, [sp, #20]
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:96
    size_t count = 0;
    while (sl_string__erase_int(command_params, &value_to_write)) {
    3218:	a905      	add	r1, sp, #20
    321a:	4648      	mov	r0, r9
    321c:	f7fe ff92 	bl	2144 <sl_string__erase_int>
    3220:	4605      	mov	r5, r0
    3222:	b9d0      	cbnz	r0, 325a <cli__i2c_write+0x8e>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:101
      buffer[count] = (uint8_t)value_to_write;
      ++count;
    }

    if (i2c__write_slave_data(i2c_bus, slave_address, slave_register,
    3224:	9400      	str	r4, [sp, #0]
    3226:	4643      	mov	r3, r8
    3228:	f89d 2010 	ldrb.w	r2, [sp, #16]
    322c:	f89d 100c 	ldrb.w	r1, [sp, #12]
    3230:	2002      	movs	r0, #2
    3232:	f7ff fb2f 	bl	2894 <i2c__write_slave_data>
    3236:	4681      	mov	r9, r0
    3238:	b310      	cbz	r0, 3280 <cli__i2c_write+0xb4>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:103
                              &buffer[0], count)) {
      sl_string__printf(output, "Wrote %u bytes to slave 0x%02X\n", count,
    323a:	9b03      	ldr	r3, [sp, #12]
    323c:	4919      	ldr	r1, [pc, #100]	; (32a4 <cli__i2c_write+0xd8>)
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:108
                        slave_address);
      cli_output(unused_cli_argument, output);

      for (size_t index = 0; index < count; index++) {
        sl_string__printf(output, "  [%3d] = 0x%02X (%d)\n",
    323e:	f8df 9070 	ldr.w	r9, [pc, #112]	; 32b0 <cli__i2c_write+0xe4>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:103
      sl_string__printf(output, "Wrote %u bytes to slave 0x%02X\n", count,
    3242:	4622      	mov	r2, r4
    3244:	4630      	mov	r0, r6
    3246:	f7fe fe36 	bl	1eb6 <sl_string__printf>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:105
      cli_output(unused_cli_argument, output);
    324a:	4631      	mov	r1, r6
    324c:	4628      	mov	r0, r5
    324e:	47b8      	blx	r7
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:107 (discriminator 1)
      for (size_t index = 0; index < count; index++) {
    3250:	42ac      	cmp	r4, r5
    3252:	d107      	bne.n	3264 <cli__i2c_write+0x98>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:122
  } else {
    sl_string__set(output, "Command error: Write command should be 'i2c write "
                           "0xDD 0xRR <value> <value> ...'\n");
    cli_output(unused_cli_argument, output);
  }
    3254:	b067      	add	sp, #412	; 0x19c
    3256:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:97
      buffer[count] = (uint8_t)value_to_write;
    325a:	9b05      	ldr	r3, [sp, #20]
    325c:	f808 3004 	strb.w	r3, [r8, r4]
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:98
      ++count;
    3260:	3401      	adds	r4, #1
    3262:	e7d9      	b.n	3218 <cli__i2c_write+0x4c>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:108 (discriminator 3)
        sl_string__printf(output, "  [%3d] = 0x%02X (%d)\n",
    3264:	9a04      	ldr	r2, [sp, #16]
    3266:	f818 3005 	ldrb.w	r3, [r8, r5]
    326a:	9300      	str	r3, [sp, #0]
    326c:	442a      	add	r2, r5
    326e:	4649      	mov	r1, r9
    3270:	4630      	mov	r0, r6
    3272:	f7fe fe20 	bl	1eb6 <sl_string__printf>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:111 (discriminator 3)
        cli_output(unused_cli_argument, output);
    3276:	4631      	mov	r1, r6
    3278:	2000      	movs	r0, #0
    327a:	47b8      	blx	r7
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:107 (discriminator 3)
      for (size_t index = 0; index < count; index++) {
    327c:	3501      	adds	r5, #1
    327e:	e7e7      	b.n	3250 <cli__i2c_write+0x84>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:114
      sl_string__set(output, "I2C bus error during i2c__write_slave_data()\n");
    3280:	4909      	ldr	r1, [pc, #36]	; (32a8 <cli__i2c_write+0xdc>)
    3282:	4630      	mov	r0, r6
    3284:	f7fe fe35 	bl	1ef2 <sl_string__set>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:115
      cli_output(unused_cli_argument, output);
    3288:	4631      	mov	r1, r6
    328a:	4648      	mov	r0, r9
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:120
    cli_output(unused_cli_argument, output);
    328c:	47b8      	blx	r7
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:122
    328e:	e7e1      	b.n	3254 <cli__i2c_write+0x88>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:118
    sl_string__set(output, "Command error: Write command should be 'i2c write "
    3290:	4906      	ldr	r1, [pc, #24]	; (32ac <cli__i2c_write+0xe0>)
    3292:	4630      	mov	r0, r6
    3294:	f7fe fe2d 	bl	1ef2 <sl_string__set>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:120
    cli_output(unused_cli_argument, output);
    3298:	4631      	mov	r1, r6
    329a:	4620      	mov	r0, r4
    329c:	e7f6      	b.n	328c <cli__i2c_write+0xc0>
    329e:	bf00      	nop
    32a0:	0000b91c 	.word	0x0000b91c
    32a4:	0000b922 	.word	0x0000b922
    32a8:	0000b959 	.word	0x0000b959
    32ac:	0000b987 	.word	0x0000b987
    32b0:	0000b942 	.word	0x0000b942

000032b4 <cli__i2c>:
cli__i2c():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:15
                          app_cli__print_string_function cli_output) {
    32b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    32b6:	460d      	mov	r5, r1
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:19
      sl_string__begins_with_ignore_case(user_input_minus_command_name, "read");
    32b8:	4628      	mov	r0, r5
    32ba:	490e      	ldr	r1, [pc, #56]	; (32f4 <cli__i2c+0x40>)
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:15
                          app_cli__print_string_function cli_output) {
    32bc:	4616      	mov	r6, r2
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:19
      sl_string__begins_with_ignore_case(user_input_minus_command_name, "read");
    32be:	f7fe feaa 	bl	2016 <sl_string__begins_with_ignore_case>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:20
  const bool write = sl_string__begins_with_ignore_case(
    32c2:	490d      	ldr	r1, [pc, #52]	; (32f8 <cli__i2c+0x44>)
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:19
      sl_string__begins_with_ignore_case(user_input_minus_command_name, "read");
    32c4:	4604      	mov	r4, r0
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:20
  const bool write = sl_string__begins_with_ignore_case(
    32c6:	4628      	mov	r0, r5
    32c8:	f7fe fea5 	bl	2016 <sl_string__begins_with_ignore_case>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:22
  sl_string__erase_first_word(user_input_minus_command_name, ' ');
    32cc:	2120      	movs	r1, #32
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:20
  const bool write = sl_string__begins_with_ignore_case(
    32ce:	4607      	mov	r7, r0
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:22
  sl_string__erase_first_word(user_input_minus_command_name, ' ');
    32d0:	4628      	mov	r0, r5
    32d2:	f7fe ff29 	bl	2128 <sl_string__erase_first_word>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:26
  if (read) {
    32d6:	b12c      	cbz	r4, 32e4 <cli__i2c+0x30>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:27
    cli__i2c_read(command_params, cli_output);
    32d8:	4631      	mov	r1, r6
    32da:	4628      	mov	r0, r5
    32dc:	f7ff ff12 	bl	3104 <cli__i2c_read>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:28
    command_status = APP_CLI_STATUS__SUCCESS;
    32e0:	2000      	movs	r0, #0
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:39
}
    32e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:31
  else if (write) {
    32e4:	b127      	cbz	r7, 32f0 <cli__i2c+0x3c>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:32
    cli__i2c_write(command_params, cli_output);
    32e6:	4631      	mov	r1, r6
    32e8:	4628      	mov	r0, r5
    32ea:	f7ff ff6f 	bl	31cc <cli__i2c_write>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:33
    command_status = APP_CLI_STATUS__SUCCESS;
    32ee:	e7f7      	b.n	32e0 <cli__i2c+0x2c>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handler_i2c.c:35
    command_status = APP_CLI_STATUS__HANDLER_FAILURE;
    32f0:	2001      	movs	r0, #1
    32f2:	e7f6      	b.n	32e2 <cli__i2c+0x2e>
    32f4:	0000b86a 	.word	0x0000b86a
    32f8:	0000b86f 	.word	0x0000b86f

000032fc <cli__crash_me>:
cli__crash_me():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:14
#endif

app_cli_status_e cli__crash_me(app_cli__argument_t argument,
                               sl_string_t user_input_minus_command_name,
                               app_cli__print_string_function cli_output) {
  *((uint32_t *)NULL) = 0xDEADBEEF;
    32fc:	2300      	movs	r3, #0
    32fe:	601b      	str	r3, [r3, #0]
    3300:	deff      	udf	#255	; 0xff
    3302:	Address 0x00003302 is out of bounds.


00003304 <cli__task_list>:
cli__task_list():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:21
}

#if (0 != configUSE_TRACE_FACILITY)
app_cli_status_e cli__task_list(app_cli__argument_t argument,
                                sl_string_t user_input_minus_command_name,
                                app_cli__print_string_function cli_output) {
    3304:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3308:	b089      	sub	sp, #36	; 0x24
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:22
  const int sleep_time = sl_string__to_int(user_input_minus_command_name);
    330a:	4608      	mov	r0, r1
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:21
                                app_cli__print_string_function cli_output) {
    330c:	af04      	add	r7, sp, #16
    330e:	460d      	mov	r5, r1
    3310:	4691      	mov	r9, r2
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:22
  const int sleep_time = sl_string__to_int(user_input_minus_command_name);
    3312:	f7fe fdbd 	bl	1e90 <sl_string__to_int>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:23
  if (sleep_time > 0) {
    3316:	1e04      	subs	r4, r0, #0
    3318:	dd04      	ble.n	3324 <cli__task_list+0x20>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:24
    vTaskResetRunTimeStats();
    331a:	f7fe fd31 	bl	1d80 <vTaskResetRunTimeStats>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:25
    vTaskDelay(sleep_time);
    331e:	4620      	mov	r0, r4
    3320:	f7fe fa3c 	bl	179c <vTaskDelay>
cli__task_list_print():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:43
  static const char *const task_status_table[] = {
      "running", " ready ", "blocked", "suspend", "deleted"};

  // Limit the tasks to avoid heap allocation.
  const unsigned portBASE_TYPE max_tasks = 10;
  TaskStatus_t status[max_tasks];
    3324:	b0da      	sub	sp, #360	; 0x168
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:44
  uint32_t total_cpu_runtime = 0;
    3326:	2400      	movs	r4, #0
    3328:	60fc      	str	r4, [r7, #12]
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:48
  uint32_t total_tasks_runtime = 0;

  void *unused_cli_param = NULL;
  const uint32_t total_run_time = portGET_RUN_TIME_COUNTER_VALUE();
    332a:	f001 fb53 	bl	49d4 <freertos_hooks__get_run_time_counter_value>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:43
  TaskStatus_t status[max_tasks];
    332e:	f10d 0b10 	add.w	fp, sp, #16
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:48
  const uint32_t total_run_time = portGET_RUN_TIME_COUNTER_VALUE();
    3332:	6078      	str	r0, [r7, #4]
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:50
  const unsigned portBASE_TYPE task_count =
      uxTaskGetSystemState(&status[0], max_tasks, &total_cpu_runtime);
    3334:	f107 020c 	add.w	r2, r7, #12
    3338:	210a      	movs	r1, #10
    333a:	4658      	mov	r0, fp
    333c:	f7fe fbc0 	bl	1ac0 <uxTaskGetSystemState>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:52

  sl_string__printf(output_string,
    3340:	4a22      	ldr	r2, [pc, #136]	; (33cc <cli__task_list+0xc8>)
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:50
      uxTaskGetSystemState(&status[0], max_tasks, &total_cpu_runtime);
    3342:	6038      	str	r0, [r7, #0]
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:52
  sl_string__printf(output_string,
    3344:	4922      	ldr	r1, [pc, #136]	; (33d0 <cli__task_list+0xcc>)
    3346:	4628      	mov	r0, r5
    3348:	f7fe fdb5 	bl	1eb6 <sl_string__printf>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:54
                    "%10s  Status Pr Stack CPU%%          Time\n", "Name");
  cli_output(unused_cli_param, output_string);
    334c:	4629      	mov	r1, r5
    334e:	4620      	mov	r0, r4
    3350:	47c8      	blx	r9
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:56

  for (unsigned priority_number = 0; priority_number < configMAX_PRIORITIES;
    3352:	46a0      	mov	r8, r4
    3354:	465e      	mov	r6, fp
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:59
       priority_number++) {
    /* Print in sorted priority order */
    for (unsigned i = 0; i < task_count; i++) {
    3356:	f04f 0a00 	mov.w	sl, #0
    335a:	e020      	b.n	339e <cli__task_list+0x9a>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:61
      const TaskStatus_t *task = &status[i];
      if (task->uxBasePriority == priority_number) {
    335c:	6973      	ldr	r3, [r6, #20]
    335e:	4543      	cmp	r3, r8
    3360:	d11a      	bne.n	3398 <cli__task_list+0x94>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:62
        total_tasks_runtime += task->ulRunTimeCounter;
    3362:	69b2      	ldr	r2, [r6, #24]
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:65

        const unsigned cpu_percent =
            (0 == total_cpu_runtime)
    3364:	68fb      	ldr	r3, [r7, #12]
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:62
        total_tasks_runtime += task->ulRunTimeCounter;
    3366:	4414      	add	r4, r2
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:67
                ? 0
                : task->ulRunTimeCounter / (total_cpu_runtime / 100);
    3368:	b123      	cbz	r3, 3374 <cli__task_list+0x70>
    336a:	2164      	movs	r1, #100	; 0x64
    336c:	fbb3 f3f1 	udiv	r3, r3, r1
    3370:	fbb2 f3f3 	udiv	r3, r2, r3
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:74
        const unsigned stack_in_bytes =
            (sizeof(void *) * task->usStackHighWaterMark);

        sl_string__printf(output_string, "%10s %s %2u %5u %4u %10u us\n",
                          task->pcTaskName,
                          task_status_table[task->eCurrentState],
    3374:	7b31      	ldrb	r1, [r6, #12]
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:72
        sl_string__printf(output_string, "%10s %s %2u %5u %4u %10u us\n",
    3376:	e9cd 3202 	strd	r3, r2, [sp, #8]
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:70
            (sizeof(void *) * task->usStackHighWaterMark);
    337a:	8c33      	ldrh	r3, [r6, #32]
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:69
        const unsigned stack_in_bytes =
    337c:	009b      	lsls	r3, r3, #2
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:72
        sl_string__printf(output_string, "%10s %s %2u %5u %4u %10u us\n",
    337e:	e9cd 8300 	strd	r8, r3, [sp]
    3382:	4b14      	ldr	r3, [pc, #80]	; (33d4 <cli__task_list+0xd0>)
    3384:	6872      	ldr	r2, [r6, #4]
    3386:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
    338a:	4913      	ldr	r1, [pc, #76]	; (33d8 <cli__task_list+0xd4>)
    338c:	4628      	mov	r0, r5
    338e:	f7fe fd92 	bl	1eb6 <sl_string__printf>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:77
                          (unsigned)task->uxBasePriority, stack_in_bytes,
                          cpu_percent, time_us);
        cli_output(unused_cli_param, output_string);
    3392:	4629      	mov	r1, r5
    3394:	2000      	movs	r0, #0
    3396:	47c8      	blx	r9
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:59
    for (unsigned i = 0; i < task_count; i++) {
    3398:	f10a 0a01 	add.w	sl, sl, #1
    339c:	3624      	adds	r6, #36	; 0x24
    339e:	683b      	ldr	r3, [r7, #0]
    33a0:	4553      	cmp	r3, sl
    33a2:	d1db      	bne.n	335c <cli__task_list+0x58>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:57
       priority_number++) {
    33a4:	f108 0801 	add.w	r8, r8, #1
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:56
  for (unsigned priority_number = 0; priority_number < configMAX_PRIORITIES;
    33a8:	f1b8 0f0a 	cmp.w	r8, #10
    33ac:	d1d2      	bne.n	3354 <cli__task_list+0x50>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:82
      }
    }
  }

  sl_string__printf(output_string, "Overhead: %u uS\n",
    33ae:	687b      	ldr	r3, [r7, #4]
    33b0:	490a      	ldr	r1, [pc, #40]	; (33dc <cli__task_list+0xd8>)
    33b2:	1b1a      	subs	r2, r3, r4
    33b4:	4628      	mov	r0, r5
    33b6:	f7fe fd7e 	bl	1eb6 <sl_string__printf>
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:84
                    (unsigned)(total_run_time - total_tasks_runtime));
  cli_output(unused_cli_param, output_string);
    33ba:	4629      	mov	r1, r5
    33bc:	2000      	movs	r0, #0
    33be:	47c8      	blx	r9
cli__task_list():
C:\road_max_fury/lpc40xx_freertos\l4_io\cli\handlers/handlers_general.c:33
}
    33c0:	2000      	movs	r0, #0
    33c2:	3714      	adds	r7, #20
    33c4:	46bd      	mov	sp, r7
    33c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    33ca:	bf00      	nop
    33cc:	0000b9d9 	.word	0x0000b9d9
    33d0:	0000b9de 	.word	0x0000b9de
    33d4:	0000ba60 	.word	0x0000ba60
    33d8:	0000ba09 	.word	0x0000ba09
    33dc:	0000ba26 	.word	0x0000ba26

000033e0 <ld_dword>:
ld_dword():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:594
static DWORD ld_dword (const BYTE* ptr)	/* Load a 4-byte little-endian word */
{
	DWORD rv;

	rv = ptr[3];
	rv = rv << 8 | ptr[2];
    33e0:	8842      	ldrh	r2, [r0, #2]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:595
	rv = rv << 8 | ptr[1];
    33e2:	7843      	ldrb	r3, [r0, #1]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:596
	rv = rv << 8 | ptr[0];
    33e4:	7800      	ldrb	r0, [r0, #0]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:595
	rv = rv << 8 | ptr[1];
    33e6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:598
	return rv;
}
    33ea:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
    33ee:	4770      	bx	lr

000033f0 <mem_cmp>:
mem_cmp():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:680
}


/* Compare memory block */
static int mem_cmp (const void* dst, const void* src, UINT cnt)	/* ZR:same, NZ:different */
{
    33f0:	b510      	push	{r4, lr}
    33f2:	4402      	add	r2, r0
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:685 (discriminator 2)
	const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
	int r = 0;

	do {
		r = *d++ - *s++;
    33f4:	f810 3b01 	ldrb.w	r3, [r0], #1
    33f8:	f811 4b01 	ldrb.w	r4, [r1], #1
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:686 (discriminator 2)
	} while (--cnt && r == 0);
    33fc:	4290      	cmp	r0, r2
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:685 (discriminator 2)
		r = *d++ - *s++;
    33fe:	eba3 0304 	sub.w	r3, r3, r4
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:686 (discriminator 2)
	} while (--cnt && r == 0);
    3402:	d001      	beq.n	3408 <mem_cmp+0x18>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:686 (discriminator 1)
    3404:	2b00      	cmp	r3, #0
    3406:	d0f5      	beq.n	33f4 <mem_cmp+0x4>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:689

	return r;
}
    3408:	4618      	mov	r0, r3
    340a:	bd10      	pop	{r4, pc}

0000340c <get_ldnumber>:
get_ldnumber():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3123
#if FF_STR_VOLUME_ID		/* Find string volume ID */
	const char *sp;
	char c;
#endif

	tt = tp = *path;
    340c:	6802      	ldr	r2, [r0, #0]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3124
	if (!tp) return vol;	/* Invalid path name? */
    340e:	b14a      	cbz	r2, 3424 <get_ldnumber+0x18>
    3410:	4613      	mov	r3, r2
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3125 (discriminator 2)
	do tc = *tt++; while ((UINT)tc >= (FF_USE_LFN ? ' ' : '!') && tc != ':');	/* Find a colon in the path */
    3412:	f813 1b01 	ldrb.w	r1, [r3], #1
    3416:	291f      	cmp	r1, #31
    3418:	d90b      	bls.n	3432 <get_ldnumber+0x26>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3125 (discriminator 1)
    341a:	293a      	cmp	r1, #58	; 0x3a
    341c:	d1f9      	bne.n	3412 <get_ldnumber+0x6>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3129

	if (tc == ':') {	/* DOS/Windows style volume ID? */
		i = FF_VOLUMES;
		if (IsDigit(*tp) && tp + 2 == tt) {	/* Is there a numeric volume ID + colon? */
    341e:	1c91      	adds	r1, r2, #2
    3420:	428b      	cmp	r3, r1
    3422:	d002      	beq.n	342a <get_ldnumber+0x1e>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3124
	if (!tp) return vol;	/* Invalid path name? */
    3424:	f04f 30ff 	mov.w	r0, #4294967295
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3176
	vol = CurrVol;	/* Default drive is current drive */
#else
	vol = 0;		/* Default drive is 0 */
#endif
	return vol;		/* Return the default drive */
}
    3428:	4770      	bx	lr
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3145
		if (i < FF_VOLUMES) {	/* If a volume ID is found, get the drive number and strip it */
    342a:	7812      	ldrb	r2, [r2, #0]
    342c:	2a30      	cmp	r2, #48	; 0x30
    342e:	d1f9      	bne.n	3424 <get_ldnumber+0x18>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3147
			*path = tt;		/* Snip the drive prefix off */
    3430:	6003      	str	r3, [r0, #0]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3175
	return vol;		/* Return the default drive */
    3432:	2000      	movs	r0, #0
    3434:	4770      	bx	lr

00003436 <sync_window.part.6>:
sync_window():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:1042
static FRESULT sync_window (	/* Returns FR_OK or FR_DISK_ERR */
    3436:	b570      	push	{r4, r5, r6, lr}
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:1050
		if (disk_write(fs->pdrv, fs->win, fs->winsect, 1) == RES_OK) {	/* Write back the window */
    3438:	f100 0638 	add.w	r6, r0, #56	; 0x38
    343c:	6b42      	ldr	r2, [r0, #52]	; 0x34
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:1042
static FRESULT sync_window (	/* Returns FR_OK or FR_DISK_ERR */
    343e:	4604      	mov	r4, r0
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:1050
		if (disk_write(fs->pdrv, fs->win, fs->winsect, 1) == RES_OK) {	/* Write back the window */
    3440:	2301      	movs	r3, #1
    3442:	4631      	mov	r1, r6
    3444:	7840      	ldrb	r0, [r0, #1]
    3446:	f000 fa5b 	bl	3900 <disk_write>
    344a:	4605      	mov	r5, r0
    344c:	b988      	cbnz	r0, 3472 <sync_window.part.6+0x3c>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:1052
			if (fs->winsect - fs->fatbase < fs->fsize) {	/* Is it in the 1st FAT? */
    344e:	6b61      	ldr	r1, [r4, #52]	; 0x34
    3450:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    3452:	6a22      	ldr	r2, [r4, #32]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:1051
			fs->wflag = 0;	/* Clear window dirty flag */
    3454:	70e0      	strb	r0, [r4, #3]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:1052
			if (fs->winsect - fs->fatbase < fs->fsize) {	/* Is it in the 1st FAT? */
    3456:	1acb      	subs	r3, r1, r3
    3458:	4293      	cmp	r3, r2
    345a:	d208      	bcs.n	346e <sync_window.part.6+0x38>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:1053
				if (fs->n_fats == 2) disk_write(fs->pdrv, fs->win, fs->winsect + fs->fsize, 1);	/* Reflect it to 2nd FAT if needed */
    345c:	78a3      	ldrb	r3, [r4, #2]
    345e:	2b02      	cmp	r3, #2
    3460:	d105      	bne.n	346e <sync_window.part.6+0x38>
    3462:	440a      	add	r2, r1
    3464:	2301      	movs	r3, #1
    3466:	4631      	mov	r1, r6
    3468:	7860      	ldrb	r0, [r4, #1]
    346a:	f000 fa49 	bl	3900 <disk_write>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:1060
}
    346e:	4628      	mov	r0, r5
    3470:	bd70      	pop	{r4, r5, r6, pc}
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:1056
			res = FR_DISK_ERR;
    3472:	2501      	movs	r5, #1
    3474:	e7fb      	b.n	346e <sync_window.part.6+0x38>

00003476 <move_window>:
move_window():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:1068
{
    3476:	b538      	push	{r3, r4, r5, lr}
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:1072
	if (sector != fs->winsect) {	/* Window offset changed? */
    3478:	6b43      	ldr	r3, [r0, #52]	; 0x34
    347a:	428b      	cmp	r3, r1
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:1068
{
    347c:	4604      	mov	r4, r0
    347e:	460d      	mov	r5, r1
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:1072
	if (sector != fs->winsect) {	/* Window offset changed? */
    3480:	d019      	beq.n	34b6 <move_window+0x40>
sync_window():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:1049
	if (fs->wflag) {	/* Is the disk access window dirty */
    3482:	78c3      	ldrb	r3, [r0, #3]
    3484:	b98b      	cbnz	r3, 34aa <move_window+0x34>
move_window():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:1077
			if (disk_read(fs->pdrv, fs->win, sector, 1) != RES_OK) {
    3486:	2301      	movs	r3, #1
    3488:	462a      	mov	r2, r5
    348a:	f104 0138 	add.w	r1, r4, #56	; 0x38
    348e:	7860      	ldrb	r0, [r4, #1]
    3490:	f000 fa22 	bl	38d8 <disk_read>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:1079
				res = FR_DISK_ERR;
    3494:	2800      	cmp	r0, #0
    3496:	bf18      	it	ne
    3498:	f04f 35ff 	movne.w	r5, #4294967295
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:1077
			if (disk_read(fs->pdrv, fs->win, sector, 1) != RES_OK) {
    349c:	4603      	mov	r3, r0
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:1081
			fs->winsect = sector;
    349e:	6365      	str	r5, [r4, #52]	; 0x34
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:1079
				res = FR_DISK_ERR;
    34a0:	bf0c      	ite	eq
    34a2:	4603      	moveq	r3, r0
    34a4:	2301      	movne	r3, #1
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:1085
}
    34a6:	4618      	mov	r0, r3
    34a8:	bd38      	pop	{r3, r4, r5, pc}
sync_window():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:1085
    34aa:	f7ff ffc4 	bl	3436 <sync_window.part.6>
move_window():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:1076
		if (res == FR_OK) {			/* Fill sector window with new data */
    34ae:	4603      	mov	r3, r0
    34b0:	2800      	cmp	r0, #0
    34b2:	d1f8      	bne.n	34a6 <move_window+0x30>
    34b4:	e7e7      	b.n	3486 <move_window+0x10>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:1069
	FRESULT res = FR_OK;
    34b6:	2300      	movs	r3, #0
    34b8:	e7f5      	b.n	34a6 <move_window+0x30>
    34ba:	Address 0x000034ba is out of bounds.


000034bc <check_fs>:
check_fs():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3189

static BYTE check_fs (	/* 0:FAT, 1:exFAT, 2:Valid BS but not FAT, 3:Not a BS, 4:Disk error */
	FATFS* fs,			/* Filesystem object */
	DWORD sect			/* Sector# (lba) to load and check if it is an FAT-VBR or not */
)
{
    34bc:	b538      	push	{r3, r4, r5, lr}
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3190
	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;		/* Invaidate window */
    34be:	2300      	movs	r3, #0
    34c0:	70c3      	strb	r3, [r0, #3]
    34c2:	f04f 33ff 	mov.w	r3, #4294967295
    34c6:	6343      	str	r3, [r0, #52]	; 0x34
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3189
{
    34c8:	4605      	mov	r5, r0
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3191
	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
    34ca:	f7ff ffd4 	bl	3476 <move_window>
    34ce:	4604      	mov	r4, r0
    34d0:	bb18      	cbnz	r0, 351a <check_fs+0x5e>
ld_word():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:585
	rv = rv << 8 | ptr[0];
    34d2:	f895 2237 	ldrb.w	r2, [r5, #567]	; 0x237
    34d6:	f895 3236 	ldrb.w	r3, [r5, #566]	; 0x236
    34da:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
check_fs():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3193

	if (ld_word(fs->win + BS_55AA) != 0xAA55) return 3;	/* Check boot record signature (always here regardless of the sector size) */
    34de:	f64a 2255 	movw	r2, #43605	; 0xaa55
    34e2:	4293      	cmp	r3, r2
    34e4:	d11b      	bne.n	351e <check_fs+0x62>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3198

#if FF_FS_EXFAT
	if (!mem_cmp(fs->win + BS_JmpBoot, "\xEB\x76\x90" "EXFAT   ", 11)) return 1;	/* Check if exFAT VBR */
#endif
	if (fs->win[BS_JmpBoot] == 0xE9 || fs->win[BS_JmpBoot] == 0xEB || fs->win[BS_JmpBoot] == 0xE8) {	/* Valid JumpBoot code? */
    34e6:	f895 3038 	ldrb.w	r3, [r5, #56]	; 0x38
    34ea:	2beb      	cmp	r3, #235	; 0xeb
    34ec:	d003      	beq.n	34f6 <check_fs+0x3a>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3198 (discriminator 2)
    34ee:	3318      	adds	r3, #24
    34f0:	b2db      	uxtb	r3, r3
    34f2:	2b01      	cmp	r3, #1
    34f4:	d815      	bhi.n	3522 <check_fs+0x66>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3199
		if (!mem_cmp(fs->win + BS_FilSysType, "FAT", 3)) return 0;		/* Is it an FAT VBR? */
    34f6:	2203      	movs	r2, #3
    34f8:	490b      	ldr	r1, [pc, #44]	; (3528 <check_fs+0x6c>)
    34fa:	f105 006e 	add.w	r0, r5, #110	; 0x6e
    34fe:	f7ff ff77 	bl	33f0 <mem_cmp>
    3502:	b140      	cbz	r0, 3516 <check_fs+0x5a>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3200
		if (!mem_cmp(fs->win + BS_FilSysType32, "FAT32", 5)) return 0;	/* Is it an FAT32 VBR? */
    3504:	2205      	movs	r2, #5
    3506:	4909      	ldr	r1, [pc, #36]	; (352c <check_fs+0x70>)
    3508:	f105 008a 	add.w	r0, r5, #138	; 0x8a
    350c:	f7ff ff70 	bl	33f0 <mem_cmp>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3202
	}
	return 2;	/* Valid BS but not FAT */
    3510:	2800      	cmp	r0, #0
    3512:	bf18      	it	ne
    3514:	2402      	movne	r4, #2
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3203
}
    3516:	4620      	mov	r0, r4
    3518:	bd38      	pop	{r3, r4, r5, pc}
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3191
	if (move_window(fs, sect) != FR_OK) return 4;	/* Load boot record */
    351a:	2404      	movs	r4, #4
    351c:	e7fb      	b.n	3516 <check_fs+0x5a>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3193
	if (ld_word(fs->win + BS_55AA) != 0xAA55) return 3;	/* Check boot record signature (always here regardless of the sector size) */
    351e:	2403      	movs	r4, #3
    3520:	e7f9      	b.n	3516 <check_fs+0x5a>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3202
	return 2;	/* Valid BS but not FAT */
    3522:	2402      	movs	r4, #2
    3524:	e7f7      	b.n	3516 <check_fs+0x5a>
    3526:	bf00      	nop
    3528:	0000ba74 	.word	0x0000ba74
    352c:	0000ba78 	.word	0x0000ba78

00003530 <find_volume>:
find_volume():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3217
static FRESULT find_volume (	/* FR_OK(0): successful, !=0: an error occurred */
	const TCHAR** path,			/* Pointer to pointer to the path name (drive number) */
	FATFS** rfs,				/* Pointer to pointer to the found filesystem object */
	BYTE mode					/* !=0: Check write protection for write access */
)
{
    3530:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3228
	FATFS *fs;
	UINT i;


	/* Get logical drive number */
	*rfs = 0;
    3534:	2300      	movs	r3, #0
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3217
{
    3536:	b085      	sub	sp, #20
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3228
	*rfs = 0;
    3538:	600b      	str	r3, [r1, #0]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3217
{
    353a:	460f      	mov	r7, r1
    353c:	4615      	mov	r5, r2
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3229
	vol = get_ldnumber(path);
    353e:	f7ff ff65 	bl	340c <get_ldnumber>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3230
	if (vol < 0) return FR_INVALID_DRIVE;
    3542:	1e06      	subs	r6, r0, #0
    3544:	f2c0 8139 	blt.w	37ba <find_volume+0x28a>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3233

	/* Check if the filesystem object is valid or not */
	fs = FatFs[vol];					/* Get pointer to the filesystem object */
    3548:	4ba4      	ldr	r3, [pc, #656]	; (37dc <find_volume+0x2ac>)
    354a:	f853 4026 	ldr.w	r4, [r3, r6, lsl #2]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3234
	if (!fs) return FR_NOT_ENABLED;		/* Is the filesystem object available? */
    354e:	2c00      	cmp	r4, #0
    3550:	f000 8135 	beq.w	37be <find_volume+0x28e>
lock_fs():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:911
	return ff_req_grant(fs->sobj);
    3554:	6920      	ldr	r0, [r4, #16]
    3556:	f000 f99e 	bl	3896 <ff_req_grant>
find_volume():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3236
#if FF_FS_REENTRANT
	if (!lock_fs(fs)) return FR_TIMEOUT;	/* Lock the volume */
    355a:	2800      	cmp	r0, #0
    355c:	f000 8131 	beq.w	37c2 <find_volume+0x292>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3238
#endif
	*rfs = fs;							/* Return pointer to the filesystem object */
    3560:	603c      	str	r4, [r7, #0]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3241

	mode &= (BYTE)~FA_READ;				/* Desired access mode, write access or not */
	if (fs->fs_type != 0) {				/* If the volume has been mounted */
    3562:	7823      	ldrb	r3, [r4, #0]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3240
	mode &= (BYTE)~FA_READ;				/* Desired access mode, write access or not */
    3564:	f005 05fe 	and.w	r5, r5, #254	; 0xfe
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3241
	if (fs->fs_type != 0) {				/* If the volume has been mounted */
    3568:	b16b      	cbz	r3, 3586 <find_volume+0x56>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3242
		stat = disk_status(fs->pdrv);
    356a:	7860      	ldrb	r0, [r4, #1]
    356c:	f000 f9af 	bl	38ce <disk_status>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3243
		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
    3570:	07c1      	lsls	r1, r0, #31
    3572:	d408      	bmi.n	3586 <find_volume+0x56>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3244
			if (!FF_FS_READONLY && mode && (stat & STA_PROTECT)) {	/* Check write protection if needed */
    3574:	b11d      	cbz	r5, 357e <find_volume+0x4e>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3244 (discriminator 1)
    3576:	f010 0504 	ands.w	r5, r0, #4
    357a:	d000      	beq.n	357e <find_volume+0x4e>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3245
				return FR_WRITE_PROTECTED;
    357c:	250a      	movs	r5, #10
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3444
#endif
#if FF_FS_LOCK != 0			/* Clear file lock semaphores */
	clear_lock(fs);
#endif
	return FR_OK;
}
    357e:	4628      	mov	r0, r5
    3580:	b005      	add	sp, #20
    3582:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3254
	fs->fs_type = 0;					/* Clear the filesystem object */
    3586:	2300      	movs	r3, #0
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3255
	fs->pdrv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
    3588:	b2f0      	uxtb	r0, r6
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3254
	fs->fs_type = 0;					/* Clear the filesystem object */
    358a:	7023      	strb	r3, [r4, #0]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3255
	fs->pdrv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
    358c:	7060      	strb	r0, [r4, #1]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3256
	stat = disk_initialize(fs->pdrv);	/* Initialize the physical drive */
    358e:	f000 f990 	bl	38b2 <disk_initialize>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3257
	if (stat & STA_NOINIT) { 			/* Check if the initialization succeeded */
    3592:	07c2      	lsls	r2, r0, #31
    3594:	f100 8117 	bmi.w	37c6 <find_volume+0x296>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3260
	if (!FF_FS_READONLY && mode && (stat & STA_PROTECT)) { /* Check disk write protection if needed */
    3598:	b10d      	cbz	r5, 359e <find_volume+0x6e>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3260 (discriminator 1)
    359a:	0743      	lsls	r3, r0, #29
    359c:	d4ee      	bmi.n	357c <find_volume+0x4c>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3270
	fmt = check_fs(fs, bsect);			/* Load sector 0 and check if it is an FAT-VBR as SFD */
    359e:	2100      	movs	r1, #0
    35a0:	4620      	mov	r0, r4
    35a2:	f7ff ff8b 	bl	34bc <check_fs>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3271
	if (fmt == 2 || (fmt < 2 && LD2PT(vol) != 0)) {	/* Not an FAT-VBR or forced partition number */
    35a6:	2802      	cmp	r0, #2
    35a8:	f040 80ee 	bne.w	3788 <find_volume+0x258>
    35ac:	466f      	mov	r7, sp
    35ae:	f504 71ff 	add.w	r1, r4, #510	; 0x1fe
    35b2:	f204 263e 	addw	r6, r4, #574	; 0x23e
    35b6:	463d      	mov	r5, r7
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3274
			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
    35b8:	f811 0c04 	ldrb.w	r0, [r1, #-4]
    35bc:	b110      	cbz	r0, 35c4 <find_volume+0x94>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3274 (discriminator 1)
    35be:	4608      	mov	r0, r1
    35c0:	f7ff ff0e 	bl	33e0 <ld_dword>
    35c4:	3110      	adds	r1, #16
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3272 (discriminator 4)
		for (i = 0; i < 4; i++) {		/* Get partition offset */
    35c6:	428e      	cmp	r6, r1
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3274 (discriminator 4)
			br[i] = pt[PTE_System] ? ld_dword(pt + PTE_StLba) : 0;
    35c8:	f845 0b04 	str.w	r0, [r5], #4
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3272 (discriminator 4)
		for (i = 0; i < 4; i++) {		/* Get partition offset */
    35cc:	d1f4      	bne.n	35b8 <find_volume+0x88>
    35ce:	2500      	movs	r5, #0
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3279
			bsect = br[i];
    35d0:	f857 6b04 	ldr.w	r6, [r7], #4
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3280
			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
    35d4:	2e00      	cmp	r6, #0
    35d6:	f000 80ce 	beq.w	3776 <find_volume+0x246>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3280 (discriminator 1)
    35da:	4631      	mov	r1, r6
    35dc:	4620      	mov	r0, r4
    35de:	f7ff ff6d 	bl	34bc <check_fs>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3281 (discriminator 1)
		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
    35e2:	2801      	cmp	r0, #1
    35e4:	f200 80c8 	bhi.w	3778 <find_volume+0x248>
ld_word():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:585
	rv = rv << 8 | ptr[0];
    35e8:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
    35ec:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
    35f0:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
find_volume():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3352
		if (ld_word(fs->win + BPB_BytsPerSec) != SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_BytsPerSec must be equal to the physical sector size) */
    35f4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
    35f8:	f040 80ca 	bne.w	3790 <find_volume+0x260>
ld_word():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:585
	rv = rv << 8 | ptr[0];
    35fc:	f894 304f 	ldrb.w	r3, [r4, #79]	; 0x4f
    3600:	f894 504e 	ldrb.w	r5, [r4, #78]	; 0x4e
find_volume():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3355
		if (fasize == 0) fasize = ld_dword(fs->win + BPB_FATSz32);
    3604:	ea55 2503 	orrs.w	r5, r5, r3, lsl #8
    3608:	d104      	bne.n	3614 <find_volume+0xe4>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3355 (discriminator 1)
    360a:	f104 005c 	add.w	r0, r4, #92	; 0x5c
    360e:	f7ff fee7 	bl	33e0 <ld_dword>
    3612:	4605      	mov	r5, r0
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3358
		fs->n_fats = fs->win[BPB_NumFATs];				/* Number of FATs */
    3614:	f894 1048 	ldrb.w	r1, [r4, #72]	; 0x48
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3356
		fs->fsize = fasize;
    3618:	6225      	str	r5, [r4, #32]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3359
		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
    361a:	1e4b      	subs	r3, r1, #1
    361c:	2b01      	cmp	r3, #1
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3358
		fs->n_fats = fs->win[BPB_NumFATs];				/* Number of FATs */
    361e:	70a1      	strb	r1, [r4, #2]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3359
		if (fs->n_fats != 1 && fs->n_fats != 2) return FR_NO_FILESYSTEM;	/* (Must be 1 or 2) */
    3620:	f200 80b6 	bhi.w	3790 <find_volume+0x260>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3362
		fs->csize = fs->win[BPB_SecPerClus];			/* Cluster size */
    3624:	f894 9045 	ldrb.w	r9, [r4, #69]	; 0x45
    3628:	fa1f f389 	uxth.w	r3, r9
    362c:	8163      	strh	r3, [r4, #10]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3363
		if (fs->csize == 0 || (fs->csize & (fs->csize - 1))) return FR_NO_FILESYSTEM;	/* (Must be power of 2) */
    362e:	2b00      	cmp	r3, #0
    3630:	f000 80ae 	beq.w	3790 <find_volume+0x260>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3363 (discriminator 2)
    3634:	f109 33ff 	add.w	r3, r9, #4294967295
    3638:	ea13 0f09 	tst.w	r3, r9
    363c:	f040 80a8 	bne.w	3790 <find_volume+0x260>
ld_word():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:585
	rv = rv << 8 | ptr[0];
    3640:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
    3644:	f894 7049 	ldrb.w	r7, [r4, #73]	; 0x49
    3648:	ea47 2703 	orr.w	r7, r7, r3, lsl #8
    364c:	b23f      	sxth	r7, r7
    364e:	fa1f f887 	uxth.w	r8, r7
find_volume():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3366
		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
    3652:	f018 0f0f 	tst.w	r8, #15
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3365
		fs->n_rootdir = ld_word(fs->win + BPB_RootEntCnt);	/* Number of root directory entries */
    3656:	f8a4 8008 	strh.w	r8, [r4, #8]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3366
		if (fs->n_rootdir % (SS(fs) / SZDIRE)) return FR_NO_FILESYSTEM;	/* (Must be sector aligned) */
    365a:	f040 8099 	bne.w	3790 <find_volume+0x260>
ld_word():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:585
	rv = rv << 8 | ptr[0];
    365e:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
    3662:	f894 004b 	ldrb.w	r0, [r4, #75]	; 0x4b
find_volume():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3369
		if (tsect == 0) tsect = ld_dword(fs->win + BPB_TotSec32);
    3666:	ea50 2003 	orrs.w	r0, r0, r3, lsl #8
    366a:	d103      	bne.n	3674 <find_volume+0x144>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3369 (discriminator 1)
    366c:	f104 0058 	add.w	r0, r4, #88	; 0x58
    3670:	f7ff feb6 	bl	33e0 <ld_dword>
ld_word():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:585
	rv = rv << 8 | ptr[0];
    3674:	f894 2047 	ldrb.w	r2, [r4, #71]	; 0x47
    3678:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
find_volume():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3372
		if (nrsv == 0) return FR_NO_FILESYSTEM;			/* (Must not be 0) */
    367c:	ea53 2302 	orrs.w	r3, r3, r2, lsl #8
    3680:	f000 8086 	beq.w	3790 <find_volume+0x260>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3360
		fasize *= fs->n_fats;							/* Number of sectors for FAT area */
    3684:	fb05 fc01 	mul.w	ip, r5, r1
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3375
		sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZDIRE);	/* RSV + FAT + DIR */
    3688:	eb03 1218 	add.w	r2, r3, r8, lsr #4
    368c:	4462      	add	r2, ip
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3376
		if (tsect < sysect) return FR_NO_FILESYSTEM;	/* (Invalid volume size) */
    368e:	4290      	cmp	r0, r2
    3690:	d37e      	bcc.n	3790 <find_volume+0x260>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3377
		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
    3692:	1a80      	subs	r0, r0, r2
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3378
		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
    3694:	4548      	cmp	r0, r9
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3377
		nclst = (tsect - sysect) / fs->csize;			/* Number of clusters */
    3696:	fbb0 f1f9 	udiv	r1, r0, r9
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3378
		if (nclst == 0) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
    369a:	d379      	bcc.n	3790 <find_volume+0x260>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3380
		if (nclst <= MAX_FAT32) fmt = FS_FAT32;
    369c:	4850      	ldr	r0, [pc, #320]	; (37e0 <find_volume+0x2b0>)
    369e:	4281      	cmp	r1, r0
    36a0:	d876      	bhi.n	3790 <find_volume+0x260>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3381
		if (nclst <= MAX_FAT16) fmt = FS_FAT16;
    36a2:	f64f 70f5 	movw	r0, #65525	; 0xfff5
    36a6:	4281      	cmp	r1, r0
    36a8:	f240 808f 	bls.w	37ca <find_volume+0x29a>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3380
		if (nclst <= MAX_FAT32) fmt = FS_FAT32;
    36ac:	f04f 0903 	mov.w	r9, #3
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3386
		fs->n_fatent = nclst + 2;						/* Number of FAT entries */
    36b0:	3102      	adds	r1, #2
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3388
		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
    36b2:	4433      	add	r3, r6
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3389
		fs->database = bsect + sysect;					/* Data start sector */
    36b4:	4432      	add	r2, r6
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3390
		if (fmt == FS_FAT32) {
    36b6:	f1b9 0f03 	cmp.w	r9, #3
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3386
		fs->n_fatent = nclst + 2;						/* Number of FAT entries */
    36ba:	61e1      	str	r1, [r4, #28]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3387
		fs->volbase = bsect;							/* Volume start sector */
    36bc:	6266      	str	r6, [r4, #36]	; 0x24
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3388
		fs->fatbase = bsect + nrsv; 					/* FAT start sector */
    36be:	62a3      	str	r3, [r4, #40]	; 0x28
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3389
		fs->database = bsect + sysect;					/* Data start sector */
    36c0:	6322      	str	r2, [r4, #48]	; 0x30
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3390
		if (fmt == FS_FAT32) {
    36c2:	d169      	bne.n	3798 <find_volume+0x268>
ld_word():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:585
	rv = rv << 8 | ptr[0];
    36c4:	f894 2063 	ldrb.w	r2, [r4, #99]	; 0x63
    36c8:	f894 3062 	ldrb.w	r3, [r4, #98]	; 0x62
    36cc:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
find_volume():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3391
			if (ld_word(fs->win + BPB_FSVer32) != 0) return FR_NO_FILESYSTEM;	/* (Must be FAT32 revision 0.0) */
    36d0:	431f      	orrs	r7, r3
    36d2:	b23f      	sxth	r7, r7
    36d4:	2f00      	cmp	r7, #0
    36d6:	d15b      	bne.n	3790 <find_volume+0x260>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3393
			fs->dirbase = ld_dword(fs->win + BPB_RootClus32);	/* Root directory start cluster */
    36d8:	f104 0064 	add.w	r0, r4, #100	; 0x64
    36dc:	f7ff fe80 	bl	33e0 <ld_dword>
    36e0:	62e0      	str	r0, [r4, #44]	; 0x2c
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3394
			szbfat = fs->n_fatent * 4;					/* (Needed FAT size) */
    36e2:	0089      	lsls	r1, r1, #2
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3401
		if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs)) return FR_NO_FILESYSTEM;	/* (BPB_FATSz must not be less than the size needed) */
    36e4:	f201 11ff 	addw	r1, r1, #511	; 0x1ff
    36e8:	ebb5 2f51 	cmp.w	r5, r1, lsr #9
    36ec:	d350      	bcc.n	3790 <find_volume+0x260>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3405
		fs->last_clst = fs->free_clst = 0xFFFFFFFF;		/* Initialize cluster allocation information */
    36ee:	f04f 33ff 	mov.w	r3, #4294967295
    36f2:	e9c4 3305 	strd	r3, r3, [r4, #20]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3408
		if (fmt == FS_FAT32				/* Allow to update FSInfo only if BPB_FSInfo32 == 1 */
    36f6:	f1b9 0f03 	cmp.w	r9, #3
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3406
		fs->fsi_flag = 0x80;
    36fa:	f04f 0380 	mov.w	r3, #128	; 0x80
    36fe:	7123      	strb	r3, [r4, #4]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3408
		if (fmt == FS_FAT32				/* Allow to update FSInfo only if BPB_FSInfo32 == 1 */
    3700:	d12f      	bne.n	3762 <find_volume+0x232>
ld_word():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:585
	rv = rv << 8 | ptr[0];
    3702:	f894 2069 	ldrb.w	r2, [r4, #105]	; 0x69
    3706:	f894 3068 	ldrb.w	r3, [r4, #104]	; 0x68
    370a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
find_volume():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3409
			&& ld_word(fs->win + BPB_FSInfo32) == 1
    370e:	2b01      	cmp	r3, #1
    3710:	d127      	bne.n	3762 <find_volume+0x232>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3410
			&& move_window(fs, bsect + 1) == FR_OK)
    3712:	1c71      	adds	r1, r6, #1
    3714:	4620      	mov	r0, r4
    3716:	f7ff feae 	bl	3476 <move_window>
    371a:	bb10      	cbnz	r0, 3762 <find_volume+0x232>
ld_word():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:585
	rv = rv << 8 | ptr[0];
    371c:	f894 2237 	ldrb.w	r2, [r4, #567]	; 0x237
    3720:	f894 3236 	ldrb.w	r3, [r4, #566]	; 0x236
find_volume():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3412
			fs->fsi_flag = 0;
    3724:	7120      	strb	r0, [r4, #4]
ld_word():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:585
	rv = rv << 8 | ptr[0];
    3726:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
find_volume():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3413
			if (ld_word(fs->win + BS_55AA) == 0xAA55	/* Load FSInfo data if available */
    372a:	f64a 2255 	movw	r2, #43605	; 0xaa55
    372e:	4293      	cmp	r3, r2
    3730:	d117      	bne.n	3762 <find_volume+0x232>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3414
				&& ld_dword(fs->win + FSI_LeadSig) == 0x41615252
    3732:	f104 0038 	add.w	r0, r4, #56	; 0x38
    3736:	f7ff fe53 	bl	33e0 <ld_dword>
    373a:	4b2a      	ldr	r3, [pc, #168]	; (37e4 <find_volume+0x2b4>)
    373c:	4298      	cmp	r0, r3
    373e:	d110      	bne.n	3762 <find_volume+0x232>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3415
				&& ld_dword(fs->win + FSI_StrucSig) == 0x61417272)
    3740:	f504 7007 	add.w	r0, r4, #540	; 0x21c
    3744:	f7ff fe4c 	bl	33e0 <ld_dword>
    3748:	4b27      	ldr	r3, [pc, #156]	; (37e8 <find_volume+0x2b8>)
    374a:	4298      	cmp	r0, r3
    374c:	d109      	bne.n	3762 <find_volume+0x232>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3418
				fs->free_clst = ld_dword(fs->win + FSI_Free_Count);
    374e:	f504 7008 	add.w	r0, r4, #544	; 0x220
    3752:	f7ff fe45 	bl	33e0 <ld_dword>
    3756:	61a0      	str	r0, [r4, #24]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3421
				fs->last_clst = ld_dword(fs->win + FSI_Nxt_Free);
    3758:	f504 7009 	add.w	r0, r4, #548	; 0x224
    375c:	f7ff fe40 	bl	33e0 <ld_dword>
    3760:	6160      	str	r0, [r4, #20]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3430
	fs->id = ++Fsid;		/* Volume mount ID */
    3762:	4a22      	ldr	r2, [pc, #136]	; (37ec <find_volume+0x2bc>)
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3429
	fs->fs_type = fmt;		/* FAT sub-type */
    3764:	f884 9000 	strb.w	r9, [r4]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3430
	fs->id = ++Fsid;		/* Volume mount ID */
    3768:	8813      	ldrh	r3, [r2, #0]
    376a:	3301      	adds	r3, #1
    376c:	b29b      	uxth	r3, r3
    376e:	8013      	strh	r3, [r2, #0]
    3770:	80e3      	strh	r3, [r4, #6]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3443
	return FR_OK;
    3772:	2500      	movs	r5, #0
    3774:	e703      	b.n	357e <find_volume+0x4e>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3280
			fmt = bsect ? check_fs(fs, bsect) : 3;	/* Check the partition */
    3776:	2003      	movs	r0, #3
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3281 (discriminator 1)
		} while (LD2PT(vol) == 0 && fmt >= 2 && ++i < 4);
    3778:	3501      	adds	r5, #1
    377a:	2d04      	cmp	r5, #4
    377c:	f47f af28 	bne.w	35d0 <find_volume+0xa0>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3283
	if (fmt == 4) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
    3780:	2804      	cmp	r0, #4
    3782:	d105      	bne.n	3790 <find_volume+0x260>
    3784:	2501      	movs	r5, #1
    3786:	e6fa      	b.n	357e <find_volume+0x4e>
    3788:	2804      	cmp	r0, #4
    378a:	d0fb      	beq.n	3784 <find_volume+0x254>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3284
	if (fmt >= 2) return FR_NO_FILESYSTEM;	/* No FAT volume is found */
    378c:	2801      	cmp	r0, #1
    378e:	d901      	bls.n	3794 <find_volume+0x264>
    3790:	250d      	movs	r5, #13
    3792:	e6f4      	b.n	357e <find_volume+0x4e>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3269
	bsect = 0;
    3794:	2600      	movs	r6, #0
    3796:	e727      	b.n	35e8 <find_volume+0xb8>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3396
			if (fs->n_rootdir == 0)	return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must not be 0) */
    3798:	f1b8 0f00 	cmp.w	r8, #0
    379c:	d0f8      	beq.n	3790 <find_volume+0x260>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3397
			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
    379e:	4463      	add	r3, ip
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3399
				fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
    37a0:	f1b9 0f02 	cmp.w	r9, #2
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3397
			fs->dirbase = fs->fatbase + fasize;			/* Root directory start sector */
    37a4:	62e3      	str	r3, [r4, #44]	; 0x2c
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3398
			szbfat = (fmt == FS_FAT16) ?				/* (Needed FAT size) */
    37a6:	ea4f 0341 	mov.w	r3, r1, lsl #1
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3399
				fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
    37aa:	bf1b      	ittet	ne
    37ac:	185b      	addne	r3, r3, r1
    37ae:	f001 0101 	andne.w	r1, r1, #1
    37b2:	4619      	moveq	r1, r3
    37b4:	eb01 0153 	addne.w	r1, r1, r3, lsr #1
    37b8:	e794      	b.n	36e4 <find_volume+0x1b4>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3230
	if (vol < 0) return FR_INVALID_DRIVE;
    37ba:	250b      	movs	r5, #11
    37bc:	e6df      	b.n	357e <find_volume+0x4e>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3234
	if (!fs) return FR_NOT_ENABLED;		/* Is the filesystem object available? */
    37be:	250c      	movs	r5, #12
    37c0:	e6dd      	b.n	357e <find_volume+0x4e>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3236
	if (!lock_fs(fs)) return FR_TIMEOUT;	/* Lock the volume */
    37c2:	250f      	movs	r5, #15
    37c4:	e6db      	b.n	357e <find_volume+0x4e>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3258
		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
    37c6:	2503      	movs	r5, #3
    37c8:	e6d9      	b.n	357e <find_volume+0x4e>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3382
		if (nclst <= MAX_FAT12) fmt = FS_FAT12;
    37ca:	f640 79f5 	movw	r9, #4085	; 0xff5
    37ce:	4549      	cmp	r1, r9
    37d0:	bf8c      	ite	hi
    37d2:	f04f 0902 	movhi.w	r9, #2
    37d6:	f04f 0901 	movls.w	r9, #1
    37da:	e769      	b.n	36b0 <find_volume+0x180>
    37dc:	10000d10 	.word	0x10000d10
    37e0:	0ffffff5 	.word	0x0ffffff5
    37e4:	41615252 	.word	0x41615252
    37e8:	61417272 	.word	0x61417272
    37ec:	10000d14 	.word	0x10000d14

000037f0 <unlock_fs>:
unlock_fs():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:920
	if (fs && res != FR_NOT_ENABLED && res != FR_INVALID_DRIVE && res != FR_TIMEOUT) {
    37f0:	b140      	cbz	r0, 3804 <unlock_fs+0x14>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:920 (discriminator 2)
    37f2:	f1a1 030b 	sub.w	r3, r1, #11
    37f6:	2b01      	cmp	r3, #1
    37f8:	d904      	bls.n	3804 <unlock_fs+0x14>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:920
    37fa:	290f      	cmp	r1, #15
    37fc:	d002      	beq.n	3804 <unlock_fs+0x14>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:921
		ff_rel_grant(fs->sobj);
    37fe:	6900      	ldr	r0, [r0, #16]
    3800:	f000 b852 	b.w	38a8 <ff_rel_grant>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:923
}
    3804:	4770      	bx	lr
    3806:	Address 0x00003806 is out of bounds.


00003808 <f_mount>:
f_mount():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3502
FRESULT f_mount (
	FATFS* fs,			/* Pointer to the filesystem object (NULL:unmount)*/
	const TCHAR* path,	/* Logical drive number to be mounted/unmounted */
	BYTE opt			/* Mode option 0:Do not mount (delayed mount), 1:Mount immediately */
)
{
    3808:	b5f0      	push	{r4, r5, r6, r7, lr}
    380a:	b085      	sub	sp, #20
    380c:	e9cd 1000 	strd	r1, r0, [sp]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3510
	FRESULT res;
	const TCHAR *rp = path;


	/* Get logical drive number */
	vol = get_ldnumber(&rp);
    3810:	a803      	add	r0, sp, #12
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3502
{
    3812:	4614      	mov	r4, r2
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3506
	const TCHAR *rp = path;
    3814:	9103      	str	r1, [sp, #12]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3510
	vol = get_ldnumber(&rp);
    3816:	f7ff fdf9 	bl	340c <get_ldnumber>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3511
	if (vol < 0) return FR_INVALID_DRIVE;
    381a:	1e05      	subs	r5, r0, #0
    381c:	db28      	blt.n	3870 <f_mount+0x68>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3512
	cfs = FatFs[vol];					/* Pointer to fs object */
    381e:	4f15      	ldr	r7, [pc, #84]	; (3874 <f_mount+0x6c>)
    3820:	f857 6025 	ldr.w	r6, [r7, r5, lsl #2]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3514

	if (cfs) {
    3824:	b14e      	cbz	r6, 383a <f_mount+0x32>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3519
#if FF_FS_LOCK != 0
		clear_lock(cfs);
#endif
#if FF_FS_REENTRANT						/* Discard sync object of the current volume */
		if (!ff_del_syncobj(cfs->sobj)) return FR_INT_ERR;
    3826:	6930      	ldr	r0, [r6, #16]
    3828:	f000 f830 	bl	388c <ff_del_syncobj>
    382c:	b918      	cbnz	r0, 3836 <f_mount+0x2e>
    382e:	2402      	movs	r4, #2
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3536 (discriminator 1)

	if (opt == 0) return FR_OK;			/* Do not mount now, it will be mounted later */

	res = find_volume(&path, &fs, 0);	/* Force mounted the volume */
	LEAVE_FF(fs, res);
}
    3830:	4620      	mov	r0, r4
    3832:	b005      	add	sp, #20
    3834:	bdf0      	pop	{r4, r5, r6, r7, pc}
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3521
		cfs->fs_type = 0;				/* Clear old fs object */
    3836:	2300      	movs	r3, #0
    3838:	7033      	strb	r3, [r6, #0]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3524
	if (fs) {
    383a:	9901      	ldr	r1, [sp, #4]
    383c:	b979      	cbnz	r1, 385e <f_mount+0x56>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3530
	FatFs[vol] = fs;					/* Register new fs object */
    383e:	9b01      	ldr	r3, [sp, #4]
    3840:	f847 3025 	str.w	r3, [r7, r5, lsl #2]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3532
	if (opt == 0) return FR_OK;			/* Do not mount now, it will be mounted later */
    3844:	2c00      	cmp	r4, #0
    3846:	d0f3      	beq.n	3830 <f_mount+0x28>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3534
	res = find_volume(&path, &fs, 0);	/* Force mounted the volume */
    3848:	a901      	add	r1, sp, #4
    384a:	2200      	movs	r2, #0
    384c:	4668      	mov	r0, sp
    384e:	f7ff fe6f 	bl	3530 <find_volume>
    3852:	4604      	mov	r4, r0
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3535
	LEAVE_FF(fs, res);
    3854:	4601      	mov	r1, r0
    3856:	9801      	ldr	r0, [sp, #4]
    3858:	f7ff ffca 	bl	37f0 <unlock_fs>
    385c:	e7e8      	b.n	3830 <f_mount+0x28>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3525
		fs->fs_type = 0;				/* Clear new fs object */
    385e:	2300      	movs	r3, #0
    3860:	f801 3b10 	strb.w	r3, [r1], #16
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3527
		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
    3864:	b2e8      	uxtb	r0, r5
    3866:	f000 f807 	bl	3878 <ff_cre_syncobj>
    386a:	2800      	cmp	r0, #0
    386c:	d1e7      	bne.n	383e <f_mount+0x36>
    386e:	e7de      	b.n	382e <f_mount+0x26>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ff.c:3511
	if (vol < 0) return FR_INVALID_DRIVE;
    3870:	240b      	movs	r4, #11
    3872:	e7dd      	b.n	3830 <f_mount+0x28>
    3874:	10000d10 	.word	0x10000d10

00003878 <ff_cre_syncobj>:
ff_cre_syncobj():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ffsystem.c:55

int ff_cre_syncobj (	/* 1:Function succeeded, 0:Could not create the sync object */
	BYTE vol,			/* Corresponding volume (logical drive number) */
	FF_SYNC_t* sobj		/* Pointer to return the created sync object */
)
{
    3878:	b510      	push	{r4, lr}
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ffsystem.c:71
//	OS_ERR err;
//	*sobj = OSMutexCreate(0, &err);
//	return (int)(err == OS_NO_ERR);

	/* FreeRTOS */
	*sobj = xSemaphoreCreateMutex();
    387a:	2001      	movs	r0, #1
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ffsystem.c:55
{
    387c:	460c      	mov	r4, r1
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ffsystem.c:71
	*sobj = xSemaphoreCreateMutex();
    387e:	f7fd f9de 	bl	c3e <xQueueCreateMutex>
    3882:	6020      	str	r0, [r4, #0]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ffsystem.c:77
	return (int)(*sobj != NULL);

	/* CMSIS-RTOS */
//	*sobj = osMutexCreate(&Mutex[vol]);
//	return (int)(*sobj != NULL);
}
    3884:	3000      	adds	r0, #0
    3886:	bf18      	it	ne
    3888:	2001      	movne	r0, #1
    388a:	bd10      	pop	{r4, pc}

0000388c <ff_del_syncobj>:
ff_del_syncobj():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ffsystem.c:91
*/

int ff_del_syncobj (	/* 1:Function succeeded, 0:Could not delete due to an error */
	FF_SYNC_t sobj		/* Sync object tied to the logical drive to be deleted */
)
{
    388c:	b508      	push	{r3, lr}
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ffsystem.c:104
//	OS_ERR err;
//	OSMutexDel(sobj, OS_DEL_ALWAYS, &err);
//	return (int)(err == OS_NO_ERR);

	/* FreeRTOS */
    vSemaphoreDelete(sobj);
    388e:	f7fd fc45 	bl	111c <vQueueDelete>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ffsystem.c:109
	return 1;

	/* CMSIS-RTOS */
//	return (int)(osMutexDelete(sobj) == osOK);
}
    3892:	2001      	movs	r0, #1
    3894:	bd08      	pop	{r3, pc}

00003896 <ff_req_grant>:
ff_req_grant():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ffsystem.c:122
*/

int ff_req_grant (	/* 1:Got a grant to access the volume, 0:Could not get a grant */
	FF_SYNC_t sobj	/* Sync object to wait */
)
{
    3896:	b508      	push	{r3, lr}
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ffsystem.c:135
//	OS_ERR err;
//	OSMutexPend(sobj, FF_FS_TIMEOUT, &err));
//	return (int)(err == OS_NO_ERR);

	/* FreeRTOS */
	return (int)(xSemaphoreTake(sobj, FF_FS_TIMEOUT) == pdTRUE);
    3898:	f640 31b8 	movw	r1, #3000	; 0xbb8
    389c:	f7fd fb30 	bl	f00 <xQueueSemaphoreTake>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ffsystem.c:139

	/* CMSIS-RTOS */
//	return (int)(osMutexWait(sobj, FF_FS_TIMEOUT) == osOK);
}
    38a0:	1e43      	subs	r3, r0, #1
    38a2:	4258      	negs	r0, r3
    38a4:	4158      	adcs	r0, r3
    38a6:	bd08      	pop	{r3, pc}

000038a8 <ff_rel_grant>:
ff_rel_grant():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\ff13c\source/ffsystem.c:162

	/* uC/OS-II */
//	OSMutexPost(sobj);

	/* FreeRTOS */
	xSemaphoreGive(sobj);
    38a8:	2300      	movs	r3, #0
    38aa:	461a      	mov	r2, r3
    38ac:	4619      	mov	r1, r3
    38ae:	f7fd b903 	b.w	ab8 <xQueueGenericSend>

000038b2 <disk_initialize>:
disk_initialize():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/disk_glue_logic.c:19
 */
typedef enum {
  DRIVE__SD_CARD = 0,
} drive_e;

DSTATUS disk_initialize(BYTE drv) {
    38b2:	b510      	push	{r4, lr}
    38b4:	4604      	mov	r4, r0
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/disk_glue_logic.c:22
  DSTATUS status = RES_PARERR;

  spi2_mutex__acquire();
    38b6:	f000 fb69 	bl	3f8c <spi2_mutex__acquire>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/disk_glue_logic.c:24
  {
    switch (drv) {
    38ba:	b934      	cbnz	r4, 38ca <disk_initialize+0x18>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/disk_glue_logic.c:26
    case DRIVE__SD_CARD:
      status = sd_card__initialize();
    38bc:	f000 f8fa 	bl	3ab4 <sd_card__initialize>
    38c0:	4604      	mov	r4, r0
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/disk_glue_logic.c:33
    default:
      status = RES_PARERR;
      break;
    }
  }
  spi2_mutex__release();
    38c2:	f000 fb7d 	bl	3fc0 <spi2_mutex__release>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/disk_glue_logic.c:36

  return status;
}
    38c6:	4620      	mov	r0, r4
    38c8:	bd10      	pop	{r4, pc}
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/disk_glue_logic.c:29
      status = RES_PARERR;
    38ca:	2404      	movs	r4, #4
    38cc:	e7f9      	b.n	38c2 <disk_initialize+0x10>

000038ce <disk_status>:
disk_status():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/disk_glue_logic.c:43
DSTATUS disk_status(BYTE drv) {
  DSTATUS status = RES_PARERR;

  // No mutex needed here
  {
    switch (drv) {
    38ce:	b908      	cbnz	r0, 38d4 <disk_status+0x6>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/disk_glue_logic.c:45
    case DRIVE__SD_CARD:
      status = sd_card__status();
    38d0:	f000 b98e 	b.w	3bf0 <sd_card__status>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/disk_glue_logic.c:54
      break;
    }
  }

  return status;
}
    38d4:	2004      	movs	r0, #4
    38d6:	4770      	bx	lr

000038d8 <disk_read>:
disk_read():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/disk_glue_logic.c:56

DRESULT disk_read(BYTE drv, BYTE *buff, DWORD sector, UINT count) {
    38d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    38da:	4607      	mov	r7, r0
    38dc:	460c      	mov	r4, r1
    38de:	4615      	mov	r5, r2
    38e0:	461e      	mov	r6, r3
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/disk_glue_logic.c:59
  DSTATUS status = RES_PARERR;

  spi2_mutex__acquire();
    38e2:	f000 fb53 	bl	3f8c <spi2_mutex__acquire>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/disk_glue_logic.c:61
  {
    switch (drv) {
    38e6:	b94f      	cbnz	r7, 38fc <disk_read+0x24>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/disk_glue_logic.c:63
    case DRIVE__SD_CARD:
      status = sd_card__read(buff, sector, count);
    38e8:	4620      	mov	r0, r4
    38ea:	b2f2      	uxtb	r2, r6
    38ec:	4629      	mov	r1, r5
    38ee:	f000 f987 	bl	3c00 <sd_card__read>
    38f2:	4604      	mov	r4, r0
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/disk_glue_logic.c:70
    default:
      status = RES_PARERR;
      break;
    }
  }
  spi2_mutex__release();
    38f4:	f000 fb64 	bl	3fc0 <spi2_mutex__release>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/disk_glue_logic.c:73

  return status;
}
    38f8:	4620      	mov	r0, r4
    38fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/disk_glue_logic.c:66
      status = RES_PARERR;
    38fc:	2404      	movs	r4, #4
    38fe:	e7f9      	b.n	38f4 <disk_read+0x1c>

00003900 <disk_write>:
disk_write():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/disk_glue_logic.c:75

DRESULT disk_write(BYTE drv, const BYTE *buff, DWORD sector, UINT count) {
    3900:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3902:	4607      	mov	r7, r0
    3904:	460c      	mov	r4, r1
    3906:	4615      	mov	r5, r2
    3908:	461e      	mov	r6, r3
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/disk_glue_logic.c:78
  DSTATUS status = RES_PARERR;

  spi2_mutex__acquire();
    390a:	f000 fb3f 	bl	3f8c <spi2_mutex__acquire>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/disk_glue_logic.c:80
  {
    switch (drv) {
    390e:	b94f      	cbnz	r7, 3924 <disk_write+0x24>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/disk_glue_logic.c:82
    case DRIVE__SD_CARD:
      status = sd_card__write(buff, sector, count);
    3910:	4620      	mov	r0, r4
    3912:	b2f2      	uxtb	r2, r6
    3914:	4629      	mov	r1, r5
    3916:	f000 f9b9 	bl	3c8c <sd_card__write>
    391a:	4604      	mov	r4, r0
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/disk_glue_logic.c:89
    default:
      status = RES_PARERR;
      break;
    }
  }
  spi2_mutex__release();
    391c:	f000 fb50 	bl	3fc0 <spi2_mutex__release>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/disk_glue_logic.c:92

  return status;
}
    3920:	4620      	mov	r0, r4
    3922:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/disk_glue_logic.c:85
      status = RES_PARERR;
    3924:	2404      	movs	r4, #4
    3926:	e7f9      	b.n	391c <disk_write+0x1c>

00003928 <sd_card__wait_for_ready>:
sd_card__wait_for_ready():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:56
#endif

static volatile DSTATUS g_disk_status = STA_NOINIT; ///< Disk status
static BYTE g_card_type;                            ///< Card type flags

static BYTE sd_card__wait_for_ready(void) {
    3928:	b538      	push	{r3, r4, r5, lr}
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:60
  BYTE res;

  /* Wait for ready in timeout of 500ms */
  const uint32_t timeout = SD_CARD__PLATFORM_GET_MS() + 500;
    392a:	f000 fb99 	bl	4060 <sys_time__get_uptime_ms>
    392e:	f500 75fa 	add.w	r5, r0, #500	; 0x1f4
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:61
  SD_CARD__RECEIVE_BYTE();
    3932:	20ff      	movs	r0, #255	; 0xff
    3934:	f7ff f8c6 	bl	2ac4 <ssp2__exchange_byte>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:64 (discriminator 2)

  do {
    res = SD_CARD__RECEIVE_BYTE();
    3938:	20ff      	movs	r0, #255	; 0xff
    393a:	f7ff f8c3 	bl	2ac4 <ssp2__exchange_byte>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:65 (discriminator 2)
  } while ((res != 0xFF) && SD_CARD__PLATFORM_GET_MS() < timeout);
    393e:	28ff      	cmp	r0, #255	; 0xff
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:64 (discriminator 2)
    res = SD_CARD__RECEIVE_BYTE();
    3940:	4604      	mov	r4, r0
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:65 (discriminator 2)
  } while ((res != 0xFF) && SD_CARD__PLATFORM_GET_MS() < timeout);
    3942:	d003      	beq.n	394c <sd_card__wait_for_ready+0x24>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:65 (discriminator 1)
    3944:	f000 fb8c 	bl	4060 <sys_time__get_uptime_ms>
    3948:	4285      	cmp	r5, r0
    394a:	d8f5      	bhi.n	3938 <sd_card__wait_for_ready+0x10>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:68

  return res;
}
    394c:	4620      	mov	r0, r4
    394e:	bd38      	pop	{r3, r4, r5, pc}

00003950 <sd_card__power_off>:
sd_card__power_off():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:74

static void sd_card__power_on(void) {
  // Power on the SD-Card Socket if hardware allows
}

static void sd_card__power_off(void) {
    3950:	b508      	push	{r3, lr}
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:75
  SD_CARD__SELECT();
    3952:	f7fe fcbf 	bl	22d4 <board_io__sd_card_cs>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:76
  sd_card__wait_for_ready();
    3956:	f7ff ffe7 	bl	3928 <sd_card__wait_for_ready>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:77
  SD_CARD__DESELECT();
    395a:	f7fe fcc3 	bl	22e4 <board_io__sd_card_ds>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:80

  // Power off the SD-Card Socket if hardware allows
  g_disk_status |= STA_NOINIT; // Set STA_NOINIT
    395e:	4a03      	ldr	r2, [pc, #12]	; (396c <sd_card__power_off+0x1c>)
    3960:	7813      	ldrb	r3, [r2, #0]
    3962:	f043 0301 	orr.w	r3, r3, #1
    3966:	7013      	strb	r3, [r2, #0]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:81
}
    3968:	bd08      	pop	{r3, pc}
    396a:	bf00      	nop
    396c:	10000160 	.word	0x10000160

00003970 <sd_card__transmit_datablock>:
sd_card__transmit_datablock():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:129
}

#if SD_CARD__READONLY == 0
static int sd_card__transmit_datablock(const BYTE *buff, /* 512 byte data block to be transmitted */
                                       BYTE token        /* Data/Stop token */
) {
    3970:	b538      	push	{r3, r4, r5, lr}
    3972:	4605      	mov	r5, r0
    3974:	460c      	mov	r4, r1
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:132
  BYTE resp;

  if (sd_card__wait_for_ready() != 0xFF) {
    3976:	f7ff ffd7 	bl	3928 <sd_card__wait_for_ready>
    397a:	28ff      	cmp	r0, #255	; 0xff
    397c:	d121      	bne.n	39c2 <sd_card__transmit_datablock+0x52>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:136
    return 0;
  }

  SD_CARD__TRANSMIT_BYTE(token);
    397e:	4620      	mov	r0, r4
    3980:	f7ff f8a0 	bl	2ac4 <ssp2__exchange_byte>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:138
  /* Xmit data token */
  if (token != 0xFD) { /* Is data token */
    3984:	2cfd      	cmp	r4, #253	; 0xfd
    3986:	d01e      	beq.n	39c6 <sd_card__transmit_datablock+0x56>
    3988:	1cac      	adds	r4, r5, #2
    398a:	f205 2502 	addw	r5, r5, #514	; 0x202
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:144 (discriminator 1)
#if OPTIMIZE_SSP_SPI_WRITE
    SD_CARD__WRITE_BLOCK(buff, 512);
#else
    unsigned char wc = 0;
    do { /* Xmit the 512 byte data block to MMC */
      SD_CARD__TRANSMIT_BYTE(*buff++);
    398e:	f814 0c02 	ldrb.w	r0, [r4, #-2]
    3992:	f7ff f897 	bl	2ac4 <ssp2__exchange_byte>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:145 (discriminator 1)
      SD_CARD__TRANSMIT_BYTE(*buff++);
    3996:	3402      	adds	r4, #2
    3998:	f814 0c03 	ldrb.w	r0, [r4, #-3]
    399c:	f7ff f892 	bl	2ac4 <ssp2__exchange_byte>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:146 (discriminator 1)
    } while (--wc);
    39a0:	42ac      	cmp	r4, r5
    39a2:	d1f4      	bne.n	398e <sd_card__transmit_datablock+0x1e>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:149
#endif

    SD_CARD__TRANSMIT_BYTE(0xFF);
    39a4:	20ff      	movs	r0, #255	; 0xff
    39a6:	f7ff f88d 	bl	2ac4 <ssp2__exchange_byte>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:151
    /* CRC (Dummy) */
    SD_CARD__TRANSMIT_BYTE(0xFF);
    39aa:	20ff      	movs	r0, #255	; 0xff
    39ac:	f7ff f88a 	bl	2ac4 <ssp2__exchange_byte>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:152
    resp = SD_CARD__RECEIVE_BYTE(); /* Reveive data response */
    39b0:	20ff      	movs	r0, #255	; 0xff
    39b2:	f7ff f887 	bl	2ac4 <ssp2__exchange_byte>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:153
    if ((resp & 0x1F) != 0x05) {      /* If not accepted, return with error */
    39b6:	f000 001f 	and.w	r0, r0, #31
    39ba:	1f43      	subs	r3, r0, #5
    39bc:	4258      	negs	r0, r3
    39be:	4158      	adcs	r0, r3
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:159
      return 0;
    }
  }

  return 1;
}
    39c0:	bd38      	pop	{r3, r4, r5, pc}
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:133
    return 0;
    39c2:	2000      	movs	r0, #0
    39c4:	e7fc      	b.n	39c0 <sd_card__transmit_datablock+0x50>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:158
  return 1;
    39c6:	2001      	movs	r0, #1
    39c8:	e7fa      	b.n	39c0 <sd_card__transmit_datablock+0x50>

000039ca <sd_card__send_command>:
sd_card__send_command():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:164
#endif /* SD_CARD__READONLY */

static BYTE sd_card__send_command(BYTE cmd, /* Command byte */
                                  DWORD arg /* Argument */
) {
    39ca:	b537      	push	{r0, r1, r2, r4, r5, lr}
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:167
  BYTE n, res;

  if (cmd & 0x80) { /* ACMD<n> is the command sequense of CMD55-CMD<n> */
    39cc:	0602      	lsls	r2, r0, #24
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:164
) {
    39ce:	4604      	mov	r4, r0
    39d0:	460d      	mov	r5, r1
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:167
  if (cmd & 0x80) { /* ACMD<n> is the command sequense of CMD55-CMD<n> */
    39d2:	d507      	bpl.n	39e4 <sd_card__send_command+0x1a>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:169
    cmd &= 0x7F;
    res = sd_card__send_command(CMD55, 0);
    39d4:	2100      	movs	r1, #0
    39d6:	2077      	movs	r0, #119	; 0x77
    39d8:	f7ff fff7 	bl	39ca <sd_card__send_command>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:170
    if (res > 1) {
    39dc:	2801      	cmp	r0, #1
    39de:	d831      	bhi.n	3a44 <sd_card__send_command+0x7a>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:168
    cmd &= 0x7F;
    39e0:	f004 047f 	and.w	r4, r4, #127	; 0x7f
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:177
      return res;
    }
  }

  /* Select the card and wait for ready */
  SD_CARD__DESELECT();
    39e4:	f7fe fc7e 	bl	22e4 <board_io__sd_card_ds>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:178
  SD_CARD__SELECT(); // Wait for card ready
    39e8:	f7fe fc74 	bl	22d4 <board_io__sd_card_cs>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:180

  if (sd_card__wait_for_ready() != 0xFF) {
    39ec:	f7ff ff9c 	bl	3928 <sd_card__wait_for_ready>
    39f0:	28ff      	cmp	r0, #255	; 0xff
    39f2:	d12b      	bne.n	3a4c <sd_card__send_command+0x82>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:185
    SD_CARD__DEBUG_PRINTF("ERROR: sd_card__wait_for_ready() did not return 0xFF\n");
    return 0xFF;
  }

  if (cmd == CMD0) {
    39f4:	2c40      	cmp	r4, #64	; 0x40
    39f6:	d027      	beq.n	3a48 <sd_card__send_command+0x7e>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:191
    n = 0x95; /* Valid CRC for CMD0(0) */
  }
  else if (cmd == CMD8) {
    n = 0x87; /* Valid CRC for CMD8(0x1AA) */
  } else {
    n = 0x01; /* Dummy CRC + Stop */
    39f8:	2c48      	cmp	r4, #72	; 0x48
    39fa:	bf0c      	ite	eq
    39fc:	2387      	moveq	r3, #135	; 0x87
    39fe:	2301      	movne	r3, #1
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:195
  }

  /* Start + Command index + 32-bit arguments */
  const uint8_t bytes_to_transmit[] = {cmd, (BYTE)(arg >> 24), (BYTE)(arg >> 16), (BYTE)(arg >> 8), (BYTE)(arg >> 0), n};
    3a00:	0e2a      	lsrs	r2, r5, #24
    3a02:	f88d 2001 	strb.w	r2, [sp, #1]
    3a06:	0c2a      	lsrs	r2, r5, #16
    3a08:	f88d 2002 	strb.w	r2, [sp, #2]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:196
  ssp2__dma_write_block(bytes_to_transmit, sizeof(bytes_to_transmit));
    3a0c:	2106      	movs	r1, #6
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:195
  const uint8_t bytes_to_transmit[] = {cmd, (BYTE)(arg >> 24), (BYTE)(arg >> 16), (BYTE)(arg >> 8), (BYTE)(arg >> 0), n};
    3a0e:	0a2a      	lsrs	r2, r5, #8
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:196
  ssp2__dma_write_block(bytes_to_transmit, sizeof(bytes_to_transmit));
    3a10:	4668      	mov	r0, sp
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:195
  const uint8_t bytes_to_transmit[] = {cmd, (BYTE)(arg >> 24), (BYTE)(arg >> 16), (BYTE)(arg >> 8), (BYTE)(arg >> 0), n};
    3a12:	f88d 4000 	strb.w	r4, [sp]
    3a16:	f88d 2003 	strb.w	r2, [sp, #3]
    3a1a:	f88d 5004 	strb.w	r5, [sp, #4]
    3a1e:	f88d 3005 	strb.w	r3, [sp, #5]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:196
  ssp2__dma_write_block(bytes_to_transmit, sizeof(bytes_to_transmit));
    3a22:	f7ff f859 	bl	2ad8 <ssp2__dma_write_block>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:199

  /* Receive command response */
  if (cmd == CMD12) {
    3a26:	2c4c      	cmp	r4, #76	; 0x4c
    3a28:	d102      	bne.n	3a30 <sd_card__send_command+0x66>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:200
    SD_CARD__RECEIVE_BYTE(); /* Skip a stuff byte when stop reading */
    3a2a:	20ff      	movs	r0, #255	; 0xff
    3a2c:	f7ff f84a 	bl	2ac4 <ssp2__exchange_byte>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:191
    n = 0x01; /* Dummy CRC + Stop */
    3a30:	240a      	movs	r4, #10
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:205
  }
  
  n = 10; /* Wait for a valid response in timeout of 10 attempts */
  do {
    res = SD_CARD__RECEIVE_BYTE();
    3a32:	20ff      	movs	r0, #255	; 0xff
    3a34:	f7ff f846 	bl	2ac4 <ssp2__exchange_byte>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:206
  } while ((res & 0x80) && --n);
    3a38:	0603      	lsls	r3, r0, #24
    3a3a:	d503      	bpl.n	3a44 <sd_card__send_command+0x7a>
    3a3c:	3c01      	subs	r4, #1
    3a3e:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
    3a42:	d1f6      	bne.n	3a32 <sd_card__send_command+0x68>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:213
  if (n == 0) {
    SD_CARD__DEBUG_PRINTF("Timeout during card read\n");
  }

  return res; /* Return with the response value */
}
    3a44:	b003      	add	sp, #12
    3a46:	bd30      	pop	{r4, r5, pc}
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:186
    n = 0x95; /* Valid CRC for CMD0(0) */
    3a48:	2395      	movs	r3, #149	; 0x95
    3a4a:	e7d9      	b.n	3a00 <sd_card__send_command+0x36>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:182
    return 0xFF;
    3a4c:	20ff      	movs	r0, #255	; 0xff
    3a4e:	e7f9      	b.n	3a44 <sd_card__send_command+0x7a>

00003a50 <sd_card__read_datablock>:
sd_card__read_datablock():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:85
) {
    3a50:	b570      	push	{r4, r5, r6, lr}
    3a52:	4605      	mov	r5, r0
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:87
  const uint32_t time_now = SD_CARD__PLATFORM_GET_MS();
    3a54:	f000 fb04 	bl	4060 <sys_time__get_uptime_ms>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:88
  const uint32_t timeout = time_now + 100;
    3a58:	f100 0664 	add.w	r6, r0, #100	; 0x64
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:92
    token = SD_CARD__RECEIVE_BYTE();
    3a5c:	20ff      	movs	r0, #255	; 0xff
    3a5e:	f7ff f831 	bl	2ac4 <ssp2__exchange_byte>
    3a62:	4604      	mov	r4, r0
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:95
    if (SD_CARD__PLATFORM_GET_MS() > timeout) {
    3a64:	f000 fafc 	bl	4060 <sys_time__get_uptime_ms>
    3a68:	4286      	cmp	r6, r0
    3a6a:	d301      	bcc.n	3a70 <sd_card__read_datablock+0x20>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:98
  } while (token == 0xFF);
    3a6c:	2cff      	cmp	r4, #255	; 0xff
    3a6e:	d0f5      	beq.n	3a5c <sd_card__read_datablock+0xc>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:100
  if (token != 0xFE) {
    3a70:	2cfe      	cmp	r4, #254	; 0xfe
    3a72:	d10c      	bne.n	3a8e <sd_card__read_datablock+0x3e>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:109
    SD_CARD__READ_BLOCK(buff, 512);
    3a74:	f44f 7100 	mov.w	r1, #512	; 0x200
    3a78:	4628      	mov	r0, r5
    3a7a:	f7ff f830 	bl	2ade <ssp2__dma_read_block>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:120
  SD_CARD__RECEIVE_BYTE(); /* Discard CRC */
    3a7e:	20ff      	movs	r0, #255	; 0xff
    3a80:	f7ff f820 	bl	2ac4 <ssp2__exchange_byte>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:121
  SD_CARD__RECEIVE_BYTE();
    3a84:	20ff      	movs	r0, #255	; 0xff
    3a86:	f7ff f81d 	bl	2ac4 <ssp2__exchange_byte>
    3a8a:	2001      	movs	r0, #1
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:124
}
    3a8c:	bd70      	pop	{r4, r5, r6, pc}
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:102
    return 0; /* If not valid data token, return with error */
    3a8e:	2000      	movs	r0, #0
    3a90:	e7fc      	b.n	3a8c <sd_card__read_datablock+0x3c>
    3a92:	Address 0x00003a92 is out of bounds.


00003a94 <sd_card__update_status>:
sd_card__update_status():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:527

  return res;
}
#endif /* SD_CARD__USE_IOCTL != 0 */

void sd_card__update_status(void) {
    3a94:	b538      	push	{r3, r4, r5, lr}
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:528
  BYTE s = g_disk_status;
    3a96:	4d06      	ldr	r5, [pc, #24]	; (3ab0 <sd_card__update_status+0x1c>)
    3a98:	782c      	ldrb	r4, [r5, #0]
    3a9a:	b2e4      	uxtb	r4, r4
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:530

  if (SD_CARD__IS_PRESENT()) {
    3a9c:	f7fe fc2a 	bl	22f4 <board_io__sd_card_is_present>
    3aa0:	b118      	cbz	r0, 3aaa <sd_card__update_status+0x16>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:531
    s &= ~STA_NODISK;
    3aa2:	f004 04fd 	and.w	r4, r4, #253	; 0xfd
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:536
  } else {
    s |= (STA_NODISK | STA_NOINIT);
  }

  g_disk_status = s;
    3aa6:	702c      	strb	r4, [r5, #0]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:537
}
    3aa8:	bd38      	pop	{r3, r4, r5, pc}
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:533
    s |= (STA_NODISK | STA_NOINIT);
    3aaa:	f044 0403 	orr.w	r4, r4, #3
    3aae:	e7fa      	b.n	3aa6 <sd_card__update_status+0x12>
    3ab0:	10000160 	.word	0x10000160

00003ab4 <sd_card__initialize>:
sd_card__initialize():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:215
DSTATUS sd_card__initialize() {
    3ab4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:218
  sd_card__update_status();
    3ab8:	f7ff ffec 	bl	3a94 <sd_card__update_status>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:220
  if (g_disk_status & STA_NODISK) {
    3abc:	4b4a      	ldr	r3, [pc, #296]	; (3be8 <sd_card__initialize+0x134>)
    3abe:	781a      	ldrb	r2, [r3, #0]
    3ac0:	f012 0f02 	tst.w	r2, #2
    3ac4:	461e      	mov	r6, r3
    3ac6:	d004      	beq.n	3ad2 <sd_card__initialize+0x1e>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:221
    return g_disk_status; /* No card in the socket */
    3ac8:	7818      	ldrb	r0, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:292
  return g_disk_status;
    3aca:	b2c0      	uxtb	r0, r0
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:293
}
    3acc:	b002      	add	sp, #8
    3ace:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:225
  SD_CARD__SET_SLOW_SPEED();
    3ad2:	20c8      	movs	r0, #200	; 0xc8
    3ad4:	f7fe ffbe 	bl	2a54 <ssp2__set_max_clock>
    3ad8:	250a      	movs	r5, #10
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:227 (discriminator 3)
    SD_CARD__RECEIVE_BYTE(); /* 80 dummy clocks */
    3ada:	20ff      	movs	r0, #255	; 0xff
    3adc:	3d01      	subs	r5, #1
    3ade:	f7fe fff1 	bl	2ac4 <ssp2__exchange_byte>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:226 (discriminator 3)
  for (n = 10; n; n--) {
    3ae2:	f015 05ff 	ands.w	r5, r5, #255	; 0xff
    3ae6:	d1f8      	bne.n	3ada <sd_card__initialize+0x26>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:230
  SD_CARD__SELECT();
    3ae8:	f7fe fbf4 	bl	22d4 <board_io__sd_card_cs>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:233
  if (sd_card__send_command(CMD0, 0) == 1) { /* Enter Idle state */
    3aec:	4629      	mov	r1, r5
    3aee:	2040      	movs	r0, #64	; 0x40
    3af0:	f7ff ff6b 	bl	39ca <sd_card__send_command>
    3af4:	2801      	cmp	r0, #1
    3af6:	4604      	mov	r4, r0
    3af8:	d171      	bne.n	3bde <sd_card__initialize+0x12a>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:234
    const uint32_t timeout = SD_CARD__PLATFORM_GET_MS() + 1000;
    3afa:	f000 fab1 	bl	4060 <sys_time__get_uptime_ms>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:235
    if (sd_card__send_command(CMD8, 0x1AA) == 1) { /* SDHC */\
    3afe:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:234
    const uint32_t timeout = SD_CARD__PLATFORM_GET_MS() + 1000;
    3b02:	f500 777a 	add.w	r7, r0, #1000	; 0x3e8
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:235
    if (sd_card__send_command(CMD8, 0x1AA) == 1) { /* SDHC */\
    3b06:	2048      	movs	r0, #72	; 0x48
    3b08:	f7ff ff5f 	bl	39ca <sd_card__send_command>
    3b0c:	2801      	cmp	r0, #1
    3b0e:	d148      	bne.n	3ba2 <sd_card__initialize+0xee>
    3b10:	ad01      	add	r5, sp, #4
    3b12:	46a8      	mov	r8, r5
    3b14:	2404      	movs	r4, #4
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:239 (discriminator 3)
        ocr[n] = SD_CARD__RECEIVE_BYTE();     /* Get trailing return value of R7 resp */
    3b16:	20ff      	movs	r0, #255	; 0xff
    3b18:	f7fe ffd4 	bl	2ac4 <ssp2__exchange_byte>
    3b1c:	3c01      	subs	r4, #1
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:238 (discriminator 3)
      for (n = 0; n < 4; n++)
    3b1e:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:239 (discriminator 3)
        ocr[n] = SD_CARD__RECEIVE_BYTE();     /* Get trailing return value of R7 resp */
    3b22:	f808 0b01 	strb.w	r0, [r8], #1
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:238 (discriminator 3)
      for (n = 0; n < 4; n++)
    3b26:	d1f6      	bne.n	3b16 <sd_card__initialize+0x62>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:240
      if (ocr[2] == 0x01 && ocr[3] == 0xAA) { /* The card can work at vdd range of 2.7-3.6V */
    3b28:	f89d 3006 	ldrb.w	r3, [sp, #6]
    3b2c:	2b01      	cmp	r3, #1
    3b2e:	d156      	bne.n	3bde <sd_card__initialize+0x12a>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:240 (discriminator 1)
    3b30:	f89d 3007 	ldrb.w	r3, [sp, #7]
    3b34:	2baa      	cmp	r3, #170	; 0xaa
    3b36:	d152      	bne.n	3bde <sd_card__initialize+0x12a>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:243 (discriminator 2)
        while (SD_CARD__PLATFORM_GET_MS() < timeout && sd_card__send_command(ACMD41, 1UL << 30)) {
    3b38:	f000 fa92 	bl	4060 <sys_time__get_uptime_ms>
    3b3c:	4287      	cmp	r7, r0
    3b3e:	d906      	bls.n	3b4e <sd_card__initialize+0x9a>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:243 (discriminator 1)
    3b40:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    3b44:	20e9      	movs	r0, #233	; 0xe9
    3b46:	f7ff ff40 	bl	39ca <sd_card__send_command>
    3b4a:	2800      	cmp	r0, #0
    3b4c:	d1f4      	bne.n	3b38 <sd_card__initialize+0x84>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:247
        if (SD_CARD__PLATFORM_GET_MS() < timeout &&
    3b4e:	f000 fa87 	bl	4060 <sys_time__get_uptime_ms>
    3b52:	4287      	cmp	r7, r0
    3b54:	d943      	bls.n	3bde <sd_card__initialize+0x12a>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:248 (discriminator 1)
            sd_card__send_command(CMD58, 0) == 0) { /* Check CCS bit in the OCR */
    3b56:	2100      	movs	r1, #0
    3b58:	207a      	movs	r0, #122	; 0x7a
    3b5a:	f7ff ff36 	bl	39ca <sd_card__send_command>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:247 (discriminator 1)
        if (SD_CARD__PLATFORM_GET_MS() < timeout &&
    3b5e:	2800      	cmp	r0, #0
    3b60:	d13d      	bne.n	3bde <sd_card__initialize+0x12a>
    3b62:	2404      	movs	r4, #4
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:250 (discriminator 3)
            ocr[n] = SD_CARD__RECEIVE_BYTE();
    3b64:	20ff      	movs	r0, #255	; 0xff
    3b66:	f7fe ffad 	bl	2ac4 <ssp2__exchange_byte>
    3b6a:	3c01      	subs	r4, #1
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:249 (discriminator 3)
          for (n = 0; n < 4; n++) {
    3b6c:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:250 (discriminator 3)
            ocr[n] = SD_CARD__RECEIVE_BYTE();
    3b70:	f805 0b01 	strb.w	r0, [r5], #1
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:249 (discriminator 3)
          for (n = 0; n < 4; n++) {
    3b74:	d1f6      	bne.n	3b64 <sd_card__initialize+0xb0>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:252
          ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;
    3b76:	f89d 3004 	ldrb.w	r3, [sp, #4]
    3b7a:	f013 0f40 	tst.w	r3, #64	; 0x40
    3b7e:	bf14      	ite	ne
    3b80:	240c      	movne	r4, #12
    3b82:	2404      	moveq	r4, #4
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:282
  g_card_type = ty;
    3b84:	4b19      	ldr	r3, [pc, #100]	; (3bec <sd_card__initialize+0x138>)
    3b86:	701c      	strb	r4, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:283
  SD_CARD__DESELECT();
    3b88:	f7fe fbac 	bl	22e4 <board_io__sd_card_ds>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:285
  if (ty) {                       /* Initialization succeded */
    3b8c:	b34c      	cbz	r4, 3be2 <sd_card__initialize+0x12e>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:286
    g_disk_status &= ~STA_NOINIT; /* Clear STA_NOINIT */
    3b8e:	7833      	ldrb	r3, [r6, #0]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:287
    SD_CARD__SET_FAST_SPEED();
    3b90:	f645 50c0 	movw	r0, #24000	; 0x5dc0
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:286
    g_disk_status &= ~STA_NOINIT; /* Clear STA_NOINIT */
    3b94:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
    3b98:	7033      	strb	r3, [r6, #0]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:287
    SD_CARD__SET_FAST_SPEED();
    3b9a:	f7fe ff5b 	bl	2a54 <ssp2__set_max_clock>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:292
  return g_disk_status;
    3b9e:	7830      	ldrb	r0, [r6, #0]
    3ba0:	e793      	b.n	3aca <sd_card__initialize+0x16>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:260
      if (sd_card__send_command(ACMD41, 0) <= 1) {
    3ba2:	4629      	mov	r1, r5
    3ba4:	20e9      	movs	r0, #233	; 0xe9
    3ba6:	f7ff ff10 	bl	39ca <sd_card__send_command>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:265
        cmd = CMD1; /* MMC */
    3baa:	2802      	cmp	r0, #2
    3bac:	bf36      	itet	cc
    3bae:	25e9      	movcc	r5, #233	; 0xe9
    3bb0:	2541      	movcs	r5, #65	; 0x41
    3bb2:	2402      	movcc	r4, #2
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:267 (discriminator 2)
      while (SD_CARD__PLATFORM_GET_MS() < timeout && sd_card__send_command(cmd, 0)) {
    3bb4:	f000 fa54 	bl	4060 <sys_time__get_uptime_ms>
    3bb8:	4287      	cmp	r7, r0
    3bba:	d905      	bls.n	3bc8 <sd_card__initialize+0x114>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:267 (discriminator 1)
    3bbc:	2100      	movs	r1, #0
    3bbe:	4628      	mov	r0, r5
    3bc0:	f7ff ff03 	bl	39ca <sd_card__send_command>
    3bc4:	2800      	cmp	r0, #0
    3bc6:	d1f5      	bne.n	3bb4 <sd_card__initialize+0x100>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:271
      if ((SD_CARD__PLATFORM_GET_MS() < timeout) ||
    3bc8:	f000 fa4a 	bl	4060 <sys_time__get_uptime_ms>
    3bcc:	4287      	cmp	r7, r0
    3bce:	d806      	bhi.n	3bde <sd_card__initialize+0x12a>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:272 (discriminator 1)
          sd_card__send_command(CMD16, 512) != 0) /* Set R/W block length to 512 */
    3bd0:	f44f 7100 	mov.w	r1, #512	; 0x200
    3bd4:	2050      	movs	r0, #80	; 0x50
    3bd6:	f7ff fef8 	bl	39ca <sd_card__send_command>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:271 (discriminator 1)
      if ((SD_CARD__PLATFORM_GET_MS() < timeout) ||
    3bda:	2800      	cmp	r0, #0
    3bdc:	d0d2      	beq.n	3b84 <sd_card__initialize+0xd0>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:275
        ty = 0;
    3bde:	2400      	movs	r4, #0
    3be0:	e7d0      	b.n	3b84 <sd_card__initialize+0xd0>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:289
    sd_card__power_off();
    3be2:	f7ff feb5 	bl	3950 <sd_card__power_off>
    3be6:	e7da      	b.n	3b9e <sd_card__initialize+0xea>
    3be8:	10000160 	.word	0x10000160
    3bec:	10000d16 	.word	0x10000d16

00003bf0 <sd_card__status>:
sd_card__status():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:295
DSTATUS sd_card__status() {
    3bf0:	b508      	push	{r3, lr}
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:296
  sd_card__update_status();
    3bf2:	f7ff ff4f 	bl	3a94 <sd_card__update_status>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:297
  return g_disk_status;
    3bf6:	4b01      	ldr	r3, [pc, #4]	; (3bfc <sd_card__status+0xc>)
    3bf8:	7818      	ldrb	r0, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:298
}
    3bfa:	bd08      	pop	{r3, pc}
    3bfc:	10000160 	.word	0x10000160

00003c00 <sd_card__read>:
sd_card__read():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:303
) {
    3c00:	b570      	push	{r4, r5, r6, lr}
    3c02:	4614      	mov	r4, r2
    3c04:	4605      	mov	r5, r0
    3c06:	460e      	mov	r6, r1
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:304
  sd_card__update_status();
    3c08:	f7ff ff44 	bl	3a94 <sd_card__update_status>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:306
  if (!count) {
    3c0c:	2c00      	cmp	r4, #0
    3c0e:	d035      	beq.n	3c7c <sd_card__read+0x7c>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:310
  if (g_disk_status & STA_NOINIT) {
    3c10:	4b1c      	ldr	r3, [pc, #112]	; (3c84 <sd_card__read+0x84>)
    3c12:	781b      	ldrb	r3, [r3, #0]
    3c14:	07da      	lsls	r2, r3, #31
    3c16:	d433      	bmi.n	3c80 <sd_card__read+0x80>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:315
  SD_CARD__SELECT();
    3c18:	f7fe fb5c 	bl	22d4 <board_io__sd_card_cs>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:316
  if (!(g_card_type & CT_BLOCK)) {
    3c1c:	4b1a      	ldr	r3, [pc, #104]	; (3c88 <sd_card__read+0x88>)
    3c1e:	781b      	ldrb	r3, [r3, #0]
    3c20:	071b      	lsls	r3, r3, #28
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:317
    sector *= 512; /* Convert to byte address if needed */
    3c22:	bf58      	it	pl
    3c24:	0276      	lslpl	r6, r6, #9
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:320
  if (count == 1) {                                 /* Single block read */
    3c26:	2c01      	cmp	r4, #1
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:321
    if ((sd_card__send_command(CMD17, sector) == 0)) {
    3c28:	4631      	mov	r1, r6
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:320
  if (count == 1) {                                 /* Single block read */
    3c2a:	d111      	bne.n	3c50 <sd_card__read+0x50>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:321
    if ((sd_card__send_command(CMD17, sector) == 0)) {
    3c2c:	2051      	movs	r0, #81	; 0x51
    3c2e:	f7ff fecc 	bl	39ca <sd_card__send_command>
    3c32:	b938      	cbnz	r0, 3c44 <sd_card__read+0x44>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:322
      if (sd_card__read_datablock(buff, 512)) {
    3c34:	f44f 7100 	mov.w	r1, #512	; 0x200
    3c38:	4628      	mov	r0, r5
    3c3a:	f7ff ff09 	bl	3a50 <sd_card__read_datablock>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:323
        count = 0;
    3c3e:	fab0 f480 	clz	r4, r0
    3c42:	0964      	lsrs	r4, r4, #5
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:340
  SD_CARD__DESELECT();
    3c44:	f7fe fb4e 	bl	22e4 <board_io__sd_card_ds>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:342
  return count ? RES_ERROR : RES_OK;
    3c48:	1c20      	adds	r0, r4, #0
    3c4a:	bf18      	it	ne
    3c4c:	2001      	movne	r0, #1
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:343
}
    3c4e:	bd70      	pop	{r4, r5, r6, pc}
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:331
    if (sd_card__send_command(CMD18, sector) == 0) { /* READ_MULTIPLE_BLOCK */
    3c50:	2052      	movs	r0, #82	; 0x52
    3c52:	f7ff feba 	bl	39ca <sd_card__send_command>
    3c56:	2800      	cmp	r0, #0
    3c58:	d1f4      	bne.n	3c44 <sd_card__read+0x44>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:333
        if (!sd_card__read_datablock(buff, 512))
    3c5a:	f44f 7100 	mov.w	r1, #512	; 0x200
    3c5e:	4628      	mov	r0, r5
    3c60:	f7ff fef6 	bl	3a50 <sd_card__read_datablock>
    3c64:	b128      	cbz	r0, 3c72 <sd_card__read+0x72>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:336
      } while (--count);
    3c66:	3c01      	subs	r4, #1
    3c68:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:335
        buff += 512;
    3c6c:	f505 7500 	add.w	r5, r5, #512	; 0x200
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:336
      } while (--count);
    3c70:	d1f3      	bne.n	3c5a <sd_card__read+0x5a>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:337
      sd_card__send_command(CMD12, 0); /* STOP_TRANSMISSION */
    3c72:	2100      	movs	r1, #0
    3c74:	204c      	movs	r0, #76	; 0x4c
    3c76:	f7ff fea8 	bl	39ca <sd_card__send_command>
    3c7a:	e7e3      	b.n	3c44 <sd_card__read+0x44>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:308
    return RES_PARERR;
    3c7c:	2004      	movs	r0, #4
    3c7e:	e7e6      	b.n	3c4e <sd_card__read+0x4e>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:312
    return RES_NOTRDY;
    3c80:	2003      	movs	r0, #3
    3c82:	e7e4      	b.n	3c4e <sd_card__read+0x4e>
    3c84:	10000160 	.word	0x10000160
    3c88:	10000d16 	.word	0x10000d16

00003c8c <sd_card__write>:
sd_card__write():
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:349
) {
    3c8c:	b570      	push	{r4, r5, r6, lr}
    3c8e:	4614      	mov	r4, r2
    3c90:	4605      	mov	r5, r0
    3c92:	460e      	mov	r6, r1
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:350
  sd_card__update_status();
    3c94:	f7ff fefe 	bl	3a94 <sd_card__update_status>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:352
  if (!count) {
    3c98:	2c00      	cmp	r4, #0
    3c9a:	d041      	beq.n	3d20 <sd_card__write+0x94>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:355
  if (g_disk_status & STA_NOINIT) {
    3c9c:	4b23      	ldr	r3, [pc, #140]	; (3d2c <sd_card__write+0xa0>)
    3c9e:	781a      	ldrb	r2, [r3, #0]
    3ca0:	07d0      	lsls	r0, r2, #31
    3ca2:	d43f      	bmi.n	3d24 <sd_card__write+0x98>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:358
  if (g_disk_status & STA_PROTECT) {
    3ca4:	781b      	ldrb	r3, [r3, #0]
    3ca6:	0759      	lsls	r1, r3, #29
    3ca8:	d43e      	bmi.n	3d28 <sd_card__write+0x9c>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:362
  SD_CARD__SELECT();
    3caa:	f7fe fb13 	bl	22d4 <board_io__sd_card_cs>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:363
  if (!(g_card_type & CT_BLOCK)) {
    3cae:	4b20      	ldr	r3, [pc, #128]	; (3d30 <sd_card__write+0xa4>)
    3cb0:	781b      	ldrb	r3, [r3, #0]
    3cb2:	071a      	lsls	r2, r3, #28
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:364
    sector *= 512; /* Convert to byte address if needed */
    3cb4:	bf58      	it	pl
    3cb6:	0276      	lslpl	r6, r6, #9
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:367
  if (count == 1) { /* Single block write */
    3cb8:	2c01      	cmp	r4, #1
    3cba:	d111      	bne.n	3ce0 <sd_card__write+0x54>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:368
    if ((sd_card__send_command(CMD24, sector) == 0) && sd_card__transmit_datablock(buff, 0xFE)) {
    3cbc:	4631      	mov	r1, r6
    3cbe:	2058      	movs	r0, #88	; 0x58
    3cc0:	f7ff fe83 	bl	39ca <sd_card__send_command>
    3cc4:	bb50      	cbnz	r0, 3d1c <sd_card__write+0x90>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:368 (discriminator 1)
    3cc6:	21fe      	movs	r1, #254	; 0xfe
    3cc8:	4628      	mov	r0, r5
    3cca:	f7ff fe51 	bl	3970 <sd_card__transmit_datablock>
    3cce:	fab0 f480 	clz	r4, r0
    3cd2:	0964      	lsrs	r4, r4, #5
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:388
  SD_CARD__DESELECT();
    3cd4:	f7fe fb06 	bl	22e4 <board_io__sd_card_ds>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:390
  return count ? RES_ERROR : RES_OK;
    3cd8:	1c20      	adds	r0, r4, #0
    3cda:	bf18      	it	ne
    3cdc:	2001      	movne	r0, #1
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:391
}
    3cde:	bd70      	pop	{r4, r5, r6, pc}
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:372
    if (g_card_type & CT_SDC) {
    3ce0:	f013 0f06 	tst.w	r3, #6
    3ce4:	d003      	beq.n	3cee <sd_card__write+0x62>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:373
      sd_card__send_command(ACMD23, count);
    3ce6:	4621      	mov	r1, r4
    3ce8:	20d7      	movs	r0, #215	; 0xd7
    3cea:	f7ff fe6e 	bl	39ca <sd_card__send_command>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:376
    if (sd_card__send_command(CMD25, sector) == 0) { /* WRITE_MULTIPLE_BLOCK */
    3cee:	4631      	mov	r1, r6
    3cf0:	2059      	movs	r0, #89	; 0x59
    3cf2:	f7ff fe6a 	bl	39ca <sd_card__send_command>
    3cf6:	2800      	cmp	r0, #0
    3cf8:	d1ec      	bne.n	3cd4 <sd_card__write+0x48>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:378
        if (!sd_card__transmit_datablock(buff, 0xFC)) {
    3cfa:	21fc      	movs	r1, #252	; 0xfc
    3cfc:	4628      	mov	r0, r5
    3cfe:	f7ff fe37 	bl	3970 <sd_card__transmit_datablock>
    3d02:	b128      	cbz	r0, 3d10 <sd_card__write+0x84>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:382
      } while (--count);
    3d04:	3c01      	subs	r4, #1
    3d06:	f014 04ff 	ands.w	r4, r4, #255	; 0xff
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:381
        buff += 512;
    3d0a:	f505 7500 	add.w	r5, r5, #512	; 0x200
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:382
      } while (--count);
    3d0e:	d1f4      	bne.n	3cfa <sd_card__write+0x6e>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:383
      if (!sd_card__transmit_datablock(0, 0xFD)) {/* STOP_TRAN token */
    3d10:	21fd      	movs	r1, #253	; 0xfd
    3d12:	2000      	movs	r0, #0
    3d14:	f7ff fe2c 	bl	3970 <sd_card__transmit_datablock>
    3d18:	2800      	cmp	r0, #0
    3d1a:	d1db      	bne.n	3cd4 <sd_card__write+0x48>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:384
        count = 1;
    3d1c:	2401      	movs	r4, #1
    3d1e:	e7d9      	b.n	3cd4 <sd_card__write+0x48>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:353
    return RES_PARERR;
    3d20:	2004      	movs	r0, #4
    3d22:	e7dc      	b.n	3cde <sd_card__write+0x52>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:356
    return RES_NOTRDY;
    3d24:	2003      	movs	r0, #3
    3d26:	e7da      	b.n	3cde <sd_card__write+0x52>
C:\road_max_fury/lpc40xx_freertos\l4_io\fatfs\fatfs_glue/sd_card.c:359
    return RES_WRPRT;
    3d28:	2002      	movs	r0, #2
    3d2a:	e7d8      	b.n	3cde <sd_card__write+0x52>
    3d2c:	10000160 	.word	0x10000160
    3d30:	10000d16 	.word	0x10000d16

00003d34 <system_calls__print_and_halt>:
system_calls__print_and_halt():
C:\road_max_fury/lpc40xx_freertos\l4_io\newlib/system_calls.c:46
  for (int i = 0; i < len; i++) {
    uart__polled_put(system_calls__uart_type, ptr[i]);
  }
}

static void system_calls__print_and_halt(const char *string) {
    3d34:	b508      	push	{r3, lr}
    3d36:	4606      	mov	r6, r0
C:\road_max_fury/lpc40xx_freertos\l4_io\newlib/system_calls.c:47
  system_calls__polled_put(string, strlen(string));
    3d38:	f002 fe8b 	bl	6a52 <strlen>
system_calls__polled_put():
C:\road_max_fury/lpc40xx_freertos\l4_io\newlib/system_calls.c:41
  for (int i = 0; i < len; i++) {
    3d3c:	2400      	movs	r4, #0
system_calls__print_and_halt():
C:\road_max_fury/lpc40xx_freertos\l4_io\newlib/system_calls.c:47
  system_calls__polled_put(string, strlen(string));
    3d3e:	4605      	mov	r5, r0
system_calls__polled_put():
C:\road_max_fury/lpc40xx_freertos\l4_io\newlib/system_calls.c:41
  for (int i = 0; i < len; i++) {
    3d40:	42a5      	cmp	r5, r4
    3d42:	dc00      	bgt.n	3d46 <system_calls__print_and_halt+0x12>
system_calls__print_and_halt():
C:\road_max_fury/lpc40xx_freertos\l4_io\newlib/system_calls.c:49 (discriminator 1)
  while (1) {
  }
    3d44:	e7fe      	b.n	3d44 <system_calls__print_and_halt+0x10>
system_calls__polled_put():
C:\road_max_fury/lpc40xx_freertos\l4_io\newlib/system_calls.c:42
    uart__polled_put(system_calls__uart_type, ptr[i]);
    3d46:	5d31      	ldrb	r1, [r6, r4]
    3d48:	2000      	movs	r0, #0
    3d4a:	f7fe ffb7 	bl	2cbc <uart__polled_put>
C:\road_max_fury/lpc40xx_freertos\l4_io\newlib/system_calls.c:41
  for (int i = 0; i < len; i++) {
    3d4e:	3401      	adds	r4, #1
    3d50:	e7f6      	b.n	3d40 <system_calls__print_and_halt+0xc>
system_calls__print_and_halt():
    3d52:	Address 0x00003d52 is out of bounds.


00003d54 <_isatty>:
_isatty():
C:\road_max_fury/lpc40xx_freertos\l4_io\newlib/system_calls.c:87
 * libc.pdf: 'Query whether output stream is a terminal'
 */
int _isatty(int file_descriptor) {
  int is_atty = 0;

  switch (file_descriptor) {
    3d54:	2802      	cmp	r0, #2
    3d56:	d90c      	bls.n	3d72 <_isatty+0x1e>
C:\road_max_fury/lpc40xx_freertos\l4_io\newlib/system_calls.c:97
    is_atty = 1;
    break;

  // Pointer based values defined by <stdio.h>
  default:
    if ((int)stdin == file_descriptor || (int)stdout == file_descriptor ||
    3d58:	4b07      	ldr	r3, [pc, #28]	; (3d78 <_isatty+0x24>)
    3d5a:	681b      	ldr	r3, [r3, #0]
    3d5c:	685a      	ldr	r2, [r3, #4]
    3d5e:	4282      	cmp	r2, r0
    3d60:	d007      	beq.n	3d72 <_isatty+0x1e>
    3d62:	689a      	ldr	r2, [r3, #8]
    3d64:	4282      	cmp	r2, r0
    3d66:	d004      	beq.n	3d72 <_isatty+0x1e>
    3d68:	68db      	ldr	r3, [r3, #12]
    3d6a:	1a1b      	subs	r3, r3, r0
    3d6c:	4258      	negs	r0, r3
    3d6e:	4158      	adcs	r0, r3
    3d70:	4770      	bx	lr
C:\road_max_fury/lpc40xx_freertos\l4_io\newlib/system_calls.c:99
        (int)stderr == file_descriptor) {
      is_atty = 1;
    3d72:	2001      	movs	r0, #1
C:\road_max_fury/lpc40xx_freertos\l4_io\newlib/system_calls.c:104
    }
  }

  return is_atty;
}
    3d74:	4770      	bx	lr
    3d76:	bf00      	nop
    3d78:	10000164 	.word	0x10000164

00003d7c <_write>:
_write():
C:\road_max_fury/lpc40xx_freertos\l4_io\newlib/system_calls.c:118

/**
 * Low level write routine used by standard output (printf) and also file writes
 * after fopen() has been called
 */
int _write(int file_descriptor, const char *ptr, int bytes_to_write) {
    3d7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3d7e:	4604      	mov	r4, r0
    3d80:	460e      	mov	r6, r1
    3d82:	4615      	mov	r5, r2
C:\road_max_fury/lpc40xx_freertos\l4_io\newlib/system_calls.c:119
  if (_isatty(file_descriptor)) {
    3d84:	f7ff ffe6 	bl	3d54 <_isatty>
    3d88:	b348      	cbz	r0, 3dde <_write+0x62>
C:\road_max_fury/lpc40xx_freertos\l4_io\newlib/system_calls.c:121
    const bool is_standard_error =
        ((int)stderr == file_descriptor || file_id__stderr == file_descriptor);
    3d8a:	4b16      	ldr	r3, [pc, #88]	; (3de4 <_write+0x68>)
    3d8c:	681b      	ldr	r3, [r3, #0]
    3d8e:	68db      	ldr	r3, [r3, #12]
    3d90:	42a3      	cmp	r3, r4
    3d92:	d010      	beq.n	3db6 <_write+0x3a>
C:\road_max_fury/lpc40xx_freertos\l4_io\newlib/system_calls.c:121 (discriminator 2)
    3d94:	1ea3      	subs	r3, r4, #2
    3d96:	425c      	negs	r4, r3
    3d98:	415c      	adcs	r4, r3
C:\road_max_fury/lpc40xx_freertos\l4_io\newlib/system_calls.c:123
    const bool rtos_is_running =
        taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
    3d9a:	f7fd fedd 	bl	1b58 <xTaskGetSchedulerState>
    3d9e:	4607      	mov	r7, r0
C:\road_max_fury/lpc40xx_freertos\l4_io\newlib/system_calls.c:125
    const bool transmit_queue_enabled =
        uart__is_transmit_queue_initialized(system_calls__uart_type);
    3da0:	2000      	movs	r0, #0
    3da2:	f7fe ff41 	bl	2c28 <uart__is_transmit_queue_initialized>
C:\road_max_fury/lpc40xx_freertos\l4_io\newlib/system_calls.c:131

    /* If the RTOS is running with the UART queue enabled, AND it is not an
     * error printf, then queue the output and return quickly, otherwise there
     * is no choice but to use system_calls__polled_put()
     */
    if (rtos_is_running && transmit_queue_enabled && !is_standard_error) {
    3da6:	2f02      	cmp	r7, #2
    3da8:	d117      	bne.n	3dda <_write+0x5e>
C:\road_max_fury/lpc40xx_freertos\l4_io\newlib/system_calls.c:131 (discriminator 1)
    3daa:	b1b0      	cbz	r0, 3dda <_write+0x5e>
C:\road_max_fury/lpc40xx_freertos\l4_io\newlib/system_calls.c:131 (discriminator 2)
    3dac:	b9ac      	cbnz	r4, 3dda <_write+0x5e>
system_calls__queued_put():
C:\road_max_fury/lpc40xx_freertos\l4_io\newlib/system_calls.c:33
  for (int i = 0; i < len; i++) {
    3dae:	42a5      	cmp	r5, r4
    3db0:	dc03      	bgt.n	3dba <_write+0x3e>
_write():
C:\road_max_fury/lpc40xx_freertos\l4_io\newlib/system_calls.c:142
    system_calls__print_and_halt(
        "ERROR: Call to _write() with an unsupported handle");
  }

  return bytes_to_write;
}
    3db2:	4628      	mov	r0, r5
    3db4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
C:\road_max_fury/lpc40xx_freertos\l4_io\newlib/system_calls.c:121
        ((int)stderr == file_descriptor || file_id__stderr == file_descriptor);
    3db6:	2401      	movs	r4, #1
    3db8:	e7ef      	b.n	3d9a <_write+0x1e>
system_calls__queued_put():
C:\road_max_fury/lpc40xx_freertos\l4_io\newlib/system_calls.c:34
    uart__put(system_calls__uart_type, ptr[i], forever_timeout);
    3dba:	5d31      	ldrb	r1, [r6, r4]
    3dbc:	f04f 32ff 	mov.w	r2, #4294967295
    3dc0:	2000      	movs	r0, #0
    3dc2:	f7fe ffe3 	bl	2d8c <uart__put>
C:\road_max_fury/lpc40xx_freertos\l4_io\newlib/system_calls.c:33
  for (int i = 0; i < len; i++) {
    3dc6:	3401      	adds	r4, #1
    3dc8:	e7f1      	b.n	3dae <_write+0x32>
system_calls__polled_put():
C:\road_max_fury/lpc40xx_freertos\l4_io\newlib/system_calls.c:42
    uart__polled_put(system_calls__uart_type, ptr[i]);
    3dca:	5d31      	ldrb	r1, [r6, r4]
    3dcc:	2000      	movs	r0, #0
    3dce:	f7fe ff75 	bl	2cbc <uart__polled_put>
C:\road_max_fury/lpc40xx_freertos\l4_io\newlib/system_calls.c:41
  for (int i = 0; i < len; i++) {
    3dd2:	3401      	adds	r4, #1
    3dd4:	42a5      	cmp	r5, r4
    3dd6:	dcf8      	bgt.n	3dca <_write+0x4e>
    3dd8:	e7eb      	b.n	3db2 <_write+0x36>
_write():
C:\road_max_fury/lpc40xx_freertos\l4_io\newlib/system_calls.c:41
    3dda:	2400      	movs	r4, #0
    3ddc:	e7fa      	b.n	3dd4 <_write+0x58>
C:\road_max_fury/lpc40xx_freertos\l4_io\newlib/system_calls.c:137
    system_calls__print_and_halt(
    3dde:	4802      	ldr	r0, [pc, #8]	; (3de8 <_write+0x6c>)
    3de0:	f7ff ffa8 	bl	3d34 <system_calls__print_and_halt>
    3de4:	10000164 	.word	0x10000164
    3de8:	0000bab0 	.word	0x0000bab0

00003dec <_read>:
_read():
C:\road_max_fury/lpc40xx_freertos\l4_io\newlib/system_calls.c:148

/**
 * Low level read routine used by standard input (scanf) and also file reads
 * after fopen() has been called
 */
int _read(int file_descriptor, char *ptr, int len) {
    3dec:	b508      	push	{r3, lr}
C:\road_max_fury/lpc40xx_freertos\l4_io\newlib/system_calls.c:151
  int bytes_read = 0;

  if (_isatty(file_descriptor)) {
    3dee:	f7ff ffb1 	bl	3d54 <_isatty>
    3df2:	b118      	cbz	r0, 3dfc <_read+0x10>
C:\road_max_fury/lpc40xx_freertos\l4_io\newlib/system_calls.c:154
    // This is a little awkward but uart__polled_get() will not poll if RTOS is
    // running with UART RX queue enabled
    if (uart__polled_get(system_calls__uart_type, &ptr[0])) {
    3df4:	2000      	movs	r0, #0
    3df6:	f7fe ff9d 	bl	2d34 <uart__polled_get>
C:\road_max_fury/lpc40xx_freertos\l4_io\newlib/system_calls.c:165
    system_calls__print_and_halt(
        "ERROR: Call to _read() with an unsupported handle");
  }

  return bytes_read;
}
    3dfa:	bd08      	pop	{r3, pc}
C:\road_max_fury/lpc40xx_freertos\l4_io\newlib/system_calls.c:160
    system_calls__print_and_halt(
    3dfc:	4801      	ldr	r0, [pc, #4]	; (3e04 <_read+0x18>)
    3dfe:	f7ff ff99 	bl	3d34 <system_calls__print_and_halt>
    3e02:	bf00      	nop
    3e04:	0000ba7e 	.word	0x0000ba7e

00003e08 <acceleration__init>:
acceleration__init():
C:\road_max_fury/lpc40xx_freertos\l4_io\sensors\sources/acceleration.c:14
  acceleration__memory_axis_base = 0x01,
  acceleration__memory_control = 0x2A,
  acceleration__memory_who_am_i = 0x0D,
} acceleration__memory_e;

bool acceleration__init(void) {
    3e08:	b508      	push	{r3, lr}
C:\road_max_fury/lpc40xx_freertos\l4_io\sensors\sources/acceleration.c:16
  const uint8_t active_mode_with_100Hz = (1 << 0) | (3 << 3);
  i2c__write_single(acceleration__sensor_bus, acceleration__address,
    3e0a:	222a      	movs	r2, #42	; 0x2a
    3e0c:	2319      	movs	r3, #25
    3e0e:	2138      	movs	r1, #56	; 0x38
    3e10:	2002      	movs	r0, #2
    3e12:	f7fe fd73 	bl	28fc <i2c__write_single>
C:\road_max_fury/lpc40xx_freertos\l4_io\sensors\sources/acceleration.c:21
                    acceleration__memory_control, active_mode_with_100Hz);

  const uint8_t who_am_i_expected_value = 0x2A;
  const uint8_t who_am_i_actual_value =
      i2c__read_single(acceleration__sensor_bus, acceleration__address,
    3e16:	220d      	movs	r2, #13
    3e18:	2138      	movs	r1, #56	; 0x38
    3e1a:	2002      	movs	r0, #2
    3e1c:	f7fe fd2a 	bl	2874 <i2c__read_single>
C:\road_max_fury/lpc40xx_freertos\l4_io\sensors\sources/acceleration.c:25
                       acceleration__memory_who_am_i);

  return (who_am_i_expected_value == who_am_i_actual_value);
}
    3e20:	f1a0 032a 	sub.w	r3, r0, #42	; 0x2a
    3e24:	4258      	negs	r0, r3
    3e26:	4158      	adcs	r0, r3
    3e28:	bd08      	pop	{r3, pc}

00003e2a <sensors__init>:
sensors__init():
C:\road_max_fury/lpc40xx_freertos\l4_io\sensors\sources/sensors.c:8
#include "acceleration.h"

bool sensors__init(void) {
  bool status = true;

  status &= acceleration__init();
    3e2a:	f7ff bfed 	b.w	3e08 <acceleration__init>

00003e2e <delay__us>:
delay__us():
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/delay.c:15
void delay__ms(uint32_t ms) {
  const uint64_t us = UINT64_C(1000) * ms;
  delay__us(us);
}

void delay__us(uint64_t us) {
    3e2e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3e30:	4604      	mov	r4, r0
    3e32:	460d      	mov	r5, r1
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/delay.c:16
  const uint64_t time_now_us = sys_time__get_uptime_us();
    3e34:	f000 f8fe 	bl	4034 <sys_time__get_uptime_us>
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/delay.c:17
  const uint64_t time_to_wait_us = time_now_us + us;
    3e38:	1906      	adds	r6, r0, r4
    3e3a:	eb41 0705 	adc.w	r7, r1, r5
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/delay.c:22

  // Use the RTOS for the larger delay period in milliseconds since this will
  // sleep the CPU
  const bool rtos_is_running =
      (taskSCHEDULER_RUNNING == xTaskGetSchedulerState());
    3e3e:	f7fd fe8b 	bl	1b58 <xTaskGetSchedulerState>
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/delay.c:25

  // TODO: This assumes 1Khz OS tick rate
  if (rtos_is_running && us > 1000) {
    3e42:	2802      	cmp	r0, #2
    3e44:	d10c      	bne.n	3e60 <delay__us+0x32>
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/delay.c:25 (discriminator 1)
    3e46:	2300      	movs	r3, #0
    3e48:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
    3e4c:	42ab      	cmp	r3, r5
    3e4e:	bf08      	it	eq
    3e50:	42a2      	cmpeq	r2, r4
    3e52:	d205      	bcs.n	3e60 <delay__us+0x32>
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/delay.c:26
    const uint32_t ms = us / 1000;
    3e54:	4620      	mov	r0, r4
    3e56:	4629      	mov	r1, r5
    3e58:	f001 f9be 	bl	51d8 <__aeabi_uldivmod>
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/delay.c:27
    vTaskDelay(ms);
    3e5c:	f7fd fc9e 	bl	179c <vTaskDelay>
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/delay.c:31 (discriminator 1)
  }

  // Eat the CPU for the remaining microseconds
  while (sys_time__get_uptime_us() < time_to_wait_us) {
    3e60:	f000 f8e8 	bl	4034 <sys_time__get_uptime_us>
    3e64:	42b9      	cmp	r1, r7
    3e66:	bf08      	it	eq
    3e68:	42b0      	cmpeq	r0, r6
    3e6a:	d3f9      	bcc.n	3e60 <delay__us+0x32>
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/delay.c:33
  }
}
    3e6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00003e6e <delay__ms>:
delay__ms():
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/delay.c:12
  delay__us(us);
    3e6e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
    3e72:	fba0 0103 	umull	r0, r1, r0, r3
    3e76:	f7ff bfda 	b.w	3e2e <delay__us>
    3e7a:	Address 0x00003e7a is out of bounds.


00003e7c <peripherals_init>:
peripherals_init():
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/peripherals_init.c:17
static void peripherals_init__startup_sequence(void);
static void peripherals_init__mount_sd_card(void);
static void peripherals_init__uart0_init(void);
static void peripherals_init__i2c_init(void);

void peripherals_init(void) {
    3e7c:	b530      	push	{r4, r5, lr}
    3e7e:	b085      	sub	sp, #20
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/peripherals_init.c:18
  board_io__initialize();
    3e80:	f7fe f9a8 	bl	21d4 <board_io__initialize>
peripherals_init__startup_sequence():
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/peripherals_init.c:38

  peripherals_init__i2c_init();
}

static void peripherals_init__startup_sequence(void) {
  const gpio_s leds[] = {board_io__get_led0(), board_io__get_led1(),
    3e84:	f7fe fa40 	bl	2308 <board_io__get_led0>
    3e88:	f8ad 0008 	strh.w	r0, [sp, #8]
    3e8c:	f7fe fa4e 	bl	232c <board_io__get_led1>
    3e90:	f8ad 000a 	strh.w	r0, [sp, #10]
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/peripherals_init.c:39
                         board_io__get_led2(), board_io__get_led3()};
    3e94:	f7fe fa5c 	bl	2350 <board_io__get_led2>
    3e98:	f8ad 000c 	strh.w	r0, [sp, #12]
    3e9c:	f7fe fa6a 	bl	2374 <board_io__get_led3>
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/peripherals_init.c:40
  for (size_t number = 0; number < 32; number++) {
    3ea0:	2400      	movs	r4, #0
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/peripherals_init.c:39
                         board_io__get_led2(), board_io__get_led3()};
    3ea2:	f8ad 000e 	strh.w	r0, [sp, #14]
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/peripherals_init.c:41
    gpio__toggle(leds[number % ARRAY_SIZE(leds)]);
    3ea6:	aa04      	add	r2, sp, #16
    3ea8:	f004 0303 	and.w	r3, r4, #3
    3eac:	eb02 0343 	add.w	r3, r2, r3, lsl #1
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/peripherals_init.c:40
  for (size_t number = 0; number < 32; number++) {
    3eb0:	3401      	adds	r4, #1
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/peripherals_init.c:41
    gpio__toggle(leds[number % ARRAY_SIZE(leds)]);
    3eb2:	f833 0c08 	ldrh.w	r0, [r3, #-8]
    3eb6:	f7fe fb1b 	bl	24f0 <gpio__toggle>
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/peripherals_init.c:42
    delay__ms(50);
    3eba:	2032      	movs	r0, #50	; 0x32
    3ebc:	f7ff ffd7 	bl	3e6e <delay__ms>
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/peripherals_init.c:40
  for (size_t number = 0; number < 32; number++) {
    3ec0:	2c20      	cmp	r4, #32
    3ec2:	d1f0      	bne.n	3ea6 <peripherals_init+0x2a>
peripherals_init():
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/peripherals_init.c:22
  ssp2__initialize(spi_sd_max_speed_khz);
    3ec4:	f645 50c0 	movw	r0, #24000	; 0x5dc0
    3ec8:	f7fe fdda 	bl	2a80 <ssp2__initialize>
peripherals_init__mount_sd_card():
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/peripherals_init.c:54

  const BYTE option_mount_later =
      0; // Actually mounts later when the first file is accessed
  const TCHAR *default_drive = (const TCHAR *)"";

  f_mount(&sd_card_drive, default_drive, option_mount_later);
    3ecc:	2200      	movs	r2, #0
    3ece:	4923      	ldr	r1, [pc, #140]	; (3f5c <peripherals_init+0xe0>)
    3ed0:	4823      	ldr	r0, [pc, #140]	; (3f60 <peripherals_init+0xe4>)
    3ed2:	f7ff fc99 	bl	3808 <f_mount>
peripherals_init__uart0_init():
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/peripherals_init.c:60
}

static void peripherals_init__uart0_init(void) {
  // Do not do any bufferring for standard input otherwise getchar(), scanf()
  // may not work
  setvbuf(stdin, 0, _IONBF, 0);
    3ed6:	4b23      	ldr	r3, [pc, #140]	; (3f64 <peripherals_init+0xe8>)
    3ed8:	6818      	ldr	r0, [r3, #0]
    3eda:	2300      	movs	r3, #0
    3edc:	4619      	mov	r1, r3
    3ede:	2202      	movs	r2, #2
    3ee0:	6840      	ldr	r0, [r0, #4]
    3ee2:	f002 fca5 	bl	6830 <setvbuf>
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/peripherals_init.c:64

  // Note: PIN functions are initialized by board_io__initialize() for P0.2(Tx)
  // and P0.3(Rx)
  uart__init(UART__0, clock__get_peripheral_clock_hz(), 115200);
    3ee6:	f7fc f99d 	bl	224 <clock__get_peripheral_clock_hz>
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/peripherals_init.c:80
  static uint8_t rxq_storage[32];
  static uint8_t txq_storage[128];

  // Make UART more efficient by backing it with RTOS queues (optional but
  // highly recommended with RTOS)
  QueueHandle_t rxq_handle = xQueueCreateStatic(
    3eea:	2500      	movs	r5, #0
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/peripherals_init.c:64
  uart__init(UART__0, clock__get_peripheral_clock_hz(), 115200);
    3eec:	4601      	mov	r1, r0
    3eee:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
    3ef2:	2000      	movs	r0, #0
    3ef4:	f7fe fe58 	bl	2ba8 <uart__init>
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/peripherals_init.c:80
  QueueHandle_t rxq_handle = xQueueCreateStatic(
    3ef8:	9500      	str	r5, [sp, #0]
    3efa:	4b1b      	ldr	r3, [pc, #108]	; (3f68 <peripherals_init+0xec>)
    3efc:	4a1b      	ldr	r2, [pc, #108]	; (3f6c <peripherals_init+0xf0>)
    3efe:	2101      	movs	r1, #1
    3f00:	4620      	mov	r0, r4
    3f02:	f7fc fd69 	bl	9d8 <xQueueGenericCreateStatic>
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/peripherals_init.c:82
      sizeof(rxq_storage), sizeof(char), rxq_storage, &rxq_struct);
  QueueHandle_t txq_handle = xQueueCreateStatic(
    3f06:	4b1a      	ldr	r3, [pc, #104]	; (3f70 <peripherals_init+0xf4>)
    3f08:	9500      	str	r5, [sp, #0]
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/peripherals_init.c:80
  QueueHandle_t rxq_handle = xQueueCreateStatic(
    3f0a:	4604      	mov	r4, r0
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/peripherals_init.c:82
  QueueHandle_t txq_handle = xQueueCreateStatic(
    3f0c:	4a19      	ldr	r2, [pc, #100]	; (3f74 <peripherals_init+0xf8>)
    3f0e:	2101      	movs	r1, #1
    3f10:	2080      	movs	r0, #128	; 0x80
    3f12:	f7fc fd61 	bl	9d8 <xQueueGenericCreateStatic>
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/peripherals_init.c:85
      sizeof(txq_storage), sizeof(char), txq_storage, &txq_struct);

  uart__enable_queues(UART__0, txq_handle, rxq_handle);
    3f16:	4622      	mov	r2, r4
    3f18:	4601      	mov	r1, r0
    3f1a:	4628      	mov	r0, r5
    3f1c:	f7fe fe90 	bl	2c40 <uart__enable_queues>
peripherals_init():
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/peripherals_init.c:32
  printf("\n%s\n%s(): Low level startup\n", line, __FUNCTION__);
    3f20:	4a15      	ldr	r2, [pc, #84]	; (3f78 <peripherals_init+0xfc>)
    3f22:	4916      	ldr	r1, [pc, #88]	; (3f7c <peripherals_init+0x100>)
    3f24:	4816      	ldr	r0, [pc, #88]	; (3f80 <peripherals_init+0x104>)
peripherals_init__i2c_init():
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/peripherals_init.c:94
  const uint32_t i2c_speed_hz = UINT32_C(400) * 1000;
  i2c__initialize(I2C__2, i2c_speed_hz, clock__get_peripheral_clock_hz());

  for (unsigned slave_address = 2; slave_address <= 254; slave_address += 2) {
    if (i2c__detect(I2C__2, slave_address)) {
      printf("I2C slave detected at address: 0x%02X\n", slave_address);
    3f26:	4d17      	ldr	r5, [pc, #92]	; (3f84 <peripherals_init+0x108>)
peripherals_init():
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/peripherals_init.c:32
  printf("\n%s\n%s(): Low level startup\n", line, __FUNCTION__);
    3f28:	f002 fbd0 	bl	66cc <iprintf>
peripherals_init__i2c_init():
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/peripherals_init.c:90
  i2c__initialize(I2C__2, i2c_speed_hz, clock__get_peripheral_clock_hz());
    3f2c:	f7fc f97a 	bl	224 <clock__get_peripheral_clock_hz>
    3f30:	4915      	ldr	r1, [pc, #84]	; (3f88 <peripherals_init+0x10c>)
    3f32:	4602      	mov	r2, r0
    3f34:	2002      	movs	r0, #2
    3f36:	f7fe fc15 	bl	2764 <i2c__initialize>
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/peripherals_init.c:92
  for (unsigned slave_address = 2; slave_address <= 254; slave_address += 2) {
    3f3a:	2402      	movs	r4, #2
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/peripherals_init.c:93
    if (i2c__detect(I2C__2, slave_address)) {
    3f3c:	b2e1      	uxtb	r1, r4
    3f3e:	2002      	movs	r0, #2
    3f40:	f7fe fcd0 	bl	28e4 <i2c__detect>
    3f44:	b118      	cbz	r0, 3f4e <peripherals_init+0xd2>
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/peripherals_init.c:94
      printf("I2C slave detected at address: 0x%02X\n", slave_address);
    3f46:	4621      	mov	r1, r4
    3f48:	4628      	mov	r0, r5
    3f4a:	f002 fbbf 	bl	66cc <iprintf>
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/peripherals_init.c:92
  for (unsigned slave_address = 2; slave_address <= 254; slave_address += 2) {
    3f4e:	3402      	adds	r4, #2
    3f50:	f5b4 7f80 	cmp.w	r4, #256	; 0x100
    3f54:	d1f2      	bne.n	3f3c <peripherals_init+0xc0>
peripherals_init():
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/peripherals_init.c:35
}
    3f56:	b005      	add	sp, #20
    3f58:	bd30      	pop	{r4, r5, pc}
    3f5a:	bf00      	nop
    3f5c:	0000b65c 	.word	0x0000b65c
    3f60:	10000d88 	.word	0x10000d88
    3f64:	10000164 	.word	0x10000164
    3f68:	10000d38 	.word	0x10000d38
    3f6c:	10000d17 	.word	0x10000d17
    3f70:	10001040 	.word	0x10001040
    3f74:	10000fc0 	.word	0x10000fc0
    3f78:	0000bae3 	.word	0x0000bae3
    3f7c:	0000baf4 	.word	0x0000baf4
    3f80:	0000bb45 	.word	0x0000bb45
    3f84:	0000bb62 	.word	0x0000bb62
    3f88:	00061a80 	.word	0x00061a80

00003f8c <spi2_mutex__acquire>:
spi2_mutex__acquire():
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/ssp2_mutex.c:10
#include "task.h"

static StaticSemaphore_t spi2_mutex_memory;
static SemaphoreHandle_t spi2_mutex_handle;

void spi2_mutex__acquire(void) {
    3f8c:	b510      	push	{r4, lr}
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/ssp2_mutex.c:11
  if (!spi2_mutex_handle) {
    3f8e:	4c0a      	ldr	r4, [pc, #40]	; (3fb8 <spi2_mutex__acquire+0x2c>)
    3f90:	6823      	ldr	r3, [r4, #0]
    3f92:	b923      	cbnz	r3, 3f9e <spi2_mutex__acquire+0x12>
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/ssp2_mutex.c:12
    spi2_mutex_handle = xSemaphoreCreateMutexStatic(&spi2_mutex_memory);
    3f94:	4909      	ldr	r1, [pc, #36]	; (3fbc <spi2_mutex__acquire+0x30>)
    3f96:	2001      	movs	r0, #1
    3f98:	f7fc fe3c 	bl	c14 <xQueueCreateMutexStatic>
    3f9c:	6020      	str	r0, [r4, #0]
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/ssp2_mutex.c:16
  }

  // Only acquire the mutex if the FreeRTOS is running
  if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
    3f9e:	f7fd fddb 	bl	1b58 <xTaskGetSchedulerState>
    3fa2:	2802      	cmp	r0, #2
    3fa4:	d106      	bne.n	3fb4 <spi2_mutex__acquire+0x28>
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/ssp2_mutex.c:17
    xSemaphoreTake(spi2_mutex_handle, portMAX_DELAY);
    3fa6:	6820      	ldr	r0, [r4, #0]
    3fa8:	f04f 31ff 	mov.w	r1, #4294967295
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/ssp2_mutex.c:19
  }
}
    3fac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/ssp2_mutex.c:17
    xSemaphoreTake(spi2_mutex_handle, portMAX_DELAY);
    3fb0:	f7fc bfa6 	b.w	f00 <xQueueSemaphoreTake>
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/ssp2_mutex.c:19
}
    3fb4:	bd10      	pop	{r4, pc}
    3fb6:	bf00      	nop
    3fb8:	10001090 	.word	0x10001090
    3fbc:	10001094 	.word	0x10001094

00003fc0 <spi2_mutex__release>:
spi2_mutex__release():
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/ssp2_mutex.c:21

void spi2_mutex__release(void) {
    3fc0:	b510      	push	{r4, lr}
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/ssp2_mutex.c:22
  if (taskSCHEDULER_RUNNING == xTaskGetSchedulerState()) {
    3fc2:	f7fd fdc9 	bl	1b58 <xTaskGetSchedulerState>
    3fc6:	2802      	cmp	r0, #2
    3fc8:	d108      	bne.n	3fdc <spi2_mutex__release+0x1c>
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/ssp2_mutex.c:23
    xSemaphoreGive(spi2_mutex_handle);
    3fca:	4805      	ldr	r0, [pc, #20]	; (3fe0 <spi2_mutex__release+0x20>)
    3fcc:	2300      	movs	r3, #0
    3fce:	461a      	mov	r2, r3
    3fd0:	4619      	mov	r1, r3
    3fd2:	6800      	ldr	r0, [r0, #0]
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/ssp2_mutex.c:25
  }
}
    3fd4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/ssp2_mutex.c:23
    xSemaphoreGive(spi2_mutex_handle);
    3fd8:	f7fc bd6e 	b.w	ab8 <xQueueGenericSend>
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/ssp2_mutex.c:25
}
    3fdc:	bd10      	pop	{r4, pc}
    3fde:	bf00      	nop
    3fe0:	10001090 	.word	0x10001090

00003fe4 <sys_time__one_minute_isr>:
sys_time__one_minute_isr():
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/sys_time.c:13

static const uint32_t sys_time__us_per_sec = UINT32_C(1) * 1000 * 1000;
static volatile uint32_t sys_time__one_minute_counter = 0;

static void sys_time__one_minute_isr(void) {
  ++sys_time__one_minute_counter;
    3fe4:	4a07      	ldr	r2, [pc, #28]	; (4004 <sys_time__one_minute_isr+0x20>)
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/sys_time.c:12
static void sys_time__one_minute_isr(void) {
    3fe6:	b508      	push	{r3, lr}
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/sys_time.c:13
  ++sys_time__one_minute_counter;
    3fe8:	6813      	ldr	r3, [r2, #0]
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/sys_time.c:16

  // Reset the HW timer manually and then clear the interrupt
  hw_timer__set_value(sys_time__hw_timer, 0);
    3fea:	2100      	movs	r1, #0
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/sys_time.c:13
  ++sys_time__one_minute_counter;
    3fec:	3301      	adds	r3, #1
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/sys_time.c:16
  hw_timer__set_value(sys_time__hw_timer, 0);
    3fee:	4608      	mov	r0, r1
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/sys_time.c:13
  ++sys_time__one_minute_counter;
    3ff0:	6013      	str	r3, [r2, #0]
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/sys_time.c:16
  hw_timer__set_value(sys_time__hw_timer, 0);
    3ff2:	f7fe fad9 	bl	25a8 <hw_timer__set_value>
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/sys_time.c:17
  hw_timer__acknowledge_interrupt(sys_time__hw_timer, sys_time__hw_timer_mr);
    3ff6:	2100      	movs	r1, #0
    3ff8:	4608      	mov	r0, r1
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/sys_time.c:18
}
    3ffa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/sys_time.c:17
  hw_timer__acknowledge_interrupt(sys_time__hw_timer, sys_time__hw_timer_mr);
    3ffe:	f7fe bac1 	b.w	2584 <hw_timer__acknowledge_interrupt>
    4002:	bf00      	nop
    4004:	100010e4 	.word	0x100010e4

00004008 <sys_time__init>:
sys_time__init():
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/sys_time.c:26
 *
 *                      P U B L I C    F U N C T I O N S
 *
 ******************************************************************************/

void sys_time__init(uint32_t peripheral_clock_hz) {
    4008:	b508      	push	{r3, lr}
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/sys_time.c:32
  const uint32_t prescalar_for_1us =
      (peripheral_clock_hz / sys_time__us_per_sec) - 1;
  const uint32_t one_minute_in_us = UINT32_C(60) * 1000 * 1000;

  // Enable the timer with 1uS resolution with an interrupt
  hw_timer__enable(sys_time__hw_timer, prescalar_for_1us,
    400a:	4a07      	ldr	r2, [pc, #28]	; (4028 <sys_time__init+0x20>)
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/sys_time.c:28
      (peripheral_clock_hz / sys_time__us_per_sec) - 1;
    400c:	4907      	ldr	r1, [pc, #28]	; (402c <sys_time__init+0x24>)
    400e:	fbb0 f1f1 	udiv	r1, r0, r1
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/sys_time.c:32
  hw_timer__enable(sys_time__hw_timer, prescalar_for_1us,
    4012:	2000      	movs	r0, #0
    4014:	3901      	subs	r1, #1
    4016:	f7fe fa7f 	bl	2518 <hw_timer__enable>
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/sys_time.c:34
                   sys_time__one_minute_isr);
  hw_timer__enable_match_isr(sys_time__hw_timer, sys_time__hw_timer_mr,
    401a:	2100      	movs	r1, #0
    401c:	4a04      	ldr	r2, [pc, #16]	; (4030 <sys_time__init+0x28>)
    401e:	4608      	mov	r0, r1
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/sys_time.c:36
                             one_minute_in_us);
}
    4020:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/sys_time.c:34
  hw_timer__enable_match_isr(sys_time__hw_timer, sys_time__hw_timer_mr,
    4024:	f7fe ba9c 	b.w	2560 <hw_timer__enable_match_isr>
    4028:	00003fe5 	.word	0x00003fe5
    402c:	000f4240 	.word	0x000f4240
    4030:	03938700 	.word	0x03938700

00004034 <sys_time__get_uptime_us>:
sys_time__get_uptime_us():
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/sys_time.c:38

uint64_t sys_time__get_uptime_us(void) {
    4034:	b570      	push	{r4, r5, r6, lr}
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/sys_time.c:53
   * and simplifies the logic of reading sys_time__sec_counter and the 32-bit HW
   * timer value.
   */
  do {
    before_us = hw_timer__get_value(sys_time__hw_timer);
    minutes = sys_time__one_minute_counter;
    4036:	4e08      	ldr	r6, [pc, #32]	; (4058 <sys_time__get_uptime_us+0x24>)
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/sys_time.c:52 (discriminator 1)
    before_us = hw_timer__get_value(sys_time__hw_timer);
    4038:	2000      	movs	r0, #0
    403a:	f7fe faad 	bl	2598 <hw_timer__get_value>
    403e:	4605      	mov	r5, r0
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/sys_time.c:54 (discriminator 1)
    after_us = hw_timer__get_value(sys_time__hw_timer);
    4040:	2000      	movs	r0, #0
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/sys_time.c:53 (discriminator 1)
    minutes = sys_time__one_minute_counter;
    4042:	6834      	ldr	r4, [r6, #0]
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/sys_time.c:54 (discriminator 1)
    after_us = hw_timer__get_value(sys_time__hw_timer);
    4044:	f7fe faa8 	bl	2598 <hw_timer__get_value>
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/sys_time.c:55 (discriminator 1)
  } while (after_us < before_us);
    4048:	4285      	cmp	r5, r0
    404a:	d8f5      	bhi.n	4038 <sys_time__get_uptime_us+0x4>
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/sys_time.c:61

  uint64_t uptime_us = after_us;
  uptime_us += ((uint64_t)minutes * 60 * sys_time__us_per_sec);

  return uptime_us;
}
    404c:	4b03      	ldr	r3, [pc, #12]	; (405c <sys_time__get_uptime_us+0x28>)
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/sys_time.c:58
  uptime_us += ((uint64_t)minutes * 60 * sys_time__us_per_sec);
    404e:	2100      	movs	r1, #0
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/sys_time.c:61
}
    4050:	fbe3 0104 	umlal	r0, r1, r3, r4
    4054:	bd70      	pop	{r4, r5, r6, pc}
    4056:	bf00      	nop
    4058:	100010e4 	.word	0x100010e4
    405c:	03938700 	.word	0x03938700

00004060 <sys_time__get_uptime_ms>:
sys_time__get_uptime_ms():
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/sys_time.c:63

uint64_t sys_time__get_uptime_ms(void) {
    4060:	b508      	push	{r3, lr}
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/sys_time.c:64
  const uint64_t us = sys_time__get_uptime_us();
    4062:	f7ff ffe7 	bl	4034 <sys_time__get_uptime_us>
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/sys_time.c:65
  return (us / 1000);
    4066:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
    406a:	2300      	movs	r3, #0
    406c:	f001 f8b4 	bl	51d8 <__aeabi_uldivmod>
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/sys_time.c:66
}
    4070:	bd08      	pop	{r3, pc}

00004072 <uart_puts__polled>:
uart_puts__polled():
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/uart_printf.c:54
  }

  return would_print;
}

void uart_puts__polled(uart_e uart, const char *message) {
    4072:	b570      	push	{r4, r5, r6, lr}
    4074:	4605      	mov	r5, r0
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/uart_printf.c:55
  const size_t message_length = strlen(message);
    4076:	4608      	mov	r0, r1
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/uart_printf.c:54
void uart_puts__polled(uart_e uart, const char *message) {
    4078:	460c      	mov	r4, r1
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/uart_printf.c:55
  const size_t message_length = strlen(message);
    407a:	f002 fcea 	bl	6a52 <strlen>
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/uart_printf.c:56
  for (size_t byte = 0; byte < message_length; byte++) {
    407e:	1826      	adds	r6, r4, r0
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/uart_printf.c:56 (discriminator 1)
    4080:	42b4      	cmp	r4, r6
    4082:	d105      	bne.n	4090 <uart_puts__polled+0x1e>
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/uart_printf.c:59
    uart__polled_put(uart, message[byte]);
  }
  uart__polled_put(uart, '\n');
    4084:	4628      	mov	r0, r5
    4086:	210a      	movs	r1, #10
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/uart_printf.c:60
    4088:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/uart_printf.c:59
  uart__polled_put(uart, '\n');
    408c:	f7fe be16 	b.w	2cbc <uart__polled_put>
C:\road_max_fury/lpc40xx_freertos\l4_io\sources/uart_printf.c:57 (discriminator 3)
    uart__polled_put(uart, message[byte]);
    4090:	f814 1b01 	ldrb.w	r1, [r4], #1
    4094:	4628      	mov	r0, r5
    4096:	f7fe fe11 	bl	2cbc <uart__polled_put>
    409a:	e7f1      	b.n	4080 <uart_puts__polled+0xe>

0000409c <Adafruit_GFX_init>:
Adafruit_GFX_init():
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:59

int16_t height(void) { return ada_gfx._height; }
int16_t width(void) { return ada_gfx._width; }

void Adafruit_GFX_init(int16_t w, int16_t h) {
  ada_gfx._width = w;
    409c:	4b05      	ldr	r3, [pc, #20]	; (40b4 <Adafruit_GFX_init+0x18>)
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:64
  ada_gfx._height = h;
  ada_gfx.rotation = 0;
  ada_gfx.cursor_y = ada_gfx.cursor_x = 0;
  ada_gfx.textsize = 1;
  ada_gfx.textcolor = ada_gfx.textbgcolor = 0xFFFF;
    409e:	f04f 32ff 	mov.w	r2, #4294967295
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:60
  ada_gfx._height = h;
    40a2:	8059      	strh	r1, [r3, #2]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:64
  ada_gfx.textcolor = ada_gfx.textbgcolor = 0xFFFF;
    40a4:	2100      	movs	r1, #0
    40a6:	e9c3 1201 	strd	r1, r2, [r3, #4]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:63
  ada_gfx.textsize = 1;
    40aa:	2201      	movs	r2, #1
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:59
  ada_gfx._width = w;
    40ac:	8018      	strh	r0, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:63
  ada_gfx.textsize = 1;
    40ae:	819a      	strh	r2, [r3, #12]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:65
  ada_gfx.wrap = true;
    40b0:	761a      	strb	r2, [r3, #24]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:69
  // Default to GLCDFONT to be compatible with existing code
  // TODO setFont(GLCDFONT); // May also be set to TIMESNR_8, CENTURY_8,
  // COMICS_8 or TEST (for testing candidate fonts)
}
    40b2:	4770      	bx	lr
    40b4:	10001104 	.word	0x10001104

000040b8 <RGBmatrixPanel_init>:
RGBmatrixPanel_init():
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:109
  led_matrix.swapflag = false;
  led_matrix.backindex = 0; // Array index of back buffer
}

// Constructor for 32x32 or 32x64 panel:
void RGBmatrixPanel_init(bool dbuf, uint16_t width) {
    40b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    40bc:	460d      	mov	r5, r1
    40be:	4680      	mov	r8, r0
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:111

  Adafruit_GFX_init(width, 32);
    40c0:	2120      	movs	r1, #32
    40c2:	b228      	sxth	r0, r5
init():
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:74
  led_matrix.nRows =
    40c4:	4c53      	ldr	r4, [pc, #332]	; (4214 <RGBmatrixPanel_init+0x15c>)
RGBmatrixPanel_init():
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:111
  Adafruit_GFX_init(width, 32);
    40c6:	f7ff ffe9 	bl	409c <Adafruit_GFX_init>
init():
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:79
      width * led_matrix.nRows * 3; // x3 = 3 bytes holds 4 planes "packed"
    40ca:	2630      	movs	r6, #48	; 0x30
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:74
  led_matrix.nRows =
    40cc:	2310      	movs	r3, #16
    40ce:	7223      	strb	r3, [r4, #8]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:79
      width * led_matrix.nRows * 3; // x3 = 3 bytes holds 4 planes "packed"
    40d0:	436e      	muls	r6, r5
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:80
  uint32_t allocsize = (dbuf == true) ? (buffsize * 2) : buffsize;
    40d2:	f1b8 0f00 	cmp.w	r8, #0
    40d6:	f000 809b 	beq.w	4210 <RGBmatrixPanel_init+0x158>
    40da:	0077      	lsls	r7, r6, #1
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:81
  if (NULL == (led_matrix.matrixbuff[0] = (uint8_t *)malloc(allocsize)))
    40dc:	4638      	mov	r0, r7
    40de:	f001 fa97 	bl	5610 <malloc>
    40e2:	4605      	mov	r5, r0
    40e4:	6020      	str	r0, [r4, #0]
    40e6:	b178      	cbz	r0, 4108 <RGBmatrixPanel_init+0x50>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:83
  memset(led_matrix.matrixbuff[0], 0, allocsize);
    40e8:	463a      	mov	r2, r7
    40ea:	2100      	movs	r1, #0
    40ec:	f001 fac8 	bl	5680 <memset>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:87
                                 : led_matrix.matrixbuff[0];
    40f0:	f1b8 0f00 	cmp.w	r8, #0
    40f4:	d000      	beq.n	40f8 <RGBmatrixPanel_init+0x40>
    40f6:	4435      	add	r5, r6
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:102
  led_matrix.plane = nPlanes - 1;
    40f8:	2303      	movs	r3, #3
    40fa:	74e3      	strb	r3, [r4, #19]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:103
  led_matrix.row = led_matrix.nRows - 1;
    40fc:	230f      	movs	r3, #15
    40fe:	74a3      	strb	r3, [r4, #18]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:104
  led_matrix.swapflag = false;
    4100:	2300      	movs	r3, #0
    4102:	72a3      	strb	r3, [r4, #10]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:85
  led_matrix.matrixbuff[1] = (dbuf == true)
    4104:	6065      	str	r5, [r4, #4]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:105
  led_matrix.backindex = 0; // Array index of back buffer
    4106:	7263      	strb	r3, [r4, #9]
setup_led_matrix_pins():
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:40
  P_addrA = gpio__construct_as_output(GPIO__PORT_0, 26);
    4108:	211a      	movs	r1, #26
    410a:	2000      	movs	r0, #0
    410c:	f7fe f9b2 	bl	2474 <gpio__construct_as_output>
    4110:	4b41      	ldr	r3, [pc, #260]	; (4218 <RGBmatrixPanel_init+0x160>)
    4112:	b200      	sxth	r0, r0
    4114:	7018      	strb	r0, [r3, #0]
    4116:	f3c0 2007 	ubfx	r0, r0, #8, #8
    411a:	7058      	strb	r0, [r3, #1]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:41
  P_addrB = gpio__construct_as_output(GPIO__PORT_1, 31);
    411c:	211f      	movs	r1, #31
    411e:	2001      	movs	r0, #1
    4120:	f7fe f9a8 	bl	2474 <gpio__construct_as_output>
    4124:	4b3d      	ldr	r3, [pc, #244]	; (421c <RGBmatrixPanel_init+0x164>)
    4126:	b200      	sxth	r0, r0
    4128:	7018      	strb	r0, [r3, #0]
    412a:	f3c0 2007 	ubfx	r0, r0, #8, #8
    412e:	7058      	strb	r0, [r3, #1]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:42
  P_addrC = gpio__construct_as_output(GPIO__PORT_1, 20);
    4130:	2114      	movs	r1, #20
    4132:	2001      	movs	r0, #1
    4134:	f7fe f99e 	bl	2474 <gpio__construct_as_output>
    4138:	4b39      	ldr	r3, [pc, #228]	; (4220 <RGBmatrixPanel_init+0x168>)
    413a:	b200      	sxth	r0, r0
    413c:	7018      	strb	r0, [r3, #0]
    413e:	f3c0 2007 	ubfx	r0, r0, #8, #8
    4142:	7058      	strb	r0, [r3, #1]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:43
  P_addrD = gpio__construct_as_output(GPIO__PORT_1, 28);
    4144:	211c      	movs	r1, #28
    4146:	2001      	movs	r0, #1
    4148:	f7fe f994 	bl	2474 <gpio__construct_as_output>
    414c:	4b35      	ldr	r3, [pc, #212]	; (4224 <RGBmatrixPanel_init+0x16c>)
    414e:	b200      	sxth	r0, r0
    4150:	7018      	strb	r0, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:44
  P_LATCH = gpio__construct_as_output(GPIO__PORT_2, 2);
    4152:	2102      	movs	r1, #2
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:43
  P_addrD = gpio__construct_as_output(GPIO__PORT_1, 28);
    4154:	f3c0 2007 	ubfx	r0, r0, #8, #8
    4158:	7058      	strb	r0, [r3, #1]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:44
  P_LATCH = gpio__construct_as_output(GPIO__PORT_2, 2);
    415a:	4608      	mov	r0, r1
    415c:	f7fe f98a 	bl	2474 <gpio__construct_as_output>
    4160:	4b31      	ldr	r3, [pc, #196]	; (4228 <RGBmatrixPanel_init+0x170>)
    4162:	b200      	sxth	r0, r0
    4164:	7018      	strb	r0, [r3, #0]
    4166:	f3c0 2007 	ubfx	r0, r0, #8, #8
    416a:	7058      	strb	r0, [r3, #1]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:45
  P_OE = gpio__construct_as_output(GPIO__PORT_2, 5);
    416c:	2105      	movs	r1, #5
    416e:	2002      	movs	r0, #2
    4170:	f7fe f980 	bl	2474 <gpio__construct_as_output>
    4174:	4b2d      	ldr	r3, [pc, #180]	; (422c <RGBmatrixPanel_init+0x174>)
    4176:	b200      	sxth	r0, r0
    4178:	7018      	strb	r0, [r3, #0]
    417a:	f3c0 2007 	ubfx	r0, r0, #8, #8
    417e:	7058      	strb	r0, [r3, #1]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:46
  P_CLOCK = gpio__construct_as_output(GPIO__PORT_2, 0);
    4180:	2100      	movs	r1, #0
    4182:	2002      	movs	r0, #2
    4184:	f7fe f976 	bl	2474 <gpio__construct_as_output>
    4188:	4b29      	ldr	r3, [pc, #164]	; (4230 <RGBmatrixPanel_init+0x178>)
    418a:	b200      	sxth	r0, r0
    418c:	7018      	strb	r0, [r3, #0]
    418e:	f3c0 2007 	ubfx	r0, r0, #8, #8
    4192:	7058      	strb	r0, [r3, #1]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:47
  P_R1 = gpio__construct_as_output(GPIO__PORT_1, 0);
    4194:	2100      	movs	r1, #0
    4196:	2001      	movs	r0, #1
    4198:	f7fe f96c 	bl	2474 <gpio__construct_as_output>
    419c:	4b25      	ldr	r3, [pc, #148]	; (4234 <RGBmatrixPanel_init+0x17c>)
    419e:	b200      	sxth	r0, r0
    41a0:	7018      	strb	r0, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:48
  P_G1 = gpio__construct_as_output(GPIO__PORT_1, 1);
    41a2:	2101      	movs	r1, #1
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:47
  P_R1 = gpio__construct_as_output(GPIO__PORT_1, 0);
    41a4:	f3c0 2007 	ubfx	r0, r0, #8, #8
    41a8:	7058      	strb	r0, [r3, #1]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:48
  P_G1 = gpio__construct_as_output(GPIO__PORT_1, 1);
    41aa:	4608      	mov	r0, r1
    41ac:	f7fe f962 	bl	2474 <gpio__construct_as_output>
    41b0:	4b21      	ldr	r3, [pc, #132]	; (4238 <RGBmatrixPanel_init+0x180>)
    41b2:	b200      	sxth	r0, r0
    41b4:	7018      	strb	r0, [r3, #0]
    41b6:	f3c0 2007 	ubfx	r0, r0, #8, #8
    41ba:	7058      	strb	r0, [r3, #1]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:49
  P_B1 = gpio__construct_as_output(GPIO__PORT_1, 4);
    41bc:	2104      	movs	r1, #4
    41be:	2001      	movs	r0, #1
    41c0:	f7fe f958 	bl	2474 <gpio__construct_as_output>
    41c4:	4b1d      	ldr	r3, [pc, #116]	; (423c <RGBmatrixPanel_init+0x184>)
    41c6:	b200      	sxth	r0, r0
    41c8:	7018      	strb	r0, [r3, #0]
    41ca:	f3c0 2007 	ubfx	r0, r0, #8, #8
    41ce:	7058      	strb	r0, [r3, #1]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:50
  P_R2 = gpio__construct_as_output(GPIO__PORT_4, 28);
    41d0:	211c      	movs	r1, #28
    41d2:	2004      	movs	r0, #4
    41d4:	f7fe f94e 	bl	2474 <gpio__construct_as_output>
    41d8:	4b19      	ldr	r3, [pc, #100]	; (4240 <RGBmatrixPanel_init+0x188>)
    41da:	b200      	sxth	r0, r0
    41dc:	7018      	strb	r0, [r3, #0]
    41de:	f3c0 2007 	ubfx	r0, r0, #8, #8
    41e2:	7058      	strb	r0, [r3, #1]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:51
  P_G2 = gpio__construct_as_output(GPIO__PORT_0, 6);
    41e4:	2106      	movs	r1, #6
    41e6:	2000      	movs	r0, #0
    41e8:	f7fe f944 	bl	2474 <gpio__construct_as_output>
    41ec:	4b15      	ldr	r3, [pc, #84]	; (4244 <RGBmatrixPanel_init+0x18c>)
    41ee:	b200      	sxth	r0, r0
    41f0:	7018      	strb	r0, [r3, #0]
    41f2:	f3c0 2007 	ubfx	r0, r0, #8, #8
    41f6:	7058      	strb	r0, [r3, #1]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:52
  P_B2 = gpio__construct_as_output(GPIO__PORT_0, 8);
    41f8:	2108      	movs	r1, #8
    41fa:	2000      	movs	r0, #0
    41fc:	f7fe f93a 	bl	2474 <gpio__construct_as_output>
    4200:	4b11      	ldr	r3, [pc, #68]	; (4248 <RGBmatrixPanel_init+0x190>)
    4202:	b200      	sxth	r0, r0
    4204:	7018      	strb	r0, [r3, #0]
    4206:	f3c0 2007 	ubfx	r0, r0, #8, #8
    420a:	7058      	strb	r0, [r3, #1]
RGBmatrixPanel_init():
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:116
  init(16, dbuf, width);
  setup_led_matrix_pins();
  // Init a few extra 32x32-specific elements:
  // _d        = d;
}
    420c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
init():
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:80
  uint32_t allocsize = (dbuf == true) ? (buffsize * 2) : buffsize;
    4210:	4637      	mov	r7, r6
    4212:	e763      	b.n	40dc <RGBmatrixPanel_init+0x24>
    4214:	10001324 	.word	0x10001324
    4218:	100010fa 	.word	0x100010fa
    421c:	100010fc 	.word	0x100010fc
    4220:	100010fe 	.word	0x100010fe
    4224:	10001100 	.word	0x10001100
    4228:	100010f2 	.word	0x100010f2
    422c:	100010f4 	.word	0x100010f4
    4230:	100010ec 	.word	0x100010ec
    4234:	100010f6 	.word	0x100010f6
    4238:	100010ee 	.word	0x100010ee
    423c:	100010e8 	.word	0x100010e8
    4240:	100010f8 	.word	0x100010f8
    4244:	100010f0 	.word	0x100010f0
    4248:	100010ea 	.word	0x100010ea

0000424c <led_matrix__begin>:
led_matrix__begin():
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:118

void led_matrix__begin(void) {
    424c:	b510      	push	{r4, lr}
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:120

  led_matrix.backindex = 0; // Back buffer
    424e:	4c34      	ldr	r4, [pc, #208]	; (4320 <led_matrix__begin+0xd4>)
    4250:	2300      	movs	r3, #0
    4252:	7263      	strb	r3, [r4, #9]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:122
  led_matrix.buffptr =
      led_matrix.matrixbuff[1 - led_matrix.backindex]; // -> front buffer
    4254:	7a63      	ldrb	r3, [r4, #9]
    4256:	f1c3 0301 	rsb	r3, r3, #1
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:121
  led_matrix.buffptr =
    425a:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
    425e:	6163      	str	r3, [r4, #20]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:127
  // TODO activePanel = this;                                        // For
  // interrupt hander

  // Enable all comm & address pins as outputs, set default states:
  gpio__reset(P_CLOCK);
    4260:	4b30      	ldr	r3, [pc, #192]	; (4324 <led_matrix__begin+0xd8>)
    4262:	781a      	ldrb	r2, [r3, #0]
    4264:	7858      	ldrb	r0, [r3, #1]
    4266:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
    426a:	f7fe f933 	bl	24d4 <gpio__reset>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:128
  gpio__reset(P_LATCH);
    426e:	4b2e      	ldr	r3, [pc, #184]	; (4328 <led_matrix__begin+0xdc>)
    4270:	781a      	ldrb	r2, [r3, #0]
    4272:	7858      	ldrb	r0, [r3, #1]
    4274:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
    4278:	f7fe f92c 	bl	24d4 <gpio__reset>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:129
  gpio__set(P_OE);
    427c:	4b2b      	ldr	r3, [pc, #172]	; (432c <led_matrix__begin+0xe0>)
    427e:	781a      	ldrb	r2, [r3, #0]
    4280:	7858      	ldrb	r0, [r3, #1]
    4282:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
    4286:	f7fe f917 	bl	24b8 <gpio__set>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:130
  gpio__reset(P_addrA);
    428a:	4b29      	ldr	r3, [pc, #164]	; (4330 <led_matrix__begin+0xe4>)
    428c:	781a      	ldrb	r2, [r3, #0]
    428e:	7858      	ldrb	r0, [r3, #1]
    4290:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
    4294:	f7fe f91e 	bl	24d4 <gpio__reset>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:131
  gpio__reset(P_addrB);
    4298:	4b26      	ldr	r3, [pc, #152]	; (4334 <led_matrix__begin+0xe8>)
    429a:	781a      	ldrb	r2, [r3, #0]
    429c:	7858      	ldrb	r0, [r3, #1]
    429e:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
    42a2:	f7fe f917 	bl	24d4 <gpio__reset>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:132
  gpio__reset(P_addrC);
    42a6:	4b24      	ldr	r3, [pc, #144]	; (4338 <led_matrix__begin+0xec>)
    42a8:	781a      	ldrb	r2, [r3, #0]
    42aa:	7858      	ldrb	r0, [r3, #1]
    42ac:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
    42b0:	f7fe f910 	bl	24d4 <gpio__reset>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:133
  if (led_matrix.nRows > 8) {
    42b4:	7a23      	ldrb	r3, [r4, #8]
    42b6:	2b08      	cmp	r3, #8
    42b8:	d906      	bls.n	42c8 <led_matrix__begin+0x7c>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:134
    gpio__reset(P_addrD);
    42ba:	4b20      	ldr	r3, [pc, #128]	; (433c <led_matrix__begin+0xf0>)
    42bc:	781a      	ldrb	r2, [r3, #0]
    42be:	7858      	ldrb	r0, [r3, #1]
    42c0:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
    42c4:	f7fe f906 	bl	24d4 <gpio__reset>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:137
  }

  gpio__reset(P_R1);
    42c8:	4b1d      	ldr	r3, [pc, #116]	; (4340 <led_matrix__begin+0xf4>)
    42ca:	781a      	ldrb	r2, [r3, #0]
    42cc:	7858      	ldrb	r0, [r3, #1]
    42ce:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
    42d2:	f7fe f8ff 	bl	24d4 <gpio__reset>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:138
  gpio__reset(P_G1);
    42d6:	4b1b      	ldr	r3, [pc, #108]	; (4344 <led_matrix__begin+0xf8>)
    42d8:	781a      	ldrb	r2, [r3, #0]
    42da:	7858      	ldrb	r0, [r3, #1]
    42dc:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
    42e0:	f7fe f8f8 	bl	24d4 <gpio__reset>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:139
  gpio__reset(P_B1);
    42e4:	4b18      	ldr	r3, [pc, #96]	; (4348 <led_matrix__begin+0xfc>)
    42e6:	781a      	ldrb	r2, [r3, #0]
    42e8:	7858      	ldrb	r0, [r3, #1]
    42ea:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
    42ee:	f7fe f8f1 	bl	24d4 <gpio__reset>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:140
  gpio__reset(P_R2);
    42f2:	4b16      	ldr	r3, [pc, #88]	; (434c <led_matrix__begin+0x100>)
    42f4:	781a      	ldrb	r2, [r3, #0]
    42f6:	7858      	ldrb	r0, [r3, #1]
    42f8:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
    42fc:	f7fe f8ea 	bl	24d4 <gpio__reset>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:141
  gpio__reset(P_G2);
    4300:	4b13      	ldr	r3, [pc, #76]	; (4350 <led_matrix__begin+0x104>)
    4302:	781a      	ldrb	r2, [r3, #0]
    4304:	7858      	ldrb	r0, [r3, #1]
    4306:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
    430a:	f7fe f8e3 	bl	24d4 <gpio__reset>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:142
  gpio__reset(P_B2);
    430e:	4b11      	ldr	r3, [pc, #68]	; (4354 <led_matrix__begin+0x108>)
    4310:	781a      	ldrb	r2, [r3, #0]
    4312:	7858      	ldrb	r0, [r3, #1]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:146

  // TODO rit_enable(refresh, 1);
  // TODO refreshTimer.begin(refreshISR, 200, uSec);
}
    4314:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:142
  gpio__reset(P_B2);
    4318:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
    431c:	f7fe b8da 	b.w	24d4 <gpio__reset>
    4320:	10001324 	.word	0x10001324
    4324:	100010ec 	.word	0x100010ec
    4328:	100010f2 	.word	0x100010f2
    432c:	100010f4 	.word	0x100010f4
    4330:	100010fa 	.word	0x100010fa
    4334:	100010fc 	.word	0x100010fc
    4338:	100010fe 	.word	0x100010fe
    433c:	10001100 	.word	0x10001100
    4340:	100010f6 	.word	0x100010f6
    4344:	100010ee 	.word	0x100010ee
    4348:	100010e8 	.word	0x100010e8
    434c:	100010f8 	.word	0x100010f8
    4350:	100010f0 	.word	0x100010f0
    4354:	100010ea 	.word	0x100010ea

00004358 <Color333>:
Color333():
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:265

// Promote 3/3/3 RGB to Adafruit_GFX 5/6/5
uint16_t Color333(uint8_t r, uint8_t g, uint8_t b) {
  // RRRrrGGGgggBBBbb
  return ((r & 0x7) << 13) | ((r & 0x6) << 10) | ((g & 0x7) << 8) |
         ((g & 0x7) << 5) | ((b & 0x7) << 2) | ((b & 0x6) >> 1);
    4358:	0093      	lsls	r3, r2, #2
    435a:	f003 031c 	and.w	r3, r3, #28
    435e:	f3c2 0241 	ubfx	r2, r2, #1, #2
    4362:	4313      	orrs	r3, r2
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:264
  return ((r & 0x7) << 13) | ((r & 0x6) << 10) | ((g & 0x7) << 8) |
    4364:	020a      	lsls	r2, r1, #8
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:265
         ((g & 0x7) << 5) | ((b & 0x7) << 2) | ((b & 0x6) >> 1);
    4366:	ea43 3340 	orr.w	r3, r3, r0, lsl #13
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:264
  return ((r & 0x7) << 13) | ((r & 0x6) << 10) | ((g & 0x7) << 8) |
    436a:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:265
         ((g & 0x7) << 5) | ((b & 0x7) << 2) | ((b & 0x6) >> 1);
    436e:	0149      	lsls	r1, r1, #5
    4370:	4313      	orrs	r3, r2
    4372:	b2c9      	uxtb	r1, r1
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:264
  return ((r & 0x7) << 13) | ((r & 0x6) << 10) | ((g & 0x7) << 8) |
    4374:	0280      	lsls	r0, r0, #10
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:265
         ((g & 0x7) << 5) | ((b & 0x7) << 2) | ((b & 0x6) >> 1);
    4376:	430b      	orrs	r3, r1
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:264
  return ((r & 0x7) << 13) | ((r & 0x6) << 10) | ((g & 0x7) << 8) |
    4378:	f400 50c0 	and.w	r0, r0, #6144	; 0x1800
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:265
         ((g & 0x7) << 5) | ((b & 0x7) << 2) | ((b & 0x6) >> 1);
    437c:	4318      	orrs	r0, r3
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:266
}
    437e:	b280      	uxth	r0, r0
    4380:	4770      	bx	lr
    4382:	Address 0x00004382 is out of bounds.


00004384 <updateDisplay>:
updateDisplay():
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:363
//       gpio__reset(P_CLOCK);                                // lo
//     }
//   }
// }

void updateDisplay(void) {
    4384:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:366
  uint8_t i, *ptr;

  gpio__set(P_OE);      // Disable LED output during row/plane switchover
    4388:	4fb2      	ldr	r7, [pc, #712]	; (4654 <updateDisplay+0x2d0>)
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:367
  gpio__set(P_LATCH);   // Latch data loaded during *prior* interrupt
    438a:	4eb3      	ldr	r6, [pc, #716]	; (4658 <updateDisplay+0x2d4>)
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:366
  gpio__set(P_OE);      // Disable LED output during row/plane switchover
    438c:	783b      	ldrb	r3, [r7, #0]
    438e:	7878      	ldrb	r0, [r7, #1]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:368
  gpio__reset(P_CLOCK); // Start the clock LOW
    4390:	4db2      	ldr	r5, [pc, #712]	; (465c <updateDisplay+0x2d8>)
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:370

  if (++led_matrix.plane >= nPlanes) { // Advance plane counter.  Maxed out?
    4392:	4cb3      	ldr	r4, [pc, #716]	; (4660 <updateDisplay+0x2dc>)
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:366
  gpio__set(P_OE);      // Disable LED output during row/plane switchover
    4394:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
    4398:	f7fe f88e 	bl	24b8 <gpio__set>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:367
  gpio__set(P_LATCH);   // Latch data loaded during *prior* interrupt
    439c:	7833      	ldrb	r3, [r6, #0]
    439e:	7870      	ldrb	r0, [r6, #1]
    43a0:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
    43a4:	f7fe f888 	bl	24b8 <gpio__set>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:368
  gpio__reset(P_CLOCK); // Start the clock LOW
    43a8:	782b      	ldrb	r3, [r5, #0]
    43aa:	7868      	ldrb	r0, [r5, #1]
    43ac:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
    43b0:	f7fe f890 	bl	24d4 <gpio__reset>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:370
  if (++led_matrix.plane >= nPlanes) { // Advance plane counter.  Maxed out?
    43b4:	7ce3      	ldrb	r3, [r4, #19]
    43b6:	3301      	adds	r3, #1
    43b8:	b2db      	uxtb	r3, r3
    43ba:	2b03      	cmp	r3, #3
    43bc:	74e3      	strb	r3, [r4, #19]
    43be:	f04f 0200 	mov.w	r2, #0
    43c2:	d946      	bls.n	4452 <updateDisplay+0xce>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:371
    led_matrix.plane = 0;              // Yes, reset to plane 0, and
    43c4:	74e2      	strb	r2, [r4, #19]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:372
    if (++led_matrix.row >=
    43c6:	7ca3      	ldrb	r3, [r4, #18]
    43c8:	7a21      	ldrb	r1, [r4, #8]
    43ca:	3301      	adds	r3, #1
    43cc:	b2db      	uxtb	r3, r3
    43ce:	4299      	cmp	r1, r3
    43d0:	74a3      	strb	r3, [r4, #18]
    43d2:	d806      	bhi.n	43e2 <updateDisplay+0x5e>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:374
        led_matrix.nRows) { // advance row counter.  Maxed out?
      led_matrix.row = 0;   // Yes, reset row counter, then...
    43d4:	74a2      	strb	r2, [r4, #18]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:377
      led_matrix.buffptr =
          led_matrix
              .matrixbuff[1 - led_matrix.backindex]; // Reset into front buffer
    43d6:	7a63      	ldrb	r3, [r4, #9]
    43d8:	f1c3 0301 	rsb	r3, r3, #1
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:375
      led_matrix.buffptr =
    43dc:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
    43e0:	6163      	str	r3, [r4, #20]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:398
  ptr = (uint8_t *)led_matrix.buffptr;

  // RESET timer duration
  // refreshTimer.resetPeriod_SIT(duration, uSec);

  gpio__reset(P_OE);    // Re-enable output
    43e2:	783b      	ldrb	r3, [r7, #0]
    43e4:	7878      	ldrb	r0, [r7, #1]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:393
  ptr = (uint8_t *)led_matrix.buffptr;
    43e6:	f8d4 b014 	ldr.w	fp, [r4, #20]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:398
  gpio__reset(P_OE);    // Re-enable output
    43ea:	f8df a294 	ldr.w	sl, [pc, #660]	; 4680 <updateDisplay+0x2fc>
    43ee:	4f9d      	ldr	r7, [pc, #628]	; (4664 <updateDisplay+0x2e0>)
    43f0:	f8df 8290 	ldr.w	r8, [pc, #656]	; 4684 <updateDisplay+0x300>
    43f4:	f8df 9290 	ldr.w	r9, [pc, #656]	; 4688 <updateDisplay+0x304>
    43f8:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
    43fc:	f7fe f86a 	bl	24d4 <gpio__reset>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:399
  gpio__reset(P_LATCH); // Latch down
    4400:	7833      	ldrb	r3, [r6, #0]
    4402:	7870      	ldrb	r0, [r6, #1]
    4404:	4e98      	ldr	r6, [pc, #608]	; (4668 <updateDisplay+0x2e4>)
    4406:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
    440a:	f7fe f863 	bl	24d4 <gpio__reset>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:401

  if (led_matrix.plane > 0) {
    440e:	7ce1      	ldrb	r1, [r4, #19]
    4410:	4b96      	ldr	r3, [pc, #600]	; (466c <updateDisplay+0x2e8>)
    4412:	f89b 2000 	ldrb.w	r2, [fp]
    4416:	2900      	cmp	r1, #0
    4418:	f040 80bc 	bne.w	4594 <updateDisplay+0x210>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:425 (discriminator 1)
    // output for plane 0 is handled while plane 3 is being displayed...
    // because binary coded modulation is used (not PWM), that plane
    // has the longest display interval, so the extra work fits.

    for (i = 0; i < 1; i++) {
      uint8_t bits = (ptr[i] << 6) | ((ptr[i + WIDTH] << 4) & 0x30) |
    441c:	f89b 4040 	ldrb.w	r4, [fp, #64]	; 0x40
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:426 (discriminator 1)
                     ((ptr[i + WIDTH * 2] << 2) & 0x0C);
    4420:	f89b 1080 	ldrb.w	r1, [fp, #128]	; 0x80
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:425 (discriminator 1)
      uint8_t bits = (ptr[i] << 6) | ((ptr[i + WIDTH] << 4) & 0x30) |
    4424:	0124      	lsls	r4, r4, #4
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:426 (discriminator 1)
                     ((ptr[i + WIDTH * 2] << 2) & 0x0C);
    4426:	0089      	lsls	r1, r1, #2
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:425 (discriminator 1)
      uint8_t bits = (ptr[i] << 6) | ((ptr[i + WIDTH] << 4) & 0x30) |
    4428:	f004 0430 	and.w	r4, r4, #48	; 0x30
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:426 (discriminator 1)
                     ((ptr[i + WIDTH * 2] << 2) & 0x0C);
    442c:	f001 010c 	and.w	r1, r1, #12
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:425 (discriminator 1)
      uint8_t bits = (ptr[i] << 6) | ((ptr[i + WIDTH] << 4) & 0x30) |
    4430:	430c      	orrs	r4, r1
    4432:	ea44 1482 	orr.w	r4, r4, r2, lsl #6
    4436:	b264      	sxtb	r4, r4
    4438:	fa5f fb84 	uxtb.w	fp, r4
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:428 (discriminator 1)

      (bits & 0x04) ? gpio__set(P_R1) : gpio__reset(P_R1); // R1
    443c:	f01b 0204 	ands.w	r2, fp, #4
    4440:	f040 80b2 	bne.w	45a8 <updateDisplay+0x224>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:428 (discriminator 2)
    4444:	781a      	ldrb	r2, [r3, #0]
    4446:	7858      	ldrb	r0, [r3, #1]
    4448:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
    444c:	f7fe f842 	bl	24d4 <gpio__reset>
    4450:	e0b0      	b.n	45b4 <updateDisplay+0x230>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:379
  } else if (led_matrix.plane == 1) {
    4452:	7ce3      	ldrb	r3, [r4, #19]
    4454:	2b01      	cmp	r3, #1
    4456:	d1c4      	bne.n	43e2 <updateDisplay+0x5e>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:383
    (led_matrix.row & 0x1) ? gpio__set(P_addrA) : gpio__reset(P_addrA);
    4458:	7ca3      	ldrb	r3, [r4, #18]
    445a:	f013 0301 	ands.w	r3, r3, #1
    445e:	4b84      	ldr	r3, [pc, #528]	; (4670 <updateDisplay+0x2ec>)
    4460:	781a      	ldrb	r2, [r3, #0]
    4462:	7858      	ldrb	r0, [r3, #1]
    4464:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
    4468:	d026      	beq.n	44b8 <updateDisplay+0x134>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:383 (discriminator 1)
    446a:	f7fe f825 	bl	24b8 <gpio__set>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:384
    (led_matrix.row & 0x2) ? gpio__set(P_addrB) : gpio__reset(P_addrB);
    446e:	7ca3      	ldrb	r3, [r4, #18]
    4470:	f013 0302 	ands.w	r3, r3, #2
    4474:	4b7f      	ldr	r3, [pc, #508]	; (4674 <updateDisplay+0x2f0>)
    4476:	781a      	ldrb	r2, [r3, #0]
    4478:	7858      	ldrb	r0, [r3, #1]
    447a:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
    447e:	d01e      	beq.n	44be <updateDisplay+0x13a>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:384 (discriminator 1)
    4480:	f7fe f81a 	bl	24b8 <gpio__set>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:385
    (led_matrix.row & 0x4) ? gpio__set(P_addrC) : gpio__reset(P_addrC);
    4484:	7ca3      	ldrb	r3, [r4, #18]
    4486:	f013 0304 	ands.w	r3, r3, #4
    448a:	4b7b      	ldr	r3, [pc, #492]	; (4678 <updateDisplay+0x2f4>)
    448c:	781a      	ldrb	r2, [r3, #0]
    448e:	7858      	ldrb	r0, [r3, #1]
    4490:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
    4494:	d016      	beq.n	44c4 <updateDisplay+0x140>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:385 (discriminator 1)
    4496:	f7fe f80f 	bl	24b8 <gpio__set>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:386
    if (led_matrix.nRows > 8) {
    449a:	7a23      	ldrb	r3, [r4, #8]
    449c:	2b08      	cmp	r3, #8
    449e:	d9a0      	bls.n	43e2 <updateDisplay+0x5e>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:387
      (led_matrix.row & 0x8) ? gpio__set(P_addrD) : gpio__reset(P_addrD);
    44a0:	7ca3      	ldrb	r3, [r4, #18]
    44a2:	f013 0308 	ands.w	r3, r3, #8
    44a6:	4b75      	ldr	r3, [pc, #468]	; (467c <updateDisplay+0x2f8>)
    44a8:	781a      	ldrb	r2, [r3, #0]
    44aa:	7858      	ldrb	r0, [r3, #1]
    44ac:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
    44b0:	d00b      	beq.n	44ca <updateDisplay+0x146>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:387 (discriminator 1)
    44b2:	f7fe f801 	bl	24b8 <gpio__set>
    44b6:	e794      	b.n	43e2 <updateDisplay+0x5e>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:383 (discriminator 2)
    (led_matrix.row & 0x1) ? gpio__set(P_addrA) : gpio__reset(P_addrA);
    44b8:	f7fe f80c 	bl	24d4 <gpio__reset>
    44bc:	e7d7      	b.n	446e <updateDisplay+0xea>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:384 (discriminator 2)
    (led_matrix.row & 0x2) ? gpio__set(P_addrB) : gpio__reset(P_addrB);
    44be:	f7fe f809 	bl	24d4 <gpio__reset>
    44c2:	e7df      	b.n	4484 <updateDisplay+0x100>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:385 (discriminator 2)
    (led_matrix.row & 0x4) ? gpio__set(P_addrC) : gpio__reset(P_addrC);
    44c4:	f7fe f806 	bl	24d4 <gpio__reset>
    44c8:	e7e7      	b.n	449a <updateDisplay+0x116>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:387 (discriminator 2)
      (led_matrix.row & 0x8) ? gpio__set(P_addrD) : gpio__reset(P_addrD);
    44ca:	f7fe f803 	bl	24d4 <gpio__reset>
    44ce:	e788      	b.n	43e2 <updateDisplay+0x5e>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:406 (discriminator 1)
      (ptr[i] & 0x04) ? gpio__set(P_R1) : gpio__reset(P_R1); // R1
    44d0:	781a      	ldrb	r2, [r3, #0]
    44d2:	7858      	ldrb	r0, [r3, #1]
    44d4:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
    44d8:	f7fd ffee 	bl	24b8 <gpio__set>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:407
      (ptr[i] & 0x08) ? gpio__set(P_G1) : gpio__reset(P_G1); // G1
    44dc:	f89b 3000 	ldrb.w	r3, [fp]
    44e0:	f89a 0001 	ldrb.w	r0, [sl, #1]
    44e4:	f013 0308 	ands.w	r3, r3, #8
    44e8:	f89a 3000 	ldrb.w	r3, [sl]
    44ec:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
    44f0:	d041      	beq.n	4576 <updateDisplay+0x1f2>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:407 (discriminator 1)
    44f2:	f7fd ffe1 	bl	24b8 <gpio__set>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:408
      (ptr[i] & 0x10) ? gpio__set(P_B1) : gpio__reset(P_B1); // B1
    44f6:	f89b 3000 	ldrb.w	r3, [fp]
    44fa:	7870      	ldrb	r0, [r6, #1]
    44fc:	f013 0310 	ands.w	r3, r3, #16
    4500:	7833      	ldrb	r3, [r6, #0]
    4502:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
    4506:	d039      	beq.n	457c <updateDisplay+0x1f8>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:408 (discriminator 1)
    4508:	f7fd ffd6 	bl	24b8 <gpio__set>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:409
      (ptr[i] & 0x20) ? gpio__set(P_R2) : gpio__reset(P_R2); // R2
    450c:	f89b 3000 	ldrb.w	r3, [fp]
    4510:	7878      	ldrb	r0, [r7, #1]
    4512:	f013 0320 	ands.w	r3, r3, #32
    4516:	783b      	ldrb	r3, [r7, #0]
    4518:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
    451c:	d031      	beq.n	4582 <updateDisplay+0x1fe>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:409 (discriminator 1)
    451e:	f7fd ffcb 	bl	24b8 <gpio__set>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:410
      (ptr[i] & 0x40) ? gpio__set(P_G2) : gpio__reset(P_G2); // G2
    4522:	f89b 3000 	ldrb.w	r3, [fp]
    4526:	f898 0001 	ldrb.w	r0, [r8, #1]
    452a:	f013 0340 	ands.w	r3, r3, #64	; 0x40
    452e:	f898 3000 	ldrb.w	r3, [r8]
    4532:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
    4536:	d027      	beq.n	4588 <updateDisplay+0x204>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:410 (discriminator 1)
    4538:	f7fd ffbe 	bl	24b8 <gpio__set>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:411
      (ptr[i] & 0x80) ? gpio__set(P_B2) : gpio__reset(P_B2); // B2
    453c:	f99b 3000 	ldrsb.w	r3, [fp]
    4540:	f899 0001 	ldrb.w	r0, [r9, #1]
    4544:	2b00      	cmp	r3, #0
    4546:	f899 3000 	ldrb.w	r3, [r9]
    454a:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
    454e:	da1e      	bge.n	458e <updateDisplay+0x20a>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:411 (discriminator 1)
    4550:	f7fd ffb2 	bl	24b8 <gpio__set>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:412 (discriminator 2)
      gpio__set(P_CLOCK);                                    // hi
    4554:	782b      	ldrb	r3, [r5, #0]
    4556:	7868      	ldrb	r0, [r5, #1]
    4558:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
    455c:	f7fd ffac 	bl	24b8 <gpio__set>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:413 (discriminator 2)
      gpio__reset(P_CLOCK);                                  // lo
    4560:	782b      	ldrb	r3, [r5, #0]
    4562:	7868      	ldrb	r0, [r5, #1]
    4564:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
    4568:	f7fd ffb4 	bl	24d4 <gpio__reset>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:416 (discriminator 2)
    led_matrix.buffptr += WIDTH;
    456c:	6963      	ldr	r3, [r4, #20]
    456e:	3340      	adds	r3, #64	; 0x40
    4570:	6163      	str	r3, [r4, #20]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:438 (discriminator 2)
      (bits & 0x80) ? gpio__set(P_B2) : gpio__reset(P_B2); // B2
      gpio__set(P_CLOCK);                                  // hi
      gpio__reset(P_CLOCK);                                // lo
    }
  }
    4572:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:407 (discriminator 2)
      (ptr[i] & 0x08) ? gpio__set(P_G1) : gpio__reset(P_G1); // G1
    4576:	f7fd ffad 	bl	24d4 <gpio__reset>
    457a:	e7bc      	b.n	44f6 <updateDisplay+0x172>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:408 (discriminator 2)
      (ptr[i] & 0x10) ? gpio__set(P_B1) : gpio__reset(P_B1); // B1
    457c:	f7fd ffaa 	bl	24d4 <gpio__reset>
    4580:	e7c4      	b.n	450c <updateDisplay+0x188>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:409 (discriminator 2)
      (ptr[i] & 0x20) ? gpio__set(P_R2) : gpio__reset(P_R2); // R2
    4582:	f7fd ffa7 	bl	24d4 <gpio__reset>
    4586:	e7cc      	b.n	4522 <updateDisplay+0x19e>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:410 (discriminator 2)
      (ptr[i] & 0x40) ? gpio__set(P_G2) : gpio__reset(P_G2); // G2
    4588:	f7fd ffa4 	bl	24d4 <gpio__reset>
    458c:	e7d6      	b.n	453c <updateDisplay+0x1b8>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:411 (discriminator 2)
      (ptr[i] & 0x80) ? gpio__set(P_B2) : gpio__reset(P_B2); // B2
    458e:	f7fd ffa1 	bl	24d4 <gpio__reset>
    4592:	e7df      	b.n	4554 <updateDisplay+0x1d0>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:406 (discriminator 1)
      (ptr[i] & 0x04) ? gpio__set(P_R1) : gpio__reset(P_R1); // R1
    4594:	f012 0204 	ands.w	r2, r2, #4
    4598:	d19a      	bne.n	44d0 <updateDisplay+0x14c>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:406 (discriminator 2)
    459a:	781a      	ldrb	r2, [r3, #0]
    459c:	7858      	ldrb	r0, [r3, #1]
    459e:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
    45a2:	f7fd ff97 	bl	24d4 <gpio__reset>
    45a6:	e799      	b.n	44dc <updateDisplay+0x158>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:428 (discriminator 1)
      (bits & 0x04) ? gpio__set(P_R1) : gpio__reset(P_R1); // R1
    45a8:	781a      	ldrb	r2, [r3, #0]
    45aa:	7858      	ldrb	r0, [r3, #1]
    45ac:	ea42 2000 	orr.w	r0, r2, r0, lsl #8
    45b0:	f7fd ff82 	bl	24b8 <gpio__set>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:429
      (bits & 0x08) ? gpio__set(P_G1) : gpio__reset(P_G1); // G1
    45b4:	f89a 3000 	ldrb.w	r3, [sl]
    45b8:	f89a 0001 	ldrb.w	r0, [sl, #1]
    45bc:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
    45c0:	f01b 0308 	ands.w	r3, fp, #8
    45c4:	d036      	beq.n	4634 <updateDisplay+0x2b0>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:429 (discriminator 1)
    45c6:	f7fd ff77 	bl	24b8 <gpio__set>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:430
      (bits & 0x10) ? gpio__set(P_B1) : gpio__reset(P_B1); // B1
    45ca:	7833      	ldrb	r3, [r6, #0]
    45cc:	7870      	ldrb	r0, [r6, #1]
    45ce:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
    45d2:	f01b 0310 	ands.w	r3, fp, #16
    45d6:	d030      	beq.n	463a <updateDisplay+0x2b6>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:430 (discriminator 1)
    45d8:	f7fd ff6e 	bl	24b8 <gpio__set>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:431
      (bits & 0x20) ? gpio__set(P_R2) : gpio__reset(P_R2); // R2
    45dc:	783b      	ldrb	r3, [r7, #0]
    45de:	7878      	ldrb	r0, [r7, #1]
    45e0:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
    45e4:	f01b 0320 	ands.w	r3, fp, #32
    45e8:	d02a      	beq.n	4640 <updateDisplay+0x2bc>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:431 (discriminator 1)
    45ea:	f7fd ff65 	bl	24b8 <gpio__set>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:432
      (bits & 0x40) ? gpio__set(P_G2) : gpio__reset(P_G2); // G2
    45ee:	f898 3000 	ldrb.w	r3, [r8]
    45f2:	f898 0001 	ldrb.w	r0, [r8, #1]
    45f6:	f01b 0b40 	ands.w	fp, fp, #64	; 0x40
    45fa:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
    45fe:	d022      	beq.n	4646 <updateDisplay+0x2c2>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:432 (discriminator 1)
    4600:	f7fd ff5a 	bl	24b8 <gpio__set>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:433
      (bits & 0x80) ? gpio__set(P_B2) : gpio__reset(P_B2); // B2
    4604:	f899 3000 	ldrb.w	r3, [r9]
    4608:	f899 0001 	ldrb.w	r0, [r9, #1]
    460c:	2c00      	cmp	r4, #0
    460e:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
    4612:	da1b      	bge.n	464c <updateDisplay+0x2c8>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:433 (discriminator 1)
    4614:	f7fd ff50 	bl	24b8 <gpio__set>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:434 (discriminator 2)
      gpio__set(P_CLOCK);                                  // hi
    4618:	782b      	ldrb	r3, [r5, #0]
    461a:	7868      	ldrb	r0, [r5, #1]
    461c:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
    4620:	f7fd ff4a 	bl	24b8 <gpio__set>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:435 (discriminator 2)
      gpio__reset(P_CLOCK);                                // lo
    4624:	782b      	ldrb	r3, [r5, #0]
    4626:	7868      	ldrb	r0, [r5, #1]
    4628:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:438 (discriminator 2)
    462c:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:435 (discriminator 2)
      gpio__reset(P_CLOCK);                                // lo
    4630:	f7fd bf50 	b.w	24d4 <gpio__reset>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:429 (discriminator 2)
      (bits & 0x08) ? gpio__set(P_G1) : gpio__reset(P_G1); // G1
    4634:	f7fd ff4e 	bl	24d4 <gpio__reset>
    4638:	e7c7      	b.n	45ca <updateDisplay+0x246>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:430 (discriminator 2)
      (bits & 0x10) ? gpio__set(P_B1) : gpio__reset(P_B1); // B1
    463a:	f7fd ff4b 	bl	24d4 <gpio__reset>
    463e:	e7cd      	b.n	45dc <updateDisplay+0x258>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:431 (discriminator 2)
      (bits & 0x20) ? gpio__set(P_R2) : gpio__reset(P_R2); // R2
    4640:	f7fd ff48 	bl	24d4 <gpio__reset>
    4644:	e7d3      	b.n	45ee <updateDisplay+0x26a>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:432 (discriminator 2)
      (bits & 0x40) ? gpio__set(P_G2) : gpio__reset(P_G2); // G2
    4646:	f7fd ff45 	bl	24d4 <gpio__reset>
    464a:	e7db      	b.n	4604 <updateDisplay+0x280>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:433 (discriminator 2)
      (bits & 0x80) ? gpio__set(P_B2) : gpio__reset(P_B2); // B2
    464c:	f7fd ff42 	bl	24d4 <gpio__reset>
    4650:	e7e2      	b.n	4618 <updateDisplay+0x294>
    4652:	bf00      	nop
    4654:	100010f4 	.word	0x100010f4
    4658:	100010f2 	.word	0x100010f2
    465c:	100010ec 	.word	0x100010ec
    4660:	10001324 	.word	0x10001324
    4664:	100010f8 	.word	0x100010f8
    4668:	100010e8 	.word	0x100010e8
    466c:	100010f6 	.word	0x100010f6
    4670:	100010fa 	.word	0x100010fa
    4674:	100010fc 	.word	0x100010fc
    4678:	100010fe 	.word	0x100010fe
    467c:	10001100 	.word	0x10001100
    4680:	100010ee 	.word	0x100010ee
    4684:	100010f0 	.word	0x100010f0
    4688:	100010ea 	.word	0x100010ea

0000468c <drawPixel>:
drawPixel():
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:149
void drawPixel(int16_t x, int16_t y, uint16_t c) {
    468c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:152
  if ((x < 0) || (x >= width()) || (y < 0) || (y >= height()))
    4690:	1e06      	subs	r6, r0, #0
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:149
void drawPixel(int16_t x, int16_t y, uint16_t c) {
    4692:	b085      	sub	sp, #20
    4694:	460c      	mov	r4, r1
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:152
  if ((x < 0) || (x >= width()) || (y < 0) || (y >= height()))
    4696:	f2c0 80e7 	blt.w	4868 <drawPixel+0x1dc>
width():
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:56
int16_t width(void) { return ada_gfx._width; }
    469a:	4b75      	ldr	r3, [pc, #468]	; (4870 <drawPixel+0x1e4>)
drawPixel():
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:152
  if ((x < 0) || (x >= width()) || (y < 0) || (y >= height()))
    469c:	f9b3 1000 	ldrsh.w	r1, [r3]
    46a0:	42b1      	cmp	r1, r6
    46a2:	f340 80e1 	ble.w	4868 <drawPixel+0x1dc>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:152 (discriminator 2)
    46a6:	2c00      	cmp	r4, #0
    46a8:	f2c0 80de 	blt.w	4868 <drawPixel+0x1dc>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:152
    46ac:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
    46b0:	42a3      	cmp	r3, r4
    46b2:	f340 80d9 	ble.w	4868 <drawPixel+0x1dc>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:174
  g = (c >> 7) & 0xF; // rrrrrGGGGggbbbbb
    46b6:	f3c2 19c7 	ubfx	r9, r2, #7, #8
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:181
  printf("x=%d, y=%d, index=%d\n", x, y, y * WIDTH * (nPlanes - 1) + x);
    46ba:	f04f 0bc0 	mov.w	fp, #192	; 0xc0
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:174
  g = (c >> 7) & 0xF; // rrrrrGGGGggbbbbb
    46be:	f009 030f 	and.w	r3, r9, #15
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:181
  printf("x=%d, y=%d, index=%d\n", x, y, y * WIDTH * (nPlanes - 1) + x);
    46c2:	fb14 670b 	smlabb	r7, r4, fp, r6
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:173
  r = c >> 12;        // RRRRrggggggbbbbb
    46c6:	ea4f 3812 	mov.w	r8, r2, lsr #12
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:174
  g = (c >> 7) & 0xF; // rrrrrGGGGggbbbbb
    46ca:	9303      	str	r3, [sp, #12]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:175
  b = (c >> 1) & 0xF; // rrrrrggggggBBBBb
    46cc:	f3c2 0547 	ubfx	r5, r2, #1, #8
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:181
  printf("x=%d, y=%d, index=%d\n", x, y, y * WIDTH * (nPlanes - 1) + x);
    46d0:	463b      	mov	r3, r7
    46d2:	4622      	mov	r2, r4
    46d4:	4631      	mov	r1, r6
    46d6:	4867      	ldr	r0, [pc, #412]	; (4874 <drawPixel+0x1e8>)
    46d8:	f001 fff8 	bl	66cc <iprintf>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:183
  if (y < led_matrix.nRows) {
    46dc:	4a66      	ldr	r2, [pc, #408]	; (4878 <drawPixel+0x1ec>)
    46de:	7a13      	ldrb	r3, [r2, #8]
    46e0:	429c      	cmp	r4, r3
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:175
  b = (c >> 1) & 0xF; // rrrrrggggggBBBBb
    46e2:	f005 0a0f 	and.w	sl, r5, #15
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:183
  if (y < led_matrix.nRows) {
    46e6:	f008 0e01 	and.w	lr, r8, #1
    46ea:	da6e      	bge.n	47ca <drawPixel+0x13e>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:186
    ptr = &led_matrix.matrixbuff[led_matrix.backindex]
    46ec:	7a53      	ldrb	r3, [r2, #9]
    46ee:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
    46f2:	443b      	add	r3, r7
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:191
    ptr[WIDTH * 2] &= ~0B00000011; // Plane 0 R,G mask out in one op
    46f4:	f893 1080 	ldrb.w	r1, [r3, #128]	; 0x80
    46f8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:192
    if (r & 1)
    46fc:	f1be 0f00 	cmp.w	lr, #0
    4700:	d15d      	bne.n	47be <drawPixel+0x132>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:193
      ptr[WIDTH * 2] |= 0B00000001; // Plane 0 R: 64 bytes ahead, bit 0
    4702:	f883 1080 	strb.w	r1, [r3, #128]	; 0x80
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:194
    if (g & 1)
    4706:	f019 0f01 	tst.w	r9, #1
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:195
      ptr[WIDTH * 2] |= 0B00000010; // Plane 0 G: 64 bytes ahead, bit 1
    470a:	bf18      	it	ne
    470c:	f893 1080 	ldrbne.w	r1, [r3, #128]	; 0x80
    4710:	f893 0040 	ldrb.w	r0, [r3, #64]	; 0x40
    4714:	bf1c      	itt	ne
    4716:	f041 0102 	orrne.w	r1, r1, #2
    471a:	f883 1080 	strbne.w	r1, [r3, #128]	; 0x80
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:196
    if (b & 1)
    471e:	07e9      	lsls	r1, r5, #31
    4720:	d550      	bpl.n	47c4 <drawPixel+0x138>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:197
      ptr[WIDTH] |= 0B00000001; // Plane 0 B: 32 bytes ahead, bit 0
    4722:	f040 0001 	orr.w	r0, r0, #1
    4726:	4619      	mov	r1, r3
    4728:	f503 7380 	add.w	r3, r3, #256	; 0x100
    472c:	f801 0f40 	strb.w	r0, [r1, #64]!
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:149 (discriminator 1)
void drawPixel(int16_t x, int16_t y, uint16_t c) {
    4730:	2002      	movs	r0, #2
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:204
      *ptr &= ~0B00011100; // Mask out R,G,B in one op
    4732:	f811 5c40 	ldrb.w	r5, [r1, #-64]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:205
      if (r & bit)
    4736:	ea18 0f00 	tst.w	r8, r0
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:204
      *ptr &= ~0B00011100; // Mask out R,G,B in one op
    473a:	f005 05e3 	and.w	r5, r5, #227	; 0xe3
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:206
        *ptr |= 0B00000100; // Plane N R: bit 2
    473e:	bf18      	it	ne
    4740:	f045 0504 	orrne.w	r5, r5, #4
    4744:	f801 5c40 	strb.w	r5, [r1, #-64]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:207
      if (g & bit)
    4748:	9d03      	ldr	r5, [sp, #12]
    474a:	4205      	tst	r5, r0
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:208
        *ptr |= 0B00001000; // Plane N G: bit 3
    474c:	bf1e      	ittt	ne
    474e:	f811 5c40 	ldrbne.w	r5, [r1, #-64]
    4752:	f045 0508 	orrne.w	r5, r5, #8
    4756:	f801 5c40 	strbne.w	r5, [r1, #-64]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:209
      if (b & bit)
    475a:	ea1a 0f00 	tst.w	sl, r0
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:210
        *ptr |= 0B00010000; // Plane N B: bit 4
    475e:	bf1e      	ittt	ne
    4760:	f811 5c40 	ldrbne.w	r5, [r1, #-64]
    4764:	f045 0510 	orrne.w	r5, r5, #16
    4768:	f801 5c40 	strbne.w	r5, [r1, #-64]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:211
      ptr += WIDTH;         // Advance to next bit plane
    476c:	3140      	adds	r1, #64	; 0x40
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:203
    for (; bit < limit; bit <<= 1) {
    476e:	0040      	lsls	r0, r0, #1
    4770:	4299      	cmp	r1, r3
    4772:	b2c0      	uxtb	r0, r0
    4774:	d1dd      	bne.n	4732 <drawPixel+0xa6>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:241
          .matrixbuff[led_matrix.backindex][y * WIDTH * (nPlanes - 1) + x];
    4776:	7a53      	ldrb	r3, [r2, #9]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:242
  printf("Pixel (%d, %d) = %x, %x, %x\n", x, y, *base, base[WIDTH],
    4778:	4840      	ldr	r0, [pc, #256]	; (487c <drawPixel+0x1f0>)
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:241
          .matrixbuff[led_matrix.backindex][y * WIDTH * (nPlanes - 1) + x];
    477a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
    477e:	5dda      	ldrb	r2, [r3, r7]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:242
  printf("Pixel (%d, %d) = %x, %x, %x\n", x, y, *base, base[WIDTH],
    4780:	f892 1080 	ldrb.w	r1, [r2, #128]	; 0x80
    4784:	7813      	ldrb	r3, [r2, #0]
    4786:	9101      	str	r1, [sp, #4]
    4788:	f892 2040 	ldrb.w	r2, [r2, #64]	; 0x40
    478c:	9200      	str	r2, [sp, #0]
    478e:	4631      	mov	r1, r6
    4790:	4622      	mov	r2, r4
    4792:	f001 ff9b 	bl	66cc <iprintf>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:244
  updateDisplay();
    4796:	f7ff fdf5 	bl	4384 <updateDisplay>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:245
  delay__ms(1);
    479a:	2001      	movs	r0, #1
    479c:	f7ff fb67 	bl	3e6e <delay__ms>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:246
  updateDisplay();
    47a0:	f7ff fdf0 	bl	4384 <updateDisplay>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:247
  delay__ms(1);
    47a4:	2001      	movs	r0, #1
    47a6:	f7ff fb62 	bl	3e6e <delay__ms>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:248
  updateDisplay();
    47aa:	f7ff fdeb 	bl	4384 <updateDisplay>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:249
  delay__ms(1);
    47ae:	2001      	movs	r0, #1
    47b0:	f7ff fb5d 	bl	3e6e <delay__ms>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:251
}
    47b4:	b005      	add	sp, #20
    47b6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:250
  updateDisplay();
    47ba:	f7ff bde3 	b.w	4384 <updateDisplay>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:193
      ptr[WIDTH * 2] |= 0B00000001; // Plane 0 R: 64 bytes ahead, bit 0
    47be:	f041 0101 	orr.w	r1, r1, #1
    47c2:	e79e      	b.n	4702 <drawPixel+0x76>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:199
      ptr[WIDTH] &= ~0B00000001; // Plane 0 B unset; mask out
    47c4:	f000 00fe 	and.w	r0, r0, #254	; 0xfe
    47c8:	e7ad      	b.n	4726 <drawPixel+0x9a>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:217
               .matrixbuff[led_matrix.backindex]
    47ca:	7a51      	ldrb	r1, [r2, #9]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:218
                          [(y - led_matrix.nRows) * WIDTH * (nPlanes - 1) + x];
    47cc:	1ae3      	subs	r3, r4, r3
    47ce:	fb0b 6303 	mla	r3, fp, r3, r6
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:216
    ptr = &led_matrix
    47d2:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:219
    *ptr &= ~0B00000011; // Plane 0 G,B mask out in one op
    47d6:	f810 c003 	ldrb.w	ip, [r0, r3]
    47da:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:216
    ptr = &led_matrix
    47de:	18c1      	adds	r1, r0, r3
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:219
    *ptr &= ~0B00000011; // Plane 0 G,B mask out in one op
    47e0:	f800 c003 	strb.w	ip, [r0, r3]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:220
    if (r & 1)
    47e4:	f891 b040 	ldrb.w	fp, [r1, #64]	; 0x40
    47e8:	f1be 0f00 	cmp.w	lr, #0
    47ec:	d039      	beq.n	4862 <drawPixel+0x1d6>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:221
      ptr[WIDTH] |= 0B00000010; // Plane 0 R: 32 bytes ahead, bit 1
    47ee:	f04b 0b02 	orr.w	fp, fp, #2
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:224
    if (g & 1)
    47f2:	f019 0f01 	tst.w	r9, #1
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:225
      *ptr |= 0B00000001; // Plane 0 G: bit 0
    47f6:	bf18      	it	ne
    47f8:	f04c 0c01 	orrne.w	ip, ip, #1
    47fc:	f881 b040 	strb.w	fp, [r1, #64]	; 0x40
    4800:	bf18      	it	ne
    4802:	f800 c003 	strbne.w	ip, [r0, r3]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:226
    if (b & 1)
    4806:	07ed      	lsls	r5, r5, #31
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:227
      *ptr |= 0B00000010; // Plane 0 B: bit 0
    4808:	bf42      	ittt	mi
    480a:	5cc5      	ldrbmi	r5, [r0, r3]
    480c:	f045 0502 	orrmi.w	r5, r5, #2
    4810:	54c5      	strbmi	r5, [r0, r3]
    4812:	f101 0340 	add.w	r3, r1, #64	; 0x40
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:149
void drawPixel(int16_t x, int16_t y, uint16_t c) {
    4816:	2002      	movs	r0, #2
    4818:	f501 7180 	add.w	r1, r1, #256	; 0x100
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:229
      *ptr &= ~0B11100000; // Mask out R,G,B in one op
    481c:	f813 5c40 	ldrb.w	r5, [r3, #-64]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:230
      if (r & bit)
    4820:	ea18 0f00 	tst.w	r8, r0
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:229
      *ptr &= ~0B11100000; // Mask out R,G,B in one op
    4824:	f005 051f 	and.w	r5, r5, #31
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:231
        *ptr |= 0B00100000; // Plane N R: bit 5
    4828:	bf18      	it	ne
    482a:	f045 0520 	orrne.w	r5, r5, #32
    482e:	f803 5c40 	strb.w	r5, [r3, #-64]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:232
      if (g & bit)
    4832:	9d03      	ldr	r5, [sp, #12]
    4834:	4205      	tst	r5, r0
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:233
        *ptr |= 0B01000000; // Plane N G: bit 6
    4836:	bf1e      	ittt	ne
    4838:	f813 5c40 	ldrbne.w	r5, [r3, #-64]
    483c:	f045 0540 	orrne.w	r5, r5, #64	; 0x40
    4840:	f803 5c40 	strbne.w	r5, [r3, #-64]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:234
      if (b & bit)
    4844:	ea1a 0f00 	tst.w	sl, r0
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:235
        *ptr |= 0B10000000; // Plane N B: bit 7
    4848:	bf1e      	ittt	ne
    484a:	f813 5c40 	ldrbne.w	r5, [r3, #-64]
    484e:	f065 057f 	ornne	r5, r5, #127	; 0x7f
    4852:	f803 5c40 	strbne.w	r5, [r3, #-64]
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:236
      ptr += WIDTH;         // Advance to next bit plane
    4856:	3340      	adds	r3, #64	; 0x40
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:228
    for (; bit < limit; bit <<= 1) {
    4858:	0040      	lsls	r0, r0, #1
    485a:	428b      	cmp	r3, r1
    485c:	b2c0      	uxtb	r0, r0
    485e:	d1dd      	bne.n	481c <drawPixel+0x190>
    4860:	e789      	b.n	4776 <drawPixel+0xea>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:223
      ptr[WIDTH] &= ~0B00000010; // Plane 0 R unset; mask out
    4862:	f00b 0bfd 	and.w	fp, fp, #253	; 0xfd
    4866:	e7c4      	b.n	47f2 <drawPixel+0x166>
C:\road_max_fury/lpc40xx_freertos\l5_application/led_matrix.c:251
}
    4868:	b005      	add	sp, #20
    486a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    486e:	bf00      	nop
    4870:	10001104 	.word	0x10001104
    4874:	0000bb89 	.word	0x0000bb89
    4878:	10001324 	.word	0x10001324
    487c:	0000bb9f 	.word	0x0000bb9f

00004880 <blink_task>:
blink_task():
C:\road_max_fury/lpc40xx_freertos\l5_application/main.c:66
                         // runs out of memory and fails

  return 0;
}

static void blink_task(void *params) {
    4880:	b507      	push	{r0, r1, r2, lr}
C:\road_max_fury/lpc40xx_freertos\l5_application/main.c:67
  const gpio_s led = *((gpio_s *)params);
    4882:	8803      	ldrh	r3, [r0, #0]
    4884:	f8ad 3004 	strh.w	r3, [sp, #4]
C:\road_max_fury/lpc40xx_freertos\l5_application/main.c:72 (discriminator 1)

  // Warning: This task starts with very minimal stack, so do not use printf()
  // API here to avoid stack overflow
  while (true) {
    gpio__toggle(led);
    4888:	9801      	ldr	r0, [sp, #4]
    488a:	f7fd fe31 	bl	24f0 <gpio__toggle>
C:\road_max_fury/lpc40xx_freertos\l5_application/main.c:73 (discriminator 1)
    vTaskDelay(500);
    488e:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
    4892:	f7fc ff83 	bl	179c <vTaskDelay>
    4896:	e7f7      	b.n	4888 <blink_task+0x8>

00004898 <setup_LED_Matrix>:
setup_LED_Matrix():
C:\road_max_fury/lpc40xx_freertos\l5_application/main.c:27
void setup_LED_Matrix() {
    4898:	b508      	push	{r3, lr}
C:\road_max_fury/lpc40xx_freertos\l5_application/main.c:28
  RGBmatrixPanel_init(false, WIDTH);
    489a:	2140      	movs	r1, #64	; 0x40
    489c:	2000      	movs	r0, #0
    489e:	f7ff fc0b 	bl	40b8 <RGBmatrixPanel_init>
C:\road_max_fury/lpc40xx_freertos\l5_application/main.c:30
}
    48a2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
C:\road_max_fury/lpc40xx_freertos\l5_application/main.c:29
  led_matrix__begin();
    48a6:	f7ff bcd1 	b.w	424c <led_matrix__begin>
    48aa:	Address 0x000048aa is out of bounds.


000048ac <main>:
main():
C:\road_max_fury/lpc40xx_freertos\l5_application/main.c:32
int main(void) {
    48ac:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
C:\road_max_fury/lpc40xx_freertos\l5_application/main.c:34
  setup_LED_Matrix();
    48b0:	f7ff fff2 	bl	4898 <setup_LED_Matrix>
C:\road_max_fury/lpc40xx_freertos\l5_application/main.c:35
  drawPixel(0, 0, Color333(7, 7, 7));
    48b4:	2207      	movs	r2, #7
    48b6:	4611      	mov	r1, r2
    48b8:	4610      	mov	r0, r2
    48ba:	f7ff fd4d 	bl	4358 <Color333>
    48be:	2100      	movs	r1, #0
    48c0:	4602      	mov	r2, r0
    48c2:	4608      	mov	r0, r1
    48c4:	f7ff fee2 	bl	468c <drawPixel>
C:\road_max_fury/lpc40xx_freertos\l5_application/main.c:41
  led0 = board_io__get_led0();
    48c8:	f7fd fd1e 	bl	2308 <board_io__get_led0>
    48cc:	4e16      	ldr	r6, [pc, #88]	; (4928 <main+0x7c>)
C:\road_max_fury/lpc40xx_freertos\l5_application/main.c:42
  led1 = board_io__get_led1();
    48ce:	4d17      	ldr	r5, [pc, #92]	; (492c <main+0x80>)
C:\road_max_fury/lpc40xx_freertos\l5_application/main.c:44
  xTaskCreate(blink_task, "led0", configMINIMAL_STACK_SIZE, (void *)&led0,
    48d0:	4f17      	ldr	r7, [pc, #92]	; (4930 <main+0x84>)
C:\road_max_fury/lpc40xx_freertos\l5_application/main.c:41
  led0 = board_io__get_led0();
    48d2:	b200      	sxth	r0, r0
    48d4:	7030      	strb	r0, [r6, #0]
    48d6:	f3c0 2007 	ubfx	r0, r0, #8, #8
    48da:	7070      	strb	r0, [r6, #1]
C:\road_max_fury/lpc40xx_freertos\l5_application/main.c:42
  led1 = board_io__get_led1();
    48dc:	f7fd fd26 	bl	232c <board_io__get_led1>
    48e0:	b200      	sxth	r0, r0
C:\road_max_fury/lpc40xx_freertos\l5_application/main.c:44
  xTaskCreate(blink_task, "led0", configMINIMAL_STACK_SIZE, (void *)&led0,
    48e2:	2400      	movs	r4, #0
C:\road_max_fury/lpc40xx_freertos\l5_application/main.c:42
  led1 = board_io__get_led1();
    48e4:	7028      	strb	r0, [r5, #0]
C:\road_max_fury/lpc40xx_freertos\l5_application/main.c:44
  xTaskCreate(blink_task, "led0", configMINIMAL_STACK_SIZE, (void *)&led0,
    48e6:	f04f 0801 	mov.w	r8, #1
C:\road_max_fury/lpc40xx_freertos\l5_application/main.c:42
  led1 = board_io__get_led1();
    48ea:	f3c0 2007 	ubfx	r0, r0, #8, #8
    48ee:	7068      	strb	r0, [r5, #1]
C:\road_max_fury/lpc40xx_freertos\l5_application/main.c:44
  xTaskCreate(blink_task, "led0", configMINIMAL_STACK_SIZE, (void *)&led0,
    48f0:	4633      	mov	r3, r6
    48f2:	e9cd 8400 	strd	r8, r4, [sp]
    48f6:	2264      	movs	r2, #100	; 0x64
    48f8:	490e      	ldr	r1, [pc, #56]	; (4934 <main+0x88>)
    48fa:	4638      	mov	r0, r7
    48fc:	f7fc fda0 	bl	1440 <xTaskCreate>
C:\road_max_fury/lpc40xx_freertos\l5_application/main.c:46
  xTaskCreate(blink_task, "led1", configMINIMAL_STACK_SIZE, (void *)&led1,
    4900:	462b      	mov	r3, r5
    4902:	2264      	movs	r2, #100	; 0x64
    4904:	490c      	ldr	r1, [pc, #48]	; (4938 <main+0x8c>)
    4906:	e9cd 8400 	strd	r8, r4, [sp]
    490a:	4638      	mov	r0, r7
    490c:	f7fc fd98 	bl	1440 <xTaskCreate>
C:\road_max_fury/lpc40xx_freertos\l5_application/main.c:55
  sj2_cli__init();
    4910:	f7fe fbba 	bl	3088 <sj2_cli__init>
C:\road_max_fury/lpc40xx_freertos\l5_application/main.c:59
  puts("Starting RTOS");
    4914:	4809      	ldr	r0, [pc, #36]	; (493c <main+0x90>)
    4916:	f001 ff73 	bl	6800 <puts>
C:\road_max_fury/lpc40xx_freertos\l5_application/main.c:60
  vTaskStartScheduler(); // This function never returns unless RTOS scheduler
    491a:	f7fc fdf5 	bl	1508 <vTaskStartScheduler>
C:\road_max_fury/lpc40xx_freertos\l5_application/main.c:64
}
    491e:	4620      	mov	r0, r4
    4920:	b002      	add	sp, #8
    4922:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    4926:	bf00      	nop
    4928:	10001120 	.word	0x10001120
    492c:	10001122 	.word	0x10001122
    4930:	00004881 	.word	0x00004881
    4934:	0000bbbc 	.word	0x0000bbbc
    4938:	0000bbc1 	.word	0x0000bbc1
    493c:	0000bbc6 	.word	0x0000bbc6

00004940 <vApplicationStackOverflowHook>:
vApplicationStackOverflowHook():
C:\road_max_fury/lpc40xx_freertos\l5_application/rtos_hooks.c:27
}

/// Invoked by FreeRTOS when it detects stack overflow: #if (0 !=
/// configCHECK_FOR_STACK_OVERFLOW)
void vApplicationStackOverflowHook(TaskHandle_t task_handle,
                                   signed char *task_name) {
    4940:	460c      	mov	r4, r1
C:\road_max_fury/lpc40xx_freertos\l5_application/rtos_hooks.c:28
  uart_puts__polled(UART__0, "stack overflow by this task:");
    4942:	2000      	movs	r0, #0
    4944:	4904      	ldr	r1, [pc, #16]	; (4958 <vApplicationStackOverflowHook+0x18>)
C:\road_max_fury/lpc40xx_freertos\l5_application/rtos_hooks.c:27
                                   signed char *task_name) {
    4946:	b508      	push	{r3, lr}
C:\road_max_fury/lpc40xx_freertos\l5_application/rtos_hooks.c:28
  uart_puts__polled(UART__0, "stack overflow by this task:");
    4948:	f7ff fb93 	bl	4072 <uart_puts__polled>
halt():
C:\road_max_fury/lpc40xx_freertos\l5_application/rtos_hooks.c:19
  uart_puts__polled(UART__0, message);
    494c:	4621      	mov	r1, r4
    494e:	2000      	movs	r0, #0
    4950:	f7ff fb8f 	bl	4072 <uart_puts__polled>
C:\road_max_fury/lpc40xx_freertos\l5_application/rtos_hooks.c:21
  }
    4954:	e7fe      	b.n	4954 <vApplicationStackOverflowHook+0x14>
    4956:	bf00      	nop
    4958:	0000bd06 	.word	0x0000bd06

0000495c <vApplicationMallocFailedHook>:
vApplicationMallocFailedHook():
C:\road_max_fury/lpc40xx_freertos\l5_application/rtos_hooks.c:34
  halt((const char *)task_name);
}

// Invoked by FreeRTOS when there pvPortMalloc() function has encountered NULL
// pointer to memory request #if (0 != configUSE_MALLOC_FAILED_HOOK)
void vApplicationMallocFailedHook(void) {
    495c:	b508      	push	{r3, lr}
halt():
C:\road_max_fury/lpc40xx_freertos\l5_application/rtos_hooks.c:19
  uart_puts__polled(UART__0, message);
    495e:	4902      	ldr	r1, [pc, #8]	; (4968 <vApplicationMallocFailedHook+0xc>)
    4960:	2000      	movs	r0, #0
    4962:	f7ff fb86 	bl	4072 <uart_puts__polled>
C:\road_max_fury/lpc40xx_freertos\l5_application/rtos_hooks.c:21
  }
    4966:	e7fe      	b.n	4966 <vApplicationMallocFailedHook+0xa>
    4968:	0000bccc 	.word	0x0000bccc

0000496c <vApplicationIdleHook>:
vApplicationIdleHook():
C:\road_max_fury/lpc40xx_freertos\l5_application/rtos_hooks.c:44
 * FreeRTOS note:
 * vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES, CALL A FUNCTION
 * THAT MIGHT BLOCK #if (0 != configUSE_IDLE_HOOK)
 */
void vApplicationIdleHook(void) {
  LPC_SC->PCON = 0; // Enter sleep mode
    496c:	4b02      	ldr	r3, [pc, #8]	; (4978 <vApplicationIdleHook+0xc>)
    496e:	2200      	movs	r2, #0
    4970:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
C:\road_max_fury/lpc40xx_freertos\l5_application/rtos_hooks.c:45
  __asm__("WFI");   // Wait for interrupt
    4974:	bf30      	wfi
C:\road_max_fury/lpc40xx_freertos\l5_application/rtos_hooks.c:46
}
    4976:	4770      	bx	lr
    4978:	400fc000 	.word	0x400fc000

0000497c <configASSERT_callback>:
configASSERT_callback():
C:\road_max_fury/lpc40xx_freertos\l5_application/rtos_hooks.c:55
void vApplicationTickHook(void) {
  ; // This code is invoked during each RTOS tick interrupt
}

// This is needed when we use '#ifdef configASSERT'
void configASSERT_callback(unsigned line, const char *message) {
    497c:	b508      	push	{r3, lr}
    497e:	460c      	mov	r4, r1
C:\road_max_fury/lpc40xx_freertos\l5_application/rtos_hooks.c:56
  uart_puts__polled(UART__0, "FreeRTOS ASSERT() occurred indicating an error "
    4980:	2000      	movs	r0, #0
    4982:	490a      	ldr	r1, [pc, #40]	; (49ac <configASSERT_callback+0x30>)
    4984:	f7ff fb75 	bl	4072 <uart_puts__polled>
C:\road_max_fury/lpc40xx_freertos\l5_application/rtos_hooks.c:58
                             "condition that should NEVER happen");
  uart_puts__polled(
    4988:	4909      	ldr	r1, [pc, #36]	; (49b0 <configASSERT_callback+0x34>)
    498a:	2000      	movs	r0, #0
    498c:	f7ff fb71 	bl	4072 <uart_puts__polled>
C:\road_max_fury/lpc40xx_freertos\l5_application/rtos_hooks.c:61
      UART__0,
      " - Did you call a blocking API or non FromISR() API inside an ISR?");
  uart_puts__polled(UART__0,
    4990:	4908      	ldr	r1, [pc, #32]	; (49b4 <configASSERT_callback+0x38>)
    4992:	2000      	movs	r0, #0
    4994:	f7ff fb6d 	bl	4072 <uart_puts__polled>
C:\road_max_fury/lpc40xx_freertos\l5_application/rtos_hooks.c:63
                    " - Did you forget to use fprintf(stderr) in an ISR?");
  uart_puts__polled(UART__0, "Here is the line of code that halted the CPU: ");
    4998:	4907      	ldr	r1, [pc, #28]	; (49b8 <configASSERT_callback+0x3c>)
    499a:	2000      	movs	r0, #0
    499c:	f7ff fb69 	bl	4072 <uart_puts__polled>
halt():
C:\road_max_fury/lpc40xx_freertos\l5_application/rtos_hooks.c:19
  uart_puts__polled(UART__0, message);
    49a0:	4621      	mov	r1, r4
    49a2:	2000      	movs	r0, #0
    49a4:	f7ff fb65 	bl	4072 <uart_puts__polled>
C:\road_max_fury/lpc40xx_freertos\l5_application/rtos_hooks.c:21
  }
    49a8:	e7fe      	b.n	49a8 <configASSERT_callback+0x2c>
    49aa:	bf00      	nop
    49ac:	0000bbd4 	.word	0x0000bbd4
    49b0:	0000bc26 	.word	0x0000bc26
    49b4:	0000bc69 	.word	0x0000bc69
    49b8:	0000bc9d 	.word	0x0000bc9d

000049bc <vApplicationGetIdleTaskMemory>:
vApplicationGetIdleTaskMemory():
C:\road_max_fury/lpc40xx_freertos\l5_application/rtos_hooks.c:75
                                   StackType_t **ppxIdleTaskStackBuffer,
                                   uint32_t *pulIdleTaskStackSize) {
  static StaticTask_t xIdleTaskTCB;
  static StackType_t uxIdleTaskStack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer = &xIdleTaskTCB;     // memory for the idle task
    49bc:	4b03      	ldr	r3, [pc, #12]	; (49cc <vApplicationGetIdleTaskMemory+0x10>)
    49be:	6003      	str	r3, [r0, #0]
C:\road_max_fury/lpc40xx_freertos\l5_application/rtos_hooks.c:76
  *ppxIdleTaskStackBuffer = uxIdleTaskStack; // stack memory for the idle task
    49c0:	4b03      	ldr	r3, [pc, #12]	; (49d0 <vApplicationGetIdleTaskMemory+0x14>)
    49c2:	600b      	str	r3, [r1, #0]
C:\road_max_fury/lpc40xx_freertos\l5_application/rtos_hooks.c:77
  *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE; // stack memory size
    49c4:	2364      	movs	r3, #100	; 0x64
    49c6:	6013      	str	r3, [r2, #0]
C:\road_max_fury/lpc40xx_freertos\l5_application/rtos_hooks.c:78
}
    49c8:	4770      	bx	lr
    49ca:	bf00      	nop
    49cc:	100012c0 	.word	0x100012c0
    49d0:	10001130 	.word	0x10001130

000049d4 <freertos_hooks__get_run_time_counter_value>:
freertos_hooks__get_run_time_counter_value():
C:\road_max_fury/lpc40xx_freertos\l5_application/rtos_hooks.c:81

// #if (0 != configGENERATE_RUN_TIME_STATS)
uint32_t freertos_hooks__get_run_time_counter_value(void) {
    49d4:	b508      	push	{r3, lr}
C:\road_max_fury/lpc40xx_freertos\l5_application/rtos_hooks.c:82
  return (uint32_t)(sys_time__get_uptime_us() -
    49d6:	f7ff fb2d 	bl	4034 <sys_time__get_uptime_us>
    49da:	4b02      	ldr	r3, [pc, #8]	; (49e4 <freertos_hooks__get_run_time_counter_value+0x10>)
    49dc:	681b      	ldr	r3, [r3, #0]
C:\road_max_fury/lpc40xx_freertos\l5_application/rtos_hooks.c:84
                    freertos_run_time_counter_offset);
}
    49de:	1ac0      	subs	r0, r0, r3
    49e0:	bd08      	pop	{r3, pc}
    49e2:	bf00      	nop
    49e4:	10001128 	.word	0x10001128

000049e8 <freertos_hooks__reset_run_time_stats>:
freertos_hooks__reset_run_time_stats():
C:\road_max_fury/lpc40xx_freertos\l5_application/rtos_hooks.c:86

void freertos_hooks__reset_run_time_stats(void) {
    49e8:	b508      	push	{r3, lr}
C:\road_max_fury/lpc40xx_freertos\l5_application/rtos_hooks.c:88
  // We save the offset that acts like a way to reset the uint64_t counters
  freertos_run_time_counter_offset = sys_time__get_uptime_us();
    49ea:	f7ff fb23 	bl	4034 <sys_time__get_uptime_us>
    49ee:	4b02      	ldr	r3, [pc, #8]	; (49f8 <freertos_hooks__reset_run_time_stats+0x10>)
    49f0:	e9c3 0100 	strd	r0, r1, [r3]
C:\road_max_fury/lpc40xx_freertos\l5_application/rtos_hooks.c:89
    49f4:	bd08      	pop	{r3, pc}
    49f6:	bf00      	nop
    49f8:	10001128 	.word	0x10001128

000049fc <__aeabi_drsub>:
__aeabi_drsub():
    49fc:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
    4a00:	e002      	b.n	4a08 <__adddf3>
    4a02:	bf00      	nop

00004a04 <__aeabi_dsub>:
__subdf3():
    4a04:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00004a08 <__adddf3>:
__aeabi_dadd():
    4a08:	b530      	push	{r4, r5, lr}
    4a0a:	ea4f 0441 	mov.w	r4, r1, lsl #1
    4a0e:	ea4f 0543 	mov.w	r5, r3, lsl #1
    4a12:	ea94 0f05 	teq	r4, r5
    4a16:	bf08      	it	eq
    4a18:	ea90 0f02 	teqeq	r0, r2
    4a1c:	bf1f      	itttt	ne
    4a1e:	ea54 0c00 	orrsne.w	ip, r4, r0
    4a22:	ea55 0c02 	orrsne.w	ip, r5, r2
    4a26:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
    4a2a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
    4a2e:	f000 80e2 	beq.w	4bf6 <__adddf3+0x1ee>
    4a32:	ea4f 5454 	mov.w	r4, r4, lsr #21
    4a36:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
    4a3a:	bfb8      	it	lt
    4a3c:	426d      	neglt	r5, r5
    4a3e:	dd0c      	ble.n	4a5a <__adddf3+0x52>
    4a40:	442c      	add	r4, r5
    4a42:	ea80 0202 	eor.w	r2, r0, r2
    4a46:	ea81 0303 	eor.w	r3, r1, r3
    4a4a:	ea82 0000 	eor.w	r0, r2, r0
    4a4e:	ea83 0101 	eor.w	r1, r3, r1
    4a52:	ea80 0202 	eor.w	r2, r0, r2
    4a56:	ea81 0303 	eor.w	r3, r1, r3
    4a5a:	2d36      	cmp	r5, #54	; 0x36
    4a5c:	bf88      	it	hi
    4a5e:	bd30      	pophi	{r4, r5, pc}
    4a60:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
    4a64:	ea4f 3101 	mov.w	r1, r1, lsl #12
    4a68:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
    4a6c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
    4a70:	d002      	beq.n	4a78 <__adddf3+0x70>
    4a72:	4240      	negs	r0, r0
    4a74:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
    4a78:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
    4a7c:	ea4f 3303 	mov.w	r3, r3, lsl #12
    4a80:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
    4a84:	d002      	beq.n	4a8c <__adddf3+0x84>
    4a86:	4252      	negs	r2, r2
    4a88:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
    4a8c:	ea94 0f05 	teq	r4, r5
    4a90:	f000 80a7 	beq.w	4be2 <__adddf3+0x1da>
    4a94:	f1a4 0401 	sub.w	r4, r4, #1
    4a98:	f1d5 0e20 	rsbs	lr, r5, #32
    4a9c:	db0d      	blt.n	4aba <__adddf3+0xb2>
    4a9e:	fa02 fc0e 	lsl.w	ip, r2, lr
    4aa2:	fa22 f205 	lsr.w	r2, r2, r5
    4aa6:	1880      	adds	r0, r0, r2
    4aa8:	f141 0100 	adc.w	r1, r1, #0
    4aac:	fa03 f20e 	lsl.w	r2, r3, lr
    4ab0:	1880      	adds	r0, r0, r2
    4ab2:	fa43 f305 	asr.w	r3, r3, r5
    4ab6:	4159      	adcs	r1, r3
    4ab8:	e00e      	b.n	4ad8 <__adddf3+0xd0>
    4aba:	f1a5 0520 	sub.w	r5, r5, #32
    4abe:	f10e 0e20 	add.w	lr, lr, #32
    4ac2:	2a01      	cmp	r2, #1
    4ac4:	fa03 fc0e 	lsl.w	ip, r3, lr
    4ac8:	bf28      	it	cs
    4aca:	f04c 0c02 	orrcs.w	ip, ip, #2
    4ace:	fa43 f305 	asr.w	r3, r3, r5
    4ad2:	18c0      	adds	r0, r0, r3
    4ad4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
    4ad8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
    4adc:	d507      	bpl.n	4aee <__adddf3+0xe6>
    4ade:	f04f 0e00 	mov.w	lr, #0
    4ae2:	f1dc 0c00 	rsbs	ip, ip, #0
    4ae6:	eb7e 0000 	sbcs.w	r0, lr, r0
    4aea:	eb6e 0101 	sbc.w	r1, lr, r1
    4aee:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
    4af2:	d31b      	bcc.n	4b2c <__adddf3+0x124>
    4af4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
    4af8:	d30c      	bcc.n	4b14 <__adddf3+0x10c>
    4afa:	0849      	lsrs	r1, r1, #1
    4afc:	ea5f 0030 	movs.w	r0, r0, rrx
    4b00:	ea4f 0c3c 	mov.w	ip, ip, rrx
    4b04:	f104 0401 	add.w	r4, r4, #1
    4b08:	ea4f 5244 	mov.w	r2, r4, lsl #21
    4b0c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
    4b10:	f080 809a 	bcs.w	4c48 <__adddf3+0x240>
    4b14:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
    4b18:	bf08      	it	eq
    4b1a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
    4b1e:	f150 0000 	adcs.w	r0, r0, #0
    4b22:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
    4b26:	ea41 0105 	orr.w	r1, r1, r5
    4b2a:	bd30      	pop	{r4, r5, pc}
    4b2c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
    4b30:	4140      	adcs	r0, r0
    4b32:	eb41 0101 	adc.w	r1, r1, r1
    4b36:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    4b3a:	f1a4 0401 	sub.w	r4, r4, #1
    4b3e:	d1e9      	bne.n	4b14 <__adddf3+0x10c>
    4b40:	f091 0f00 	teq	r1, #0
    4b44:	bf04      	itt	eq
    4b46:	4601      	moveq	r1, r0
    4b48:	2000      	moveq	r0, #0
    4b4a:	fab1 f381 	clz	r3, r1
    4b4e:	bf08      	it	eq
    4b50:	3320      	addeq	r3, #32
    4b52:	f1a3 030b 	sub.w	r3, r3, #11
    4b56:	f1b3 0220 	subs.w	r2, r3, #32
    4b5a:	da0c      	bge.n	4b76 <__adddf3+0x16e>
    4b5c:	320c      	adds	r2, #12
    4b5e:	dd08      	ble.n	4b72 <__adddf3+0x16a>
    4b60:	f102 0c14 	add.w	ip, r2, #20
    4b64:	f1c2 020c 	rsb	r2, r2, #12
    4b68:	fa01 f00c 	lsl.w	r0, r1, ip
    4b6c:	fa21 f102 	lsr.w	r1, r1, r2
    4b70:	e00c      	b.n	4b8c <__adddf3+0x184>
    4b72:	f102 0214 	add.w	r2, r2, #20
    4b76:	bfd8      	it	le
    4b78:	f1c2 0c20 	rsble	ip, r2, #32
    4b7c:	fa01 f102 	lsl.w	r1, r1, r2
    4b80:	fa20 fc0c 	lsr.w	ip, r0, ip
    4b84:	bfdc      	itt	le
    4b86:	ea41 010c 	orrle.w	r1, r1, ip
    4b8a:	4090      	lslle	r0, r2
    4b8c:	1ae4      	subs	r4, r4, r3
    4b8e:	bfa2      	ittt	ge
    4b90:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
    4b94:	4329      	orrge	r1, r5
    4b96:	bd30      	popge	{r4, r5, pc}
    4b98:	ea6f 0404 	mvn.w	r4, r4
    4b9c:	3c1f      	subs	r4, #31
    4b9e:	da1c      	bge.n	4bda <__adddf3+0x1d2>
    4ba0:	340c      	adds	r4, #12
    4ba2:	dc0e      	bgt.n	4bc2 <__adddf3+0x1ba>
    4ba4:	f104 0414 	add.w	r4, r4, #20
    4ba8:	f1c4 0220 	rsb	r2, r4, #32
    4bac:	fa20 f004 	lsr.w	r0, r0, r4
    4bb0:	fa01 f302 	lsl.w	r3, r1, r2
    4bb4:	ea40 0003 	orr.w	r0, r0, r3
    4bb8:	fa21 f304 	lsr.w	r3, r1, r4
    4bbc:	ea45 0103 	orr.w	r1, r5, r3
    4bc0:	bd30      	pop	{r4, r5, pc}
    4bc2:	f1c4 040c 	rsb	r4, r4, #12
    4bc6:	f1c4 0220 	rsb	r2, r4, #32
    4bca:	fa20 f002 	lsr.w	r0, r0, r2
    4bce:	fa01 f304 	lsl.w	r3, r1, r4
    4bd2:	ea40 0003 	orr.w	r0, r0, r3
    4bd6:	4629      	mov	r1, r5
    4bd8:	bd30      	pop	{r4, r5, pc}
    4bda:	fa21 f004 	lsr.w	r0, r1, r4
    4bde:	4629      	mov	r1, r5
    4be0:	bd30      	pop	{r4, r5, pc}
    4be2:	f094 0f00 	teq	r4, #0
    4be6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
    4bea:	bf06      	itte	eq
    4bec:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
    4bf0:	3401      	addeq	r4, #1
    4bf2:	3d01      	subne	r5, #1
    4bf4:	e74e      	b.n	4a94 <__adddf3+0x8c>
    4bf6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
    4bfa:	bf18      	it	ne
    4bfc:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
    4c00:	d029      	beq.n	4c56 <__adddf3+0x24e>
    4c02:	ea94 0f05 	teq	r4, r5
    4c06:	bf08      	it	eq
    4c08:	ea90 0f02 	teqeq	r0, r2
    4c0c:	d005      	beq.n	4c1a <__adddf3+0x212>
    4c0e:	ea54 0c00 	orrs.w	ip, r4, r0
    4c12:	bf04      	itt	eq
    4c14:	4619      	moveq	r1, r3
    4c16:	4610      	moveq	r0, r2
    4c18:	bd30      	pop	{r4, r5, pc}
    4c1a:	ea91 0f03 	teq	r1, r3
    4c1e:	bf1e      	ittt	ne
    4c20:	2100      	movne	r1, #0
    4c22:	2000      	movne	r0, #0
    4c24:	bd30      	popne	{r4, r5, pc}
    4c26:	ea5f 5c54 	movs.w	ip, r4, lsr #21
    4c2a:	d105      	bne.n	4c38 <__adddf3+0x230>
    4c2c:	0040      	lsls	r0, r0, #1
    4c2e:	4149      	adcs	r1, r1
    4c30:	bf28      	it	cs
    4c32:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
    4c36:	bd30      	pop	{r4, r5, pc}
    4c38:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
    4c3c:	bf3c      	itt	cc
    4c3e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
    4c42:	bd30      	popcc	{r4, r5, pc}
    4c44:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
    4c48:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
    4c4c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
    4c50:	f04f 0000 	mov.w	r0, #0
    4c54:	bd30      	pop	{r4, r5, pc}
    4c56:	ea7f 5c64 	mvns.w	ip, r4, asr #21
    4c5a:	bf1a      	itte	ne
    4c5c:	4619      	movne	r1, r3
    4c5e:	4610      	movne	r0, r2
    4c60:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
    4c64:	bf1c      	itt	ne
    4c66:	460b      	movne	r3, r1
    4c68:	4602      	movne	r2, r0
    4c6a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
    4c6e:	bf06      	itte	eq
    4c70:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
    4c74:	ea91 0f03 	teqeq	r1, r3
    4c78:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
    4c7c:	bd30      	pop	{r4, r5, pc}
    4c7e:	bf00      	nop

00004c80 <__aeabi_ui2d>:
__floatunsidf():
    4c80:	f090 0f00 	teq	r0, #0
    4c84:	bf04      	itt	eq
    4c86:	2100      	moveq	r1, #0
    4c88:	4770      	bxeq	lr
    4c8a:	b530      	push	{r4, r5, lr}
    4c8c:	f44f 6480 	mov.w	r4, #1024	; 0x400
    4c90:	f104 0432 	add.w	r4, r4, #50	; 0x32
    4c94:	f04f 0500 	mov.w	r5, #0
    4c98:	f04f 0100 	mov.w	r1, #0
    4c9c:	e750      	b.n	4b40 <__adddf3+0x138>
    4c9e:	bf00      	nop

00004ca0 <__aeabi_i2d>:
__aeabi_i2d():
    4ca0:	f090 0f00 	teq	r0, #0
    4ca4:	bf04      	itt	eq
    4ca6:	2100      	moveq	r1, #0
    4ca8:	4770      	bxeq	lr
    4caa:	b530      	push	{r4, r5, lr}
    4cac:	f44f 6480 	mov.w	r4, #1024	; 0x400
    4cb0:	f104 0432 	add.w	r4, r4, #50	; 0x32
    4cb4:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
    4cb8:	bf48      	it	mi
    4cba:	4240      	negmi	r0, r0
    4cbc:	f04f 0100 	mov.w	r1, #0
    4cc0:	e73e      	b.n	4b40 <__adddf3+0x138>
    4cc2:	bf00      	nop

00004cc4 <__aeabi_f2d>:
__aeabi_f2d():
    4cc4:	0042      	lsls	r2, r0, #1
    4cc6:	ea4f 01e2 	mov.w	r1, r2, asr #3
    4cca:	ea4f 0131 	mov.w	r1, r1, rrx
    4cce:	ea4f 7002 	mov.w	r0, r2, lsl #28
    4cd2:	bf1f      	itttt	ne
    4cd4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
    4cd8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
    4cdc:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
    4ce0:	4770      	bxne	lr
    4ce2:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
    4ce6:	bf08      	it	eq
    4ce8:	4770      	bxeq	lr
    4cea:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
    4cee:	bf04      	itt	eq
    4cf0:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
    4cf4:	4770      	bxeq	lr
    4cf6:	b530      	push	{r4, r5, lr}
    4cf8:	f44f 7460 	mov.w	r4, #896	; 0x380
    4cfc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
    4d00:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
    4d04:	e71c      	b.n	4b40 <__adddf3+0x138>
    4d06:	bf00      	nop

00004d08 <__aeabi_ul2d>:
__floatundidf():
    4d08:	ea50 0201 	orrs.w	r2, r0, r1
    4d0c:	bf08      	it	eq
    4d0e:	4770      	bxeq	lr
    4d10:	b530      	push	{r4, r5, lr}
    4d12:	f04f 0500 	mov.w	r5, #0
    4d16:	e00a      	b.n	4d2e <__aeabi_l2d+0x16>

00004d18 <__aeabi_l2d>:
__aeabi_l2d():
    4d18:	ea50 0201 	orrs.w	r2, r0, r1
    4d1c:	bf08      	it	eq
    4d1e:	4770      	bxeq	lr
    4d20:	b530      	push	{r4, r5, lr}
    4d22:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
    4d26:	d502      	bpl.n	4d2e <__aeabi_l2d+0x16>
    4d28:	4240      	negs	r0, r0
    4d2a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
    4d2e:	f44f 6480 	mov.w	r4, #1024	; 0x400
    4d32:	f104 0432 	add.w	r4, r4, #50	; 0x32
    4d36:	ea5f 5c91 	movs.w	ip, r1, lsr #22
    4d3a:	f43f aed8 	beq.w	4aee <__adddf3+0xe6>
    4d3e:	f04f 0203 	mov.w	r2, #3
    4d42:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
    4d46:	bf18      	it	ne
    4d48:	3203      	addne	r2, #3
    4d4a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
    4d4e:	bf18      	it	ne
    4d50:	3203      	addne	r2, #3
    4d52:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
    4d56:	f1c2 0320 	rsb	r3, r2, #32
    4d5a:	fa00 fc03 	lsl.w	ip, r0, r3
    4d5e:	fa20 f002 	lsr.w	r0, r0, r2
    4d62:	fa01 fe03 	lsl.w	lr, r1, r3
    4d66:	ea40 000e 	orr.w	r0, r0, lr
    4d6a:	fa21 f102 	lsr.w	r1, r1, r2
    4d6e:	4414      	add	r4, r2
    4d70:	e6bd      	b.n	4aee <__adddf3+0xe6>
    4d72:	bf00      	nop

00004d74 <__aeabi_dmul>:
__muldf3():
    4d74:	b570      	push	{r4, r5, r6, lr}
    4d76:	f04f 0cff 	mov.w	ip, #255	; 0xff
    4d7a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
    4d7e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
    4d82:	bf1d      	ittte	ne
    4d84:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
    4d88:	ea94 0f0c 	teqne	r4, ip
    4d8c:	ea95 0f0c 	teqne	r5, ip
    4d90:	f000 f8de 	bleq	4f50 <__aeabi_dmul+0x1dc>
    4d94:	442c      	add	r4, r5
    4d96:	ea81 0603 	eor.w	r6, r1, r3
    4d9a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
    4d9e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
    4da2:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
    4da6:	bf18      	it	ne
    4da8:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
    4dac:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    4db0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
    4db4:	d038      	beq.n	4e28 <__aeabi_dmul+0xb4>
    4db6:	fba0 ce02 	umull	ip, lr, r0, r2
    4dba:	f04f 0500 	mov.w	r5, #0
    4dbe:	fbe1 e502 	umlal	lr, r5, r1, r2
    4dc2:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
    4dc6:	fbe0 e503 	umlal	lr, r5, r0, r3
    4dca:	f04f 0600 	mov.w	r6, #0
    4dce:	fbe1 5603 	umlal	r5, r6, r1, r3
    4dd2:	f09c 0f00 	teq	ip, #0
    4dd6:	bf18      	it	ne
    4dd8:	f04e 0e01 	orrne.w	lr, lr, #1
    4ddc:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
    4de0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
    4de4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
    4de8:	d204      	bcs.n	4df4 <__aeabi_dmul+0x80>
    4dea:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
    4dee:	416d      	adcs	r5, r5
    4df0:	eb46 0606 	adc.w	r6, r6, r6
    4df4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
    4df8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
    4dfc:	ea4f 20c5 	mov.w	r0, r5, lsl #11
    4e00:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
    4e04:	ea4f 2ece 	mov.w	lr, lr, lsl #11
    4e08:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
    4e0c:	bf88      	it	hi
    4e0e:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
    4e12:	d81e      	bhi.n	4e52 <__aeabi_dmul+0xde>
    4e14:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
    4e18:	bf08      	it	eq
    4e1a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
    4e1e:	f150 0000 	adcs.w	r0, r0, #0
    4e22:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
    4e26:	bd70      	pop	{r4, r5, r6, pc}
    4e28:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
    4e2c:	ea46 0101 	orr.w	r1, r6, r1
    4e30:	ea40 0002 	orr.w	r0, r0, r2
    4e34:	ea81 0103 	eor.w	r1, r1, r3
    4e38:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
    4e3c:	bfc2      	ittt	gt
    4e3e:	ebd4 050c 	rsbsgt	r5, r4, ip
    4e42:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
    4e46:	bd70      	popgt	{r4, r5, r6, pc}
    4e48:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    4e4c:	f04f 0e00 	mov.w	lr, #0
    4e50:	3c01      	subs	r4, #1
    4e52:	f300 80ab 	bgt.w	4fac <__aeabi_dmul+0x238>
    4e56:	f114 0f36 	cmn.w	r4, #54	; 0x36
    4e5a:	bfde      	ittt	le
    4e5c:	2000      	movle	r0, #0
    4e5e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
    4e62:	bd70      	pople	{r4, r5, r6, pc}
    4e64:	f1c4 0400 	rsb	r4, r4, #0
    4e68:	3c20      	subs	r4, #32
    4e6a:	da35      	bge.n	4ed8 <__aeabi_dmul+0x164>
    4e6c:	340c      	adds	r4, #12
    4e6e:	dc1b      	bgt.n	4ea8 <__aeabi_dmul+0x134>
    4e70:	f104 0414 	add.w	r4, r4, #20
    4e74:	f1c4 0520 	rsb	r5, r4, #32
    4e78:	fa00 f305 	lsl.w	r3, r0, r5
    4e7c:	fa20 f004 	lsr.w	r0, r0, r4
    4e80:	fa01 f205 	lsl.w	r2, r1, r5
    4e84:	ea40 0002 	orr.w	r0, r0, r2
    4e88:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
    4e8c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
    4e90:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
    4e94:	fa21 f604 	lsr.w	r6, r1, r4
    4e98:	eb42 0106 	adc.w	r1, r2, r6
    4e9c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
    4ea0:	bf08      	it	eq
    4ea2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
    4ea6:	bd70      	pop	{r4, r5, r6, pc}
    4ea8:	f1c4 040c 	rsb	r4, r4, #12
    4eac:	f1c4 0520 	rsb	r5, r4, #32
    4eb0:	fa00 f304 	lsl.w	r3, r0, r4
    4eb4:	fa20 f005 	lsr.w	r0, r0, r5
    4eb8:	fa01 f204 	lsl.w	r2, r1, r4
    4ebc:	ea40 0002 	orr.w	r0, r0, r2
    4ec0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    4ec4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
    4ec8:	f141 0100 	adc.w	r1, r1, #0
    4ecc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
    4ed0:	bf08      	it	eq
    4ed2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
    4ed6:	bd70      	pop	{r4, r5, r6, pc}
    4ed8:	f1c4 0520 	rsb	r5, r4, #32
    4edc:	fa00 f205 	lsl.w	r2, r0, r5
    4ee0:	ea4e 0e02 	orr.w	lr, lr, r2
    4ee4:	fa20 f304 	lsr.w	r3, r0, r4
    4ee8:	fa01 f205 	lsl.w	r2, r1, r5
    4eec:	ea43 0302 	orr.w	r3, r3, r2
    4ef0:	fa21 f004 	lsr.w	r0, r1, r4
    4ef4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    4ef8:	fa21 f204 	lsr.w	r2, r1, r4
    4efc:	ea20 0002 	bic.w	r0, r0, r2
    4f00:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
    4f04:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
    4f08:	bf08      	it	eq
    4f0a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
    4f0e:	bd70      	pop	{r4, r5, r6, pc}
    4f10:	f094 0f00 	teq	r4, #0
    4f14:	d10f      	bne.n	4f36 <__aeabi_dmul+0x1c2>
    4f16:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
    4f1a:	0040      	lsls	r0, r0, #1
    4f1c:	eb41 0101 	adc.w	r1, r1, r1
    4f20:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    4f24:	bf08      	it	eq
    4f26:	3c01      	subeq	r4, #1
    4f28:	d0f7      	beq.n	4f1a <__aeabi_dmul+0x1a6>
    4f2a:	ea41 0106 	orr.w	r1, r1, r6
    4f2e:	f095 0f00 	teq	r5, #0
    4f32:	bf18      	it	ne
    4f34:	4770      	bxne	lr
    4f36:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
    4f3a:	0052      	lsls	r2, r2, #1
    4f3c:	eb43 0303 	adc.w	r3, r3, r3
    4f40:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
    4f44:	bf08      	it	eq
    4f46:	3d01      	subeq	r5, #1
    4f48:	d0f7      	beq.n	4f3a <__aeabi_dmul+0x1c6>
    4f4a:	ea43 0306 	orr.w	r3, r3, r6
    4f4e:	4770      	bx	lr
    4f50:	ea94 0f0c 	teq	r4, ip
    4f54:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
    4f58:	bf18      	it	ne
    4f5a:	ea95 0f0c 	teqne	r5, ip
    4f5e:	d00c      	beq.n	4f7a <__aeabi_dmul+0x206>
    4f60:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
    4f64:	bf18      	it	ne
    4f66:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
    4f6a:	d1d1      	bne.n	4f10 <__aeabi_dmul+0x19c>
    4f6c:	ea81 0103 	eor.w	r1, r1, r3
    4f70:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    4f74:	f04f 0000 	mov.w	r0, #0
    4f78:	bd70      	pop	{r4, r5, r6, pc}
    4f7a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
    4f7e:	bf06      	itte	eq
    4f80:	4610      	moveq	r0, r2
    4f82:	4619      	moveq	r1, r3
    4f84:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
    4f88:	d019      	beq.n	4fbe <__aeabi_dmul+0x24a>
    4f8a:	ea94 0f0c 	teq	r4, ip
    4f8e:	d102      	bne.n	4f96 <__aeabi_dmul+0x222>
    4f90:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
    4f94:	d113      	bne.n	4fbe <__aeabi_dmul+0x24a>
    4f96:	ea95 0f0c 	teq	r5, ip
    4f9a:	d105      	bne.n	4fa8 <__aeabi_dmul+0x234>
    4f9c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
    4fa0:	bf1c      	itt	ne
    4fa2:	4610      	movne	r0, r2
    4fa4:	4619      	movne	r1, r3
    4fa6:	d10a      	bne.n	4fbe <__aeabi_dmul+0x24a>
    4fa8:	ea81 0103 	eor.w	r1, r1, r3
    4fac:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
    4fb0:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
    4fb4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
    4fb8:	f04f 0000 	mov.w	r0, #0
    4fbc:	bd70      	pop	{r4, r5, r6, pc}
    4fbe:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
    4fc2:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
    4fc6:	bd70      	pop	{r4, r5, r6, pc}

00004fc8 <__aeabi_ddiv>:
__divdf3():
    4fc8:	b570      	push	{r4, r5, r6, lr}
    4fca:	f04f 0cff 	mov.w	ip, #255	; 0xff
    4fce:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
    4fd2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
    4fd6:	bf1d      	ittte	ne
    4fd8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
    4fdc:	ea94 0f0c 	teqne	r4, ip
    4fe0:	ea95 0f0c 	teqne	r5, ip
    4fe4:	f000 f8a7 	bleq	5136 <__aeabi_ddiv+0x16e>
    4fe8:	eba4 0405 	sub.w	r4, r4, r5
    4fec:	ea81 0e03 	eor.w	lr, r1, r3
    4ff0:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
    4ff4:	ea4f 3101 	mov.w	r1, r1, lsl #12
    4ff8:	f000 8088 	beq.w	510c <__aeabi_ddiv+0x144>
    4ffc:	ea4f 3303 	mov.w	r3, r3, lsl #12
    5000:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
    5004:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
    5008:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
    500c:	ea4f 2202 	mov.w	r2, r2, lsl #8
    5010:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
    5014:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
    5018:	ea4f 2600 	mov.w	r6, r0, lsl #8
    501c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
    5020:	429d      	cmp	r5, r3
    5022:	bf08      	it	eq
    5024:	4296      	cmpeq	r6, r2
    5026:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
    502a:	f504 7440 	add.w	r4, r4, #768	; 0x300
    502e:	d202      	bcs.n	5036 <__aeabi_ddiv+0x6e>
    5030:	085b      	lsrs	r3, r3, #1
    5032:	ea4f 0232 	mov.w	r2, r2, rrx
    5036:	1ab6      	subs	r6, r6, r2
    5038:	eb65 0503 	sbc.w	r5, r5, r3
    503c:	085b      	lsrs	r3, r3, #1
    503e:	ea4f 0232 	mov.w	r2, r2, rrx
    5042:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
    5046:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
    504a:	ebb6 0e02 	subs.w	lr, r6, r2
    504e:	eb75 0e03 	sbcs.w	lr, r5, r3
    5052:	bf22      	ittt	cs
    5054:	1ab6      	subcs	r6, r6, r2
    5056:	4675      	movcs	r5, lr
    5058:	ea40 000c 	orrcs.w	r0, r0, ip
    505c:	085b      	lsrs	r3, r3, #1
    505e:	ea4f 0232 	mov.w	r2, r2, rrx
    5062:	ebb6 0e02 	subs.w	lr, r6, r2
    5066:	eb75 0e03 	sbcs.w	lr, r5, r3
    506a:	bf22      	ittt	cs
    506c:	1ab6      	subcs	r6, r6, r2
    506e:	4675      	movcs	r5, lr
    5070:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
    5074:	085b      	lsrs	r3, r3, #1
    5076:	ea4f 0232 	mov.w	r2, r2, rrx
    507a:	ebb6 0e02 	subs.w	lr, r6, r2
    507e:	eb75 0e03 	sbcs.w	lr, r5, r3
    5082:	bf22      	ittt	cs
    5084:	1ab6      	subcs	r6, r6, r2
    5086:	4675      	movcs	r5, lr
    5088:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
    508c:	085b      	lsrs	r3, r3, #1
    508e:	ea4f 0232 	mov.w	r2, r2, rrx
    5092:	ebb6 0e02 	subs.w	lr, r6, r2
    5096:	eb75 0e03 	sbcs.w	lr, r5, r3
    509a:	bf22      	ittt	cs
    509c:	1ab6      	subcs	r6, r6, r2
    509e:	4675      	movcs	r5, lr
    50a0:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
    50a4:	ea55 0e06 	orrs.w	lr, r5, r6
    50a8:	d018      	beq.n	50dc <__aeabi_ddiv+0x114>
    50aa:	ea4f 1505 	mov.w	r5, r5, lsl #4
    50ae:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
    50b2:	ea4f 1606 	mov.w	r6, r6, lsl #4
    50b6:	ea4f 03c3 	mov.w	r3, r3, lsl #3
    50ba:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
    50be:	ea4f 02c2 	mov.w	r2, r2, lsl #3
    50c2:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
    50c6:	d1c0      	bne.n	504a <__aeabi_ddiv+0x82>
    50c8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    50cc:	d10b      	bne.n	50e6 <__aeabi_ddiv+0x11e>
    50ce:	ea41 0100 	orr.w	r1, r1, r0
    50d2:	f04f 0000 	mov.w	r0, #0
    50d6:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
    50da:	e7b6      	b.n	504a <__aeabi_ddiv+0x82>
    50dc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
    50e0:	bf04      	itt	eq
    50e2:	4301      	orreq	r1, r0
    50e4:	2000      	moveq	r0, #0
    50e6:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
    50ea:	bf88      	it	hi
    50ec:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
    50f0:	f63f aeaf 	bhi.w	4e52 <__aeabi_dmul+0xde>
    50f4:	ebb5 0c03 	subs.w	ip, r5, r3
    50f8:	bf04      	itt	eq
    50fa:	ebb6 0c02 	subseq.w	ip, r6, r2
    50fe:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
    5102:	f150 0000 	adcs.w	r0, r0, #0
    5106:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
    510a:	bd70      	pop	{r4, r5, r6, pc}
    510c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
    5110:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
    5114:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
    5118:	bfc2      	ittt	gt
    511a:	ebd4 050c 	rsbsgt	r5, r4, ip
    511e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
    5122:	bd70      	popgt	{r4, r5, r6, pc}
    5124:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    5128:	f04f 0e00 	mov.w	lr, #0
    512c:	3c01      	subs	r4, #1
    512e:	e690      	b.n	4e52 <__aeabi_dmul+0xde>
    5130:	ea45 0e06 	orr.w	lr, r5, r6
    5134:	e68d      	b.n	4e52 <__aeabi_dmul+0xde>
    5136:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
    513a:	ea94 0f0c 	teq	r4, ip
    513e:	bf08      	it	eq
    5140:	ea95 0f0c 	teqeq	r5, ip
    5144:	f43f af3b 	beq.w	4fbe <__aeabi_dmul+0x24a>
    5148:	ea94 0f0c 	teq	r4, ip
    514c:	d10a      	bne.n	5164 <__aeabi_ddiv+0x19c>
    514e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
    5152:	f47f af34 	bne.w	4fbe <__aeabi_dmul+0x24a>
    5156:	ea95 0f0c 	teq	r5, ip
    515a:	f47f af25 	bne.w	4fa8 <__aeabi_dmul+0x234>
    515e:	4610      	mov	r0, r2
    5160:	4619      	mov	r1, r3
    5162:	e72c      	b.n	4fbe <__aeabi_dmul+0x24a>
    5164:	ea95 0f0c 	teq	r5, ip
    5168:	d106      	bne.n	5178 <__aeabi_ddiv+0x1b0>
    516a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
    516e:	f43f aefd 	beq.w	4f6c <__aeabi_dmul+0x1f8>
    5172:	4610      	mov	r0, r2
    5174:	4619      	mov	r1, r3
    5176:	e722      	b.n	4fbe <__aeabi_dmul+0x24a>
    5178:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
    517c:	bf18      	it	ne
    517e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
    5182:	f47f aec5 	bne.w	4f10 <__aeabi_dmul+0x19c>
    5186:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
    518a:	f47f af0d 	bne.w	4fa8 <__aeabi_dmul+0x234>
    518e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
    5192:	f47f aeeb 	bne.w	4f6c <__aeabi_dmul+0x1f8>
    5196:	e712      	b.n	4fbe <__aeabi_dmul+0x24a>

00005198 <__aeabi_d2uiz>:
__aeabi_d2uiz():
    5198:	004a      	lsls	r2, r1, #1
    519a:	d211      	bcs.n	51c0 <__aeabi_d2uiz+0x28>
    519c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
    51a0:	d211      	bcs.n	51c6 <__aeabi_d2uiz+0x2e>
    51a2:	d50d      	bpl.n	51c0 <__aeabi_d2uiz+0x28>
    51a4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
    51a8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
    51ac:	d40e      	bmi.n	51cc <__aeabi_d2uiz+0x34>
    51ae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
    51b2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
    51b6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
    51ba:	fa23 f002 	lsr.w	r0, r3, r2
    51be:	4770      	bx	lr
    51c0:	f04f 0000 	mov.w	r0, #0
    51c4:	4770      	bx	lr
    51c6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
    51ca:	d102      	bne.n	51d2 <__aeabi_d2uiz+0x3a>
    51cc:	f04f 30ff 	mov.w	r0, #4294967295
    51d0:	4770      	bx	lr
    51d2:	f04f 0000 	mov.w	r0, #0
    51d6:	4770      	bx	lr

000051d8 <__aeabi_uldivmod>:
__aeabi_uldivmod():
    51d8:	b953      	cbnz	r3, 51f0 <__aeabi_uldivmod+0x18>
    51da:	b94a      	cbnz	r2, 51f0 <__aeabi_uldivmod+0x18>
    51dc:	2900      	cmp	r1, #0
    51de:	bf08      	it	eq
    51e0:	2800      	cmpeq	r0, #0
    51e2:	bf1c      	itt	ne
    51e4:	f04f 31ff 	movne.w	r1, #4294967295
    51e8:	f04f 30ff 	movne.w	r0, #4294967295
    51ec:	f000 b974 	b.w	54d8 <__aeabi_idiv0>
    51f0:	f1ad 0c08 	sub.w	ip, sp, #8
    51f4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
    51f8:	f000 f806 	bl	5208 <__udivmoddi4>
    51fc:	f8dd e004 	ldr.w	lr, [sp, #4]
    5200:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
    5204:	b004      	add	sp, #16
    5206:	4770      	bx	lr

00005208 <__udivmoddi4>:
__udivmoddi4():
    5208:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    520c:	9e08      	ldr	r6, [sp, #32]
    520e:	4604      	mov	r4, r0
    5210:	4688      	mov	r8, r1
    5212:	2b00      	cmp	r3, #0
    5214:	f040 8085 	bne.w	5322 <__udivmoddi4+0x11a>
    5218:	428a      	cmp	r2, r1
    521a:	4615      	mov	r5, r2
    521c:	d948      	bls.n	52b0 <__udivmoddi4+0xa8>
    521e:	fab2 f282 	clz	r2, r2
    5222:	b14a      	cbz	r2, 5238 <__udivmoddi4+0x30>
    5224:	f1c2 0720 	rsb	r7, r2, #32
    5228:	fa01 f302 	lsl.w	r3, r1, r2
    522c:	fa20 f707 	lsr.w	r7, r0, r7
    5230:	4095      	lsls	r5, r2
    5232:	ea47 0803 	orr.w	r8, r7, r3
    5236:	4094      	lsls	r4, r2
    5238:	ea4f 4e15 	mov.w	lr, r5, lsr #16
    523c:	0c23      	lsrs	r3, r4, #16
    523e:	fbb8 f7fe 	udiv	r7, r8, lr
    5242:	fa1f fc85 	uxth.w	ip, r5
    5246:	fb0e 8817 	mls	r8, lr, r7, r8
    524a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
    524e:	fb07 f10c 	mul.w	r1, r7, ip
    5252:	4299      	cmp	r1, r3
    5254:	d909      	bls.n	526a <__udivmoddi4+0x62>
    5256:	18eb      	adds	r3, r5, r3
    5258:	f107 30ff 	add.w	r0, r7, #4294967295
    525c:	f080 80e3 	bcs.w	5426 <__udivmoddi4+0x21e>
    5260:	4299      	cmp	r1, r3
    5262:	f240 80e0 	bls.w	5426 <__udivmoddi4+0x21e>
    5266:	3f02      	subs	r7, #2
    5268:	442b      	add	r3, r5
    526a:	1a5b      	subs	r3, r3, r1
    526c:	b2a4      	uxth	r4, r4
    526e:	fbb3 f0fe 	udiv	r0, r3, lr
    5272:	fb0e 3310 	mls	r3, lr, r0, r3
    5276:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
    527a:	fb00 fc0c 	mul.w	ip, r0, ip
    527e:	45a4      	cmp	ip, r4
    5280:	d909      	bls.n	5296 <__udivmoddi4+0x8e>
    5282:	192c      	adds	r4, r5, r4
    5284:	f100 33ff 	add.w	r3, r0, #4294967295
    5288:	f080 80cb 	bcs.w	5422 <__udivmoddi4+0x21a>
    528c:	45a4      	cmp	ip, r4
    528e:	f240 80c8 	bls.w	5422 <__udivmoddi4+0x21a>
    5292:	3802      	subs	r0, #2
    5294:	442c      	add	r4, r5
    5296:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
    529a:	eba4 040c 	sub.w	r4, r4, ip
    529e:	2700      	movs	r7, #0
    52a0:	b11e      	cbz	r6, 52aa <__udivmoddi4+0xa2>
    52a2:	40d4      	lsrs	r4, r2
    52a4:	2300      	movs	r3, #0
    52a6:	e9c6 4300 	strd	r4, r3, [r6]
    52aa:	4639      	mov	r1, r7
    52ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    52b0:	2a00      	cmp	r2, #0
    52b2:	d053      	beq.n	535c <__udivmoddi4+0x154>
    52b4:	fab2 f282 	clz	r2, r2
    52b8:	2a00      	cmp	r2, #0
    52ba:	f040 80b6 	bne.w	542a <__udivmoddi4+0x222>
    52be:	1b49      	subs	r1, r1, r5
    52c0:	ea4f 4e15 	mov.w	lr, r5, lsr #16
    52c4:	fa1f f885 	uxth.w	r8, r5
    52c8:	2701      	movs	r7, #1
    52ca:	fbb1 fcfe 	udiv	ip, r1, lr
    52ce:	0c23      	lsrs	r3, r4, #16
    52d0:	fb0e 111c 	mls	r1, lr, ip, r1
    52d4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
    52d8:	fb08 f10c 	mul.w	r1, r8, ip
    52dc:	4299      	cmp	r1, r3
    52de:	d907      	bls.n	52f0 <__udivmoddi4+0xe8>
    52e0:	18eb      	adds	r3, r5, r3
    52e2:	f10c 30ff 	add.w	r0, ip, #4294967295
    52e6:	d202      	bcs.n	52ee <__udivmoddi4+0xe6>
    52e8:	4299      	cmp	r1, r3
    52ea:	f200 80ec 	bhi.w	54c6 <__udivmoddi4+0x2be>
    52ee:	4684      	mov	ip, r0
    52f0:	1a59      	subs	r1, r3, r1
    52f2:	b2a3      	uxth	r3, r4
    52f4:	fbb1 f0fe 	udiv	r0, r1, lr
    52f8:	fb0e 1410 	mls	r4, lr, r0, r1
    52fc:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
    5300:	fb08 f800 	mul.w	r8, r8, r0
    5304:	45a0      	cmp	r8, r4
    5306:	d907      	bls.n	5318 <__udivmoddi4+0x110>
    5308:	192c      	adds	r4, r5, r4
    530a:	f100 33ff 	add.w	r3, r0, #4294967295
    530e:	d202      	bcs.n	5316 <__udivmoddi4+0x10e>
    5310:	45a0      	cmp	r8, r4
    5312:	f200 80dc 	bhi.w	54ce <__udivmoddi4+0x2c6>
    5316:	4618      	mov	r0, r3
    5318:	eba4 0408 	sub.w	r4, r4, r8
    531c:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    5320:	e7be      	b.n	52a0 <__udivmoddi4+0x98>
    5322:	428b      	cmp	r3, r1
    5324:	d908      	bls.n	5338 <__udivmoddi4+0x130>
    5326:	2e00      	cmp	r6, #0
    5328:	d078      	beq.n	541c <__udivmoddi4+0x214>
    532a:	2700      	movs	r7, #0
    532c:	e9c6 0100 	strd	r0, r1, [r6]
    5330:	4638      	mov	r0, r7
    5332:	4639      	mov	r1, r7
    5334:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    5338:	fab3 f783 	clz	r7, r3
    533c:	b97f      	cbnz	r7, 535e <__udivmoddi4+0x156>
    533e:	428b      	cmp	r3, r1
    5340:	d302      	bcc.n	5348 <__udivmoddi4+0x140>
    5342:	4282      	cmp	r2, r0
    5344:	f200 80bd 	bhi.w	54c2 <__udivmoddi4+0x2ba>
    5348:	1a84      	subs	r4, r0, r2
    534a:	eb61 0303 	sbc.w	r3, r1, r3
    534e:	2001      	movs	r0, #1
    5350:	4698      	mov	r8, r3
    5352:	2e00      	cmp	r6, #0
    5354:	d0a9      	beq.n	52aa <__udivmoddi4+0xa2>
    5356:	e9c6 4800 	strd	r4, r8, [r6]
    535a:	e7a6      	b.n	52aa <__udivmoddi4+0xa2>
    535c:	deff      	udf	#255	; 0xff
    535e:	f1c7 0520 	rsb	r5, r7, #32
    5362:	40bb      	lsls	r3, r7
    5364:	fa22 fc05 	lsr.w	ip, r2, r5
    5368:	ea4c 0c03 	orr.w	ip, ip, r3
    536c:	fa01 f407 	lsl.w	r4, r1, r7
    5370:	fa20 f805 	lsr.w	r8, r0, r5
    5374:	fa21 f305 	lsr.w	r3, r1, r5
    5378:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
    537c:	ea48 0404 	orr.w	r4, r8, r4
    5380:	fbb3 f9fe 	udiv	r9, r3, lr
    5384:	0c21      	lsrs	r1, r4, #16
    5386:	fb0e 3319 	mls	r3, lr, r9, r3
    538a:	fa1f f88c 	uxth.w	r8, ip
    538e:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
    5392:	fb09 fa08 	mul.w	sl, r9, r8
    5396:	459a      	cmp	sl, r3
    5398:	fa02 f207 	lsl.w	r2, r2, r7
    539c:	fa00 f107 	lsl.w	r1, r0, r7
    53a0:	d90b      	bls.n	53ba <__udivmoddi4+0x1b2>
    53a2:	eb1c 0303 	adds.w	r3, ip, r3
    53a6:	f109 30ff 	add.w	r0, r9, #4294967295
    53aa:	f080 8088 	bcs.w	54be <__udivmoddi4+0x2b6>
    53ae:	459a      	cmp	sl, r3
    53b0:	f240 8085 	bls.w	54be <__udivmoddi4+0x2b6>
    53b4:	f1a9 0902 	sub.w	r9, r9, #2
    53b8:	4463      	add	r3, ip
    53ba:	eba3 030a 	sub.w	r3, r3, sl
    53be:	b2a4      	uxth	r4, r4
    53c0:	fbb3 f0fe 	udiv	r0, r3, lr
    53c4:	fb0e 3310 	mls	r3, lr, r0, r3
    53c8:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
    53cc:	fb00 f808 	mul.w	r8, r0, r8
    53d0:	45a0      	cmp	r8, r4
    53d2:	d908      	bls.n	53e6 <__udivmoddi4+0x1de>
    53d4:	eb1c 0404 	adds.w	r4, ip, r4
    53d8:	f100 33ff 	add.w	r3, r0, #4294967295
    53dc:	d26b      	bcs.n	54b6 <__udivmoddi4+0x2ae>
    53de:	45a0      	cmp	r8, r4
    53e0:	d969      	bls.n	54b6 <__udivmoddi4+0x2ae>
    53e2:	3802      	subs	r0, #2
    53e4:	4464      	add	r4, ip
    53e6:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
    53ea:	eba4 0408 	sub.w	r4, r4, r8
    53ee:	fba0 8902 	umull	r8, r9, r0, r2
    53f2:	454c      	cmp	r4, r9
    53f4:	46c6      	mov	lr, r8
    53f6:	464b      	mov	r3, r9
    53f8:	d354      	bcc.n	54a4 <__udivmoddi4+0x29c>
    53fa:	d051      	beq.n	54a0 <__udivmoddi4+0x298>
    53fc:	2e00      	cmp	r6, #0
    53fe:	d069      	beq.n	54d4 <__udivmoddi4+0x2cc>
    5400:	ebb1 020e 	subs.w	r2, r1, lr
    5404:	eb64 0403 	sbc.w	r4, r4, r3
    5408:	fa04 f505 	lsl.w	r5, r4, r5
    540c:	fa22 f307 	lsr.w	r3, r2, r7
    5410:	40fc      	lsrs	r4, r7
    5412:	431d      	orrs	r5, r3
    5414:	e9c6 5400 	strd	r5, r4, [r6]
    5418:	2700      	movs	r7, #0
    541a:	e746      	b.n	52aa <__udivmoddi4+0xa2>
    541c:	4637      	mov	r7, r6
    541e:	4630      	mov	r0, r6
    5420:	e743      	b.n	52aa <__udivmoddi4+0xa2>
    5422:	4618      	mov	r0, r3
    5424:	e737      	b.n	5296 <__udivmoddi4+0x8e>
    5426:	4607      	mov	r7, r0
    5428:	e71f      	b.n	526a <__udivmoddi4+0x62>
    542a:	f1c2 0320 	rsb	r3, r2, #32
    542e:	fa20 f703 	lsr.w	r7, r0, r3
    5432:	4095      	lsls	r5, r2
    5434:	fa01 f002 	lsl.w	r0, r1, r2
    5438:	fa21 f303 	lsr.w	r3, r1, r3
    543c:	ea4f 4e15 	mov.w	lr, r5, lsr #16
    5440:	4338      	orrs	r0, r7
    5442:	0c01      	lsrs	r1, r0, #16
    5444:	fbb3 f7fe 	udiv	r7, r3, lr
    5448:	fa1f f885 	uxth.w	r8, r5
    544c:	fb0e 3317 	mls	r3, lr, r7, r3
    5450:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
    5454:	fb07 f308 	mul.w	r3, r7, r8
    5458:	428b      	cmp	r3, r1
    545a:	fa04 f402 	lsl.w	r4, r4, r2
    545e:	d907      	bls.n	5470 <__udivmoddi4+0x268>
    5460:	1869      	adds	r1, r5, r1
    5462:	f107 3cff 	add.w	ip, r7, #4294967295
    5466:	d228      	bcs.n	54ba <__udivmoddi4+0x2b2>
    5468:	428b      	cmp	r3, r1
    546a:	d926      	bls.n	54ba <__udivmoddi4+0x2b2>
    546c:	3f02      	subs	r7, #2
    546e:	4429      	add	r1, r5
    5470:	1acb      	subs	r3, r1, r3
    5472:	b281      	uxth	r1, r0
    5474:	fbb3 f0fe 	udiv	r0, r3, lr
    5478:	fb0e 3310 	mls	r3, lr, r0, r3
    547c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
    5480:	fb00 f308 	mul.w	r3, r0, r8
    5484:	428b      	cmp	r3, r1
    5486:	d907      	bls.n	5498 <__udivmoddi4+0x290>
    5488:	1869      	adds	r1, r5, r1
    548a:	f100 3cff 	add.w	ip, r0, #4294967295
    548e:	d210      	bcs.n	54b2 <__udivmoddi4+0x2aa>
    5490:	428b      	cmp	r3, r1
    5492:	d90e      	bls.n	54b2 <__udivmoddi4+0x2aa>
    5494:	3802      	subs	r0, #2
    5496:	4429      	add	r1, r5
    5498:	1ac9      	subs	r1, r1, r3
    549a:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
    549e:	e714      	b.n	52ca <__udivmoddi4+0xc2>
    54a0:	4541      	cmp	r1, r8
    54a2:	d2ab      	bcs.n	53fc <__udivmoddi4+0x1f4>
    54a4:	ebb8 0e02 	subs.w	lr, r8, r2
    54a8:	eb69 020c 	sbc.w	r2, r9, ip
    54ac:	3801      	subs	r0, #1
    54ae:	4613      	mov	r3, r2
    54b0:	e7a4      	b.n	53fc <__udivmoddi4+0x1f4>
    54b2:	4660      	mov	r0, ip
    54b4:	e7f0      	b.n	5498 <__udivmoddi4+0x290>
    54b6:	4618      	mov	r0, r3
    54b8:	e795      	b.n	53e6 <__udivmoddi4+0x1de>
    54ba:	4667      	mov	r7, ip
    54bc:	e7d8      	b.n	5470 <__udivmoddi4+0x268>
    54be:	4681      	mov	r9, r0
    54c0:	e77b      	b.n	53ba <__udivmoddi4+0x1b2>
    54c2:	4638      	mov	r0, r7
    54c4:	e745      	b.n	5352 <__udivmoddi4+0x14a>
    54c6:	f1ac 0c02 	sub.w	ip, ip, #2
    54ca:	442b      	add	r3, r5
    54cc:	e710      	b.n	52f0 <__udivmoddi4+0xe8>
    54ce:	3802      	subs	r0, #2
    54d0:	442c      	add	r4, r5
    54d2:	e721      	b.n	5318 <__udivmoddi4+0x110>
    54d4:	4637      	mov	r7, r6
    54d6:	e6e8      	b.n	52aa <__udivmoddi4+0xa2>

000054d8 <__aeabi_idiv0>:
__aeabi_idiv0():
    54d8:	4770      	bx	lr
    54da:	bf00      	nop

000054dc <atoi>:
atoi():
    54dc:	220a      	movs	r2, #10
    54de:	2100      	movs	r1, #0
    54e0:	f002 b986 	b.w	77f0 <strtol>

000054e4 <fiprintf>:
fiprintf():
    54e4:	b40e      	push	{r1, r2, r3}
    54e6:	b503      	push	{r0, r1, lr}
    54e8:	4601      	mov	r1, r0
    54ea:	ab03      	add	r3, sp, #12
    54ec:	4805      	ldr	r0, [pc, #20]	; (5504 <fiprintf+0x20>)
    54ee:	f853 2b04 	ldr.w	r2, [r3], #4
    54f2:	6800      	ldr	r0, [r0, #0]
    54f4:	9301      	str	r3, [sp, #4]
    54f6:	f000 f99d 	bl	5834 <_vfiprintf_r>
    54fa:	b002      	add	sp, #8
    54fc:	f85d eb04 	ldr.w	lr, [sp], #4
    5500:	b003      	add	sp, #12
    5502:	4770      	bx	lr
    5504:	10000164 	.word	0x10000164

00005508 <_fputs_r>:
_fputs_r():
    5508:	b570      	push	{r4, r5, r6, lr}
    550a:	460e      	mov	r6, r1
    550c:	4614      	mov	r4, r2
    550e:	4605      	mov	r5, r0
    5510:	b118      	cbz	r0, 551a <_fputs_r+0x12>
    5512:	6983      	ldr	r3, [r0, #24]
    5514:	b90b      	cbnz	r3, 551a <_fputs_r+0x12>
    5516:	f003 fa0d 	bl	8934 <__sinit>
    551a:	4b2b      	ldr	r3, [pc, #172]	; (55c8 <_fputs_r+0xc0>)
    551c:	429c      	cmp	r4, r3
    551e:	d11e      	bne.n	555e <_fputs_r+0x56>
    5520:	686c      	ldr	r4, [r5, #4]
    5522:	6e63      	ldr	r3, [r4, #100]	; 0x64
    5524:	07da      	lsls	r2, r3, #31
    5526:	d405      	bmi.n	5534 <_fputs_r+0x2c>
    5528:	89a3      	ldrh	r3, [r4, #12]
    552a:	059b      	lsls	r3, r3, #22
    552c:	d402      	bmi.n	5534 <_fputs_r+0x2c>
    552e:	6da0      	ldr	r0, [r4, #88]	; 0x58
    5530:	f000 f86b 	bl	560a <__retarget_lock_acquire_recursive>
    5534:	89a3      	ldrh	r3, [r4, #12]
    5536:	0718      	lsls	r0, r3, #28
    5538:	d51b      	bpl.n	5572 <_fputs_r+0x6a>
    553a:	6923      	ldr	r3, [r4, #16]
    553c:	b1cb      	cbz	r3, 5572 <_fputs_r+0x6a>
    553e:	3e01      	subs	r6, #1
    5540:	f816 1f01 	ldrb.w	r1, [r6, #1]!
    5544:	bb39      	cbnz	r1, 5596 <_fputs_r+0x8e>
    5546:	6e65      	ldr	r5, [r4, #100]	; 0x64
    5548:	f015 0501 	ands.w	r5, r5, #1
    554c:	d139      	bne.n	55c2 <_fputs_r+0xba>
    554e:	89a3      	ldrh	r3, [r4, #12]
    5550:	0599      	lsls	r1, r3, #22
    5552:	d402      	bmi.n	555a <_fputs_r+0x52>
    5554:	6da0      	ldr	r0, [r4, #88]	; 0x58
    5556:	f000 f859 	bl	560c <__retarget_lock_release_recursive>
    555a:	4628      	mov	r0, r5
    555c:	bd70      	pop	{r4, r5, r6, pc}
    555e:	4b1b      	ldr	r3, [pc, #108]	; (55cc <_fputs_r+0xc4>)
    5560:	429c      	cmp	r4, r3
    5562:	d101      	bne.n	5568 <_fputs_r+0x60>
    5564:	68ac      	ldr	r4, [r5, #8]
    5566:	e7dc      	b.n	5522 <_fputs_r+0x1a>
    5568:	4b19      	ldr	r3, [pc, #100]	; (55d0 <_fputs_r+0xc8>)
    556a:	429c      	cmp	r4, r3
    556c:	bf08      	it	eq
    556e:	68ec      	ldreq	r4, [r5, #12]
    5570:	e7d7      	b.n	5522 <_fputs_r+0x1a>
    5572:	4621      	mov	r1, r4
    5574:	4628      	mov	r0, r5
    5576:	f002 f9ff 	bl	7978 <__swsetup_r>
    557a:	2800      	cmp	r0, #0
    557c:	d0df      	beq.n	553e <_fputs_r+0x36>
    557e:	6e63      	ldr	r3, [r4, #100]	; 0x64
    5580:	07da      	lsls	r2, r3, #31
    5582:	d405      	bmi.n	5590 <_fputs_r+0x88>
    5584:	89a3      	ldrh	r3, [r4, #12]
    5586:	059b      	lsls	r3, r3, #22
    5588:	d402      	bmi.n	5590 <_fputs_r+0x88>
    558a:	6da0      	ldr	r0, [r4, #88]	; 0x58
    558c:	f000 f83e 	bl	560c <__retarget_lock_release_recursive>
    5590:	f04f 35ff 	mov.w	r5, #4294967295
    5594:	e7e1      	b.n	555a <_fputs_r+0x52>
    5596:	68a3      	ldr	r3, [r4, #8]
    5598:	3b01      	subs	r3, #1
    559a:	2b00      	cmp	r3, #0
    559c:	60a3      	str	r3, [r4, #8]
    559e:	da04      	bge.n	55aa <_fputs_r+0xa2>
    55a0:	69a2      	ldr	r2, [r4, #24]
    55a2:	4293      	cmp	r3, r2
    55a4:	db06      	blt.n	55b4 <_fputs_r+0xac>
    55a6:	290a      	cmp	r1, #10
    55a8:	d004      	beq.n	55b4 <_fputs_r+0xac>
    55aa:	6823      	ldr	r3, [r4, #0]
    55ac:	1c5a      	adds	r2, r3, #1
    55ae:	6022      	str	r2, [r4, #0]
    55b0:	7019      	strb	r1, [r3, #0]
    55b2:	e7c5      	b.n	5540 <_fputs_r+0x38>
    55b4:	4622      	mov	r2, r4
    55b6:	4628      	mov	r0, r5
    55b8:	f002 f98c 	bl	78d4 <__swbuf_r>
    55bc:	3001      	adds	r0, #1
    55be:	d1bf      	bne.n	5540 <_fputs_r+0x38>
    55c0:	e7dd      	b.n	557e <_fputs_r+0x76>
    55c2:	460d      	mov	r5, r1
    55c4:	e7c9      	b.n	555a <_fputs_r+0x52>
    55c6:	bf00      	nop
    55c8:	0000bef0 	.word	0x0000bef0
    55cc:	0000bf10 	.word	0x0000bf10
    55d0:	0000bed0 	.word	0x0000bed0

000055d4 <fputs>:
fputs():
    55d4:	4b02      	ldr	r3, [pc, #8]	; (55e0 <fputs+0xc>)
    55d6:	460a      	mov	r2, r1
    55d8:	4601      	mov	r1, r0
    55da:	6818      	ldr	r0, [r3, #0]
    55dc:	f7ff bf94 	b.w	5508 <_fputs_r>
    55e0:	10000164 	.word	0x10000164

000055e4 <getchar>:
getchar():
    55e4:	4b07      	ldr	r3, [pc, #28]	; (5604 <getchar+0x20>)
    55e6:	b510      	push	{r4, lr}
    55e8:	681c      	ldr	r4, [r3, #0]
    55ea:	b124      	cbz	r4, 55f6 <getchar+0x12>
    55ec:	69a3      	ldr	r3, [r4, #24]
    55ee:	b913      	cbnz	r3, 55f6 <getchar+0x12>
    55f0:	4620      	mov	r0, r4
    55f2:	f003 f99f 	bl	8934 <__sinit>
    55f6:	6861      	ldr	r1, [r4, #4]
    55f8:	4620      	mov	r0, r4
    55fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    55fe:	f003 bd7b 	b.w	90f8 <_getc_r>
    5602:	bf00      	nop
    5604:	10000164 	.word	0x10000164

00005608 <__retarget_lock_init_recursive>:
__retarget_lock_init_recursive():
    5608:	4770      	bx	lr

0000560a <__retarget_lock_acquire_recursive>:
__retarget_lock_acquire_recursive():
    560a:	4770      	bx	lr

0000560c <__retarget_lock_release_recursive>:
__retarget_lock_release_recursive():
    560c:	4770      	bx	lr
    560e:	Address 0x0000560e is out of bounds.


00005610 <malloc>:
malloc():
    5610:	4b02      	ldr	r3, [pc, #8]	; (561c <malloc+0xc>)
    5612:	4601      	mov	r1, r0
    5614:	6818      	ldr	r0, [r3, #0]
    5616:	f000 b889 	b.w	572c <_malloc_r>
    561a:	bf00      	nop
    561c:	10000164 	.word	0x10000164

00005620 <free>:
free():
    5620:	4b02      	ldr	r3, [pc, #8]	; (562c <free+0xc>)
    5622:	4601      	mov	r1, r0
    5624:	6818      	ldr	r0, [r3, #0]
    5626:	f000 b833 	b.w	5690 <_free_r>
    562a:	bf00      	nop
    562c:	10000164 	.word	0x10000164

00005630 <memcpy>:
memcpy():
    5630:	440a      	add	r2, r1
    5632:	4291      	cmp	r1, r2
    5634:	f100 33ff 	add.w	r3, r0, #4294967295
    5638:	d100      	bne.n	563c <memcpy+0xc>
    563a:	4770      	bx	lr
    563c:	b510      	push	{r4, lr}
    563e:	f811 4b01 	ldrb.w	r4, [r1], #1
    5642:	f803 4f01 	strb.w	r4, [r3, #1]!
    5646:	4291      	cmp	r1, r2
    5648:	d1f9      	bne.n	563e <memcpy+0xe>
    564a:	bd10      	pop	{r4, pc}

0000564c <memmove>:
memmove():
    564c:	4288      	cmp	r0, r1
    564e:	b510      	push	{r4, lr}
    5650:	eb01 0302 	add.w	r3, r1, r2
    5654:	d902      	bls.n	565c <memmove+0x10>
    5656:	4283      	cmp	r3, r0
    5658:	461c      	mov	r4, r3
    565a:	d807      	bhi.n	566c <memmove+0x20>
    565c:	1e42      	subs	r2, r0, #1
    565e:	4299      	cmp	r1, r3
    5660:	d008      	beq.n	5674 <memmove+0x28>
    5662:	f811 4b01 	ldrb.w	r4, [r1], #1
    5666:	f802 4f01 	strb.w	r4, [r2, #1]!
    566a:	e7f8      	b.n	565e <memmove+0x12>
    566c:	1883      	adds	r3, r0, r2
    566e:	1a9a      	subs	r2, r3, r2
    5670:	429a      	cmp	r2, r3
    5672:	d100      	bne.n	5676 <memmove+0x2a>
    5674:	bd10      	pop	{r4, pc}
    5676:	f814 1d01 	ldrb.w	r1, [r4, #-1]!
    567a:	f803 1d01 	strb.w	r1, [r3, #-1]!
    567e:	e7f7      	b.n	5670 <memmove+0x24>

00005680 <memset>:
memset():
    5680:	4402      	add	r2, r0
    5682:	4603      	mov	r3, r0
    5684:	4293      	cmp	r3, r2
    5686:	d100      	bne.n	568a <memset+0xa>
    5688:	4770      	bx	lr
    568a:	f803 1b01 	strb.w	r1, [r3], #1
    568e:	e7f9      	b.n	5684 <memset+0x4>

00005690 <_free_r>:
_free_r():
    5690:	b538      	push	{r3, r4, r5, lr}
    5692:	4605      	mov	r5, r0
    5694:	2900      	cmp	r1, #0
    5696:	d045      	beq.n	5724 <_free_r+0x94>
    5698:	f851 3c04 	ldr.w	r3, [r1, #-4]
    569c:	1f0c      	subs	r4, r1, #4
    569e:	2b00      	cmp	r3, #0
    56a0:	bfb8      	it	lt
    56a2:	18e4      	addlt	r4, r4, r3
    56a4:	f003 fe34 	bl	9310 <__malloc_lock>
    56a8:	4a1f      	ldr	r2, [pc, #124]	; (5728 <_free_r+0x98>)
    56aa:	6813      	ldr	r3, [r2, #0]
    56ac:	4610      	mov	r0, r2
    56ae:	b933      	cbnz	r3, 56be <_free_r+0x2e>
    56b0:	6063      	str	r3, [r4, #4]
    56b2:	6014      	str	r4, [r2, #0]
    56b4:	4628      	mov	r0, r5
    56b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    56ba:	f003 be2f 	b.w	931c <__malloc_unlock>
    56be:	42a3      	cmp	r3, r4
    56c0:	d90c      	bls.n	56dc <_free_r+0x4c>
    56c2:	6821      	ldr	r1, [r4, #0]
    56c4:	1862      	adds	r2, r4, r1
    56c6:	4293      	cmp	r3, r2
    56c8:	bf04      	itt	eq
    56ca:	681a      	ldreq	r2, [r3, #0]
    56cc:	685b      	ldreq	r3, [r3, #4]
    56ce:	6063      	str	r3, [r4, #4]
    56d0:	bf04      	itt	eq
    56d2:	1852      	addeq	r2, r2, r1
    56d4:	6022      	streq	r2, [r4, #0]
    56d6:	6004      	str	r4, [r0, #0]
    56d8:	e7ec      	b.n	56b4 <_free_r+0x24>
    56da:	4613      	mov	r3, r2
    56dc:	685a      	ldr	r2, [r3, #4]
    56de:	b10a      	cbz	r2, 56e4 <_free_r+0x54>
    56e0:	42a2      	cmp	r2, r4
    56e2:	d9fa      	bls.n	56da <_free_r+0x4a>
    56e4:	6819      	ldr	r1, [r3, #0]
    56e6:	1858      	adds	r0, r3, r1
    56e8:	42a0      	cmp	r0, r4
    56ea:	d10b      	bne.n	5704 <_free_r+0x74>
    56ec:	6820      	ldr	r0, [r4, #0]
    56ee:	4401      	add	r1, r0
    56f0:	1858      	adds	r0, r3, r1
    56f2:	4282      	cmp	r2, r0
    56f4:	6019      	str	r1, [r3, #0]
    56f6:	d1dd      	bne.n	56b4 <_free_r+0x24>
    56f8:	6810      	ldr	r0, [r2, #0]
    56fa:	6852      	ldr	r2, [r2, #4]
    56fc:	605a      	str	r2, [r3, #4]
    56fe:	4401      	add	r1, r0
    5700:	6019      	str	r1, [r3, #0]
    5702:	e7d7      	b.n	56b4 <_free_r+0x24>
    5704:	d902      	bls.n	570c <_free_r+0x7c>
    5706:	230c      	movs	r3, #12
    5708:	602b      	str	r3, [r5, #0]
    570a:	e7d3      	b.n	56b4 <_free_r+0x24>
    570c:	6820      	ldr	r0, [r4, #0]
    570e:	1821      	adds	r1, r4, r0
    5710:	428a      	cmp	r2, r1
    5712:	bf04      	itt	eq
    5714:	6811      	ldreq	r1, [r2, #0]
    5716:	6852      	ldreq	r2, [r2, #4]
    5718:	6062      	str	r2, [r4, #4]
    571a:	bf04      	itt	eq
    571c:	1809      	addeq	r1, r1, r0
    571e:	6021      	streq	r1, [r4, #0]
    5720:	605c      	str	r4, [r3, #4]
    5722:	e7c7      	b.n	56b4 <_free_r+0x24>
    5724:	bd38      	pop	{r3, r4, r5, pc}
    5726:	bf00      	nop
    5728:	1000131c 	.word	0x1000131c

0000572c <_malloc_r>:
_malloc_r():
    572c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    572e:	1ccd      	adds	r5, r1, #3
    5730:	f025 0503 	bic.w	r5, r5, #3
    5734:	3508      	adds	r5, #8
    5736:	2d0c      	cmp	r5, #12
    5738:	bf38      	it	cc
    573a:	250c      	movcc	r5, #12
    573c:	2d00      	cmp	r5, #0
    573e:	4606      	mov	r6, r0
    5740:	db01      	blt.n	5746 <_malloc_r+0x1a>
    5742:	42a9      	cmp	r1, r5
    5744:	d903      	bls.n	574e <_malloc_r+0x22>
    5746:	230c      	movs	r3, #12
    5748:	6033      	str	r3, [r6, #0]
    574a:	2000      	movs	r0, #0
    574c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    574e:	f003 fddf 	bl	9310 <__malloc_lock>
    5752:	4921      	ldr	r1, [pc, #132]	; (57d8 <_malloc_r+0xac>)
    5754:	680a      	ldr	r2, [r1, #0]
    5756:	4614      	mov	r4, r2
    5758:	b99c      	cbnz	r4, 5782 <_malloc_r+0x56>
    575a:	4f20      	ldr	r7, [pc, #128]	; (57dc <_malloc_r+0xb0>)
    575c:	683b      	ldr	r3, [r7, #0]
    575e:	b923      	cbnz	r3, 576a <_malloc_r+0x3e>
    5760:	4621      	mov	r1, r4
    5762:	4630      	mov	r0, r6
    5764:	f001 f854 	bl	6810 <_sbrk_r>
    5768:	6038      	str	r0, [r7, #0]
    576a:	4629      	mov	r1, r5
    576c:	4630      	mov	r0, r6
    576e:	f001 f84f 	bl	6810 <_sbrk_r>
    5772:	1c43      	adds	r3, r0, #1
    5774:	d123      	bne.n	57be <_malloc_r+0x92>
    5776:	230c      	movs	r3, #12
    5778:	6033      	str	r3, [r6, #0]
    577a:	4630      	mov	r0, r6
    577c:	f003 fdce 	bl	931c <__malloc_unlock>
    5780:	e7e3      	b.n	574a <_malloc_r+0x1e>
    5782:	6823      	ldr	r3, [r4, #0]
    5784:	1b5b      	subs	r3, r3, r5
    5786:	d417      	bmi.n	57b8 <_malloc_r+0x8c>
    5788:	2b0b      	cmp	r3, #11
    578a:	d903      	bls.n	5794 <_malloc_r+0x68>
    578c:	6023      	str	r3, [r4, #0]
    578e:	441c      	add	r4, r3
    5790:	6025      	str	r5, [r4, #0]
    5792:	e004      	b.n	579e <_malloc_r+0x72>
    5794:	6863      	ldr	r3, [r4, #4]
    5796:	42a2      	cmp	r2, r4
    5798:	bf0c      	ite	eq
    579a:	600b      	streq	r3, [r1, #0]
    579c:	6053      	strne	r3, [r2, #4]
    579e:	4630      	mov	r0, r6
    57a0:	f003 fdbc 	bl	931c <__malloc_unlock>
    57a4:	f104 000b 	add.w	r0, r4, #11
    57a8:	1d23      	adds	r3, r4, #4
    57aa:	f020 0007 	bic.w	r0, r0, #7
    57ae:	1ac2      	subs	r2, r0, r3
    57b0:	d0cc      	beq.n	574c <_malloc_r+0x20>
    57b2:	1a1b      	subs	r3, r3, r0
    57b4:	50a3      	str	r3, [r4, r2]
    57b6:	e7c9      	b.n	574c <_malloc_r+0x20>
    57b8:	4622      	mov	r2, r4
    57ba:	6864      	ldr	r4, [r4, #4]
    57bc:	e7cc      	b.n	5758 <_malloc_r+0x2c>
    57be:	1cc4      	adds	r4, r0, #3
    57c0:	f024 0403 	bic.w	r4, r4, #3
    57c4:	42a0      	cmp	r0, r4
    57c6:	d0e3      	beq.n	5790 <_malloc_r+0x64>
    57c8:	1a21      	subs	r1, r4, r0
    57ca:	4630      	mov	r0, r6
    57cc:	f001 f820 	bl	6810 <_sbrk_r>
    57d0:	3001      	adds	r0, #1
    57d2:	d1dd      	bne.n	5790 <_malloc_r+0x64>
    57d4:	e7cf      	b.n	5776 <_malloc_r+0x4a>
    57d6:	bf00      	nop
    57d8:	1000131c 	.word	0x1000131c
    57dc:	10001320 	.word	0x10001320

000057e0 <__sfputc_r>:
__sfputc_r():
    57e0:	6893      	ldr	r3, [r2, #8]
    57e2:	3b01      	subs	r3, #1
    57e4:	2b00      	cmp	r3, #0
    57e6:	b410      	push	{r4}
    57e8:	6093      	str	r3, [r2, #8]
    57ea:	da08      	bge.n	57fe <__sfputc_r+0x1e>
    57ec:	6994      	ldr	r4, [r2, #24]
    57ee:	42a3      	cmp	r3, r4
    57f0:	db01      	blt.n	57f6 <__sfputc_r+0x16>
    57f2:	290a      	cmp	r1, #10
    57f4:	d103      	bne.n	57fe <__sfputc_r+0x1e>
    57f6:	f85d 4b04 	ldr.w	r4, [sp], #4
    57fa:	f002 b86b 	b.w	78d4 <__swbuf_r>
    57fe:	6813      	ldr	r3, [r2, #0]
    5800:	1c58      	adds	r0, r3, #1
    5802:	6010      	str	r0, [r2, #0]
    5804:	7019      	strb	r1, [r3, #0]
    5806:	4608      	mov	r0, r1
    5808:	f85d 4b04 	ldr.w	r4, [sp], #4
    580c:	4770      	bx	lr

0000580e <__sfputs_r>:
__sfputs_r():
    580e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    5810:	4606      	mov	r6, r0
    5812:	460f      	mov	r7, r1
    5814:	4614      	mov	r4, r2
    5816:	18d5      	adds	r5, r2, r3
    5818:	42ac      	cmp	r4, r5
    581a:	d101      	bne.n	5820 <__sfputs_r+0x12>
    581c:	2000      	movs	r0, #0
    581e:	e007      	b.n	5830 <__sfputs_r+0x22>
    5820:	463a      	mov	r2, r7
    5822:	f814 1b01 	ldrb.w	r1, [r4], #1
    5826:	4630      	mov	r0, r6
    5828:	f7ff ffda 	bl	57e0 <__sfputc_r>
    582c:	1c43      	adds	r3, r0, #1
    582e:	d1f3      	bne.n	5818 <__sfputs_r+0xa>
    5830:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    5832:	Address 0x00005832 is out of bounds.


00005834 <_vfiprintf_r>:
_vfprintf_r():
    5834:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5838:	460d      	mov	r5, r1
    583a:	b09d      	sub	sp, #116	; 0x74
    583c:	4614      	mov	r4, r2
    583e:	461e      	mov	r6, r3
    5840:	4607      	mov	r7, r0
    5842:	b118      	cbz	r0, 584c <_vfiprintf_r+0x18>
    5844:	6983      	ldr	r3, [r0, #24]
    5846:	b90b      	cbnz	r3, 584c <_vfiprintf_r+0x18>
    5848:	f003 f874 	bl	8934 <__sinit>
    584c:	4b85      	ldr	r3, [pc, #532]	; (5a64 <_vfiprintf_r+0x230>)
    584e:	429d      	cmp	r5, r3
    5850:	d11b      	bne.n	588a <_vfiprintf_r+0x56>
    5852:	687d      	ldr	r5, [r7, #4]
    5854:	6e6b      	ldr	r3, [r5, #100]	; 0x64
    5856:	07d9      	lsls	r1, r3, #31
    5858:	d405      	bmi.n	5866 <_vfiprintf_r+0x32>
    585a:	89ab      	ldrh	r3, [r5, #12]
    585c:	059a      	lsls	r2, r3, #22
    585e:	d402      	bmi.n	5866 <_vfiprintf_r+0x32>
    5860:	6da8      	ldr	r0, [r5, #88]	; 0x58
    5862:	f7ff fed2 	bl	560a <__retarget_lock_acquire_recursive>
    5866:	89ab      	ldrh	r3, [r5, #12]
    5868:	071b      	lsls	r3, r3, #28
    586a:	d501      	bpl.n	5870 <_vfiprintf_r+0x3c>
    586c:	692b      	ldr	r3, [r5, #16]
    586e:	b9eb      	cbnz	r3, 58ac <_vfiprintf_r+0x78>
    5870:	4629      	mov	r1, r5
    5872:	4638      	mov	r0, r7
    5874:	f002 f880 	bl	7978 <__swsetup_r>
    5878:	b1c0      	cbz	r0, 58ac <_vfiprintf_r+0x78>
    587a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
    587c:	07d8      	lsls	r0, r3, #31
    587e:	d50e      	bpl.n	589e <_vfiprintf_r+0x6a>
    5880:	f04f 30ff 	mov.w	r0, #4294967295
    5884:	b01d      	add	sp, #116	; 0x74
    5886:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    588a:	4b77      	ldr	r3, [pc, #476]	; (5a68 <_vfiprintf_r+0x234>)
    588c:	429d      	cmp	r5, r3
    588e:	d101      	bne.n	5894 <_vfiprintf_r+0x60>
    5890:	68bd      	ldr	r5, [r7, #8]
    5892:	e7df      	b.n	5854 <_vfiprintf_r+0x20>
    5894:	4b75      	ldr	r3, [pc, #468]	; (5a6c <_vfiprintf_r+0x238>)
    5896:	429d      	cmp	r5, r3
    5898:	bf08      	it	eq
    589a:	68fd      	ldreq	r5, [r7, #12]
    589c:	e7da      	b.n	5854 <_vfiprintf_r+0x20>
    589e:	89ab      	ldrh	r3, [r5, #12]
    58a0:	0599      	lsls	r1, r3, #22
    58a2:	d4ed      	bmi.n	5880 <_vfiprintf_r+0x4c>
    58a4:	6da8      	ldr	r0, [r5, #88]	; 0x58
    58a6:	f7ff feb1 	bl	560c <__retarget_lock_release_recursive>
    58aa:	e7e9      	b.n	5880 <_vfiprintf_r+0x4c>
    58ac:	2300      	movs	r3, #0
    58ae:	9309      	str	r3, [sp, #36]	; 0x24
    58b0:	2320      	movs	r3, #32
    58b2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
    58b6:	f8df 91b8 	ldr.w	r9, [pc, #440]	; 5a70 <_vfiprintf_r+0x23c>
    58ba:	9603      	str	r6, [sp, #12]
    58bc:	2330      	movs	r3, #48	; 0x30
    58be:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
    58c2:	f04f 0a01 	mov.w	sl, #1
    58c6:	4623      	mov	r3, r4
    58c8:	461e      	mov	r6, r3
    58ca:	f813 2b01 	ldrb.w	r2, [r3], #1
    58ce:	b10a      	cbz	r2, 58d4 <_vfiprintf_r+0xa0>
    58d0:	2a25      	cmp	r2, #37	; 0x25
    58d2:	d1f9      	bne.n	58c8 <_vfiprintf_r+0x94>
    58d4:	ebb6 0b04 	subs.w	fp, r6, r4
    58d8:	d00b      	beq.n	58f2 <_vfiprintf_r+0xbe>
    58da:	465b      	mov	r3, fp
    58dc:	4622      	mov	r2, r4
    58de:	4629      	mov	r1, r5
    58e0:	4638      	mov	r0, r7
    58e2:	f7ff ff94 	bl	580e <__sfputs_r>
    58e6:	3001      	adds	r0, #1
    58e8:	f000 80a3 	beq.w	5a32 <_vfiprintf_r+0x1fe>
    58ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
    58ee:	445b      	add	r3, fp
    58f0:	9309      	str	r3, [sp, #36]	; 0x24
    58f2:	7833      	ldrb	r3, [r6, #0]
    58f4:	2b00      	cmp	r3, #0
    58f6:	f000 809c 	beq.w	5a32 <_vfiprintf_r+0x1fe>
    58fa:	2300      	movs	r3, #0
    58fc:	f04f 32ff 	mov.w	r2, #4294967295
    5900:	e9cd 2305 	strd	r2, r3, [sp, #20]
    5904:	3601      	adds	r6, #1
    5906:	9304      	str	r3, [sp, #16]
    5908:	9307      	str	r3, [sp, #28]
    590a:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
    590e:	931a      	str	r3, [sp, #104]	; 0x68
    5910:	4634      	mov	r4, r6
    5912:	2205      	movs	r2, #5
    5914:	f814 1b01 	ldrb.w	r1, [r4], #1
    5918:	4855      	ldr	r0, [pc, #340]	; (5a70 <_vfiprintf_r+0x23c>)
    591a:	f003 fca9 	bl	9270 <memchr>
    591e:	9b04      	ldr	r3, [sp, #16]
    5920:	b9c0      	cbnz	r0, 5954 <_vfiprintf_r+0x120>
    5922:	06da      	lsls	r2, r3, #27
    5924:	bf44      	itt	mi
    5926:	2220      	movmi	r2, #32
    5928:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
    592c:	0718      	lsls	r0, r3, #28
    592e:	bf44      	itt	mi
    5930:	222b      	movmi	r2, #43	; 0x2b
    5932:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
    5936:	7832      	ldrb	r2, [r6, #0]
    5938:	2a2a      	cmp	r2, #42	; 0x2a
    593a:	d013      	beq.n	5964 <_vfiprintf_r+0x130>
    593c:	9a07      	ldr	r2, [sp, #28]
    593e:	4634      	mov	r4, r6
    5940:	2000      	movs	r0, #0
    5942:	260a      	movs	r6, #10
    5944:	4621      	mov	r1, r4
    5946:	f811 3b01 	ldrb.w	r3, [r1], #1
    594a:	3b30      	subs	r3, #48	; 0x30
    594c:	2b09      	cmp	r3, #9
    594e:	d94b      	bls.n	59e8 <_vfiprintf_r+0x1b4>
    5950:	b970      	cbnz	r0, 5970 <_vfiprintf_r+0x13c>
    5952:	e014      	b.n	597e <_vfiprintf_r+0x14a>
    5954:	eba0 0009 	sub.w	r0, r0, r9
    5958:	fa0a f000 	lsl.w	r0, sl, r0
    595c:	4318      	orrs	r0, r3
    595e:	9004      	str	r0, [sp, #16]
    5960:	4626      	mov	r6, r4
    5962:	e7d5      	b.n	5910 <_vfiprintf_r+0xdc>
    5964:	9a03      	ldr	r2, [sp, #12]
    5966:	1d11      	adds	r1, r2, #4
    5968:	6812      	ldr	r2, [r2, #0]
    596a:	9103      	str	r1, [sp, #12]
    596c:	2a00      	cmp	r2, #0
    596e:	db01      	blt.n	5974 <_vfiprintf_r+0x140>
    5970:	9207      	str	r2, [sp, #28]
    5972:	e004      	b.n	597e <_vfiprintf_r+0x14a>
    5974:	4252      	negs	r2, r2
    5976:	f043 0302 	orr.w	r3, r3, #2
    597a:	9207      	str	r2, [sp, #28]
    597c:	9304      	str	r3, [sp, #16]
    597e:	7823      	ldrb	r3, [r4, #0]
    5980:	2b2e      	cmp	r3, #46	; 0x2e
    5982:	d10c      	bne.n	599e <_vfiprintf_r+0x16a>
    5984:	7863      	ldrb	r3, [r4, #1]
    5986:	2b2a      	cmp	r3, #42	; 0x2a
    5988:	d133      	bne.n	59f2 <_vfiprintf_r+0x1be>
    598a:	9b03      	ldr	r3, [sp, #12]
    598c:	1d1a      	adds	r2, r3, #4
    598e:	681b      	ldr	r3, [r3, #0]
    5990:	9203      	str	r2, [sp, #12]
    5992:	2b00      	cmp	r3, #0
    5994:	bfb8      	it	lt
    5996:	f04f 33ff 	movlt.w	r3, #4294967295
    599a:	3402      	adds	r4, #2
    599c:	9305      	str	r3, [sp, #20]
    599e:	4e35      	ldr	r6, [pc, #212]	; (5a74 <_vfiprintf_r+0x240>)
    59a0:	7821      	ldrb	r1, [r4, #0]
    59a2:	2203      	movs	r2, #3
    59a4:	4630      	mov	r0, r6
    59a6:	f003 fc63 	bl	9270 <memchr>
    59aa:	b138      	cbz	r0, 59bc <_vfiprintf_r+0x188>
    59ac:	2340      	movs	r3, #64	; 0x40
    59ae:	1b80      	subs	r0, r0, r6
    59b0:	fa03 f000 	lsl.w	r0, r3, r0
    59b4:	9b04      	ldr	r3, [sp, #16]
    59b6:	4303      	orrs	r3, r0
    59b8:	3401      	adds	r4, #1
    59ba:	9304      	str	r3, [sp, #16]
    59bc:	f814 1b01 	ldrb.w	r1, [r4], #1
    59c0:	482d      	ldr	r0, [pc, #180]	; (5a78 <_vfiprintf_r+0x244>)
    59c2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
    59c6:	2206      	movs	r2, #6
    59c8:	f003 fc52 	bl	9270 <memchr>
    59cc:	2800      	cmp	r0, #0
    59ce:	d03f      	beq.n	5a50 <_vfiprintf_r+0x21c>
    59d0:	4b2a      	ldr	r3, [pc, #168]	; (5a7c <_vfiprintf_r+0x248>)
    59d2:	bb13      	cbnz	r3, 5a1a <_vfiprintf_r+0x1e6>
    59d4:	9b03      	ldr	r3, [sp, #12]
    59d6:	3307      	adds	r3, #7
    59d8:	f023 0307 	bic.w	r3, r3, #7
    59dc:	3308      	adds	r3, #8
    59de:	9303      	str	r3, [sp, #12]
    59e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
    59e2:	4443      	add	r3, r8
    59e4:	9309      	str	r3, [sp, #36]	; 0x24
    59e6:	e76e      	b.n	58c6 <_vfiprintf_r+0x92>
    59e8:	fb06 3202 	mla	r2, r6, r2, r3
    59ec:	2001      	movs	r0, #1
    59ee:	460c      	mov	r4, r1
    59f0:	e7a8      	b.n	5944 <_vfiprintf_r+0x110>
    59f2:	2300      	movs	r3, #0
    59f4:	3401      	adds	r4, #1
    59f6:	9305      	str	r3, [sp, #20]
    59f8:	4619      	mov	r1, r3
    59fa:	260a      	movs	r6, #10
    59fc:	4620      	mov	r0, r4
    59fe:	f810 2b01 	ldrb.w	r2, [r0], #1
    5a02:	3a30      	subs	r2, #48	; 0x30
    5a04:	2a09      	cmp	r2, #9
    5a06:	d903      	bls.n	5a10 <_vfiprintf_r+0x1dc>
    5a08:	2b00      	cmp	r3, #0
    5a0a:	d0c8      	beq.n	599e <_vfiprintf_r+0x16a>
    5a0c:	9105      	str	r1, [sp, #20]
    5a0e:	e7c6      	b.n	599e <_vfiprintf_r+0x16a>
    5a10:	fb06 2101 	mla	r1, r6, r1, r2
    5a14:	2301      	movs	r3, #1
    5a16:	4604      	mov	r4, r0
    5a18:	e7f0      	b.n	59fc <_vfiprintf_r+0x1c8>
    5a1a:	ab03      	add	r3, sp, #12
    5a1c:	9300      	str	r3, [sp, #0]
    5a1e:	462a      	mov	r2, r5
    5a20:	4b17      	ldr	r3, [pc, #92]	; (5a80 <_vfiprintf_r+0x24c>)
    5a22:	a904      	add	r1, sp, #16
    5a24:	4638      	mov	r0, r7
    5a26:	f000 f8bd 	bl	5ba4 <_printf_float>
    5a2a:	f1b0 3fff 	cmp.w	r0, #4294967295
    5a2e:	4680      	mov	r8, r0
    5a30:	d1d6      	bne.n	59e0 <_vfiprintf_r+0x1ac>
    5a32:	6e6b      	ldr	r3, [r5, #100]	; 0x64
    5a34:	07d9      	lsls	r1, r3, #31
    5a36:	d405      	bmi.n	5a44 <_vfiprintf_r+0x210>
    5a38:	89ab      	ldrh	r3, [r5, #12]
    5a3a:	059a      	lsls	r2, r3, #22
    5a3c:	d402      	bmi.n	5a44 <_vfiprintf_r+0x210>
    5a3e:	6da8      	ldr	r0, [r5, #88]	; 0x58
    5a40:	f7ff fde4 	bl	560c <__retarget_lock_release_recursive>
    5a44:	89ab      	ldrh	r3, [r5, #12]
    5a46:	065b      	lsls	r3, r3, #25
    5a48:	f53f af1a 	bmi.w	5880 <_vfiprintf_r+0x4c>
    5a4c:	9809      	ldr	r0, [sp, #36]	; 0x24
    5a4e:	e719      	b.n	5884 <_vfiprintf_r+0x50>
    5a50:	ab03      	add	r3, sp, #12
    5a52:	9300      	str	r3, [sp, #0]
    5a54:	462a      	mov	r2, r5
    5a56:	4b0a      	ldr	r3, [pc, #40]	; (5a80 <_vfiprintf_r+0x24c>)
    5a58:	a904      	add	r1, sp, #16
    5a5a:	4638      	mov	r0, r7
    5a5c:	f000 fb42 	bl	60e4 <_printf_i>
    5a60:	e7e3      	b.n	5a2a <_vfiprintf_r+0x1f6>
    5a62:	bf00      	nop
    5a64:	0000bef0 	.word	0x0000bef0
    5a68:	0000bf10 	.word	0x0000bf10
    5a6c:	0000bed0 	.word	0x0000bed0
    5a70:	0000be28 	.word	0x0000be28
    5a74:	0000be2e 	.word	0x0000be2e
    5a78:	0000be32 	.word	0x0000be32
    5a7c:	00005ba5 	.word	0x00005ba5
    5a80:	0000580f 	.word	0x0000580f

00005a84 <__cvt>:
__cvt():
    5a84:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
    5a88:	ec55 4b10 	vmov	r4, r5, d0
    5a8c:	2d00      	cmp	r5, #0
    5a8e:	460e      	mov	r6, r1
    5a90:	4691      	mov	r9, r2
    5a92:	4619      	mov	r1, r3
    5a94:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
    5a98:	f04f 0200 	mov.w	r2, #0
    5a9c:	da03      	bge.n	5aa6 <__cvt+0x22>
    5a9e:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
    5aa2:	461d      	mov	r5, r3
    5aa4:	222d      	movs	r2, #45	; 0x2d
    5aa6:	9f0d      	ldr	r7, [sp, #52]	; 0x34
    5aa8:	700a      	strb	r2, [r1, #0]
    5aaa:	f027 0720 	bic.w	r7, r7, #32
    5aae:	2f46      	cmp	r7, #70	; 0x46
    5ab0:	d004      	beq.n	5abc <__cvt+0x38>
    5ab2:	2f45      	cmp	r7, #69	; 0x45
    5ab4:	d100      	bne.n	5ab8 <__cvt+0x34>
    5ab6:	3601      	adds	r6, #1
    5ab8:	2102      	movs	r1, #2
    5aba:	e000      	b.n	5abe <__cvt+0x3a>
    5abc:	2103      	movs	r1, #3
    5abe:	ab03      	add	r3, sp, #12
    5ac0:	9301      	str	r3, [sp, #4]
    5ac2:	ab02      	add	r3, sp, #8
    5ac4:	9300      	str	r3, [sp, #0]
    5ac6:	4632      	mov	r2, r6
    5ac8:	4653      	mov	r3, sl
    5aca:	ec45 4b10 	vmov	d0, r4, r5
    5ace:	f002 f84b 	bl	7b68 <_dtoa_r>
    5ad2:	2f47      	cmp	r7, #71	; 0x47
    5ad4:	4680      	mov	r8, r0
    5ad6:	d102      	bne.n	5ade <__cvt+0x5a>
    5ad8:	f019 0f01 	tst.w	r9, #1
    5adc:	d022      	beq.n	5b24 <__cvt+0xa0>
    5ade:	2f46      	cmp	r7, #70	; 0x46
    5ae0:	eb08 0906 	add.w	r9, r8, r6
    5ae4:	d111      	bne.n	5b0a <__cvt+0x86>
    5ae6:	f898 3000 	ldrb.w	r3, [r8]
    5aea:	2b30      	cmp	r3, #48	; 0x30
    5aec:	d10a      	bne.n	5b04 <__cvt+0x80>
    5aee:	2200      	movs	r2, #0
    5af0:	2300      	movs	r3, #0
    5af2:	4620      	mov	r0, r4
    5af4:	4629      	mov	r1, r5
    5af6:	f004 ff97 	bl	aa28 <__aeabi_dcmpeq>
    5afa:	b918      	cbnz	r0, 5b04 <__cvt+0x80>
    5afc:	f1c6 0601 	rsb	r6, r6, #1
    5b00:	f8ca 6000 	str.w	r6, [sl]
    5b04:	f8da 3000 	ldr.w	r3, [sl]
    5b08:	4499      	add	r9, r3
    5b0a:	2200      	movs	r2, #0
    5b0c:	2300      	movs	r3, #0
    5b0e:	4620      	mov	r0, r4
    5b10:	4629      	mov	r1, r5
    5b12:	f004 ff89 	bl	aa28 <__aeabi_dcmpeq>
    5b16:	b108      	cbz	r0, 5b1c <__cvt+0x98>
    5b18:	f8cd 900c 	str.w	r9, [sp, #12]
    5b1c:	2230      	movs	r2, #48	; 0x30
    5b1e:	9b03      	ldr	r3, [sp, #12]
    5b20:	454b      	cmp	r3, r9
    5b22:	d308      	bcc.n	5b36 <__cvt+0xb2>
    5b24:	9b03      	ldr	r3, [sp, #12]
    5b26:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    5b28:	eba3 0308 	sub.w	r3, r3, r8
    5b2c:	4640      	mov	r0, r8
    5b2e:	6013      	str	r3, [r2, #0]
    5b30:	b004      	add	sp, #16
    5b32:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    5b36:	1c59      	adds	r1, r3, #1
    5b38:	9103      	str	r1, [sp, #12]
    5b3a:	701a      	strb	r2, [r3, #0]
    5b3c:	e7ef      	b.n	5b1e <__cvt+0x9a>

00005b3e <__exponent>:
__exponent():
    5b3e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    5b40:	2900      	cmp	r1, #0
    5b42:	bfba      	itte	lt
    5b44:	4249      	neglt	r1, r1
    5b46:	232d      	movlt	r3, #45	; 0x2d
    5b48:	232b      	movge	r3, #43	; 0x2b
    5b4a:	2909      	cmp	r1, #9
    5b4c:	7002      	strb	r2, [r0, #0]
    5b4e:	7043      	strb	r3, [r0, #1]
    5b50:	dd21      	ble.n	5b96 <__exponent+0x58>
    5b52:	f10d 0307 	add.w	r3, sp, #7
    5b56:	461f      	mov	r7, r3
    5b58:	260a      	movs	r6, #10
    5b5a:	fb91 f2f6 	sdiv	r2, r1, r6
    5b5e:	fb06 1412 	mls	r4, r6, r2, r1
    5b62:	3430      	adds	r4, #48	; 0x30
    5b64:	2963      	cmp	r1, #99	; 0x63
    5b66:	f103 35ff 	add.w	r5, r3, #4294967295
    5b6a:	f803 4c01 	strb.w	r4, [r3, #-1]
    5b6e:	dc0a      	bgt.n	5b86 <__exponent+0x48>
    5b70:	3230      	adds	r2, #48	; 0x30
    5b72:	f805 2c01 	strb.w	r2, [r5, #-1]
    5b76:	3b02      	subs	r3, #2
    5b78:	1c82      	adds	r2, r0, #2
    5b7a:	42bb      	cmp	r3, r7
    5b7c:	4614      	mov	r4, r2
    5b7e:	d305      	bcc.n	5b8c <__exponent+0x4e>
    5b80:	1a20      	subs	r0, r4, r0
    5b82:	b003      	add	sp, #12
    5b84:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5b86:	462b      	mov	r3, r5
    5b88:	4611      	mov	r1, r2
    5b8a:	e7e6      	b.n	5b5a <__exponent+0x1c>
    5b8c:	f813 1b01 	ldrb.w	r1, [r3], #1
    5b90:	f802 1b01 	strb.w	r1, [r2], #1
    5b94:	e7f1      	b.n	5b7a <__exponent+0x3c>
    5b96:	2330      	movs	r3, #48	; 0x30
    5b98:	4419      	add	r1, r3
    5b9a:	7083      	strb	r3, [r0, #2]
    5b9c:	1d04      	adds	r4, r0, #4
    5b9e:	70c1      	strb	r1, [r0, #3]
    5ba0:	e7ee      	b.n	5b80 <__exponent+0x42>
    5ba2:	Address 0x00005ba2 is out of bounds.


00005ba4 <_printf_float>:
_printf_float():
    5ba4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5ba8:	b08d      	sub	sp, #52	; 0x34
    5baa:	460c      	mov	r4, r1
    5bac:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
    5bb0:	4616      	mov	r6, r2
    5bb2:	461f      	mov	r7, r3
    5bb4:	4605      	mov	r5, r0
    5bb6:	f003 fadf 	bl	9178 <_localeconv_r>
    5bba:	6803      	ldr	r3, [r0, #0]
    5bbc:	9306      	str	r3, [sp, #24]
    5bbe:	4618      	mov	r0, r3
    5bc0:	f000 ff47 	bl	6a52 <strlen>
    5bc4:	2300      	movs	r3, #0
    5bc6:	930a      	str	r3, [sp, #40]	; 0x28
    5bc8:	f8d8 3000 	ldr.w	r3, [r8]
    5bcc:	9007      	str	r0, [sp, #28]
    5bce:	3307      	adds	r3, #7
    5bd0:	f023 0307 	bic.w	r3, r3, #7
    5bd4:	f103 0208 	add.w	r2, r3, #8
    5bd8:	f894 a018 	ldrb.w	sl, [r4, #24]
    5bdc:	f8d4 b000 	ldr.w	fp, [r4]
    5be0:	f8c8 2000 	str.w	r2, [r8]
    5be4:	e9d3 2300 	ldrd	r2, r3, [r3]
    5be8:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
    5bec:	ed94 7b12 	vldr	d7, [r4, #72]	; 0x48
    5bf0:	ed8d 7b04 	vstr	d7, [sp, #16]
    5bf4:	e9dd 8304 	ldrd	r8, r3, [sp, #16]
    5bf8:	f023 4900 	bic.w	r9, r3, #2147483648	; 0x80000000
    5bfc:	f04f 32ff 	mov.w	r2, #4294967295
    5c00:	4ba6      	ldr	r3, [pc, #664]	; (5e9c <_printf_float+0x2f8>)
    5c02:	4640      	mov	r0, r8
    5c04:	4649      	mov	r1, r9
    5c06:	f004 ff41 	bl	aa8c <__aeabi_dcmpun>
    5c0a:	bb70      	cbnz	r0, 5c6a <_printf_float+0xc6>
    5c0c:	f04f 32ff 	mov.w	r2, #4294967295
    5c10:	4ba2      	ldr	r3, [pc, #648]	; (5e9c <_printf_float+0x2f8>)
    5c12:	4640      	mov	r0, r8
    5c14:	4649      	mov	r1, r9
    5c16:	f004 ff1b 	bl	aa50 <__aeabi_dcmple>
    5c1a:	bb30      	cbnz	r0, 5c6a <_printf_float+0xc6>
    5c1c:	2200      	movs	r2, #0
    5c1e:	2300      	movs	r3, #0
    5c20:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    5c24:	f004 ff0a 	bl	aa3c <__aeabi_dcmplt>
    5c28:	b110      	cbz	r0, 5c30 <_printf_float+0x8c>
    5c2a:	232d      	movs	r3, #45	; 0x2d
    5c2c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
    5c30:	4a9b      	ldr	r2, [pc, #620]	; (5ea0 <_printf_float+0x2fc>)
    5c32:	4b9c      	ldr	r3, [pc, #624]	; (5ea4 <_printf_float+0x300>)
    5c34:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
    5c38:	bf94      	ite	ls
    5c3a:	4690      	movls	r8, r2
    5c3c:	4698      	movhi	r8, r3
    5c3e:	2303      	movs	r3, #3
    5c40:	f02b 0204 	bic.w	r2, fp, #4
    5c44:	6123      	str	r3, [r4, #16]
    5c46:	6022      	str	r2, [r4, #0]
    5c48:	f04f 0900 	mov.w	r9, #0
    5c4c:	9700      	str	r7, [sp, #0]
    5c4e:	4633      	mov	r3, r6
    5c50:	aa0b      	add	r2, sp, #44	; 0x2c
    5c52:	4621      	mov	r1, r4
    5c54:	4628      	mov	r0, r5
    5c56:	f000 f9cf 	bl	5ff8 <_printf_common>
    5c5a:	3001      	adds	r0, #1
    5c5c:	f040 808c 	bne.w	5d78 <_printf_float+0x1d4>
    5c60:	f04f 30ff 	mov.w	r0, #4294967295
    5c64:	b00d      	add	sp, #52	; 0x34
    5c66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5c6a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    5c6e:	4610      	mov	r0, r2
    5c70:	4619      	mov	r1, r3
    5c72:	f004 ff0b 	bl	aa8c <__aeabi_dcmpun>
    5c76:	b140      	cbz	r0, 5c8a <_printf_float+0xe6>
    5c78:	9b05      	ldr	r3, [sp, #20]
    5c7a:	4a8b      	ldr	r2, [pc, #556]	; (5ea8 <_printf_float+0x304>)
    5c7c:	2b00      	cmp	r3, #0
    5c7e:	bfbc      	itt	lt
    5c80:	232d      	movlt	r3, #45	; 0x2d
    5c82:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
    5c86:	4b89      	ldr	r3, [pc, #548]	; (5eac <_printf_float+0x308>)
    5c88:	e7d4      	b.n	5c34 <_printf_float+0x90>
    5c8a:	6863      	ldr	r3, [r4, #4]
    5c8c:	1c5a      	adds	r2, r3, #1
    5c8e:	f00a 09df 	and.w	r9, sl, #223	; 0xdf
    5c92:	d13e      	bne.n	5d12 <_printf_float+0x16e>
    5c94:	2306      	movs	r3, #6
    5c96:	6063      	str	r3, [r4, #4]
    5c98:	2300      	movs	r3, #0
    5c9a:	9303      	str	r3, [sp, #12]
    5c9c:	ab0a      	add	r3, sp, #40	; 0x28
    5c9e:	f44b 6280 	orr.w	r2, fp, #1024	; 0x400
    5ca2:	e9cd a301 	strd	sl, r3, [sp, #4]
    5ca6:	ab09      	add	r3, sp, #36	; 0x24
    5ca8:	9300      	str	r3, [sp, #0]
    5caa:	6861      	ldr	r1, [r4, #4]
    5cac:	6022      	str	r2, [r4, #0]
    5cae:	f10d 0323 	add.w	r3, sp, #35	; 0x23
    5cb2:	ed9d 0b04 	vldr	d0, [sp, #16]
    5cb6:	4628      	mov	r0, r5
    5cb8:	f7ff fee4 	bl	5a84 <__cvt>
    5cbc:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
    5cc0:	4680      	mov	r8, r0
    5cc2:	9909      	ldr	r1, [sp, #36]	; 0x24
    5cc4:	d108      	bne.n	5cd8 <_printf_float+0x134>
    5cc6:	1cc8      	adds	r0, r1, #3
    5cc8:	db02      	blt.n	5cd0 <_printf_float+0x12c>
    5cca:	6863      	ldr	r3, [r4, #4]
    5ccc:	4299      	cmp	r1, r3
    5cce:	dd41      	ble.n	5d54 <_printf_float+0x1b0>
    5cd0:	f1aa 0a02 	sub.w	sl, sl, #2
    5cd4:	fa5f fa8a 	uxtb.w	sl, sl
    5cd8:	f1ba 0f65 	cmp.w	sl, #101	; 0x65
    5cdc:	d820      	bhi.n	5d20 <_printf_float+0x17c>
    5cde:	3901      	subs	r1, #1
    5ce0:	4652      	mov	r2, sl
    5ce2:	f104 0050 	add.w	r0, r4, #80	; 0x50
    5ce6:	9109      	str	r1, [sp, #36]	; 0x24
    5ce8:	f7ff ff29 	bl	5b3e <__exponent>
    5cec:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    5cee:	1813      	adds	r3, r2, r0
    5cf0:	2a01      	cmp	r2, #1
    5cf2:	4681      	mov	r9, r0
    5cf4:	6123      	str	r3, [r4, #16]
    5cf6:	dc02      	bgt.n	5cfe <_printf_float+0x15a>
    5cf8:	6822      	ldr	r2, [r4, #0]
    5cfa:	07d2      	lsls	r2, r2, #31
    5cfc:	d501      	bpl.n	5d02 <_printf_float+0x15e>
    5cfe:	3301      	adds	r3, #1
    5d00:	6123      	str	r3, [r4, #16]
    5d02:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
    5d06:	2b00      	cmp	r3, #0
    5d08:	d0a0      	beq.n	5c4c <_printf_float+0xa8>
    5d0a:	232d      	movs	r3, #45	; 0x2d
    5d0c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
    5d10:	e79c      	b.n	5c4c <_printf_float+0xa8>
    5d12:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
    5d16:	d1bf      	bne.n	5c98 <_printf_float+0xf4>
    5d18:	2b00      	cmp	r3, #0
    5d1a:	d1bd      	bne.n	5c98 <_printf_float+0xf4>
    5d1c:	2301      	movs	r3, #1
    5d1e:	e7ba      	b.n	5c96 <_printf_float+0xf2>
    5d20:	f1ba 0f66 	cmp.w	sl, #102	; 0x66
    5d24:	d118      	bne.n	5d58 <_printf_float+0x1b4>
    5d26:	2900      	cmp	r1, #0
    5d28:	6863      	ldr	r3, [r4, #4]
    5d2a:	dd0b      	ble.n	5d44 <_printf_float+0x1a0>
    5d2c:	6121      	str	r1, [r4, #16]
    5d2e:	b913      	cbnz	r3, 5d36 <_printf_float+0x192>
    5d30:	6822      	ldr	r2, [r4, #0]
    5d32:	07d0      	lsls	r0, r2, #31
    5d34:	d502      	bpl.n	5d3c <_printf_float+0x198>
    5d36:	3301      	adds	r3, #1
    5d38:	440b      	add	r3, r1
    5d3a:	6123      	str	r3, [r4, #16]
    5d3c:	65a1      	str	r1, [r4, #88]	; 0x58
    5d3e:	f04f 0900 	mov.w	r9, #0
    5d42:	e7de      	b.n	5d02 <_printf_float+0x15e>
    5d44:	b913      	cbnz	r3, 5d4c <_printf_float+0x1a8>
    5d46:	6822      	ldr	r2, [r4, #0]
    5d48:	07d2      	lsls	r2, r2, #31
    5d4a:	d501      	bpl.n	5d50 <_printf_float+0x1ac>
    5d4c:	3302      	adds	r3, #2
    5d4e:	e7f4      	b.n	5d3a <_printf_float+0x196>
    5d50:	2301      	movs	r3, #1
    5d52:	e7f2      	b.n	5d3a <_printf_float+0x196>
    5d54:	f04f 0a67 	mov.w	sl, #103	; 0x67
    5d58:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    5d5a:	4299      	cmp	r1, r3
    5d5c:	db05      	blt.n	5d6a <_printf_float+0x1c6>
    5d5e:	6823      	ldr	r3, [r4, #0]
    5d60:	6121      	str	r1, [r4, #16]
    5d62:	07d8      	lsls	r0, r3, #31
    5d64:	d5ea      	bpl.n	5d3c <_printf_float+0x198>
    5d66:	1c4b      	adds	r3, r1, #1
    5d68:	e7e7      	b.n	5d3a <_printf_float+0x196>
    5d6a:	2900      	cmp	r1, #0
    5d6c:	bfd4      	ite	le
    5d6e:	f1c1 0202 	rsble	r2, r1, #2
    5d72:	2201      	movgt	r2, #1
    5d74:	4413      	add	r3, r2
    5d76:	e7e0      	b.n	5d3a <_printf_float+0x196>
    5d78:	6823      	ldr	r3, [r4, #0]
    5d7a:	055a      	lsls	r2, r3, #21
    5d7c:	d407      	bmi.n	5d8e <_printf_float+0x1ea>
    5d7e:	6923      	ldr	r3, [r4, #16]
    5d80:	4642      	mov	r2, r8
    5d82:	4631      	mov	r1, r6
    5d84:	4628      	mov	r0, r5
    5d86:	47b8      	blx	r7
    5d88:	3001      	adds	r0, #1
    5d8a:	d12b      	bne.n	5de4 <_printf_float+0x240>
    5d8c:	e768      	b.n	5c60 <_printf_float+0xbc>
    5d8e:	f1ba 0f65 	cmp.w	sl, #101	; 0x65
    5d92:	f240 80dc 	bls.w	5f4e <_printf_float+0x3aa>
    5d96:	2200      	movs	r2, #0
    5d98:	2300      	movs	r3, #0
    5d9a:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
    5d9e:	f004 fe43 	bl	aa28 <__aeabi_dcmpeq>
    5da2:	2800      	cmp	r0, #0
    5da4:	d033      	beq.n	5e0e <_printf_float+0x26a>
    5da6:	2301      	movs	r3, #1
    5da8:	4a41      	ldr	r2, [pc, #260]	; (5eb0 <_printf_float+0x30c>)
    5daa:	4631      	mov	r1, r6
    5dac:	4628      	mov	r0, r5
    5dae:	47b8      	blx	r7
    5db0:	3001      	adds	r0, #1
    5db2:	f43f af55 	beq.w	5c60 <_printf_float+0xbc>
    5db6:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
    5dba:	429a      	cmp	r2, r3
    5dbc:	db02      	blt.n	5dc4 <_printf_float+0x220>
    5dbe:	6823      	ldr	r3, [r4, #0]
    5dc0:	07d8      	lsls	r0, r3, #31
    5dc2:	d50f      	bpl.n	5de4 <_printf_float+0x240>
    5dc4:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    5dc8:	4631      	mov	r1, r6
    5dca:	4628      	mov	r0, r5
    5dcc:	47b8      	blx	r7
    5dce:	3001      	adds	r0, #1
    5dd0:	f43f af46 	beq.w	5c60 <_printf_float+0xbc>
    5dd4:	f04f 0800 	mov.w	r8, #0
    5dd8:	f104 091a 	add.w	r9, r4, #26
    5ddc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    5dde:	3b01      	subs	r3, #1
    5de0:	4543      	cmp	r3, r8
    5de2:	dc09      	bgt.n	5df8 <_printf_float+0x254>
    5de4:	6823      	ldr	r3, [r4, #0]
    5de6:	079b      	lsls	r3, r3, #30
    5de8:	f100 8101 	bmi.w	5fee <_printf_float+0x44a>
    5dec:	68e0      	ldr	r0, [r4, #12]
    5dee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    5df0:	4298      	cmp	r0, r3
    5df2:	bfb8      	it	lt
    5df4:	4618      	movlt	r0, r3
    5df6:	e735      	b.n	5c64 <_printf_float+0xc0>
    5df8:	2301      	movs	r3, #1
    5dfa:	464a      	mov	r2, r9
    5dfc:	4631      	mov	r1, r6
    5dfe:	4628      	mov	r0, r5
    5e00:	47b8      	blx	r7
    5e02:	3001      	adds	r0, #1
    5e04:	f43f af2c 	beq.w	5c60 <_printf_float+0xbc>
    5e08:	f108 0801 	add.w	r8, r8, #1
    5e0c:	e7e6      	b.n	5ddc <_printf_float+0x238>
    5e0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    5e10:	2b00      	cmp	r3, #0
    5e12:	dc2b      	bgt.n	5e6c <_printf_float+0x2c8>
    5e14:	2301      	movs	r3, #1
    5e16:	4a26      	ldr	r2, [pc, #152]	; (5eb0 <_printf_float+0x30c>)
    5e18:	4631      	mov	r1, r6
    5e1a:	4628      	mov	r0, r5
    5e1c:	47b8      	blx	r7
    5e1e:	3001      	adds	r0, #1
    5e20:	f43f af1e 	beq.w	5c60 <_printf_float+0xbc>
    5e24:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
    5e28:	4313      	orrs	r3, r2
    5e2a:	d102      	bne.n	5e32 <_printf_float+0x28e>
    5e2c:	6823      	ldr	r3, [r4, #0]
    5e2e:	07d9      	lsls	r1, r3, #31
    5e30:	d5d8      	bpl.n	5de4 <_printf_float+0x240>
    5e32:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    5e36:	4631      	mov	r1, r6
    5e38:	4628      	mov	r0, r5
    5e3a:	47b8      	blx	r7
    5e3c:	3001      	adds	r0, #1
    5e3e:	f43f af0f 	beq.w	5c60 <_printf_float+0xbc>
    5e42:	f04f 0900 	mov.w	r9, #0
    5e46:	f104 0a1a 	add.w	sl, r4, #26
    5e4a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    5e4c:	425b      	negs	r3, r3
    5e4e:	454b      	cmp	r3, r9
    5e50:	dc01      	bgt.n	5e56 <_printf_float+0x2b2>
    5e52:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    5e54:	e794      	b.n	5d80 <_printf_float+0x1dc>
    5e56:	2301      	movs	r3, #1
    5e58:	4652      	mov	r2, sl
    5e5a:	4631      	mov	r1, r6
    5e5c:	4628      	mov	r0, r5
    5e5e:	47b8      	blx	r7
    5e60:	3001      	adds	r0, #1
    5e62:	f43f aefd 	beq.w	5c60 <_printf_float+0xbc>
    5e66:	f109 0901 	add.w	r9, r9, #1
    5e6a:	e7ee      	b.n	5e4a <_printf_float+0x2a6>
    5e6c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    5e6e:	6da3      	ldr	r3, [r4, #88]	; 0x58
    5e70:	429a      	cmp	r2, r3
    5e72:	bfa8      	it	ge
    5e74:	461a      	movge	r2, r3
    5e76:	2a00      	cmp	r2, #0
    5e78:	4691      	mov	r9, r2
    5e7a:	dd07      	ble.n	5e8c <_printf_float+0x2e8>
    5e7c:	4613      	mov	r3, r2
    5e7e:	4631      	mov	r1, r6
    5e80:	4642      	mov	r2, r8
    5e82:	4628      	mov	r0, r5
    5e84:	47b8      	blx	r7
    5e86:	3001      	adds	r0, #1
    5e88:	f43f aeea 	beq.w	5c60 <_printf_float+0xbc>
    5e8c:	f104 031a 	add.w	r3, r4, #26
    5e90:	f04f 0b00 	mov.w	fp, #0
    5e94:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
    5e98:	9304      	str	r3, [sp, #16]
    5e9a:	e015      	b.n	5ec8 <_printf_float+0x324>
    5e9c:	7fefffff 	.word	0x7fefffff
    5ea0:	0000be39 	.word	0x0000be39
    5ea4:	0000be3d 	.word	0x0000be3d
    5ea8:	0000be41 	.word	0x0000be41
    5eac:	0000be45 	.word	0x0000be45
    5eb0:	0000b122 	.word	0x0000b122
    5eb4:	2301      	movs	r3, #1
    5eb6:	9a04      	ldr	r2, [sp, #16]
    5eb8:	4631      	mov	r1, r6
    5eba:	4628      	mov	r0, r5
    5ebc:	47b8      	blx	r7
    5ebe:	3001      	adds	r0, #1
    5ec0:	f43f aece 	beq.w	5c60 <_printf_float+0xbc>
    5ec4:	f10b 0b01 	add.w	fp, fp, #1
    5ec8:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
    5ecc:	ebaa 0309 	sub.w	r3, sl, r9
    5ed0:	455b      	cmp	r3, fp
    5ed2:	dcef      	bgt.n	5eb4 <_printf_float+0x310>
    5ed4:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
    5ed8:	429a      	cmp	r2, r3
    5eda:	db1b      	blt.n	5f14 <_printf_float+0x370>
    5edc:	6823      	ldr	r3, [r4, #0]
    5ede:	07da      	lsls	r2, r3, #31
    5ee0:	d418      	bmi.n	5f14 <_printf_float+0x370>
    5ee2:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
    5ee6:	4592      	cmp	sl, r2
    5ee8:	db1c      	blt.n	5f24 <_printf_float+0x380>
    5eea:	eba3 090a 	sub.w	r9, r3, sl
    5eee:	f1b9 0f00 	cmp.w	r9, #0
    5ef2:	dd08      	ble.n	5f06 <_printf_float+0x362>
    5ef4:	464b      	mov	r3, r9
    5ef6:	eb08 020a 	add.w	r2, r8, sl
    5efa:	4631      	mov	r1, r6
    5efc:	4628      	mov	r0, r5
    5efe:	47b8      	blx	r7
    5f00:	3001      	adds	r0, #1
    5f02:	f43f aead 	beq.w	5c60 <_printf_float+0xbc>
    5f06:	f04f 0800 	mov.w	r8, #0
    5f0a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
    5f0e:	f104 0a1a 	add.w	sl, r4, #26
    5f12:	e014      	b.n	5f3e <_printf_float+0x39a>
    5f14:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    5f18:	4631      	mov	r1, r6
    5f1a:	4628      	mov	r0, r5
    5f1c:	47b8      	blx	r7
    5f1e:	3001      	adds	r0, #1
    5f20:	d1df      	bne.n	5ee2 <_printf_float+0x33e>
    5f22:	e69d      	b.n	5c60 <_printf_float+0xbc>
    5f24:	eba3 0902 	sub.w	r9, r3, r2
    5f28:	e7e1      	b.n	5eee <_printf_float+0x34a>
    5f2a:	2301      	movs	r3, #1
    5f2c:	4652      	mov	r2, sl
    5f2e:	4631      	mov	r1, r6
    5f30:	4628      	mov	r0, r5
    5f32:	47b8      	blx	r7
    5f34:	3001      	adds	r0, #1
    5f36:	f43f ae93 	beq.w	5c60 <_printf_float+0xbc>
    5f3a:	f108 0801 	add.w	r8, r8, #1
    5f3e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
    5f42:	1a9b      	subs	r3, r3, r2
    5f44:	eba3 0309 	sub.w	r3, r3, r9
    5f48:	4543      	cmp	r3, r8
    5f4a:	dcee      	bgt.n	5f2a <_printf_float+0x386>
    5f4c:	e74a      	b.n	5de4 <_printf_float+0x240>
    5f4e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    5f50:	2a01      	cmp	r2, #1
    5f52:	dc01      	bgt.n	5f58 <_printf_float+0x3b4>
    5f54:	07db      	lsls	r3, r3, #31
    5f56:	d537      	bpl.n	5fc8 <_printf_float+0x424>
    5f58:	2301      	movs	r3, #1
    5f5a:	4642      	mov	r2, r8
    5f5c:	4631      	mov	r1, r6
    5f5e:	4628      	mov	r0, r5
    5f60:	47b8      	blx	r7
    5f62:	3001      	adds	r0, #1
    5f64:	f43f ae7c 	beq.w	5c60 <_printf_float+0xbc>
    5f68:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
    5f6c:	4631      	mov	r1, r6
    5f6e:	4628      	mov	r0, r5
    5f70:	47b8      	blx	r7
    5f72:	3001      	adds	r0, #1
    5f74:	f43f ae74 	beq.w	5c60 <_printf_float+0xbc>
    5f78:	2200      	movs	r2, #0
    5f7a:	2300      	movs	r3, #0
    5f7c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
    5f80:	f004 fd52 	bl	aa28 <__aeabi_dcmpeq>
    5f84:	b9d8      	cbnz	r0, 5fbe <_printf_float+0x41a>
    5f86:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    5f88:	f108 0201 	add.w	r2, r8, #1
    5f8c:	3b01      	subs	r3, #1
    5f8e:	4631      	mov	r1, r6
    5f90:	4628      	mov	r0, r5
    5f92:	47b8      	blx	r7
    5f94:	3001      	adds	r0, #1
    5f96:	d10e      	bne.n	5fb6 <_printf_float+0x412>
    5f98:	e662      	b.n	5c60 <_printf_float+0xbc>
    5f9a:	2301      	movs	r3, #1
    5f9c:	4652      	mov	r2, sl
    5f9e:	4631      	mov	r1, r6
    5fa0:	4628      	mov	r0, r5
    5fa2:	47b8      	blx	r7
    5fa4:	3001      	adds	r0, #1
    5fa6:	f43f ae5b 	beq.w	5c60 <_printf_float+0xbc>
    5faa:	f108 0801 	add.w	r8, r8, #1
    5fae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    5fb0:	3b01      	subs	r3, #1
    5fb2:	4543      	cmp	r3, r8
    5fb4:	dcf1      	bgt.n	5f9a <_printf_float+0x3f6>
    5fb6:	464b      	mov	r3, r9
    5fb8:	f104 0250 	add.w	r2, r4, #80	; 0x50
    5fbc:	e6e1      	b.n	5d82 <_printf_float+0x1de>
    5fbe:	f04f 0800 	mov.w	r8, #0
    5fc2:	f104 0a1a 	add.w	sl, r4, #26
    5fc6:	e7f2      	b.n	5fae <_printf_float+0x40a>
    5fc8:	2301      	movs	r3, #1
    5fca:	4642      	mov	r2, r8
    5fcc:	e7df      	b.n	5f8e <_printf_float+0x3ea>
    5fce:	2301      	movs	r3, #1
    5fd0:	464a      	mov	r2, r9
    5fd2:	4631      	mov	r1, r6
    5fd4:	4628      	mov	r0, r5
    5fd6:	47b8      	blx	r7
    5fd8:	3001      	adds	r0, #1
    5fda:	f43f ae41 	beq.w	5c60 <_printf_float+0xbc>
    5fde:	f108 0801 	add.w	r8, r8, #1
    5fe2:	68e3      	ldr	r3, [r4, #12]
    5fe4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    5fe6:	1a9b      	subs	r3, r3, r2
    5fe8:	4543      	cmp	r3, r8
    5fea:	dcf0      	bgt.n	5fce <_printf_float+0x42a>
    5fec:	e6fe      	b.n	5dec <_printf_float+0x248>
    5fee:	f04f 0800 	mov.w	r8, #0
    5ff2:	f104 0919 	add.w	r9, r4, #25
    5ff6:	e7f4      	b.n	5fe2 <_printf_float+0x43e>

00005ff8 <_printf_common>:
_printf_common():
    5ff8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    5ffc:	4691      	mov	r9, r2
    5ffe:	461f      	mov	r7, r3
    6000:	688a      	ldr	r2, [r1, #8]
    6002:	690b      	ldr	r3, [r1, #16]
    6004:	f8dd 8020 	ldr.w	r8, [sp, #32]
    6008:	4293      	cmp	r3, r2
    600a:	bfb8      	it	lt
    600c:	4613      	movlt	r3, r2
    600e:	f8c9 3000 	str.w	r3, [r9]
    6012:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
    6016:	4606      	mov	r6, r0
    6018:	460c      	mov	r4, r1
    601a:	b112      	cbz	r2, 6022 <_printf_common+0x2a>
    601c:	3301      	adds	r3, #1
    601e:	f8c9 3000 	str.w	r3, [r9]
    6022:	6823      	ldr	r3, [r4, #0]
    6024:	0699      	lsls	r1, r3, #26
    6026:	bf42      	ittt	mi
    6028:	f8d9 3000 	ldrmi.w	r3, [r9]
    602c:	3302      	addmi	r3, #2
    602e:	f8c9 3000 	strmi.w	r3, [r9]
    6032:	6825      	ldr	r5, [r4, #0]
    6034:	f015 0506 	ands.w	r5, r5, #6
    6038:	d107      	bne.n	604a <_printf_common+0x52>
    603a:	f104 0a19 	add.w	sl, r4, #25
    603e:	68e3      	ldr	r3, [r4, #12]
    6040:	f8d9 2000 	ldr.w	r2, [r9]
    6044:	1a9b      	subs	r3, r3, r2
    6046:	42ab      	cmp	r3, r5
    6048:	dc28      	bgt.n	609c <_printf_common+0xa4>
    604a:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
    604e:	6822      	ldr	r2, [r4, #0]
    6050:	3300      	adds	r3, #0
    6052:	bf18      	it	ne
    6054:	2301      	movne	r3, #1
    6056:	0692      	lsls	r2, r2, #26
    6058:	d42d      	bmi.n	60b6 <_printf_common+0xbe>
    605a:	f104 0243 	add.w	r2, r4, #67	; 0x43
    605e:	4639      	mov	r1, r7
    6060:	4630      	mov	r0, r6
    6062:	47c0      	blx	r8
    6064:	3001      	adds	r0, #1
    6066:	d020      	beq.n	60aa <_printf_common+0xb2>
    6068:	6823      	ldr	r3, [r4, #0]
    606a:	68e5      	ldr	r5, [r4, #12]
    606c:	f8d9 2000 	ldr.w	r2, [r9]
    6070:	f003 0306 	and.w	r3, r3, #6
    6074:	2b04      	cmp	r3, #4
    6076:	bf08      	it	eq
    6078:	1aad      	subeq	r5, r5, r2
    607a:	68a3      	ldr	r3, [r4, #8]
    607c:	6922      	ldr	r2, [r4, #16]
    607e:	bf0c      	ite	eq
    6080:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
    6084:	2500      	movne	r5, #0
    6086:	4293      	cmp	r3, r2
    6088:	bfc4      	itt	gt
    608a:	1a9b      	subgt	r3, r3, r2
    608c:	18ed      	addgt	r5, r5, r3
    608e:	f04f 0900 	mov.w	r9, #0
    6092:	341a      	adds	r4, #26
    6094:	454d      	cmp	r5, r9
    6096:	d11a      	bne.n	60ce <_printf_common+0xd6>
    6098:	2000      	movs	r0, #0
    609a:	e008      	b.n	60ae <_printf_common+0xb6>
    609c:	2301      	movs	r3, #1
    609e:	4652      	mov	r2, sl
    60a0:	4639      	mov	r1, r7
    60a2:	4630      	mov	r0, r6
    60a4:	47c0      	blx	r8
    60a6:	3001      	adds	r0, #1
    60a8:	d103      	bne.n	60b2 <_printf_common+0xba>
    60aa:	f04f 30ff 	mov.w	r0, #4294967295
    60ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    60b2:	3501      	adds	r5, #1
    60b4:	e7c3      	b.n	603e <_printf_common+0x46>
    60b6:	18e1      	adds	r1, r4, r3
    60b8:	1c5a      	adds	r2, r3, #1
    60ba:	2030      	movs	r0, #48	; 0x30
    60bc:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
    60c0:	4422      	add	r2, r4
    60c2:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
    60c6:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
    60ca:	3302      	adds	r3, #2
    60cc:	e7c5      	b.n	605a <_printf_common+0x62>
    60ce:	2301      	movs	r3, #1
    60d0:	4622      	mov	r2, r4
    60d2:	4639      	mov	r1, r7
    60d4:	4630      	mov	r0, r6
    60d6:	47c0      	blx	r8
    60d8:	3001      	adds	r0, #1
    60da:	d0e6      	beq.n	60aa <_printf_common+0xb2>
    60dc:	f109 0901 	add.w	r9, r9, #1
    60e0:	e7d8      	b.n	6094 <_printf_common+0x9c>
    60e2:	Address 0x000060e2 is out of bounds.


000060e4 <_printf_i>:
_printf_i():
    60e4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    60e8:	4606      	mov	r6, r0
    60ea:	460c      	mov	r4, r1
    60ec:	f101 0043 	add.w	r0, r1, #67	; 0x43
    60f0:	7e09      	ldrb	r1, [r1, #24]
    60f2:	b085      	sub	sp, #20
    60f4:	296e      	cmp	r1, #110	; 0x6e
    60f6:	4698      	mov	r8, r3
    60f8:	4617      	mov	r7, r2
    60fa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    60fc:	f000 80ba 	beq.w	6274 <_printf_i+0x190>
    6100:	d824      	bhi.n	614c <_printf_i+0x68>
    6102:	2963      	cmp	r1, #99	; 0x63
    6104:	d039      	beq.n	617a <_printf_i+0x96>
    6106:	d80a      	bhi.n	611e <_printf_i+0x3a>
    6108:	2900      	cmp	r1, #0
    610a:	f000 80c3 	beq.w	6294 <_printf_i+0x1b0>
    610e:	2958      	cmp	r1, #88	; 0x58
    6110:	f000 8091 	beq.w	6236 <_printf_i+0x152>
    6114:	f104 0542 	add.w	r5, r4, #66	; 0x42
    6118:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
    611c:	e035      	b.n	618a <_printf_i+0xa6>
    611e:	2964      	cmp	r1, #100	; 0x64
    6120:	d001      	beq.n	6126 <_printf_i+0x42>
    6122:	2969      	cmp	r1, #105	; 0x69
    6124:	d1f6      	bne.n	6114 <_printf_i+0x30>
    6126:	6825      	ldr	r5, [r4, #0]
    6128:	681a      	ldr	r2, [r3, #0]
    612a:	f015 0f80 	tst.w	r5, #128	; 0x80
    612e:	f102 0104 	add.w	r1, r2, #4
    6132:	d02c      	beq.n	618e <_printf_i+0xaa>
    6134:	6812      	ldr	r2, [r2, #0]
    6136:	6019      	str	r1, [r3, #0]
    6138:	2a00      	cmp	r2, #0
    613a:	da03      	bge.n	6144 <_printf_i+0x60>
    613c:	232d      	movs	r3, #45	; 0x2d
    613e:	4252      	negs	r2, r2
    6140:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
    6144:	f8df c1bc 	ldr.w	ip, [pc, #444]	; 6304 <_printf_i+0x220>
    6148:	230a      	movs	r3, #10
    614a:	e03f      	b.n	61cc <_printf_i+0xe8>
    614c:	2973      	cmp	r1, #115	; 0x73
    614e:	f000 80a5 	beq.w	629c <_printf_i+0x1b8>
    6152:	d808      	bhi.n	6166 <_printf_i+0x82>
    6154:	296f      	cmp	r1, #111	; 0x6f
    6156:	d021      	beq.n	619c <_printf_i+0xb8>
    6158:	2970      	cmp	r1, #112	; 0x70
    615a:	d1db      	bne.n	6114 <_printf_i+0x30>
    615c:	6822      	ldr	r2, [r4, #0]
    615e:	f042 0220 	orr.w	r2, r2, #32
    6162:	6022      	str	r2, [r4, #0]
    6164:	e003      	b.n	616e <_printf_i+0x8a>
    6166:	2975      	cmp	r1, #117	; 0x75
    6168:	d018      	beq.n	619c <_printf_i+0xb8>
    616a:	2978      	cmp	r1, #120	; 0x78
    616c:	d1d2      	bne.n	6114 <_printf_i+0x30>
    616e:	2278      	movs	r2, #120	; 0x78
    6170:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
    6174:	f8df c190 	ldr.w	ip, [pc, #400]	; 6308 <_printf_i+0x224>
    6178:	e061      	b.n	623e <_printf_i+0x15a>
    617a:	681a      	ldr	r2, [r3, #0]
    617c:	1d11      	adds	r1, r2, #4
    617e:	6019      	str	r1, [r3, #0]
    6180:	6813      	ldr	r3, [r2, #0]
    6182:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    6186:	f104 0542 	add.w	r5, r4, #66	; 0x42
    618a:	2301      	movs	r3, #1
    618c:	e093      	b.n	62b6 <_printf_i+0x1d2>
    618e:	6812      	ldr	r2, [r2, #0]
    6190:	6019      	str	r1, [r3, #0]
    6192:	f015 0f40 	tst.w	r5, #64	; 0x40
    6196:	bf18      	it	ne
    6198:	b212      	sxthne	r2, r2
    619a:	e7cd      	b.n	6138 <_printf_i+0x54>
    619c:	f8d4 c000 	ldr.w	ip, [r4]
    61a0:	681a      	ldr	r2, [r3, #0]
    61a2:	f01c 0f80 	tst.w	ip, #128	; 0x80
    61a6:	f102 0504 	add.w	r5, r2, #4
    61aa:	601d      	str	r5, [r3, #0]
    61ac:	d001      	beq.n	61b2 <_printf_i+0xce>
    61ae:	6812      	ldr	r2, [r2, #0]
    61b0:	e003      	b.n	61ba <_printf_i+0xd6>
    61b2:	f01c 0f40 	tst.w	ip, #64	; 0x40
    61b6:	d0fa      	beq.n	61ae <_printf_i+0xca>
    61b8:	8812      	ldrh	r2, [r2, #0]
    61ba:	f8df c148 	ldr.w	ip, [pc, #328]	; 6304 <_printf_i+0x220>
    61be:	296f      	cmp	r1, #111	; 0x6f
    61c0:	bf0c      	ite	eq
    61c2:	2308      	moveq	r3, #8
    61c4:	230a      	movne	r3, #10
    61c6:	2100      	movs	r1, #0
    61c8:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
    61cc:	6865      	ldr	r5, [r4, #4]
    61ce:	60a5      	str	r5, [r4, #8]
    61d0:	2d00      	cmp	r5, #0
    61d2:	bfa2      	ittt	ge
    61d4:	6821      	ldrge	r1, [r4, #0]
    61d6:	f021 0104 	bicge.w	r1, r1, #4
    61da:	6021      	strge	r1, [r4, #0]
    61dc:	b90a      	cbnz	r2, 61e2 <_printf_i+0xfe>
    61de:	2d00      	cmp	r5, #0
    61e0:	d046      	beq.n	6270 <_printf_i+0x18c>
    61e2:	4605      	mov	r5, r0
    61e4:	fbb2 f1f3 	udiv	r1, r2, r3
    61e8:	fb03 2e11 	mls	lr, r3, r1, r2
    61ec:	4293      	cmp	r3, r2
    61ee:	f81c e00e 	ldrb.w	lr, [ip, lr]
    61f2:	f805 ed01 	strb.w	lr, [r5, #-1]!
    61f6:	d939      	bls.n	626c <_printf_i+0x188>
    61f8:	2b08      	cmp	r3, #8
    61fa:	d10b      	bne.n	6214 <_printf_i+0x130>
    61fc:	6823      	ldr	r3, [r4, #0]
    61fe:	07da      	lsls	r2, r3, #31
    6200:	d508      	bpl.n	6214 <_printf_i+0x130>
    6202:	6923      	ldr	r3, [r4, #16]
    6204:	6862      	ldr	r2, [r4, #4]
    6206:	429a      	cmp	r2, r3
    6208:	bfde      	ittt	le
    620a:	2330      	movle	r3, #48	; 0x30
    620c:	f805 3c01 	strble.w	r3, [r5, #-1]
    6210:	f105 35ff 	addle.w	r5, r5, #4294967295
    6214:	1b40      	subs	r0, r0, r5
    6216:	6120      	str	r0, [r4, #16]
    6218:	f8cd 8000 	str.w	r8, [sp]
    621c:	463b      	mov	r3, r7
    621e:	aa03      	add	r2, sp, #12
    6220:	4621      	mov	r1, r4
    6222:	4630      	mov	r0, r6
    6224:	f7ff fee8 	bl	5ff8 <_printf_common>
    6228:	3001      	adds	r0, #1
    622a:	d149      	bne.n	62c0 <_printf_i+0x1dc>
    622c:	f04f 30ff 	mov.w	r0, #4294967295
    6230:	b005      	add	sp, #20
    6232:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    6236:	f8df c0cc 	ldr.w	ip, [pc, #204]	; 6304 <_printf_i+0x220>
    623a:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
    623e:	681d      	ldr	r5, [r3, #0]
    6240:	6821      	ldr	r1, [r4, #0]
    6242:	f855 2b04 	ldr.w	r2, [r5], #4
    6246:	601d      	str	r5, [r3, #0]
    6248:	060d      	lsls	r5, r1, #24
    624a:	d50b      	bpl.n	6264 <_printf_i+0x180>
    624c:	07cd      	lsls	r5, r1, #31
    624e:	bf44      	itt	mi
    6250:	f041 0120 	orrmi.w	r1, r1, #32
    6254:	6021      	strmi	r1, [r4, #0]
    6256:	b91a      	cbnz	r2, 6260 <_printf_i+0x17c>
    6258:	6823      	ldr	r3, [r4, #0]
    625a:	f023 0320 	bic.w	r3, r3, #32
    625e:	6023      	str	r3, [r4, #0]
    6260:	2310      	movs	r3, #16
    6262:	e7b0      	b.n	61c6 <_printf_i+0xe2>
    6264:	064b      	lsls	r3, r1, #25
    6266:	bf48      	it	mi
    6268:	b292      	uxthmi	r2, r2
    626a:	e7ef      	b.n	624c <_printf_i+0x168>
    626c:	460a      	mov	r2, r1
    626e:	e7b9      	b.n	61e4 <_printf_i+0x100>
    6270:	4605      	mov	r5, r0
    6272:	e7c1      	b.n	61f8 <_printf_i+0x114>
    6274:	681a      	ldr	r2, [r3, #0]
    6276:	f8d4 c000 	ldr.w	ip, [r4]
    627a:	6961      	ldr	r1, [r4, #20]
    627c:	1d15      	adds	r5, r2, #4
    627e:	601d      	str	r5, [r3, #0]
    6280:	f01c 0f80 	tst.w	ip, #128	; 0x80
    6284:	6813      	ldr	r3, [r2, #0]
    6286:	d001      	beq.n	628c <_printf_i+0x1a8>
    6288:	6019      	str	r1, [r3, #0]
    628a:	e003      	b.n	6294 <_printf_i+0x1b0>
    628c:	f01c 0f40 	tst.w	ip, #64	; 0x40
    6290:	d0fa      	beq.n	6288 <_printf_i+0x1a4>
    6292:	8019      	strh	r1, [r3, #0]
    6294:	2300      	movs	r3, #0
    6296:	6123      	str	r3, [r4, #16]
    6298:	4605      	mov	r5, r0
    629a:	e7bd      	b.n	6218 <_printf_i+0x134>
    629c:	681a      	ldr	r2, [r3, #0]
    629e:	1d11      	adds	r1, r2, #4
    62a0:	6019      	str	r1, [r3, #0]
    62a2:	6815      	ldr	r5, [r2, #0]
    62a4:	6862      	ldr	r2, [r4, #4]
    62a6:	2100      	movs	r1, #0
    62a8:	4628      	mov	r0, r5
    62aa:	f002 ffe1 	bl	9270 <memchr>
    62ae:	b108      	cbz	r0, 62b4 <_printf_i+0x1d0>
    62b0:	1b40      	subs	r0, r0, r5
    62b2:	6060      	str	r0, [r4, #4]
    62b4:	6863      	ldr	r3, [r4, #4]
    62b6:	6123      	str	r3, [r4, #16]
    62b8:	2300      	movs	r3, #0
    62ba:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
    62be:	e7ab      	b.n	6218 <_printf_i+0x134>
    62c0:	6923      	ldr	r3, [r4, #16]
    62c2:	462a      	mov	r2, r5
    62c4:	4639      	mov	r1, r7
    62c6:	4630      	mov	r0, r6
    62c8:	47c0      	blx	r8
    62ca:	3001      	adds	r0, #1
    62cc:	d0ae      	beq.n	622c <_printf_i+0x148>
    62ce:	6823      	ldr	r3, [r4, #0]
    62d0:	079b      	lsls	r3, r3, #30
    62d2:	d413      	bmi.n	62fc <_printf_i+0x218>
    62d4:	68e0      	ldr	r0, [r4, #12]
    62d6:	9b03      	ldr	r3, [sp, #12]
    62d8:	4298      	cmp	r0, r3
    62da:	bfb8      	it	lt
    62dc:	4618      	movlt	r0, r3
    62de:	e7a7      	b.n	6230 <_printf_i+0x14c>
    62e0:	2301      	movs	r3, #1
    62e2:	464a      	mov	r2, r9
    62e4:	4639      	mov	r1, r7
    62e6:	4630      	mov	r0, r6
    62e8:	47c0      	blx	r8
    62ea:	3001      	adds	r0, #1
    62ec:	d09e      	beq.n	622c <_printf_i+0x148>
    62ee:	3501      	adds	r5, #1
    62f0:	68e3      	ldr	r3, [r4, #12]
    62f2:	9a03      	ldr	r2, [sp, #12]
    62f4:	1a9b      	subs	r3, r3, r2
    62f6:	42ab      	cmp	r3, r5
    62f8:	dcf2      	bgt.n	62e0 <_printf_i+0x1fc>
    62fa:	e7eb      	b.n	62d4 <_printf_i+0x1f0>
    62fc:	2500      	movs	r5, #0
    62fe:	f104 0919 	add.w	r9, r4, #25
    6302:	e7f5      	b.n	62f0 <_printf_i+0x20c>
    6304:	0000be49 	.word	0x0000be49
    6308:	0000be5a 	.word	0x0000be5a

0000630c <_scanf_float>:
_scanf_float():
    630c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6310:	b087      	sub	sp, #28
    6312:	4617      	mov	r7, r2
    6314:	9303      	str	r3, [sp, #12]
    6316:	688b      	ldr	r3, [r1, #8]
    6318:	1e5a      	subs	r2, r3, #1
    631a:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
    631e:	bf83      	ittte	hi
    6320:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
    6324:	195b      	addhi	r3, r3, r5
    6326:	9302      	strhi	r3, [sp, #8]
    6328:	2300      	movls	r3, #0
    632a:	bf86      	itte	hi
    632c:	f240 135d 	movwhi	r3, #349	; 0x15d
    6330:	608b      	strhi	r3, [r1, #8]
    6332:	9302      	strls	r3, [sp, #8]
    6334:	680b      	ldr	r3, [r1, #0]
    6336:	468b      	mov	fp, r1
    6338:	2500      	movs	r5, #0
    633a:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
    633e:	f84b 3b1c 	str.w	r3, [fp], #28
    6342:	e9cd 5504 	strd	r5, r5, [sp, #16]
    6346:	4681      	mov	r9, r0
    6348:	460c      	mov	r4, r1
    634a:	465e      	mov	r6, fp
    634c:	46aa      	mov	sl, r5
    634e:	46a8      	mov	r8, r5
    6350:	9501      	str	r5, [sp, #4]
    6352:	68a2      	ldr	r2, [r4, #8]
    6354:	b182      	cbz	r2, 6378 <_scanf_float+0x6c>
    6356:	683b      	ldr	r3, [r7, #0]
    6358:	781b      	ldrb	r3, [r3, #0]
    635a:	2b49      	cmp	r3, #73	; 0x49
    635c:	d075      	beq.n	644a <_scanf_float+0x13e>
    635e:	d84f      	bhi.n	6400 <_scanf_float+0xf4>
    6360:	2b39      	cmp	r3, #57	; 0x39
    6362:	d841      	bhi.n	63e8 <_scanf_float+0xdc>
    6364:	2b31      	cmp	r3, #49	; 0x31
    6366:	f080 8087 	bcs.w	6478 <_scanf_float+0x16c>
    636a:	2b2d      	cmp	r3, #45	; 0x2d
    636c:	f000 808f 	beq.w	648e <_scanf_float+0x182>
    6370:	d817      	bhi.n	63a2 <_scanf_float+0x96>
    6372:	2b2b      	cmp	r3, #43	; 0x2b
    6374:	f000 808b 	beq.w	648e <_scanf_float+0x182>
    6378:	f1b8 0f00 	cmp.w	r8, #0
    637c:	d003      	beq.n	6386 <_scanf_float+0x7a>
    637e:	6823      	ldr	r3, [r4, #0]
    6380:	f423 7380 	bic.w	r3, r3, #256	; 0x100
    6384:	6023      	str	r3, [r4, #0]
    6386:	f10a 3aff 	add.w	sl, sl, #4294967295
    638a:	f1ba 0f01 	cmp.w	sl, #1
    638e:	f200 80dd 	bhi.w	654c <_scanf_float+0x240>
    6392:	455e      	cmp	r6, fp
    6394:	f200 80cf 	bhi.w	6536 <_scanf_float+0x22a>
    6398:	2501      	movs	r5, #1
    639a:	4628      	mov	r0, r5
    639c:	b007      	add	sp, #28
    639e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    63a2:	2b2e      	cmp	r3, #46	; 0x2e
    63a4:	f000 8093 	beq.w	64ce <_scanf_float+0x1c2>
    63a8:	2b30      	cmp	r3, #48	; 0x30
    63aa:	d1e5      	bne.n	6378 <_scanf_float+0x6c>
    63ac:	6821      	ldr	r1, [r4, #0]
    63ae:	05c8      	lsls	r0, r1, #23
    63b0:	d562      	bpl.n	6478 <_scanf_float+0x16c>
    63b2:	9b02      	ldr	r3, [sp, #8]
    63b4:	f021 0180 	bic.w	r1, r1, #128	; 0x80
    63b8:	6021      	str	r1, [r4, #0]
    63ba:	f108 0801 	add.w	r8, r8, #1
    63be:	b11b      	cbz	r3, 63c8 <_scanf_float+0xbc>
    63c0:	3b01      	subs	r3, #1
    63c2:	3201      	adds	r2, #1
    63c4:	9302      	str	r3, [sp, #8]
    63c6:	60a2      	str	r2, [r4, #8]
    63c8:	68a3      	ldr	r3, [r4, #8]
    63ca:	3b01      	subs	r3, #1
    63cc:	60a3      	str	r3, [r4, #8]
    63ce:	6923      	ldr	r3, [r4, #16]
    63d0:	3301      	adds	r3, #1
    63d2:	6123      	str	r3, [r4, #16]
    63d4:	687b      	ldr	r3, [r7, #4]
    63d6:	3b01      	subs	r3, #1
    63d8:	2b00      	cmp	r3, #0
    63da:	607b      	str	r3, [r7, #4]
    63dc:	f340 80a2 	ble.w	6524 <_scanf_float+0x218>
    63e0:	683b      	ldr	r3, [r7, #0]
    63e2:	3301      	adds	r3, #1
    63e4:	603b      	str	r3, [r7, #0]
    63e6:	e7b4      	b.n	6352 <_scanf_float+0x46>
    63e8:	2b45      	cmp	r3, #69	; 0x45
    63ea:	d07a      	beq.n	64e2 <_scanf_float+0x1d6>
    63ec:	2b46      	cmp	r3, #70	; 0x46
    63ee:	d064      	beq.n	64ba <_scanf_float+0x1ae>
    63f0:	2b41      	cmp	r3, #65	; 0x41
    63f2:	d1c1      	bne.n	6378 <_scanf_float+0x6c>
    63f4:	f1ba 0f01 	cmp.w	sl, #1
    63f8:	d1be      	bne.n	6378 <_scanf_float+0x6c>
    63fa:	f04f 0a02 	mov.w	sl, #2
    63fe:	e043      	b.n	6488 <_scanf_float+0x17c>
    6400:	2b65      	cmp	r3, #101	; 0x65
    6402:	d06e      	beq.n	64e2 <_scanf_float+0x1d6>
    6404:	d81a      	bhi.n	643c <_scanf_float+0x130>
    6406:	2b54      	cmp	r3, #84	; 0x54
    6408:	d05c      	beq.n	64c4 <_scanf_float+0x1b8>
    640a:	d813      	bhi.n	6434 <_scanf_float+0x128>
    640c:	2b4e      	cmp	r3, #78	; 0x4e
    640e:	d1b3      	bne.n	6378 <_scanf_float+0x6c>
    6410:	f1ba 0f00 	cmp.w	sl, #0
    6414:	d142      	bne.n	649c <_scanf_float+0x190>
    6416:	f1b8 0f00 	cmp.w	r8, #0
    641a:	d142      	bne.n	64a2 <_scanf_float+0x196>
    641c:	6822      	ldr	r2, [r4, #0]
    641e:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
    6422:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
    6426:	d13c      	bne.n	64a2 <_scanf_float+0x196>
    6428:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
    642c:	6022      	str	r2, [r4, #0]
    642e:	f04f 0a01 	mov.w	sl, #1
    6432:	e029      	b.n	6488 <_scanf_float+0x17c>
    6434:	2b59      	cmp	r3, #89	; 0x59
    6436:	d01b      	beq.n	6470 <_scanf_float+0x164>
    6438:	2b61      	cmp	r3, #97	; 0x61
    643a:	e7da      	b.n	63f2 <_scanf_float+0xe6>
    643c:	2b6e      	cmp	r3, #110	; 0x6e
    643e:	d0e7      	beq.n	6410 <_scanf_float+0x104>
    6440:	d812      	bhi.n	6468 <_scanf_float+0x15c>
    6442:	2b66      	cmp	r3, #102	; 0x66
    6444:	d039      	beq.n	64ba <_scanf_float+0x1ae>
    6446:	2b69      	cmp	r3, #105	; 0x69
    6448:	d196      	bne.n	6378 <_scanf_float+0x6c>
    644a:	bb95      	cbnz	r5, 64b2 <_scanf_float+0x1a6>
    644c:	f1b8 0f00 	cmp.w	r8, #0
    6450:	d195      	bne.n	637e <_scanf_float+0x72>
    6452:	6822      	ldr	r2, [r4, #0]
    6454:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
    6458:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
    645c:	d193      	bne.n	6386 <_scanf_float+0x7a>
    645e:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
    6462:	6022      	str	r2, [r4, #0]
    6464:	2501      	movs	r5, #1
    6466:	e00f      	b.n	6488 <_scanf_float+0x17c>
    6468:	2b74      	cmp	r3, #116	; 0x74
    646a:	d02b      	beq.n	64c4 <_scanf_float+0x1b8>
    646c:	2b79      	cmp	r3, #121	; 0x79
    646e:	d183      	bne.n	6378 <_scanf_float+0x6c>
    6470:	2d07      	cmp	r5, #7
    6472:	d181      	bne.n	6378 <_scanf_float+0x6c>
    6474:	2508      	movs	r5, #8
    6476:	e007      	b.n	6488 <_scanf_float+0x17c>
    6478:	eb1a 0f05 	cmn.w	sl, r5
    647c:	f47f af7c 	bne.w	6378 <_scanf_float+0x6c>
    6480:	6822      	ldr	r2, [r4, #0]
    6482:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
    6486:	6022      	str	r2, [r4, #0]
    6488:	f806 3b01 	strb.w	r3, [r6], #1
    648c:	e79c      	b.n	63c8 <_scanf_float+0xbc>
    648e:	6822      	ldr	r2, [r4, #0]
    6490:	0610      	lsls	r0, r2, #24
    6492:	f57f af71 	bpl.w	6378 <_scanf_float+0x6c>
    6496:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    649a:	e7f4      	b.n	6486 <_scanf_float+0x17a>
    649c:	f1ba 0f02 	cmp.w	sl, #2
    64a0:	d03d      	beq.n	651e <_scanf_float+0x212>
    64a2:	2d01      	cmp	r5, #1
    64a4:	d002      	beq.n	64ac <_scanf_float+0x1a0>
    64a6:	2d04      	cmp	r5, #4
    64a8:	f47f af66 	bne.w	6378 <_scanf_float+0x6c>
    64ac:	3501      	adds	r5, #1
    64ae:	b2ed      	uxtb	r5, r5
    64b0:	e7ea      	b.n	6488 <_scanf_float+0x17c>
    64b2:	2d03      	cmp	r5, #3
    64b4:	d0fa      	beq.n	64ac <_scanf_float+0x1a0>
    64b6:	2d05      	cmp	r5, #5
    64b8:	e7f6      	b.n	64a8 <_scanf_float+0x19c>
    64ba:	2d02      	cmp	r5, #2
    64bc:	f47f af5c 	bne.w	6378 <_scanf_float+0x6c>
    64c0:	2503      	movs	r5, #3
    64c2:	e7e1      	b.n	6488 <_scanf_float+0x17c>
    64c4:	2d06      	cmp	r5, #6
    64c6:	f47f af57 	bne.w	6378 <_scanf_float+0x6c>
    64ca:	2507      	movs	r5, #7
    64cc:	e7dc      	b.n	6488 <_scanf_float+0x17c>
    64ce:	6822      	ldr	r2, [r4, #0]
    64d0:	0591      	lsls	r1, r2, #22
    64d2:	f57f af51 	bpl.w	6378 <_scanf_float+0x6c>
    64d6:	f422 7220 	bic.w	r2, r2, #640	; 0x280
    64da:	6022      	str	r2, [r4, #0]
    64dc:	f8cd 8004 	str.w	r8, [sp, #4]
    64e0:	e7d2      	b.n	6488 <_scanf_float+0x17c>
    64e2:	6822      	ldr	r2, [r4, #0]
    64e4:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
    64e8:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
    64ec:	d006      	beq.n	64fc <_scanf_float+0x1f0>
    64ee:	0550      	lsls	r0, r2, #21
    64f0:	f57f af42 	bpl.w	6378 <_scanf_float+0x6c>
    64f4:	f1b8 0f00 	cmp.w	r8, #0
    64f8:	f43f af45 	beq.w	6386 <_scanf_float+0x7a>
    64fc:	0591      	lsls	r1, r2, #22
    64fe:	bf58      	it	pl
    6500:	9901      	ldrpl	r1, [sp, #4]
    6502:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
    6506:	bf58      	it	pl
    6508:	eba8 0101 	subpl.w	r1, r8, r1
    650c:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
    6510:	bf58      	it	pl
    6512:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
    6516:	6022      	str	r2, [r4, #0]
    6518:	f04f 0800 	mov.w	r8, #0
    651c:	e7b4      	b.n	6488 <_scanf_float+0x17c>
    651e:	f04f 0a03 	mov.w	sl, #3
    6522:	e7b1      	b.n	6488 <_scanf_float+0x17c>
    6524:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
    6528:	4639      	mov	r1, r7
    652a:	4648      	mov	r0, r9
    652c:	4798      	blx	r3
    652e:	2800      	cmp	r0, #0
    6530:	f43f af0f 	beq.w	6352 <_scanf_float+0x46>
    6534:	e720      	b.n	6378 <_scanf_float+0x6c>
    6536:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    653a:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
    653e:	463a      	mov	r2, r7
    6540:	4648      	mov	r0, r9
    6542:	4798      	blx	r3
    6544:	6923      	ldr	r3, [r4, #16]
    6546:	3b01      	subs	r3, #1
    6548:	6123      	str	r3, [r4, #16]
    654a:	e722      	b.n	6392 <_scanf_float+0x86>
    654c:	1e6b      	subs	r3, r5, #1
    654e:	2b06      	cmp	r3, #6
    6550:	d825      	bhi.n	659e <_scanf_float+0x292>
    6552:	2d02      	cmp	r5, #2
    6554:	d836      	bhi.n	65c4 <_scanf_float+0x2b8>
    6556:	455e      	cmp	r6, fp
    6558:	f67f af1e 	bls.w	6398 <_scanf_float+0x8c>
    655c:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    6560:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
    6564:	463a      	mov	r2, r7
    6566:	4648      	mov	r0, r9
    6568:	4798      	blx	r3
    656a:	6923      	ldr	r3, [r4, #16]
    656c:	3b01      	subs	r3, #1
    656e:	6123      	str	r3, [r4, #16]
    6570:	e7f1      	b.n	6556 <_scanf_float+0x24a>
    6572:	9802      	ldr	r0, [sp, #8]
    6574:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    6578:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
    657c:	9002      	str	r0, [sp, #8]
    657e:	463a      	mov	r2, r7
    6580:	4648      	mov	r0, r9
    6582:	4798      	blx	r3
    6584:	6923      	ldr	r3, [r4, #16]
    6586:	3b01      	subs	r3, #1
    6588:	6123      	str	r3, [r4, #16]
    658a:	f10a 3aff 	add.w	sl, sl, #4294967295
    658e:	fa5f fa8a 	uxtb.w	sl, sl
    6592:	f1ba 0f02 	cmp.w	sl, #2
    6596:	d1ec      	bne.n	6572 <_scanf_float+0x266>
    6598:	3d03      	subs	r5, #3
    659a:	b2ed      	uxtb	r5, r5
    659c:	1b76      	subs	r6, r6, r5
    659e:	6823      	ldr	r3, [r4, #0]
    65a0:	05da      	lsls	r2, r3, #23
    65a2:	d52f      	bpl.n	6604 <_scanf_float+0x2f8>
    65a4:	055b      	lsls	r3, r3, #21
    65a6:	d510      	bpl.n	65ca <_scanf_float+0x2be>
    65a8:	455e      	cmp	r6, fp
    65aa:	f67f aef5 	bls.w	6398 <_scanf_float+0x8c>
    65ae:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    65b2:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
    65b6:	463a      	mov	r2, r7
    65b8:	4648      	mov	r0, r9
    65ba:	4798      	blx	r3
    65bc:	6923      	ldr	r3, [r4, #16]
    65be:	3b01      	subs	r3, #1
    65c0:	6123      	str	r3, [r4, #16]
    65c2:	e7f1      	b.n	65a8 <_scanf_float+0x29c>
    65c4:	46aa      	mov	sl, r5
    65c6:	9602      	str	r6, [sp, #8]
    65c8:	e7df      	b.n	658a <_scanf_float+0x27e>
    65ca:	f816 1c01 	ldrb.w	r1, [r6, #-1]
    65ce:	6923      	ldr	r3, [r4, #16]
    65d0:	2965      	cmp	r1, #101	; 0x65
    65d2:	f103 33ff 	add.w	r3, r3, #4294967295
    65d6:	f106 35ff 	add.w	r5, r6, #4294967295
    65da:	6123      	str	r3, [r4, #16]
    65dc:	d00c      	beq.n	65f8 <_scanf_float+0x2ec>
    65de:	2945      	cmp	r1, #69	; 0x45
    65e0:	d00a      	beq.n	65f8 <_scanf_float+0x2ec>
    65e2:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    65e6:	463a      	mov	r2, r7
    65e8:	4648      	mov	r0, r9
    65ea:	4798      	blx	r3
    65ec:	6923      	ldr	r3, [r4, #16]
    65ee:	f816 1c02 	ldrb.w	r1, [r6, #-2]
    65f2:	3b01      	subs	r3, #1
    65f4:	1eb5      	subs	r5, r6, #2
    65f6:	6123      	str	r3, [r4, #16]
    65f8:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    65fc:	463a      	mov	r2, r7
    65fe:	4648      	mov	r0, r9
    6600:	4798      	blx	r3
    6602:	462e      	mov	r6, r5
    6604:	6825      	ldr	r5, [r4, #0]
    6606:	f015 0510 	ands.w	r5, r5, #16
    660a:	d158      	bne.n	66be <_scanf_float+0x3b2>
    660c:	7035      	strb	r5, [r6, #0]
    660e:	6823      	ldr	r3, [r4, #0]
    6610:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
    6614:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
    6618:	d11c      	bne.n	6654 <_scanf_float+0x348>
    661a:	9b01      	ldr	r3, [sp, #4]
    661c:	4543      	cmp	r3, r8
    661e:	eba3 0208 	sub.w	r2, r3, r8
    6622:	d124      	bne.n	666e <_scanf_float+0x362>
    6624:	2200      	movs	r2, #0
    6626:	4659      	mov	r1, fp
    6628:	4648      	mov	r0, r9
    662a:	f001 f861 	bl	76f0 <_strtod_r>
    662e:	9b03      	ldr	r3, [sp, #12]
    6630:	6821      	ldr	r1, [r4, #0]
    6632:	681b      	ldr	r3, [r3, #0]
    6634:	f011 0f02 	tst.w	r1, #2
    6638:	ec57 6b10 	vmov	r6, r7, d0
    663c:	f103 0204 	add.w	r2, r3, #4
    6640:	d020      	beq.n	6684 <_scanf_float+0x378>
    6642:	9903      	ldr	r1, [sp, #12]
    6644:	600a      	str	r2, [r1, #0]
    6646:	681b      	ldr	r3, [r3, #0]
    6648:	e9c3 6700 	strd	r6, r7, [r3]
    664c:	68e3      	ldr	r3, [r4, #12]
    664e:	3301      	adds	r3, #1
    6650:	60e3      	str	r3, [r4, #12]
    6652:	e6a2      	b.n	639a <_scanf_float+0x8e>
    6654:	9b04      	ldr	r3, [sp, #16]
    6656:	2b00      	cmp	r3, #0
    6658:	d0e4      	beq.n	6624 <_scanf_float+0x318>
    665a:	9905      	ldr	r1, [sp, #20]
    665c:	230a      	movs	r3, #10
    665e:	462a      	mov	r2, r5
    6660:	3101      	adds	r1, #1
    6662:	4648      	mov	r0, r9
    6664:	f001 f8c2 	bl	77ec <_strtol_r>
    6668:	9b04      	ldr	r3, [sp, #16]
    666a:	9e05      	ldr	r6, [sp, #20]
    666c:	1ac2      	subs	r2, r0, r3
    666e:	f204 136f 	addw	r3, r4, #367	; 0x16f
    6672:	429e      	cmp	r6, r3
    6674:	bf28      	it	cs
    6676:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
    667a:	4912      	ldr	r1, [pc, #72]	; (66c4 <_scanf_float+0x3b8>)
    667c:	4630      	mov	r0, r6
    667e:	f000 f99f 	bl	69c0 <siprintf>
    6682:	e7cf      	b.n	6624 <_scanf_float+0x318>
    6684:	f011 0f04 	tst.w	r1, #4
    6688:	9903      	ldr	r1, [sp, #12]
    668a:	600a      	str	r2, [r1, #0]
    668c:	d1db      	bne.n	6646 <_scanf_float+0x33a>
    668e:	f8d3 8000 	ldr.w	r8, [r3]
    6692:	ee10 2a10 	vmov	r2, s0
    6696:	463b      	mov	r3, r7
    6698:	ee10 0a10 	vmov	r0, s0
    669c:	4639      	mov	r1, r7
    669e:	f004 f9f5 	bl	aa8c <__aeabi_dcmpun>
    66a2:	b128      	cbz	r0, 66b0 <_scanf_float+0x3a4>
    66a4:	4808      	ldr	r0, [pc, #32]	; (66c8 <_scanf_float+0x3bc>)
    66a6:	f000 f985 	bl	69b4 <nanf>
    66aa:	ed88 0a00 	vstr	s0, [r8]
    66ae:	e7cd      	b.n	664c <_scanf_float+0x340>
    66b0:	4630      	mov	r0, r6
    66b2:	4639      	mov	r1, r7
    66b4:	f004 fa28 	bl	ab08 <__aeabi_d2f>
    66b8:	f8c8 0000 	str.w	r0, [r8]
    66bc:	e7c6      	b.n	664c <_scanf_float+0x340>
    66be:	2500      	movs	r5, #0
    66c0:	e66b      	b.n	639a <_scanf_float+0x8e>
    66c2:	bf00      	nop
    66c4:	0000be6b 	.word	0x0000be6b
    66c8:	0000b65c 	.word	0x0000b65c

000066cc <iprintf>:
iprintf():
    66cc:	b40f      	push	{r0, r1, r2, r3}
    66ce:	4b0a      	ldr	r3, [pc, #40]	; (66f8 <iprintf+0x2c>)
    66d0:	b513      	push	{r0, r1, r4, lr}
    66d2:	681c      	ldr	r4, [r3, #0]
    66d4:	b124      	cbz	r4, 66e0 <iprintf+0x14>
    66d6:	69a3      	ldr	r3, [r4, #24]
    66d8:	b913      	cbnz	r3, 66e0 <iprintf+0x14>
    66da:	4620      	mov	r0, r4
    66dc:	f002 f92a 	bl	8934 <__sinit>
    66e0:	ab05      	add	r3, sp, #20
    66e2:	9a04      	ldr	r2, [sp, #16]
    66e4:	68a1      	ldr	r1, [r4, #8]
    66e6:	9301      	str	r3, [sp, #4]
    66e8:	4620      	mov	r0, r4
    66ea:	f7ff f8a3 	bl	5834 <_vfiprintf_r>
    66ee:	b002      	add	sp, #8
    66f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    66f4:	b004      	add	sp, #16
    66f6:	4770      	bx	lr
    66f8:	10000164 	.word	0x10000164

000066fc <putchar>:
putchar():
    66fc:	b538      	push	{r3, r4, r5, lr}
    66fe:	4b08      	ldr	r3, [pc, #32]	; (6720 <putchar+0x24>)
    6700:	681c      	ldr	r4, [r3, #0]
    6702:	4605      	mov	r5, r0
    6704:	b124      	cbz	r4, 6710 <putchar+0x14>
    6706:	69a3      	ldr	r3, [r4, #24]
    6708:	b913      	cbnz	r3, 6710 <putchar+0x14>
    670a:	4620      	mov	r0, r4
    670c:	f002 f912 	bl	8934 <__sinit>
    6710:	68a2      	ldr	r2, [r4, #8]
    6712:	4629      	mov	r1, r5
    6714:	4620      	mov	r0, r4
    6716:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    671a:	f003 be73 	b.w	a404 <_putc_r>
    671e:	bf00      	nop
    6720:	10000164 	.word	0x10000164

00006724 <_puts_r>:
_puts_r():
    6724:	b570      	push	{r4, r5, r6, lr}
    6726:	460e      	mov	r6, r1
    6728:	4605      	mov	r5, r0
    672a:	b118      	cbz	r0, 6734 <_puts_r+0x10>
    672c:	6983      	ldr	r3, [r0, #24]
    672e:	b90b      	cbnz	r3, 6734 <_puts_r+0x10>
    6730:	f002 f900 	bl	8934 <__sinit>
    6734:	69ab      	ldr	r3, [r5, #24]
    6736:	68ac      	ldr	r4, [r5, #8]
    6738:	b913      	cbnz	r3, 6740 <_puts_r+0x1c>
    673a:	4628      	mov	r0, r5
    673c:	f002 f8fa 	bl	8934 <__sinit>
    6740:	4b2c      	ldr	r3, [pc, #176]	; (67f4 <_puts_r+0xd0>)
    6742:	429c      	cmp	r4, r3
    6744:	d120      	bne.n	6788 <_puts_r+0x64>
    6746:	686c      	ldr	r4, [r5, #4]
    6748:	6e63      	ldr	r3, [r4, #100]	; 0x64
    674a:	07db      	lsls	r3, r3, #31
    674c:	d405      	bmi.n	675a <_puts_r+0x36>
    674e:	89a3      	ldrh	r3, [r4, #12]
    6750:	0598      	lsls	r0, r3, #22
    6752:	d402      	bmi.n	675a <_puts_r+0x36>
    6754:	6da0      	ldr	r0, [r4, #88]	; 0x58
    6756:	f7fe ff58 	bl	560a <__retarget_lock_acquire_recursive>
    675a:	89a3      	ldrh	r3, [r4, #12]
    675c:	0719      	lsls	r1, r3, #28
    675e:	d51d      	bpl.n	679c <_puts_r+0x78>
    6760:	6923      	ldr	r3, [r4, #16]
    6762:	b1db      	cbz	r3, 679c <_puts_r+0x78>
    6764:	3e01      	subs	r6, #1
    6766:	68a3      	ldr	r3, [r4, #8]
    6768:	f816 1f01 	ldrb.w	r1, [r6, #1]!
    676c:	3b01      	subs	r3, #1
    676e:	60a3      	str	r3, [r4, #8]
    6770:	bb39      	cbnz	r1, 67c2 <_puts_r+0x9e>
    6772:	2b00      	cmp	r3, #0
    6774:	da38      	bge.n	67e8 <_puts_r+0xc4>
    6776:	4622      	mov	r2, r4
    6778:	210a      	movs	r1, #10
    677a:	4628      	mov	r0, r5
    677c:	f001 f8aa 	bl	78d4 <__swbuf_r>
    6780:	3001      	adds	r0, #1
    6782:	d011      	beq.n	67a8 <_puts_r+0x84>
    6784:	250a      	movs	r5, #10
    6786:	e011      	b.n	67ac <_puts_r+0x88>
    6788:	4b1b      	ldr	r3, [pc, #108]	; (67f8 <_puts_r+0xd4>)
    678a:	429c      	cmp	r4, r3
    678c:	d101      	bne.n	6792 <_puts_r+0x6e>
    678e:	68ac      	ldr	r4, [r5, #8]
    6790:	e7da      	b.n	6748 <_puts_r+0x24>
    6792:	4b1a      	ldr	r3, [pc, #104]	; (67fc <_puts_r+0xd8>)
    6794:	429c      	cmp	r4, r3
    6796:	bf08      	it	eq
    6798:	68ec      	ldreq	r4, [r5, #12]
    679a:	e7d5      	b.n	6748 <_puts_r+0x24>
    679c:	4621      	mov	r1, r4
    679e:	4628      	mov	r0, r5
    67a0:	f001 f8ea 	bl	7978 <__swsetup_r>
    67a4:	2800      	cmp	r0, #0
    67a6:	d0dd      	beq.n	6764 <_puts_r+0x40>
    67a8:	f04f 35ff 	mov.w	r5, #4294967295
    67ac:	6e63      	ldr	r3, [r4, #100]	; 0x64
    67ae:	07da      	lsls	r2, r3, #31
    67b0:	d405      	bmi.n	67be <_puts_r+0x9a>
    67b2:	89a3      	ldrh	r3, [r4, #12]
    67b4:	059b      	lsls	r3, r3, #22
    67b6:	d402      	bmi.n	67be <_puts_r+0x9a>
    67b8:	6da0      	ldr	r0, [r4, #88]	; 0x58
    67ba:	f7fe ff27 	bl	560c <__retarget_lock_release_recursive>
    67be:	4628      	mov	r0, r5
    67c0:	bd70      	pop	{r4, r5, r6, pc}
    67c2:	2b00      	cmp	r3, #0
    67c4:	da04      	bge.n	67d0 <_puts_r+0xac>
    67c6:	69a2      	ldr	r2, [r4, #24]
    67c8:	429a      	cmp	r2, r3
    67ca:	dc06      	bgt.n	67da <_puts_r+0xb6>
    67cc:	290a      	cmp	r1, #10
    67ce:	d004      	beq.n	67da <_puts_r+0xb6>
    67d0:	6823      	ldr	r3, [r4, #0]
    67d2:	1c5a      	adds	r2, r3, #1
    67d4:	6022      	str	r2, [r4, #0]
    67d6:	7019      	strb	r1, [r3, #0]
    67d8:	e7c5      	b.n	6766 <_puts_r+0x42>
    67da:	4622      	mov	r2, r4
    67dc:	4628      	mov	r0, r5
    67de:	f001 f879 	bl	78d4 <__swbuf_r>
    67e2:	3001      	adds	r0, #1
    67e4:	d1bf      	bne.n	6766 <_puts_r+0x42>
    67e6:	e7df      	b.n	67a8 <_puts_r+0x84>
    67e8:	6823      	ldr	r3, [r4, #0]
    67ea:	250a      	movs	r5, #10
    67ec:	1c5a      	adds	r2, r3, #1
    67ee:	6022      	str	r2, [r4, #0]
    67f0:	701d      	strb	r5, [r3, #0]
    67f2:	e7db      	b.n	67ac <_puts_r+0x88>
    67f4:	0000bef0 	.word	0x0000bef0
    67f8:	0000bf10 	.word	0x0000bf10
    67fc:	0000bed0 	.word	0x0000bed0

00006800 <puts>:
puts():
    6800:	4b02      	ldr	r3, [pc, #8]	; (680c <puts+0xc>)
    6802:	4601      	mov	r1, r0
    6804:	6818      	ldr	r0, [r3, #0]
    6806:	f7ff bf8d 	b.w	6724 <_puts_r>
    680a:	bf00      	nop
    680c:	10000164 	.word	0x10000164

00006810 <_sbrk_r>:
_sbrk_r():
    6810:	b538      	push	{r3, r4, r5, lr}
    6812:	4c06      	ldr	r4, [pc, #24]	; (682c <_sbrk_r+0x1c>)
    6814:	2300      	movs	r3, #0
    6816:	4605      	mov	r5, r0
    6818:	4608      	mov	r0, r1
    681a:	6023      	str	r3, [r4, #0]
    681c:	f7f9 fd92 	bl	344 <_sbrk>
    6820:	1c43      	adds	r3, r0, #1
    6822:	d102      	bne.n	682a <_sbrk_r+0x1a>
    6824:	6823      	ldr	r3, [r4, #0]
    6826:	b103      	cbz	r3, 682a <_sbrk_r+0x1a>
    6828:	602b      	str	r3, [r5, #0]
    682a:	bd38      	pop	{r3, r4, r5, pc}
    682c:	10001348 	.word	0x10001348

00006830 <setvbuf>:
setvbuf():
    6830:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    6834:	461e      	mov	r6, r3
    6836:	4b5b      	ldr	r3, [pc, #364]	; (69a4 <setvbuf+0x174>)
    6838:	681d      	ldr	r5, [r3, #0]
    683a:	4604      	mov	r4, r0
    683c:	460f      	mov	r7, r1
    683e:	4690      	mov	r8, r2
    6840:	b125      	cbz	r5, 684c <setvbuf+0x1c>
    6842:	69ab      	ldr	r3, [r5, #24]
    6844:	b913      	cbnz	r3, 684c <setvbuf+0x1c>
    6846:	4628      	mov	r0, r5
    6848:	f002 f874 	bl	8934 <__sinit>
    684c:	4b56      	ldr	r3, [pc, #344]	; (69a8 <setvbuf+0x178>)
    684e:	429c      	cmp	r4, r3
    6850:	d166      	bne.n	6920 <setvbuf+0xf0>
    6852:	686c      	ldr	r4, [r5, #4]
    6854:	f1b8 0f02 	cmp.w	r8, #2
    6858:	d006      	beq.n	6868 <setvbuf+0x38>
    685a:	f1b8 0f01 	cmp.w	r8, #1
    685e:	f200 809d 	bhi.w	699c <setvbuf+0x16c>
    6862:	2e00      	cmp	r6, #0
    6864:	f2c0 809a 	blt.w	699c <setvbuf+0x16c>
    6868:	6e63      	ldr	r3, [r4, #100]	; 0x64
    686a:	07da      	lsls	r2, r3, #31
    686c:	d405      	bmi.n	687a <setvbuf+0x4a>
    686e:	89a3      	ldrh	r3, [r4, #12]
    6870:	059b      	lsls	r3, r3, #22
    6872:	d402      	bmi.n	687a <setvbuf+0x4a>
    6874:	6da0      	ldr	r0, [r4, #88]	; 0x58
    6876:	f7fe fec8 	bl	560a <__retarget_lock_acquire_recursive>
    687a:	4621      	mov	r1, r4
    687c:	4628      	mov	r0, r5
    687e:	f001 ffb3 	bl	87e8 <_fflush_r>
    6882:	6b61      	ldr	r1, [r4, #52]	; 0x34
    6884:	b141      	cbz	r1, 6898 <setvbuf+0x68>
    6886:	f104 0344 	add.w	r3, r4, #68	; 0x44
    688a:	4299      	cmp	r1, r3
    688c:	d002      	beq.n	6894 <setvbuf+0x64>
    688e:	4628      	mov	r0, r5
    6890:	f7fe fefe 	bl	5690 <_free_r>
    6894:	2300      	movs	r3, #0
    6896:	6363      	str	r3, [r4, #52]	; 0x34
    6898:	2300      	movs	r3, #0
    689a:	61a3      	str	r3, [r4, #24]
    689c:	6063      	str	r3, [r4, #4]
    689e:	89a3      	ldrh	r3, [r4, #12]
    68a0:	0618      	lsls	r0, r3, #24
    68a2:	d503      	bpl.n	68ac <setvbuf+0x7c>
    68a4:	6921      	ldr	r1, [r4, #16]
    68a6:	4628      	mov	r0, r5
    68a8:	f7fe fef2 	bl	5690 <_free_r>
    68ac:	89a3      	ldrh	r3, [r4, #12]
    68ae:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
    68b2:	f023 0303 	bic.w	r3, r3, #3
    68b6:	f1b8 0f02 	cmp.w	r8, #2
    68ba:	81a3      	strh	r3, [r4, #12]
    68bc:	d06a      	beq.n	6994 <setvbuf+0x164>
    68be:	ab01      	add	r3, sp, #4
    68c0:	466a      	mov	r2, sp
    68c2:	4621      	mov	r1, r4
    68c4:	4628      	mov	r0, r5
    68c6:	f002 fc5b 	bl	9180 <__swhatbuf_r>
    68ca:	89a3      	ldrh	r3, [r4, #12]
    68cc:	4318      	orrs	r0, r3
    68ce:	81a0      	strh	r0, [r4, #12]
    68d0:	2e00      	cmp	r6, #0
    68d2:	d12f      	bne.n	6934 <setvbuf+0x104>
    68d4:	9e00      	ldr	r6, [sp, #0]
    68d6:	4630      	mov	r0, r6
    68d8:	f7fe fe9a 	bl	5610 <malloc>
    68dc:	4607      	mov	r7, r0
    68de:	2800      	cmp	r0, #0
    68e0:	d153      	bne.n	698a <setvbuf+0x15a>
    68e2:	f8dd 9000 	ldr.w	r9, [sp]
    68e6:	45b1      	cmp	r9, r6
    68e8:	d148      	bne.n	697c <setvbuf+0x14c>
    68ea:	f04f 35ff 	mov.w	r5, #4294967295
    68ee:	2200      	movs	r2, #0
    68f0:	60a2      	str	r2, [r4, #8]
    68f2:	f104 0247 	add.w	r2, r4, #71	; 0x47
    68f6:	6022      	str	r2, [r4, #0]
    68f8:	6122      	str	r2, [r4, #16]
    68fa:	2201      	movs	r2, #1
    68fc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    6900:	6162      	str	r2, [r4, #20]
    6902:	6e62      	ldr	r2, [r4, #100]	; 0x64
    6904:	f043 0302 	orr.w	r3, r3, #2
    6908:	07d1      	lsls	r1, r2, #31
    690a:	81a3      	strh	r3, [r4, #12]
    690c:	d404      	bmi.n	6918 <setvbuf+0xe8>
    690e:	059b      	lsls	r3, r3, #22
    6910:	d402      	bmi.n	6918 <setvbuf+0xe8>
    6912:	6da0      	ldr	r0, [r4, #88]	; 0x58
    6914:	f7fe fe7a 	bl	560c <__retarget_lock_release_recursive>
    6918:	4628      	mov	r0, r5
    691a:	b003      	add	sp, #12
    691c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    6920:	4b22      	ldr	r3, [pc, #136]	; (69ac <setvbuf+0x17c>)
    6922:	429c      	cmp	r4, r3
    6924:	d101      	bne.n	692a <setvbuf+0xfa>
    6926:	68ac      	ldr	r4, [r5, #8]
    6928:	e794      	b.n	6854 <setvbuf+0x24>
    692a:	4b21      	ldr	r3, [pc, #132]	; (69b0 <setvbuf+0x180>)
    692c:	429c      	cmp	r4, r3
    692e:	bf08      	it	eq
    6930:	68ec      	ldreq	r4, [r5, #12]
    6932:	e78f      	b.n	6854 <setvbuf+0x24>
    6934:	2f00      	cmp	r7, #0
    6936:	d0ce      	beq.n	68d6 <setvbuf+0xa6>
    6938:	69ab      	ldr	r3, [r5, #24]
    693a:	b913      	cbnz	r3, 6942 <setvbuf+0x112>
    693c:	4628      	mov	r0, r5
    693e:	f001 fff9 	bl	8934 <__sinit>
    6942:	f1b8 0f01 	cmp.w	r8, #1
    6946:	bf08      	it	eq
    6948:	89a3      	ldrheq	r3, [r4, #12]
    694a:	6027      	str	r7, [r4, #0]
    694c:	bf04      	itt	eq
    694e:	f043 0301 	orreq.w	r3, r3, #1
    6952:	81a3      	strheq	r3, [r4, #12]
    6954:	89a3      	ldrh	r3, [r4, #12]
    6956:	f013 0208 	ands.w	r2, r3, #8
    695a:	e9c4 7604 	strd	r7, r6, [r4, #16]
    695e:	d01b      	beq.n	6998 <setvbuf+0x168>
    6960:	07da      	lsls	r2, r3, #31
    6962:	bf41      	itttt	mi
    6964:	2200      	movmi	r2, #0
    6966:	4276      	negmi	r6, r6
    6968:	60a2      	strmi	r2, [r4, #8]
    696a:	61a6      	strmi	r6, [r4, #24]
    696c:	bf58      	it	pl
    696e:	60a6      	strpl	r6, [r4, #8]
    6970:	6e65      	ldr	r5, [r4, #100]	; 0x64
    6972:	f015 0501 	ands.w	r5, r5, #1
    6976:	d0ca      	beq.n	690e <setvbuf+0xde>
    6978:	2500      	movs	r5, #0
    697a:	e7cd      	b.n	6918 <setvbuf+0xe8>
    697c:	4648      	mov	r0, r9
    697e:	f7fe fe47 	bl	5610 <malloc>
    6982:	4607      	mov	r7, r0
    6984:	2800      	cmp	r0, #0
    6986:	d0b0      	beq.n	68ea <setvbuf+0xba>
    6988:	464e      	mov	r6, r9
    698a:	89a3      	ldrh	r3, [r4, #12]
    698c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    6990:	81a3      	strh	r3, [r4, #12]
    6992:	e7d1      	b.n	6938 <setvbuf+0x108>
    6994:	2500      	movs	r5, #0
    6996:	e7aa      	b.n	68ee <setvbuf+0xbe>
    6998:	60a2      	str	r2, [r4, #8]
    699a:	e7e9      	b.n	6970 <setvbuf+0x140>
    699c:	f04f 35ff 	mov.w	r5, #4294967295
    69a0:	e7ba      	b.n	6918 <setvbuf+0xe8>
    69a2:	bf00      	nop
    69a4:	10000164 	.word	0x10000164
    69a8:	0000bef0 	.word	0x0000bef0
    69ac:	0000bf10 	.word	0x0000bf10
    69b0:	0000bed0 	.word	0x0000bed0

000069b4 <nanf>:
nanf():
    69b4:	ed9f 0a01 	vldr	s0, [pc, #4]	; 69bc <nanf+0x8>
    69b8:	4770      	bx	lr
    69ba:	bf00      	nop
    69bc:	7fc00000 	.word	0x7fc00000

000069c0 <siprintf>:
siprintf():
    69c0:	b40e      	push	{r1, r2, r3}
    69c2:	b500      	push	{lr}
    69c4:	b09c      	sub	sp, #112	; 0x70
    69c6:	ab1d      	add	r3, sp, #116	; 0x74
    69c8:	9002      	str	r0, [sp, #8]
    69ca:	9006      	str	r0, [sp, #24]
    69cc:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
    69d0:	4809      	ldr	r0, [pc, #36]	; (69f8 <siprintf+0x38>)
    69d2:	9107      	str	r1, [sp, #28]
    69d4:	9104      	str	r1, [sp, #16]
    69d6:	4909      	ldr	r1, [pc, #36]	; (69fc <siprintf+0x3c>)
    69d8:	f853 2b04 	ldr.w	r2, [r3], #4
    69dc:	9105      	str	r1, [sp, #20]
    69de:	6800      	ldr	r0, [r0, #0]
    69e0:	9301      	str	r3, [sp, #4]
    69e2:	a902      	add	r1, sp, #8
    69e4:	f003 f928 	bl	9c38 <_svfiprintf_r>
    69e8:	9b02      	ldr	r3, [sp, #8]
    69ea:	2200      	movs	r2, #0
    69ec:	701a      	strb	r2, [r3, #0]
    69ee:	b01c      	add	sp, #112	; 0x70
    69f0:	f85d eb04 	ldr.w	lr, [sp], #4
    69f4:	b003      	add	sp, #12
    69f6:	4770      	bx	lr
    69f8:	10000164 	.word	0x10000164
    69fc:	ffff0208 	.word	0xffff0208

00006a00 <strcasecmp>:
strcasecmp():
    6a00:	b570      	push	{r4, r5, r6, lr}
    6a02:	4d0c      	ldr	r5, [pc, #48]	; (6a34 <strcasecmp+0x34>)
    6a04:	462e      	mov	r6, r5
    6a06:	f810 3b01 	ldrb.w	r3, [r0], #1
    6a0a:	5d5a      	ldrb	r2, [r3, r5]
    6a0c:	f002 0203 	and.w	r2, r2, #3
    6a10:	2a01      	cmp	r2, #1
    6a12:	f811 2b01 	ldrb.w	r2, [r1], #1
    6a16:	5cb4      	ldrb	r4, [r6, r2]
    6a18:	f004 0403 	and.w	r4, r4, #3
    6a1c:	bf08      	it	eq
    6a1e:	3320      	addeq	r3, #32
    6a20:	2c01      	cmp	r4, #1
    6a22:	bf08      	it	eq
    6a24:	3220      	addeq	r2, #32
    6a26:	1a9b      	subs	r3, r3, r2
    6a28:	d101      	bne.n	6a2e <strcasecmp+0x2e>
    6a2a:	2a00      	cmp	r2, #0
    6a2c:	d1eb      	bne.n	6a06 <strcasecmp+0x6>
    6a2e:	4618      	mov	r0, r3
    6a30:	bd70      	pop	{r4, r5, r6, pc}
    6a32:	bf00      	nop
    6a34:	0000bd24 	.word	0x0000bd24

00006a38 <strchr>:
strchr():
    6a38:	b2c9      	uxtb	r1, r1
    6a3a:	4603      	mov	r3, r0
    6a3c:	f810 2b01 	ldrb.w	r2, [r0], #1
    6a40:	b11a      	cbz	r2, 6a4a <strchr+0x12>
    6a42:	428a      	cmp	r2, r1
    6a44:	d1f9      	bne.n	6a3a <strchr+0x2>
    6a46:	4618      	mov	r0, r3
    6a48:	4770      	bx	lr
    6a4a:	2900      	cmp	r1, #0
    6a4c:	bf18      	it	ne
    6a4e:	2300      	movne	r3, #0
    6a50:	e7f9      	b.n	6a46 <strchr+0xe>

00006a52 <strlen>:
strlen():
    6a52:	4603      	mov	r3, r0
    6a54:	f813 2b01 	ldrb.w	r2, [r3], #1
    6a58:	2a00      	cmp	r2, #0
    6a5a:	d1fb      	bne.n	6a54 <strlen+0x2>
    6a5c:	1a18      	subs	r0, r3, r0
    6a5e:	3801      	subs	r0, #1
    6a60:	4770      	bx	lr
    6a62:	Address 0x00006a62 is out of bounds.


00006a64 <strncasecmp>:
strncasecmp():
    6a64:	b570      	push	{r4, r5, r6, lr}
    6a66:	4e0f      	ldr	r6, [pc, #60]	; (6aa4 <strncasecmp+0x40>)
    6a68:	440a      	add	r2, r1
    6a6a:	428a      	cmp	r2, r1
    6a6c:	d101      	bne.n	6a72 <strncasecmp+0xe>
    6a6e:	2300      	movs	r3, #0
    6a70:	e013      	b.n	6a9a <strncasecmp+0x36>
    6a72:	f810 4b01 	ldrb.w	r4, [r0], #1
    6a76:	5da3      	ldrb	r3, [r4, r6]
    6a78:	f003 0303 	and.w	r3, r3, #3
    6a7c:	2b01      	cmp	r3, #1
    6a7e:	f811 3b01 	ldrb.w	r3, [r1], #1
    6a82:	5cf5      	ldrb	r5, [r6, r3]
    6a84:	f005 0503 	and.w	r5, r5, #3
    6a88:	bf08      	it	eq
    6a8a:	3420      	addeq	r4, #32
    6a8c:	2d01      	cmp	r5, #1
    6a8e:	bf08      	it	eq
    6a90:	3320      	addeq	r3, #32
    6a92:	1ae4      	subs	r4, r4, r3
    6a94:	d103      	bne.n	6a9e <strncasecmp+0x3a>
    6a96:	2b00      	cmp	r3, #0
    6a98:	d1e7      	bne.n	6a6a <strncasecmp+0x6>
    6a9a:	4618      	mov	r0, r3
    6a9c:	bd70      	pop	{r4, r5, r6, pc}
    6a9e:	4623      	mov	r3, r4
    6aa0:	e7fb      	b.n	6a9a <strncasecmp+0x36>
    6aa2:	bf00      	nop
    6aa4:	0000bd24 	.word	0x0000bd24

00006aa8 <strncmp>:
strncmp():
    6aa8:	b510      	push	{r4, lr}
    6aaa:	b16a      	cbz	r2, 6ac8 <strncmp+0x20>
    6aac:	3901      	subs	r1, #1
    6aae:	1884      	adds	r4, r0, r2
    6ab0:	f810 3b01 	ldrb.w	r3, [r0], #1
    6ab4:	f811 2f01 	ldrb.w	r2, [r1, #1]!
    6ab8:	4293      	cmp	r3, r2
    6aba:	d103      	bne.n	6ac4 <strncmp+0x1c>
    6abc:	42a0      	cmp	r0, r4
    6abe:	d001      	beq.n	6ac4 <strncmp+0x1c>
    6ac0:	2b00      	cmp	r3, #0
    6ac2:	d1f5      	bne.n	6ab0 <strncmp+0x8>
    6ac4:	1a98      	subs	r0, r3, r2
    6ac6:	bd10      	pop	{r4, pc}
    6ac8:	4610      	mov	r0, r2
    6aca:	e7fc      	b.n	6ac6 <strncmp+0x1e>

00006acc <strncpy>:
strncpy():
    6acc:	b510      	push	{r4, lr}
    6ace:	3901      	subs	r1, #1
    6ad0:	4603      	mov	r3, r0
    6ad2:	b132      	cbz	r2, 6ae2 <strncpy+0x16>
    6ad4:	f811 4f01 	ldrb.w	r4, [r1, #1]!
    6ad8:	f803 4b01 	strb.w	r4, [r3], #1
    6adc:	3a01      	subs	r2, #1
    6ade:	2c00      	cmp	r4, #0
    6ae0:	d1f7      	bne.n	6ad2 <strncpy+0x6>
    6ae2:	441a      	add	r2, r3
    6ae4:	2100      	movs	r1, #0
    6ae6:	4293      	cmp	r3, r2
    6ae8:	d100      	bne.n	6aec <strncpy+0x20>
    6aea:	bd10      	pop	{r4, pc}
    6aec:	f803 1b01 	strb.w	r1, [r3], #1
    6af0:	e7f9      	b.n	6ae6 <strncpy+0x1a>

00006af2 <strstr>:
strstr():
    6af2:	b5f0      	push	{r4, r5, r6, r7, lr}
    6af4:	780c      	ldrb	r4, [r1, #0]
    6af6:	b164      	cbz	r4, 6b12 <strstr+0x20>
    6af8:	4603      	mov	r3, r0
    6afa:	781a      	ldrb	r2, [r3, #0]
    6afc:	4618      	mov	r0, r3
    6afe:	1c5e      	adds	r6, r3, #1
    6b00:	b90a      	cbnz	r2, 6b06 <strstr+0x14>
    6b02:	4610      	mov	r0, r2
    6b04:	e005      	b.n	6b12 <strstr+0x20>
    6b06:	4294      	cmp	r4, r2
    6b08:	d108      	bne.n	6b1c <strstr+0x2a>
    6b0a:	460d      	mov	r5, r1
    6b0c:	f815 2f01 	ldrb.w	r2, [r5, #1]!
    6b10:	b902      	cbnz	r2, 6b14 <strstr+0x22>
    6b12:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6b14:	f813 7f01 	ldrb.w	r7, [r3, #1]!
    6b18:	4297      	cmp	r7, r2
    6b1a:	d0f7      	beq.n	6b0c <strstr+0x1a>
    6b1c:	4633      	mov	r3, r6
    6b1e:	e7ec      	b.n	6afa <strstr+0x8>

00006b20 <sulp>:
sulp():
    6b20:	b570      	push	{r4, r5, r6, lr}
    6b22:	4604      	mov	r4, r0
    6b24:	460d      	mov	r5, r1
    6b26:	ec45 4b10 	vmov	d0, r4, r5
    6b2a:	4616      	mov	r6, r2
    6b2c:	f002 fec2 	bl	98b4 <__ulp>
    6b30:	ec51 0b10 	vmov	r0, r1, d0
    6b34:	b17e      	cbz	r6, 6b56 <sulp+0x36>
    6b36:	f3c5 530a 	ubfx	r3, r5, #20, #11
    6b3a:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
    6b3e:	2b00      	cmp	r3, #0
    6b40:	dd09      	ble.n	6b56 <sulp+0x36>
    6b42:	051b      	lsls	r3, r3, #20
    6b44:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
    6b48:	2400      	movs	r4, #0
    6b4a:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
    6b4e:	4622      	mov	r2, r4
    6b50:	462b      	mov	r3, r5
    6b52:	f7fe f90f 	bl	4d74 <__aeabi_dmul>
    6b56:	bd70      	pop	{r4, r5, r6, pc}

00006b58 <_strtod_l>:
_strtod_l():
    6b58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6b5c:	b0a1      	sub	sp, #132	; 0x84
    6b5e:	461f      	mov	r7, r3
    6b60:	2300      	movs	r3, #0
    6b62:	931c      	str	r3, [sp, #112]	; 0x70
    6b64:	4b9b      	ldr	r3, [pc, #620]	; (6dd4 <_strtod_l+0x27c>)
    6b66:	9004      	str	r0, [sp, #16]
    6b68:	681b      	ldr	r3, [r3, #0]
    6b6a:	9217      	str	r2, [sp, #92]	; 0x5c
    6b6c:	4618      	mov	r0, r3
    6b6e:	460e      	mov	r6, r1
    6b70:	9305      	str	r3, [sp, #20]
    6b72:	f7ff ff6e 	bl	6a52 <strlen>
    6b76:	f04f 0a00 	mov.w	sl, #0
    6b7a:	4604      	mov	r4, r0
    6b7c:	f04f 0b00 	mov.w	fp, #0
    6b80:	961b      	str	r6, [sp, #108]	; 0x6c
    6b82:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
    6b84:	7813      	ldrb	r3, [r2, #0]
    6b86:	2b0d      	cmp	r3, #13
    6b88:	d832      	bhi.n	6bf0 <_strtod_l+0x98>
    6b8a:	2b09      	cmp	r3, #9
    6b8c:	d236      	bcs.n	6bfc <_strtod_l+0xa4>
    6b8e:	2b00      	cmp	r3, #0
    6b90:	d03e      	beq.n	6c10 <_strtod_l+0xb8>
    6b92:	2300      	movs	r3, #0
    6b94:	930c      	str	r3, [sp, #48]	; 0x30
    6b96:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
    6b98:	782b      	ldrb	r3, [r5, #0]
    6b9a:	2b30      	cmp	r3, #48	; 0x30
    6b9c:	f040 80a9 	bne.w	6cf2 <_strtod_l+0x19a>
    6ba0:	786b      	ldrb	r3, [r5, #1]
    6ba2:	2b58      	cmp	r3, #88	; 0x58
    6ba4:	d001      	beq.n	6baa <_strtod_l+0x52>
    6ba6:	2b78      	cmp	r3, #120	; 0x78
    6ba8:	d167      	bne.n	6c7a <_strtod_l+0x122>
    6baa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    6bac:	9301      	str	r3, [sp, #4]
    6bae:	ab1c      	add	r3, sp, #112	; 0x70
    6bb0:	9300      	str	r3, [sp, #0]
    6bb2:	9702      	str	r7, [sp, #8]
    6bb4:	ab1d      	add	r3, sp, #116	; 0x74
    6bb6:	4a88      	ldr	r2, [pc, #544]	; (6dd8 <_strtod_l+0x280>)
    6bb8:	9804      	ldr	r0, [sp, #16]
    6bba:	a91b      	add	r1, sp, #108	; 0x6c
    6bbc:	f001 ffc2 	bl	8b44 <__gethex>
    6bc0:	f010 0407 	ands.w	r4, r0, #7
    6bc4:	4606      	mov	r6, r0
    6bc6:	d005      	beq.n	6bd4 <_strtod_l+0x7c>
    6bc8:	2c06      	cmp	r4, #6
    6bca:	d12b      	bne.n	6c24 <_strtod_l+0xcc>
    6bcc:	3501      	adds	r5, #1
    6bce:	2300      	movs	r3, #0
    6bd0:	951b      	str	r5, [sp, #108]	; 0x6c
    6bd2:	930c      	str	r3, [sp, #48]	; 0x30
    6bd4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    6bd6:	2b00      	cmp	r3, #0
    6bd8:	f040 8576 	bne.w	76c8 <_strtod_l+0xb70>
    6bdc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    6bde:	b1e3      	cbz	r3, 6c1a <_strtod_l+0xc2>
    6be0:	4652      	mov	r2, sl
    6be2:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
    6be6:	ec43 2b10 	vmov	d0, r2, r3
    6bea:	b021      	add	sp, #132	; 0x84
    6bec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6bf0:	2b2b      	cmp	r3, #43	; 0x2b
    6bf2:	d006      	beq.n	6c02 <_strtod_l+0xaa>
    6bf4:	2b2d      	cmp	r3, #45	; 0x2d
    6bf6:	d013      	beq.n	6c20 <_strtod_l+0xc8>
    6bf8:	2b20      	cmp	r3, #32
    6bfa:	d1ca      	bne.n	6b92 <_strtod_l+0x3a>
    6bfc:	3201      	adds	r2, #1
    6bfe:	921b      	str	r2, [sp, #108]	; 0x6c
    6c00:	e7bf      	b.n	6b82 <_strtod_l+0x2a>
    6c02:	2300      	movs	r3, #0
    6c04:	930c      	str	r3, [sp, #48]	; 0x30
    6c06:	1c53      	adds	r3, r2, #1
    6c08:	931b      	str	r3, [sp, #108]	; 0x6c
    6c0a:	7853      	ldrb	r3, [r2, #1]
    6c0c:	2b00      	cmp	r3, #0
    6c0e:	d1c2      	bne.n	6b96 <_strtod_l+0x3e>
    6c10:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    6c12:	961b      	str	r6, [sp, #108]	; 0x6c
    6c14:	2b00      	cmp	r3, #0
    6c16:	f040 8555 	bne.w	76c4 <_strtod_l+0xb6c>
    6c1a:	4652      	mov	r2, sl
    6c1c:	465b      	mov	r3, fp
    6c1e:	e7e2      	b.n	6be6 <_strtod_l+0x8e>
    6c20:	2301      	movs	r3, #1
    6c22:	e7ef      	b.n	6c04 <_strtod_l+0xac>
    6c24:	9a1c      	ldr	r2, [sp, #112]	; 0x70
    6c26:	b13a      	cbz	r2, 6c38 <_strtod_l+0xe0>
    6c28:	2135      	movs	r1, #53	; 0x35
    6c2a:	a81e      	add	r0, sp, #120	; 0x78
    6c2c:	f002 ff39 	bl	9aa2 <__copybits>
    6c30:	991c      	ldr	r1, [sp, #112]	; 0x70
    6c32:	9804      	ldr	r0, [sp, #16]
    6c34:	f002 fbac 	bl	9390 <_Bfree>
    6c38:	3c01      	subs	r4, #1
    6c3a:	2c04      	cmp	r4, #4
    6c3c:	d806      	bhi.n	6c4c <_strtod_l+0xf4>
    6c3e:	e8df f004 	tbb	[pc, r4]
    6c42:	030a      	.short	0x030a
    6c44:	1714      	.short	0x1714
    6c46:	0a          	.byte	0x0a
    6c47:	00          	.byte	0x00
    6c48:	e9dd ab1e 	ldrd	sl, fp, [sp, #120]	; 0x78
    6c4c:	0731      	lsls	r1, r6, #28
    6c4e:	d5c1      	bpl.n	6bd4 <_strtod_l+0x7c>
    6c50:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
    6c54:	e7be      	b.n	6bd4 <_strtod_l+0x7c>
    6c56:	e9dd a31e 	ldrd	sl, r3, [sp, #120]	; 0x78
    6c5a:	9a1d      	ldr	r2, [sp, #116]	; 0x74
    6c5c:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
    6c60:	f202 4233 	addw	r2, r2, #1075	; 0x433
    6c64:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
    6c68:	e7f0      	b.n	6c4c <_strtod_l+0xf4>
    6c6a:	f8df b170 	ldr.w	fp, [pc, #368]	; 6ddc <_strtod_l+0x284>
    6c6e:	e7ed      	b.n	6c4c <_strtod_l+0xf4>
    6c70:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
    6c74:	f04f 3aff 	mov.w	sl, #4294967295
    6c78:	e7e8      	b.n	6c4c <_strtod_l+0xf4>
    6c7a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    6c7c:	1c5a      	adds	r2, r3, #1
    6c7e:	921b      	str	r2, [sp, #108]	; 0x6c
    6c80:	785b      	ldrb	r3, [r3, #1]
    6c82:	2b30      	cmp	r3, #48	; 0x30
    6c84:	d0f9      	beq.n	6c7a <_strtod_l+0x122>
    6c86:	2b00      	cmp	r3, #0
    6c88:	d0a4      	beq.n	6bd4 <_strtod_l+0x7c>
    6c8a:	2301      	movs	r3, #1
    6c8c:	f04f 0900 	mov.w	r9, #0
    6c90:	9306      	str	r3, [sp, #24]
    6c92:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    6c94:	9309      	str	r3, [sp, #36]	; 0x24
    6c96:	f8cd 901c 	str.w	r9, [sp, #28]
    6c9a:	46c8      	mov	r8, r9
    6c9c:	220a      	movs	r2, #10
    6c9e:	981b      	ldr	r0, [sp, #108]	; 0x6c
    6ca0:	7805      	ldrb	r5, [r0, #0]
    6ca2:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
    6ca6:	b2d9      	uxtb	r1, r3
    6ca8:	2909      	cmp	r1, #9
    6caa:	d924      	bls.n	6cf6 <_strtod_l+0x19e>
    6cac:	4622      	mov	r2, r4
    6cae:	9905      	ldr	r1, [sp, #20]
    6cb0:	f7ff fefa 	bl	6aa8 <strncmp>
    6cb4:	b378      	cbz	r0, 6d16 <_strtod_l+0x1be>
    6cb6:	2000      	movs	r0, #0
    6cb8:	462b      	mov	r3, r5
    6cba:	4644      	mov	r4, r8
    6cbc:	9005      	str	r0, [sp, #20]
    6cbe:	4602      	mov	r2, r0
    6cc0:	2b65      	cmp	r3, #101	; 0x65
    6cc2:	d001      	beq.n	6cc8 <_strtod_l+0x170>
    6cc4:	2b45      	cmp	r3, #69	; 0x45
    6cc6:	d112      	bne.n	6cee <_strtod_l+0x196>
    6cc8:	b91c      	cbnz	r4, 6cd2 <_strtod_l+0x17a>
    6cca:	9b06      	ldr	r3, [sp, #24]
    6ccc:	4303      	orrs	r3, r0
    6cce:	d09f      	beq.n	6c10 <_strtod_l+0xb8>
    6cd0:	2400      	movs	r4, #0
    6cd2:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
    6cd4:	1c73      	adds	r3, r6, #1
    6cd6:	931b      	str	r3, [sp, #108]	; 0x6c
    6cd8:	7873      	ldrb	r3, [r6, #1]
    6cda:	2b2b      	cmp	r3, #43	; 0x2b
    6cdc:	d072      	beq.n	6dc4 <_strtod_l+0x26c>
    6cde:	2b2d      	cmp	r3, #45	; 0x2d
    6ce0:	d075      	beq.n	6dce <_strtod_l+0x276>
    6ce2:	2700      	movs	r7, #0
    6ce4:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
    6ce8:	2909      	cmp	r1, #9
    6cea:	d97d      	bls.n	6de8 <_strtod_l+0x290>
    6cec:	961b      	str	r6, [sp, #108]	; 0x6c
    6cee:	2500      	movs	r5, #0
    6cf0:	e09a      	b.n	6e28 <_strtod_l+0x2d0>
    6cf2:	2300      	movs	r3, #0
    6cf4:	e7ca      	b.n	6c8c <_strtod_l+0x134>
    6cf6:	f1b8 0f08 	cmp.w	r8, #8
    6cfa:	bfd8      	it	le
    6cfc:	9907      	ldrle	r1, [sp, #28]
    6cfe:	f100 0001 	add.w	r0, r0, #1
    6d02:	bfda      	itte	le
    6d04:	fb02 3301 	mlale	r3, r2, r1, r3
    6d08:	9307      	strle	r3, [sp, #28]
    6d0a:	fb02 3909 	mlagt	r9, r2, r9, r3
    6d0e:	f108 0801 	add.w	r8, r8, #1
    6d12:	901b      	str	r0, [sp, #108]	; 0x6c
    6d14:	e7c3      	b.n	6c9e <_strtod_l+0x146>
    6d16:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    6d18:	191a      	adds	r2, r3, r4
    6d1a:	921b      	str	r2, [sp, #108]	; 0x6c
    6d1c:	5d1b      	ldrb	r3, [r3, r4]
    6d1e:	f1b8 0f00 	cmp.w	r8, #0
    6d22:	d036      	beq.n	6d92 <_strtod_l+0x23a>
    6d24:	9005      	str	r0, [sp, #20]
    6d26:	4644      	mov	r4, r8
    6d28:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
    6d2c:	2a09      	cmp	r2, #9
    6d2e:	d912      	bls.n	6d56 <_strtod_l+0x1fe>
    6d30:	2201      	movs	r2, #1
    6d32:	e7c5      	b.n	6cc0 <_strtod_l+0x168>
    6d34:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    6d36:	1c5a      	adds	r2, r3, #1
    6d38:	921b      	str	r2, [sp, #108]	; 0x6c
    6d3a:	785b      	ldrb	r3, [r3, #1]
    6d3c:	3001      	adds	r0, #1
    6d3e:	2b30      	cmp	r3, #48	; 0x30
    6d40:	d0f8      	beq.n	6d34 <_strtod_l+0x1dc>
    6d42:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
    6d46:	2a08      	cmp	r2, #8
    6d48:	f200 84c3 	bhi.w	76d2 <_strtod_l+0xb7a>
    6d4c:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
    6d4e:	9005      	str	r0, [sp, #20]
    6d50:	2000      	movs	r0, #0
    6d52:	9209      	str	r2, [sp, #36]	; 0x24
    6d54:	4604      	mov	r4, r0
    6d56:	3b30      	subs	r3, #48	; 0x30
    6d58:	f100 0201 	add.w	r2, r0, #1
    6d5c:	d013      	beq.n	6d86 <_strtod_l+0x22e>
    6d5e:	9905      	ldr	r1, [sp, #20]
    6d60:	4411      	add	r1, r2
    6d62:	9105      	str	r1, [sp, #20]
    6d64:	4622      	mov	r2, r4
    6d66:	1905      	adds	r5, r0, r4
    6d68:	210a      	movs	r1, #10
    6d6a:	42aa      	cmp	r2, r5
    6d6c:	d113      	bne.n	6d96 <_strtod_l+0x23e>
    6d6e:	1822      	adds	r2, r4, r0
    6d70:	2a08      	cmp	r2, #8
    6d72:	f104 0401 	add.w	r4, r4, #1
    6d76:	4404      	add	r4, r0
    6d78:	dc1a      	bgt.n	6db0 <_strtod_l+0x258>
    6d7a:	9907      	ldr	r1, [sp, #28]
    6d7c:	220a      	movs	r2, #10
    6d7e:	fb02 3301 	mla	r3, r2, r1, r3
    6d82:	9307      	str	r3, [sp, #28]
    6d84:	2200      	movs	r2, #0
    6d86:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    6d88:	1c59      	adds	r1, r3, #1
    6d8a:	911b      	str	r1, [sp, #108]	; 0x6c
    6d8c:	785b      	ldrb	r3, [r3, #1]
    6d8e:	4610      	mov	r0, r2
    6d90:	e7ca      	b.n	6d28 <_strtod_l+0x1d0>
    6d92:	4640      	mov	r0, r8
    6d94:	e7d3      	b.n	6d3e <_strtod_l+0x1e6>
    6d96:	2a08      	cmp	r2, #8
    6d98:	dc04      	bgt.n	6da4 <_strtod_l+0x24c>
    6d9a:	9f07      	ldr	r7, [sp, #28]
    6d9c:	434f      	muls	r7, r1
    6d9e:	9707      	str	r7, [sp, #28]
    6da0:	3201      	adds	r2, #1
    6da2:	e7e2      	b.n	6d6a <_strtod_l+0x212>
    6da4:	1c57      	adds	r7, r2, #1
    6da6:	2f10      	cmp	r7, #16
    6da8:	bfd8      	it	le
    6daa:	fb01 f909 	mulle.w	r9, r1, r9
    6dae:	e7f7      	b.n	6da0 <_strtod_l+0x248>
    6db0:	2c10      	cmp	r4, #16
    6db2:	bfdc      	itt	le
    6db4:	220a      	movle	r2, #10
    6db6:	fb02 3909 	mlale	r9, r2, r9, r3
    6dba:	e7e3      	b.n	6d84 <_strtod_l+0x22c>
    6dbc:	2300      	movs	r3, #0
    6dbe:	9305      	str	r3, [sp, #20]
    6dc0:	2201      	movs	r2, #1
    6dc2:	e782      	b.n	6cca <_strtod_l+0x172>
    6dc4:	2700      	movs	r7, #0
    6dc6:	1cb3      	adds	r3, r6, #2
    6dc8:	931b      	str	r3, [sp, #108]	; 0x6c
    6dca:	78b3      	ldrb	r3, [r6, #2]
    6dcc:	e78a      	b.n	6ce4 <_strtod_l+0x18c>
    6dce:	2701      	movs	r7, #1
    6dd0:	e7f9      	b.n	6dc6 <_strtod_l+0x26e>
    6dd2:	bf00      	nop
    6dd4:	0000bf30 	.word	0x0000bf30
    6dd8:	0000be70 	.word	0x0000be70
    6ddc:	7ff00000 	.word	0x7ff00000
    6de0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    6de2:	1c59      	adds	r1, r3, #1
    6de4:	911b      	str	r1, [sp, #108]	; 0x6c
    6de6:	785b      	ldrb	r3, [r3, #1]
    6de8:	2b30      	cmp	r3, #48	; 0x30
    6dea:	d0f9      	beq.n	6de0 <_strtod_l+0x288>
    6dec:	f1a3 0131 	sub.w	r1, r3, #49	; 0x31
    6df0:	2908      	cmp	r1, #8
    6df2:	f63f af7c 	bhi.w	6cee <_strtod_l+0x196>
    6df6:	f1a3 0c30 	sub.w	ip, r3, #48	; 0x30
    6dfa:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    6dfc:	9308      	str	r3, [sp, #32]
    6dfe:	f04f 0e0a 	mov.w	lr, #10
    6e02:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    6e04:	1c59      	adds	r1, r3, #1
    6e06:	911b      	str	r1, [sp, #108]	; 0x6c
    6e08:	785b      	ldrb	r3, [r3, #1]
    6e0a:	f1a3 0530 	sub.w	r5, r3, #48	; 0x30
    6e0e:	2d09      	cmp	r5, #9
    6e10:	d92e      	bls.n	6e70 <_strtod_l+0x318>
    6e12:	9d08      	ldr	r5, [sp, #32]
    6e14:	1b49      	subs	r1, r1, r5
    6e16:	2908      	cmp	r1, #8
    6e18:	f644 651f 	movw	r5, #19999	; 0x4e1f
    6e1c:	dc02      	bgt.n	6e24 <_strtod_l+0x2cc>
    6e1e:	4565      	cmp	r5, ip
    6e20:	bfa8      	it	ge
    6e22:	4665      	movge	r5, ip
    6e24:	b107      	cbz	r7, 6e28 <_strtod_l+0x2d0>
    6e26:	426d      	negs	r5, r5
    6e28:	2c00      	cmp	r4, #0
    6e2a:	d14b      	bne.n	6ec4 <_strtod_l+0x36c>
    6e2c:	9906      	ldr	r1, [sp, #24]
    6e2e:	4301      	orrs	r1, r0
    6e30:	f47f aed0 	bne.w	6bd4 <_strtod_l+0x7c>
    6e34:	2a00      	cmp	r2, #0
    6e36:	f47f aeeb 	bne.w	6c10 <_strtod_l+0xb8>
    6e3a:	2b4e      	cmp	r3, #78	; 0x4e
    6e3c:	d022      	beq.n	6e84 <_strtod_l+0x32c>
    6e3e:	dc1c      	bgt.n	6e7a <_strtod_l+0x322>
    6e40:	2b49      	cmp	r3, #73	; 0x49
    6e42:	f47f aee5 	bne.w	6c10 <_strtod_l+0xb8>
    6e46:	499a      	ldr	r1, [pc, #616]	; (70b0 <_strtod_l+0x558>)
    6e48:	a81b      	add	r0, sp, #108	; 0x6c
    6e4a:	f002 f8b1 	bl	8fb0 <__match>
    6e4e:	2800      	cmp	r0, #0
    6e50:	f43f aede 	beq.w	6c10 <_strtod_l+0xb8>
    6e54:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    6e56:	4997      	ldr	r1, [pc, #604]	; (70b4 <_strtod_l+0x55c>)
    6e58:	3b01      	subs	r3, #1
    6e5a:	a81b      	add	r0, sp, #108	; 0x6c
    6e5c:	931b      	str	r3, [sp, #108]	; 0x6c
    6e5e:	f002 f8a7 	bl	8fb0 <__match>
    6e62:	b910      	cbnz	r0, 6e6a <_strtod_l+0x312>
    6e64:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    6e66:	3301      	adds	r3, #1
    6e68:	931b      	str	r3, [sp, #108]	; 0x6c
    6e6a:	f8df b260 	ldr.w	fp, [pc, #608]	; 70cc <_strtod_l+0x574>
    6e6e:	e6b1      	b.n	6bd4 <_strtod_l+0x7c>
    6e70:	fb0e 3c0c 	mla	ip, lr, ip, r3
    6e74:	f1ac 0c30 	sub.w	ip, ip, #48	; 0x30
    6e78:	e7c3      	b.n	6e02 <_strtod_l+0x2aa>
    6e7a:	2b69      	cmp	r3, #105	; 0x69
    6e7c:	d0e3      	beq.n	6e46 <_strtod_l+0x2ee>
    6e7e:	2b6e      	cmp	r3, #110	; 0x6e
    6e80:	f47f aec6 	bne.w	6c10 <_strtod_l+0xb8>
    6e84:	498c      	ldr	r1, [pc, #560]	; (70b8 <_strtod_l+0x560>)
    6e86:	a81b      	add	r0, sp, #108	; 0x6c
    6e88:	f002 f892 	bl	8fb0 <__match>
    6e8c:	2800      	cmp	r0, #0
    6e8e:	f43f aebf 	beq.w	6c10 <_strtod_l+0xb8>
    6e92:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    6e94:	781b      	ldrb	r3, [r3, #0]
    6e96:	2b28      	cmp	r3, #40	; 0x28
    6e98:	d10e      	bne.n	6eb8 <_strtod_l+0x360>
    6e9a:	aa1e      	add	r2, sp, #120	; 0x78
    6e9c:	4987      	ldr	r1, [pc, #540]	; (70bc <_strtod_l+0x564>)
    6e9e:	a81b      	add	r0, sp, #108	; 0x6c
    6ea0:	f002 f89a 	bl	8fd8 <__hexnan>
    6ea4:	2805      	cmp	r0, #5
    6ea6:	d107      	bne.n	6eb8 <_strtod_l+0x360>
    6ea8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    6eaa:	f8dd a078 	ldr.w	sl, [sp, #120]	; 0x78
    6eae:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
    6eb2:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
    6eb6:	e68d      	b.n	6bd4 <_strtod_l+0x7c>
    6eb8:	4881      	ldr	r0, [pc, #516]	; (70c0 <_strtod_l+0x568>)
    6eba:	f003 fb19 	bl	a4f0 <nan>
    6ebe:	ec5b ab10 	vmov	sl, fp, d0
    6ec2:	e687      	b.n	6bd4 <_strtod_l+0x7c>
    6ec4:	9b05      	ldr	r3, [sp, #20]
    6ec6:	9807      	ldr	r0, [sp, #28]
    6ec8:	1aeb      	subs	r3, r5, r3
    6eca:	f1b8 0f00 	cmp.w	r8, #0
    6ece:	bf08      	it	eq
    6ed0:	46a0      	moveq	r8, r4
    6ed2:	2c10      	cmp	r4, #16
    6ed4:	9308      	str	r3, [sp, #32]
    6ed6:	4626      	mov	r6, r4
    6ed8:	bfa8      	it	ge
    6eda:	2610      	movge	r6, #16
    6edc:	f7fd fed0 	bl	4c80 <__aeabi_ui2d>
    6ee0:	2c09      	cmp	r4, #9
    6ee2:	4682      	mov	sl, r0
    6ee4:	468b      	mov	fp, r1
    6ee6:	dd13      	ble.n	6f10 <_strtod_l+0x3b8>
    6ee8:	4b76      	ldr	r3, [pc, #472]	; (70c4 <_strtod_l+0x56c>)
    6eea:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
    6eee:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
    6ef2:	f7fd ff3f 	bl	4d74 <__aeabi_dmul>
    6ef6:	4682      	mov	sl, r0
    6ef8:	4648      	mov	r0, r9
    6efa:	468b      	mov	fp, r1
    6efc:	f7fd fec0 	bl	4c80 <__aeabi_ui2d>
    6f00:	4602      	mov	r2, r0
    6f02:	460b      	mov	r3, r1
    6f04:	4650      	mov	r0, sl
    6f06:	4659      	mov	r1, fp
    6f08:	f7fd fd7e 	bl	4a08 <__adddf3>
    6f0c:	4682      	mov	sl, r0
    6f0e:	468b      	mov	fp, r1
    6f10:	2c0f      	cmp	r4, #15
    6f12:	dc38      	bgt.n	6f86 <_strtod_l+0x42e>
    6f14:	9b08      	ldr	r3, [sp, #32]
    6f16:	2b00      	cmp	r3, #0
    6f18:	f43f ae5c 	beq.w	6bd4 <_strtod_l+0x7c>
    6f1c:	dd24      	ble.n	6f68 <_strtod_l+0x410>
    6f1e:	2b16      	cmp	r3, #22
    6f20:	dc0b      	bgt.n	6f3a <_strtod_l+0x3e2>
    6f22:	4c68      	ldr	r4, [pc, #416]	; (70c4 <_strtod_l+0x56c>)
    6f24:	eb04 04c3 	add.w	r4, r4, r3, lsl #3
    6f28:	e9d4 0100 	ldrd	r0, r1, [r4]
    6f2c:	4652      	mov	r2, sl
    6f2e:	465b      	mov	r3, fp
    6f30:	f7fd ff20 	bl	4d74 <__aeabi_dmul>
    6f34:	4682      	mov	sl, r0
    6f36:	468b      	mov	fp, r1
    6f38:	e64c      	b.n	6bd4 <_strtod_l+0x7c>
    6f3a:	9a08      	ldr	r2, [sp, #32]
    6f3c:	f1c4 0325 	rsb	r3, r4, #37	; 0x25
    6f40:	4293      	cmp	r3, r2
    6f42:	db20      	blt.n	6f86 <_strtod_l+0x42e>
    6f44:	4d5f      	ldr	r5, [pc, #380]	; (70c4 <_strtod_l+0x56c>)
    6f46:	f1c4 040f 	rsb	r4, r4, #15
    6f4a:	eb05 01c4 	add.w	r1, r5, r4, lsl #3
    6f4e:	4652      	mov	r2, sl
    6f50:	465b      	mov	r3, fp
    6f52:	e9d1 0100 	ldrd	r0, r1, [r1]
    6f56:	f7fd ff0d 	bl	4d74 <__aeabi_dmul>
    6f5a:	9b08      	ldr	r3, [sp, #32]
    6f5c:	1b1c      	subs	r4, r3, r4
    6f5e:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
    6f62:	e9d5 2300 	ldrd	r2, r3, [r5]
    6f66:	e7e3      	b.n	6f30 <_strtod_l+0x3d8>
    6f68:	9b08      	ldr	r3, [sp, #32]
    6f6a:	3316      	adds	r3, #22
    6f6c:	db0b      	blt.n	6f86 <_strtod_l+0x42e>
    6f6e:	9b05      	ldr	r3, [sp, #20]
    6f70:	4a54      	ldr	r2, [pc, #336]	; (70c4 <_strtod_l+0x56c>)
    6f72:	1b5d      	subs	r5, r3, r5
    6f74:	eb02 05c5 	add.w	r5, r2, r5, lsl #3
    6f78:	e9d5 2300 	ldrd	r2, r3, [r5]
    6f7c:	4650      	mov	r0, sl
    6f7e:	4659      	mov	r1, fp
    6f80:	f7fe f822 	bl	4fc8 <__aeabi_ddiv>
    6f84:	e7d6      	b.n	6f34 <_strtod_l+0x3dc>
    6f86:	9b08      	ldr	r3, [sp, #32]
    6f88:	1ba6      	subs	r6, r4, r6
    6f8a:	441e      	add	r6, r3
    6f8c:	2e00      	cmp	r6, #0
    6f8e:	dd6e      	ble.n	706e <_strtod_l+0x516>
    6f90:	f016 030f 	ands.w	r3, r6, #15
    6f94:	d00a      	beq.n	6fac <_strtod_l+0x454>
    6f96:	494b      	ldr	r1, [pc, #300]	; (70c4 <_strtod_l+0x56c>)
    6f98:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
    6f9c:	4652      	mov	r2, sl
    6f9e:	465b      	mov	r3, fp
    6fa0:	e9d1 0100 	ldrd	r0, r1, [r1]
    6fa4:	f7fd fee6 	bl	4d74 <__aeabi_dmul>
    6fa8:	4682      	mov	sl, r0
    6faa:	468b      	mov	fp, r1
    6fac:	f036 060f 	bics.w	r6, r6, #15
    6fb0:	d04e      	beq.n	7050 <_strtod_l+0x4f8>
    6fb2:	f5b6 7f9a 	cmp.w	r6, #308	; 0x134
    6fb6:	dd23      	ble.n	7000 <_strtod_l+0x4a8>
    6fb8:	2400      	movs	r4, #0
    6fba:	9405      	str	r4, [sp, #20]
    6fbc:	9409      	str	r4, [sp, #36]	; 0x24
    6fbe:	9407      	str	r4, [sp, #28]
    6fc0:	9a04      	ldr	r2, [sp, #16]
    6fc2:	f8df b108 	ldr.w	fp, [pc, #264]	; 70cc <_strtod_l+0x574>
    6fc6:	2322      	movs	r3, #34	; 0x22
    6fc8:	6013      	str	r3, [r2, #0]
    6fca:	f04f 0a00 	mov.w	sl, #0
    6fce:	9b09      	ldr	r3, [sp, #36]	; 0x24
    6fd0:	2b00      	cmp	r3, #0
    6fd2:	f43f adff 	beq.w	6bd4 <_strtod_l+0x7c>
    6fd6:	991c      	ldr	r1, [sp, #112]	; 0x70
    6fd8:	9804      	ldr	r0, [sp, #16]
    6fda:	f002 f9d9 	bl	9390 <_Bfree>
    6fde:	9907      	ldr	r1, [sp, #28]
    6fe0:	9804      	ldr	r0, [sp, #16]
    6fe2:	f002 f9d5 	bl	9390 <_Bfree>
    6fe6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    6fea:	f002 f9d1 	bl	9390 <_Bfree>
    6fee:	9909      	ldr	r1, [sp, #36]	; 0x24
    6ff0:	9804      	ldr	r0, [sp, #16]
    6ff2:	f002 f9cd 	bl	9390 <_Bfree>
    6ff6:	4621      	mov	r1, r4
    6ff8:	9804      	ldr	r0, [sp, #16]
    6ffa:	f002 f9c9 	bl	9390 <_Bfree>
    6ffe:	e5e9      	b.n	6bd4 <_strtod_l+0x7c>
    7000:	2300      	movs	r3, #0
    7002:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 70c8 <_strtod_l+0x570>
    7006:	1136      	asrs	r6, r6, #4
    7008:	4650      	mov	r0, sl
    700a:	4659      	mov	r1, fp
    700c:	461f      	mov	r7, r3
    700e:	2e01      	cmp	r6, #1
    7010:	dc21      	bgt.n	7056 <_strtod_l+0x4fe>
    7012:	b10b      	cbz	r3, 7018 <_strtod_l+0x4c0>
    7014:	4682      	mov	sl, r0
    7016:	468b      	mov	fp, r1
    7018:	4b2b      	ldr	r3, [pc, #172]	; (70c8 <_strtod_l+0x570>)
    701a:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
    701e:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
    7022:	4652      	mov	r2, sl
    7024:	465b      	mov	r3, fp
    7026:	e9d7 0100 	ldrd	r0, r1, [r7]
    702a:	f7fd fea3 	bl	4d74 <__aeabi_dmul>
    702e:	4b27      	ldr	r3, [pc, #156]	; (70cc <_strtod_l+0x574>)
    7030:	460a      	mov	r2, r1
    7032:	400b      	ands	r3, r1
    7034:	4926      	ldr	r1, [pc, #152]	; (70d0 <_strtod_l+0x578>)
    7036:	428b      	cmp	r3, r1
    7038:	4682      	mov	sl, r0
    703a:	d8bd      	bhi.n	6fb8 <_strtod_l+0x460>
    703c:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
    7040:	428b      	cmp	r3, r1
    7042:	bf86      	itte	hi
    7044:	f8df b08c 	ldrhi.w	fp, [pc, #140]	; 70d4 <_strtod_l+0x57c>
    7048:	f04f 3aff 	movhi.w	sl, #4294967295
    704c:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
    7050:	2300      	movs	r3, #0
    7052:	9306      	str	r3, [sp, #24]
    7054:	e079      	b.n	714a <_strtod_l+0x5f2>
    7056:	07f2      	lsls	r2, r6, #31
    7058:	d506      	bpl.n	7068 <_strtod_l+0x510>
    705a:	eb09 03c7 	add.w	r3, r9, r7, lsl #3
    705e:	e9d3 2300 	ldrd	r2, r3, [r3]
    7062:	f7fd fe87 	bl	4d74 <__aeabi_dmul>
    7066:	2301      	movs	r3, #1
    7068:	3701      	adds	r7, #1
    706a:	1076      	asrs	r6, r6, #1
    706c:	e7cf      	b.n	700e <_strtod_l+0x4b6>
    706e:	d0ef      	beq.n	7050 <_strtod_l+0x4f8>
    7070:	4276      	negs	r6, r6
    7072:	f016 020f 	ands.w	r2, r6, #15
    7076:	d00a      	beq.n	708e <_strtod_l+0x536>
    7078:	4b12      	ldr	r3, [pc, #72]	; (70c4 <_strtod_l+0x56c>)
    707a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
    707e:	4650      	mov	r0, sl
    7080:	4659      	mov	r1, fp
    7082:	e9d3 2300 	ldrd	r2, r3, [r3]
    7086:	f7fd ff9f 	bl	4fc8 <__aeabi_ddiv>
    708a:	4682      	mov	sl, r0
    708c:	468b      	mov	fp, r1
    708e:	1136      	asrs	r6, r6, #4
    7090:	d0de      	beq.n	7050 <_strtod_l+0x4f8>
    7092:	2e1f      	cmp	r6, #31
    7094:	dd20      	ble.n	70d8 <_strtod_l+0x580>
    7096:	2400      	movs	r4, #0
    7098:	9405      	str	r4, [sp, #20]
    709a:	9409      	str	r4, [sp, #36]	; 0x24
    709c:	9407      	str	r4, [sp, #28]
    709e:	9a04      	ldr	r2, [sp, #16]
    70a0:	2322      	movs	r3, #34	; 0x22
    70a2:	f04f 0a00 	mov.w	sl, #0
    70a6:	f04f 0b00 	mov.w	fp, #0
    70aa:	6013      	str	r3, [r2, #0]
    70ac:	e78f      	b.n	6fce <_strtod_l+0x476>
    70ae:	bf00      	nop
    70b0:	0000be3e 	.word	0x0000be3e
    70b4:	0000bec3 	.word	0x0000bec3
    70b8:	0000be46 	.word	0x0000be46
    70bc:	0000be84 	.word	0x0000be84
    70c0:	0000b65c 	.word	0x0000b65c
    70c4:	0000bf70 	.word	0x0000bf70
    70c8:	0000bf48 	.word	0x0000bf48
    70cc:	7ff00000 	.word	0x7ff00000
    70d0:	7ca00000 	.word	0x7ca00000
    70d4:	7fefffff 	.word	0x7fefffff
    70d8:	f016 0310 	ands.w	r3, r6, #16
    70dc:	bf18      	it	ne
    70de:	236a      	movne	r3, #106	; 0x6a
    70e0:	4fae      	ldr	r7, [pc, #696]	; (739c <_strtod_l+0x844>)
    70e2:	9306      	str	r3, [sp, #24]
    70e4:	4650      	mov	r0, sl
    70e6:	4659      	mov	r1, fp
    70e8:	2300      	movs	r3, #0
    70ea:	07f2      	lsls	r2, r6, #31
    70ec:	d504      	bpl.n	70f8 <_strtod_l+0x5a0>
    70ee:	e9d7 2300 	ldrd	r2, r3, [r7]
    70f2:	f7fd fe3f 	bl	4d74 <__aeabi_dmul>
    70f6:	2301      	movs	r3, #1
    70f8:	1076      	asrs	r6, r6, #1
    70fa:	f107 0708 	add.w	r7, r7, #8
    70fe:	d1f4      	bne.n	70ea <_strtod_l+0x592>
    7100:	b10b      	cbz	r3, 7106 <_strtod_l+0x5ae>
    7102:	4682      	mov	sl, r0
    7104:	468b      	mov	fp, r1
    7106:	9b06      	ldr	r3, [sp, #24]
    7108:	b1bb      	cbz	r3, 713a <_strtod_l+0x5e2>
    710a:	f3cb 530a 	ubfx	r3, fp, #20, #11
    710e:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
    7112:	2b00      	cmp	r3, #0
    7114:	4659      	mov	r1, fp
    7116:	dd10      	ble.n	713a <_strtod_l+0x5e2>
    7118:	2b1f      	cmp	r3, #31
    711a:	f340 8129 	ble.w	7370 <_strtod_l+0x818>
    711e:	2b34      	cmp	r3, #52	; 0x34
    7120:	bfde      	ittt	le
    7122:	3b20      	suble	r3, #32
    7124:	f04f 32ff 	movle.w	r2, #4294967295
    7128:	fa02 f303 	lslle.w	r3, r2, r3
    712c:	f04f 0a00 	mov.w	sl, #0
    7130:	bfcc      	ite	gt
    7132:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
    7136:	ea03 0b01 	andle.w	fp, r3, r1
    713a:	2200      	movs	r2, #0
    713c:	2300      	movs	r3, #0
    713e:	4650      	mov	r0, sl
    7140:	4659      	mov	r1, fp
    7142:	f003 fc71 	bl	aa28 <__aeabi_dcmpeq>
    7146:	2800      	cmp	r0, #0
    7148:	d1a5      	bne.n	7096 <_strtod_l+0x53e>
    714a:	9b07      	ldr	r3, [sp, #28]
    714c:	9300      	str	r3, [sp, #0]
    714e:	4642      	mov	r2, r8
    7150:	4623      	mov	r3, r4
    7152:	9909      	ldr	r1, [sp, #36]	; 0x24
    7154:	9804      	ldr	r0, [sp, #16]
    7156:	f002 f96d 	bl	9434 <__s2b>
    715a:	9009      	str	r0, [sp, #36]	; 0x24
    715c:	2800      	cmp	r0, #0
    715e:	f43f af2b 	beq.w	6fb8 <_strtod_l+0x460>
    7162:	9b05      	ldr	r3, [sp, #20]
    7164:	1b5d      	subs	r5, r3, r5
    7166:	9b08      	ldr	r3, [sp, #32]
    7168:	2b00      	cmp	r3, #0
    716a:	bfb4      	ite	lt
    716c:	462b      	movlt	r3, r5
    716e:	2300      	movge	r3, #0
    7170:	930e      	str	r3, [sp, #56]	; 0x38
    7172:	9b08      	ldr	r3, [sp, #32]
    7174:	2400      	movs	r4, #0
    7176:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
    717a:	9316      	str	r3, [sp, #88]	; 0x58
    717c:	9405      	str	r4, [sp, #20]
    717e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    7180:	9804      	ldr	r0, [sp, #16]
    7182:	6859      	ldr	r1, [r3, #4]
    7184:	f002 f8d0 	bl	9328 <_Balloc>
    7188:	9007      	str	r0, [sp, #28]
    718a:	2800      	cmp	r0, #0
    718c:	f43f af18 	beq.w	6fc0 <_strtod_l+0x468>
    7190:	9b09      	ldr	r3, [sp, #36]	; 0x24
    7192:	691a      	ldr	r2, [r3, #16]
    7194:	3202      	adds	r2, #2
    7196:	f103 010c 	add.w	r1, r3, #12
    719a:	0092      	lsls	r2, r2, #2
    719c:	300c      	adds	r0, #12
    719e:	f7fe fa47 	bl	5630 <memcpy>
    71a2:	aa1e      	add	r2, sp, #120	; 0x78
    71a4:	a91d      	add	r1, sp, #116	; 0x74
    71a6:	ec4b ab10 	vmov	d0, sl, fp
    71aa:	9804      	ldr	r0, [sp, #16]
    71ac:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
    71b0:	f002 fbf6 	bl	99a0 <__d2b>
    71b4:	901c      	str	r0, [sp, #112]	; 0x70
    71b6:	2800      	cmp	r0, #0
    71b8:	f43f af02 	beq.w	6fc0 <_strtod_l+0x468>
    71bc:	2101      	movs	r1, #1
    71be:	9804      	ldr	r0, [sp, #16]
    71c0:	f002 f9c6 	bl	9550 <__i2b>
    71c4:	9005      	str	r0, [sp, #20]
    71c6:	4603      	mov	r3, r0
    71c8:	2800      	cmp	r0, #0
    71ca:	f43f aef9 	beq.w	6fc0 <_strtod_l+0x468>
    71ce:	9e1d      	ldr	r6, [sp, #116]	; 0x74
    71d0:	9a1e      	ldr	r2, [sp, #120]	; 0x78
    71d2:	2e00      	cmp	r6, #0
    71d4:	bfab      	itete	ge
    71d6:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
    71d8:	9b16      	ldrlt	r3, [sp, #88]	; 0x58
    71da:	9d16      	ldrge	r5, [sp, #88]	; 0x58
    71dc:	9f0e      	ldrlt	r7, [sp, #56]	; 0x38
    71de:	bfac      	ite	ge
    71e0:	18f7      	addge	r7, r6, r3
    71e2:	1b9d      	sublt	r5, r3, r6
    71e4:	9b06      	ldr	r3, [sp, #24]
    71e6:	1af6      	subs	r6, r6, r3
    71e8:	4416      	add	r6, r2
    71ea:	4b6d      	ldr	r3, [pc, #436]	; (73a0 <_strtod_l+0x848>)
    71ec:	3e01      	subs	r6, #1
    71ee:	429e      	cmp	r6, r3
    71f0:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
    71f4:	f280 80c3 	bge.w	737e <_strtod_l+0x826>
    71f8:	1b9b      	subs	r3, r3, r6
    71fa:	2b1f      	cmp	r3, #31
    71fc:	bfc2      	ittt	gt
    71fe:	f1c6 467f 	rsbgt	r6, r6, #4278190080	; 0xff000000
    7202:	f506 067f 	addgt.w	r6, r6, #16711680	; 0xff0000
    7206:	f506 467b 	addgt.w	r6, r6, #64256	; 0xfb00
    720a:	f04f 0801 	mov.w	r8, #1
    720e:	bfc8      	it	gt
    7210:	36e2      	addgt	r6, #226	; 0xe2
    7212:	eba2 0203 	sub.w	r2, r2, r3
    7216:	bfda      	itte	le
    7218:	fa08 f803 	lslle.w	r8, r8, r3
    721c:	2600      	movle	r6, #0
    721e:	fa08 f606 	lslgt.w	r6, r8, r6
    7222:	eb07 0902 	add.w	r9, r7, r2
    7226:	9b06      	ldr	r3, [sp, #24]
    7228:	454f      	cmp	r7, r9
    722a:	4415      	add	r5, r2
    722c:	441d      	add	r5, r3
    722e:	463b      	mov	r3, r7
    7230:	bfa8      	it	ge
    7232:	464b      	movge	r3, r9
    7234:	42ab      	cmp	r3, r5
    7236:	bfa8      	it	ge
    7238:	462b      	movge	r3, r5
    723a:	2b00      	cmp	r3, #0
    723c:	bfc2      	ittt	gt
    723e:	eba9 0903 	subgt.w	r9, r9, r3
    7242:	1aed      	subgt	r5, r5, r3
    7244:	1aff      	subgt	r7, r7, r3
    7246:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    7248:	2b00      	cmp	r3, #0
    724a:	dd17      	ble.n	727c <_strtod_l+0x724>
    724c:	461a      	mov	r2, r3
    724e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    7252:	f002 fa17 	bl	9684 <__pow5mult>
    7256:	9005      	str	r0, [sp, #20]
    7258:	2800      	cmp	r0, #0
    725a:	f43f aeb1 	beq.w	6fc0 <_strtod_l+0x468>
    725e:	4601      	mov	r1, r0
    7260:	9a1c      	ldr	r2, [sp, #112]	; 0x70
    7262:	9804      	ldr	r0, [sp, #16]
    7264:	f002 f97d 	bl	9562 <__multiply>
    7268:	900d      	str	r0, [sp, #52]	; 0x34
    726a:	2800      	cmp	r0, #0
    726c:	f43f aea8 	beq.w	6fc0 <_strtod_l+0x468>
    7270:	991c      	ldr	r1, [sp, #112]	; 0x70
    7272:	9804      	ldr	r0, [sp, #16]
    7274:	f002 f88c 	bl	9390 <_Bfree>
    7278:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    727a:	931c      	str	r3, [sp, #112]	; 0x70
    727c:	f1b9 0f00 	cmp.w	r9, #0
    7280:	f300 8081 	bgt.w	7386 <_strtod_l+0x82e>
    7284:	9b08      	ldr	r3, [sp, #32]
    7286:	2b00      	cmp	r3, #0
    7288:	dd08      	ble.n	729c <_strtod_l+0x744>
    728a:	9a16      	ldr	r2, [sp, #88]	; 0x58
    728c:	9907      	ldr	r1, [sp, #28]
    728e:	9804      	ldr	r0, [sp, #16]
    7290:	f002 f9f8 	bl	9684 <__pow5mult>
    7294:	9007      	str	r0, [sp, #28]
    7296:	2800      	cmp	r0, #0
    7298:	f43f ae92 	beq.w	6fc0 <_strtod_l+0x468>
    729c:	2d00      	cmp	r5, #0
    729e:	dd08      	ble.n	72b2 <_strtod_l+0x75a>
    72a0:	462a      	mov	r2, r5
    72a2:	9907      	ldr	r1, [sp, #28]
    72a4:	9804      	ldr	r0, [sp, #16]
    72a6:	f002 fa3b 	bl	9720 <__lshift>
    72aa:	9007      	str	r0, [sp, #28]
    72ac:	2800      	cmp	r0, #0
    72ae:	f43f ae87 	beq.w	6fc0 <_strtod_l+0x468>
    72b2:	2f00      	cmp	r7, #0
    72b4:	dd08      	ble.n	72c8 <_strtod_l+0x770>
    72b6:	463a      	mov	r2, r7
    72b8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    72bc:	f002 fa30 	bl	9720 <__lshift>
    72c0:	9005      	str	r0, [sp, #20]
    72c2:	2800      	cmp	r0, #0
    72c4:	f43f ae7c 	beq.w	6fc0 <_strtod_l+0x468>
    72c8:	9a07      	ldr	r2, [sp, #28]
    72ca:	991c      	ldr	r1, [sp, #112]	; 0x70
    72cc:	9804      	ldr	r0, [sp, #16]
    72ce:	f002 fa94 	bl	97fa <__mdiff>
    72d2:	4604      	mov	r4, r0
    72d4:	2800      	cmp	r0, #0
    72d6:	f43f ae73 	beq.w	6fc0 <_strtod_l+0x468>
    72da:	68c3      	ldr	r3, [r0, #12]
    72dc:	930d      	str	r3, [sp, #52]	; 0x34
    72de:	2300      	movs	r3, #0
    72e0:	60c3      	str	r3, [r0, #12]
    72e2:	9905      	ldr	r1, [sp, #20]
    72e4:	f002 fa6f 	bl	97c6 <__mcmp>
    72e8:	2800      	cmp	r0, #0
    72ea:	da5f      	bge.n	73ac <_strtod_l+0x854>
    72ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    72ee:	ea53 030a 	orrs.w	r3, r3, sl
    72f2:	f040 8081 	bne.w	73f8 <_strtod_l+0x8a0>
    72f6:	f3cb 0313 	ubfx	r3, fp, #0, #20
    72fa:	2b00      	cmp	r3, #0
    72fc:	d17c      	bne.n	73f8 <_strtod_l+0x8a0>
    72fe:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
    7302:	0d1b      	lsrs	r3, r3, #20
    7304:	051b      	lsls	r3, r3, #20
    7306:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
    730a:	d975      	bls.n	73f8 <_strtod_l+0x8a0>
    730c:	6963      	ldr	r3, [r4, #20]
    730e:	b913      	cbnz	r3, 7316 <_strtod_l+0x7be>
    7310:	6923      	ldr	r3, [r4, #16]
    7312:	2b01      	cmp	r3, #1
    7314:	dd70      	ble.n	73f8 <_strtod_l+0x8a0>
    7316:	4621      	mov	r1, r4
    7318:	2201      	movs	r2, #1
    731a:	9804      	ldr	r0, [sp, #16]
    731c:	f002 fa00 	bl	9720 <__lshift>
    7320:	9905      	ldr	r1, [sp, #20]
    7322:	4604      	mov	r4, r0
    7324:	f002 fa4f 	bl	97c6 <__mcmp>
    7328:	2800      	cmp	r0, #0
    732a:	dd65      	ble.n	73f8 <_strtod_l+0x8a0>
    732c:	9906      	ldr	r1, [sp, #24]
    732e:	4a1d      	ldr	r2, [pc, #116]	; (73a4 <_strtod_l+0x84c>)
    7330:	465b      	mov	r3, fp
    7332:	2900      	cmp	r1, #0
    7334:	d07f      	beq.n	7436 <_strtod_l+0x8de>
    7336:	ea02 010b 	and.w	r1, r2, fp
    733a:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
    733e:	dc7a      	bgt.n	7436 <_strtod_l+0x8de>
    7340:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
    7344:	f77f aeab 	ble.w	709e <_strtod_l+0x546>
    7348:	4a17      	ldr	r2, [pc, #92]	; (73a8 <_strtod_l+0x850>)
    734a:	2300      	movs	r3, #0
    734c:	e9cd 3214 	strd	r3, r2, [sp, #80]	; 0x50
    7350:	4650      	mov	r0, sl
    7352:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
    7356:	4659      	mov	r1, fp
    7358:	f7fd fd0c 	bl	4d74 <__aeabi_dmul>
    735c:	460b      	mov	r3, r1
    735e:	4303      	orrs	r3, r0
    7360:	bf04      	itt	eq
    7362:	9a04      	ldreq	r2, [sp, #16]
    7364:	2322      	moveq	r3, #34	; 0x22
    7366:	4682      	mov	sl, r0
    7368:	468b      	mov	fp, r1
    736a:	bf08      	it	eq
    736c:	6013      	streq	r3, [r2, #0]
    736e:	e632      	b.n	6fd6 <_strtod_l+0x47e>
    7370:	f04f 32ff 	mov.w	r2, #4294967295
    7374:	fa02 f303 	lsl.w	r3, r2, r3
    7378:	ea03 0a0a 	and.w	sl, r3, sl
    737c:	e6dd      	b.n	713a <_strtod_l+0x5e2>
    737e:	2600      	movs	r6, #0
    7380:	f04f 0801 	mov.w	r8, #1
    7384:	e74d      	b.n	7222 <_strtod_l+0x6ca>
    7386:	464a      	mov	r2, r9
    7388:	991c      	ldr	r1, [sp, #112]	; 0x70
    738a:	9804      	ldr	r0, [sp, #16]
    738c:	f002 f9c8 	bl	9720 <__lshift>
    7390:	901c      	str	r0, [sp, #112]	; 0x70
    7392:	2800      	cmp	r0, #0
    7394:	f47f af76 	bne.w	7284 <_strtod_l+0x72c>
    7398:	e612      	b.n	6fc0 <_strtod_l+0x468>
    739a:	bf00      	nop
    739c:	0000be98 	.word	0x0000be98
    73a0:	fffffc02 	.word	0xfffffc02
    73a4:	7ff00000 	.word	0x7ff00000
    73a8:	39500000 	.word	0x39500000
    73ac:	465d      	mov	r5, fp
    73ae:	d160      	bne.n	7472 <_strtod_l+0x91a>
    73b0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    73b2:	f3cb 0313 	ubfx	r3, fp, #0, #20
    73b6:	b342      	cbz	r2, 740a <_strtod_l+0x8b2>
    73b8:	4ab7      	ldr	r2, [pc, #732]	; (7698 <_strtod_l+0xb40>)
    73ba:	4293      	cmp	r3, r2
    73bc:	d128      	bne.n	7410 <_strtod_l+0x8b8>
    73be:	9b06      	ldr	r3, [sp, #24]
    73c0:	4650      	mov	r0, sl
    73c2:	b1eb      	cbz	r3, 7400 <_strtod_l+0x8a8>
    73c4:	4ab5      	ldr	r2, [pc, #724]	; (769c <_strtod_l+0xb44>)
    73c6:	402a      	ands	r2, r5
    73c8:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
    73cc:	f04f 31ff 	mov.w	r1, #4294967295
    73d0:	d819      	bhi.n	7406 <_strtod_l+0x8ae>
    73d2:	0d12      	lsrs	r2, r2, #20
    73d4:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
    73d8:	fa01 f303 	lsl.w	r3, r1, r3
    73dc:	4298      	cmp	r0, r3
    73de:	d117      	bne.n	7410 <_strtod_l+0x8b8>
    73e0:	4baf      	ldr	r3, [pc, #700]	; (76a0 <_strtod_l+0xb48>)
    73e2:	429d      	cmp	r5, r3
    73e4:	d102      	bne.n	73ec <_strtod_l+0x894>
    73e6:	3001      	adds	r0, #1
    73e8:	f43f adea 	beq.w	6fc0 <_strtod_l+0x468>
    73ec:	4bab      	ldr	r3, [pc, #684]	; (769c <_strtod_l+0xb44>)
    73ee:	402b      	ands	r3, r5
    73f0:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
    73f4:	f04f 0a00 	mov.w	sl, #0
    73f8:	9b06      	ldr	r3, [sp, #24]
    73fa:	2b00      	cmp	r3, #0
    73fc:	d1a4      	bne.n	7348 <_strtod_l+0x7f0>
    73fe:	e5ea      	b.n	6fd6 <_strtod_l+0x47e>
    7400:	f04f 33ff 	mov.w	r3, #4294967295
    7404:	e7ea      	b.n	73dc <_strtod_l+0x884>
    7406:	460b      	mov	r3, r1
    7408:	e7e8      	b.n	73dc <_strtod_l+0x884>
    740a:	ea53 030a 	orrs.w	r3, r3, sl
    740e:	d08d      	beq.n	732c <_strtod_l+0x7d4>
    7410:	b1de      	cbz	r6, 744a <_strtod_l+0x8f2>
    7412:	422e      	tst	r6, r5
    7414:	d0f0      	beq.n	73f8 <_strtod_l+0x8a0>
    7416:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    7418:	9a06      	ldr	r2, [sp, #24]
    741a:	4650      	mov	r0, sl
    741c:	4659      	mov	r1, fp
    741e:	b1bb      	cbz	r3, 7450 <_strtod_l+0x8f8>
    7420:	f7ff fb7e 	bl	6b20 <sulp>
    7424:	4602      	mov	r2, r0
    7426:	460b      	mov	r3, r1
    7428:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
    742c:	f7fd faec 	bl	4a08 <__adddf3>
    7430:	4682      	mov	sl, r0
    7432:	468b      	mov	fp, r1
    7434:	e7e0      	b.n	73f8 <_strtod_l+0x8a0>
    7436:	4013      	ands	r3, r2
    7438:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
    743c:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
    7440:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
    7444:	f04f 3aff 	mov.w	sl, #4294967295
    7448:	e7d6      	b.n	73f8 <_strtod_l+0x8a0>
    744a:	ea18 0f0a 	tst.w	r8, sl
    744e:	e7e1      	b.n	7414 <_strtod_l+0x8bc>
    7450:	f7ff fb66 	bl	6b20 <sulp>
    7454:	4602      	mov	r2, r0
    7456:	460b      	mov	r3, r1
    7458:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
    745c:	f7fd fad2 	bl	4a04 <__aeabi_dsub>
    7460:	2200      	movs	r2, #0
    7462:	2300      	movs	r3, #0
    7464:	4682      	mov	sl, r0
    7466:	468b      	mov	fp, r1
    7468:	f003 fade 	bl	aa28 <__aeabi_dcmpeq>
    746c:	2800      	cmp	r0, #0
    746e:	d0c3      	beq.n	73f8 <_strtod_l+0x8a0>
    7470:	e615      	b.n	709e <_strtod_l+0x546>
    7472:	9905      	ldr	r1, [sp, #20]
    7474:	4620      	mov	r0, r4
    7476:	f002 fae1 	bl	9a3c <__ratio>
    747a:	ec57 6b10 	vmov	r6, r7, d0
    747e:	2200      	movs	r2, #0
    7480:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    7484:	ee10 0a10 	vmov	r0, s0
    7488:	4639      	mov	r1, r7
    748a:	f003 fae1 	bl	aa50 <__aeabi_dcmple>
    748e:	2800      	cmp	r0, #0
    7490:	d073      	beq.n	757a <_strtod_l+0xa22>
    7492:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    7494:	2b00      	cmp	r3, #0
    7496:	d046      	beq.n	7526 <_strtod_l+0x9ce>
    7498:	f8df 9208 	ldr.w	r9, [pc, #520]	; 76a4 <_strtod_l+0xb4c>
    749c:	f04f 0800 	mov.w	r8, #0
    74a0:	4f80      	ldr	r7, [pc, #512]	; (76a4 <_strtod_l+0xb4c>)
    74a2:	2600      	movs	r6, #0
    74a4:	4b7d      	ldr	r3, [pc, #500]	; (769c <_strtod_l+0xb44>)
    74a6:	402b      	ands	r3, r5
    74a8:	930f      	str	r3, [sp, #60]	; 0x3c
    74aa:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    74ac:	4b7e      	ldr	r3, [pc, #504]	; (76a8 <_strtod_l+0xb50>)
    74ae:	429a      	cmp	r2, r3
    74b0:	f040 80ab 	bne.w	760a <_strtod_l+0xab2>
    74b4:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
    74b8:	f1a5 7b54 	sub.w	fp, r5, #55574528	; 0x3500000
    74bc:	ec4b ab10 	vmov	d0, sl, fp
    74c0:	e9cd 2314 	strd	r2, r3, [sp, #80]	; 0x50
    74c4:	f002 f9f6 	bl	98b4 <__ulp>
    74c8:	4640      	mov	r0, r8
    74ca:	ec53 2b10 	vmov	r2, r3, d0
    74ce:	4649      	mov	r1, r9
    74d0:	f7fd fc50 	bl	4d74 <__aeabi_dmul>
    74d4:	4652      	mov	r2, sl
    74d6:	465b      	mov	r3, fp
    74d8:	f7fd fa96 	bl	4a08 <__adddf3>
    74dc:	460b      	mov	r3, r1
    74de:	496f      	ldr	r1, [pc, #444]	; (769c <_strtod_l+0xb44>)
    74e0:	4a72      	ldr	r2, [pc, #456]	; (76ac <_strtod_l+0xb54>)
    74e2:	4019      	ands	r1, r3
    74e4:	4291      	cmp	r1, r2
    74e6:	4682      	mov	sl, r0
    74e8:	d95b      	bls.n	75a2 <_strtod_l+0xa4a>
    74ea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    74ec:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
    74f0:	4293      	cmp	r3, r2
    74f2:	d103      	bne.n	74fc <_strtod_l+0x9a4>
    74f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    74f6:	3301      	adds	r3, #1
    74f8:	f43f ad62 	beq.w	6fc0 <_strtod_l+0x468>
    74fc:	f8df b1a0 	ldr.w	fp, [pc, #416]	; 76a0 <_strtod_l+0xb48>
    7500:	f04f 3aff 	mov.w	sl, #4294967295
    7504:	991c      	ldr	r1, [sp, #112]	; 0x70
    7506:	9804      	ldr	r0, [sp, #16]
    7508:	f001 ff42 	bl	9390 <_Bfree>
    750c:	9907      	ldr	r1, [sp, #28]
    750e:	9804      	ldr	r0, [sp, #16]
    7510:	f001 ff3e 	bl	9390 <_Bfree>
    7514:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
    7518:	f001 ff3a 	bl	9390 <_Bfree>
    751c:	4621      	mov	r1, r4
    751e:	9804      	ldr	r0, [sp, #16]
    7520:	f001 ff36 	bl	9390 <_Bfree>
    7524:	e62b      	b.n	717e <_strtod_l+0x626>
    7526:	f1ba 0f00 	cmp.w	sl, #0
    752a:	d118      	bne.n	755e <_strtod_l+0xa06>
    752c:	f3cb 0313 	ubfx	r3, fp, #0, #20
    7530:	b9db      	cbnz	r3, 756a <_strtod_l+0xa12>
    7532:	2200      	movs	r2, #0
    7534:	4b5b      	ldr	r3, [pc, #364]	; (76a4 <_strtod_l+0xb4c>)
    7536:	4630      	mov	r0, r6
    7538:	4639      	mov	r1, r7
    753a:	f003 fa7f 	bl	aa3c <__aeabi_dcmplt>
    753e:	b9c8      	cbnz	r0, 7574 <_strtod_l+0xa1c>
    7540:	4630      	mov	r0, r6
    7542:	4639      	mov	r1, r7
    7544:	2200      	movs	r2, #0
    7546:	4b5a      	ldr	r3, [pc, #360]	; (76b0 <_strtod_l+0xb58>)
    7548:	f7fd fc14 	bl	4d74 <__aeabi_dmul>
    754c:	4606      	mov	r6, r0
    754e:	460f      	mov	r7, r1
    7550:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
    7554:	9618      	str	r6, [sp, #96]	; 0x60
    7556:	9319      	str	r3, [sp, #100]	; 0x64
    7558:	e9dd 8918 	ldrd	r8, r9, [sp, #96]	; 0x60
    755c:	e7a2      	b.n	74a4 <_strtod_l+0x94c>
    755e:	f1ba 0f01 	cmp.w	sl, #1
    7562:	d102      	bne.n	756a <_strtod_l+0xa12>
    7564:	2d00      	cmp	r5, #0
    7566:	f43f ad9a 	beq.w	709e <_strtod_l+0x546>
    756a:	f04f 0800 	mov.w	r8, #0
    756e:	f8df 9144 	ldr.w	r9, [pc, #324]	; 76b4 <_strtod_l+0xb5c>
    7572:	e795      	b.n	74a0 <_strtod_l+0x948>
    7574:	2600      	movs	r6, #0
    7576:	4f4e      	ldr	r7, [pc, #312]	; (76b0 <_strtod_l+0xb58>)
    7578:	e7ea      	b.n	7550 <_strtod_l+0x9f8>
    757a:	4b4d      	ldr	r3, [pc, #308]	; (76b0 <_strtod_l+0xb58>)
    757c:	4630      	mov	r0, r6
    757e:	4639      	mov	r1, r7
    7580:	2200      	movs	r2, #0
    7582:	f7fd fbf7 	bl	4d74 <__aeabi_dmul>
    7586:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    7588:	4606      	mov	r6, r0
    758a:	460f      	mov	r7, r1
    758c:	b933      	cbnz	r3, 759c <_strtod_l+0xa44>
    758e:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
    7592:	9010      	str	r0, [sp, #64]	; 0x40
    7594:	9311      	str	r3, [sp, #68]	; 0x44
    7596:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	; 0x40
    759a:	e783      	b.n	74a4 <_strtod_l+0x94c>
    759c:	e9cd 6710 	strd	r6, r7, [sp, #64]	; 0x40
    75a0:	e7f9      	b.n	7596 <_strtod_l+0xa3e>
    75a2:	f103 7b54 	add.w	fp, r3, #55574528	; 0x3500000
    75a6:	9b06      	ldr	r3, [sp, #24]
    75a8:	2b00      	cmp	r3, #0
    75aa:	d1ab      	bne.n	7504 <_strtod_l+0x9ac>
    75ac:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
    75b0:	0d1b      	lsrs	r3, r3, #20
    75b2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    75b4:	051b      	lsls	r3, r3, #20
    75b6:	429a      	cmp	r2, r3
    75b8:	d1a4      	bne.n	7504 <_strtod_l+0x9ac>
    75ba:	4630      	mov	r0, r6
    75bc:	4639      	mov	r1, r7
    75be:	f003 faf3 	bl	aba8 <__aeabi_d2lz>
    75c2:	f7fd fba9 	bl	4d18 <__aeabi_l2d>
    75c6:	4602      	mov	r2, r0
    75c8:	460b      	mov	r3, r1
    75ca:	4630      	mov	r0, r6
    75cc:	4639      	mov	r1, r7
    75ce:	f7fd fa19 	bl	4a04 <__aeabi_dsub>
    75d2:	f3cb 0313 	ubfx	r3, fp, #0, #20
    75d6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    75d8:	ea43 030a 	orr.w	r3, r3, sl
    75dc:	4313      	orrs	r3, r2
    75de:	4606      	mov	r6, r0
    75e0:	460f      	mov	r7, r1
    75e2:	d069      	beq.n	76b8 <_strtod_l+0xb60>
    75e4:	a326      	add	r3, pc, #152	; (adr r3, 7680 <_strtod_l+0xb28>)
    75e6:	e9d3 2300 	ldrd	r2, r3, [r3]
    75ea:	f003 fa27 	bl	aa3c <__aeabi_dcmplt>
    75ee:	2800      	cmp	r0, #0
    75f0:	f47f acf1 	bne.w	6fd6 <_strtod_l+0x47e>
    75f4:	a324      	add	r3, pc, #144	; (adr r3, 7688 <_strtod_l+0xb30>)
    75f6:	e9d3 2300 	ldrd	r2, r3, [r3]
    75fa:	4630      	mov	r0, r6
    75fc:	4639      	mov	r1, r7
    75fe:	f003 fa3b 	bl	aa78 <__aeabi_dcmpgt>
    7602:	2800      	cmp	r0, #0
    7604:	f43f af7e 	beq.w	7504 <_strtod_l+0x9ac>
    7608:	e4e5      	b.n	6fd6 <_strtod_l+0x47e>
    760a:	9b06      	ldr	r3, [sp, #24]
    760c:	b31b      	cbz	r3, 7656 <_strtod_l+0xafe>
    760e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    7610:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
    7614:	d81f      	bhi.n	7656 <_strtod_l+0xafe>
    7616:	a31e      	add	r3, pc, #120	; (adr r3, 7690 <_strtod_l+0xb38>)
    7618:	e9d3 2300 	ldrd	r2, r3, [r3]
    761c:	4630      	mov	r0, r6
    761e:	4639      	mov	r1, r7
    7620:	f003 fa16 	bl	aa50 <__aeabi_dcmple>
    7624:	b190      	cbz	r0, 764c <_strtod_l+0xaf4>
    7626:	4639      	mov	r1, r7
    7628:	4630      	mov	r0, r6
    762a:	f7fd fdb5 	bl	5198 <__aeabi_d2uiz>
    762e:	2800      	cmp	r0, #0
    7630:	bf08      	it	eq
    7632:	2001      	moveq	r0, #1
    7634:	f7fd fb24 	bl	4c80 <__aeabi_ui2d>
    7638:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    763a:	4606      	mov	r6, r0
    763c:	460f      	mov	r7, r1
    763e:	b9db      	cbnz	r3, 7678 <_strtod_l+0xb20>
    7640:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
    7644:	9012      	str	r0, [sp, #72]	; 0x48
    7646:	9313      	str	r3, [sp, #76]	; 0x4c
    7648:	e9dd 8912 	ldrd	r8, r9, [sp, #72]	; 0x48
    764c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    764e:	f109 63d6 	add.w	r3, r9, #112197632	; 0x6b00000
    7652:	eba3 0902 	sub.w	r9, r3, r2
    7656:	ed9d 0b0a 	vldr	d0, [sp, #40]	; 0x28
    765a:	f002 f92b 	bl	98b4 <__ulp>
    765e:	4640      	mov	r0, r8
    7660:	ec53 2b10 	vmov	r2, r3, d0
    7664:	4649      	mov	r1, r9
    7666:	f7fd fb85 	bl	4d74 <__aeabi_dmul>
    766a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
    766e:	f7fd f9cb 	bl	4a08 <__adddf3>
    7672:	4682      	mov	sl, r0
    7674:	468b      	mov	fp, r1
    7676:	e796      	b.n	75a6 <_strtod_l+0xa4e>
    7678:	e9cd 6712 	strd	r6, r7, [sp, #72]	; 0x48
    767c:	e7e4      	b.n	7648 <_strtod_l+0xaf0>
    767e:	bf00      	nop
    7680:	94a03595 	.word	0x94a03595
    7684:	3fdfffff 	.word	0x3fdfffff
    7688:	35afe535 	.word	0x35afe535
    768c:	3fe00000 	.word	0x3fe00000
    7690:	ffc00000 	.word	0xffc00000
    7694:	41dfffff 	.word	0x41dfffff
    7698:	000fffff 	.word	0x000fffff
    769c:	7ff00000 	.word	0x7ff00000
    76a0:	7fefffff 	.word	0x7fefffff
    76a4:	3ff00000 	.word	0x3ff00000
    76a8:	7fe00000 	.word	0x7fe00000
    76ac:	7c9fffff 	.word	0x7c9fffff
    76b0:	3fe00000 	.word	0x3fe00000
    76b4:	bff00000 	.word	0xbff00000
    76b8:	a30b      	add	r3, pc, #44	; (adr r3, 76e8 <_strtod_l+0xb90>)
    76ba:	e9d3 2300 	ldrd	r2, r3, [r3]
    76be:	f003 f9bd 	bl	aa3c <__aeabi_dcmplt>
    76c2:	e79e      	b.n	7602 <_strtod_l+0xaaa>
    76c4:	2300      	movs	r3, #0
    76c6:	930c      	str	r3, [sp, #48]	; 0x30
    76c8:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    76ca:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
    76cc:	6013      	str	r3, [r2, #0]
    76ce:	f7ff ba85 	b.w	6bdc <_strtod_l+0x84>
    76d2:	2b65      	cmp	r3, #101	; 0x65
    76d4:	f43f ab72 	beq.w	6dbc <_strtod_l+0x264>
    76d8:	2b45      	cmp	r3, #69	; 0x45
    76da:	f43f ab6f 	beq.w	6dbc <_strtod_l+0x264>
    76de:	2201      	movs	r2, #1
    76e0:	f7ff bba4 	b.w	6e2c <_strtod_l+0x2d4>
    76e4:	f3af 8000 	nop.w
    76e8:	94a03595 	.word	0x94a03595
    76ec:	3fcfffff 	.word	0x3fcfffff

000076f0 <_strtod_r>:
_strtod_r():
    76f0:	4b01      	ldr	r3, [pc, #4]	; (76f8 <_strtod_r+0x8>)
    76f2:	f7ff ba31 	b.w	6b58 <_strtod_l>
    76f6:	bf00      	nop
    76f8:	100001cc 	.word	0x100001cc

000076fc <_strtol_l.isra.0>:
_strtol_l.isra.0():
    76fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    7700:	4f39      	ldr	r7, [pc, #228]	; (77e8 <_strtol_l.isra.0+0xec>)
    7702:	4686      	mov	lr, r0
    7704:	4608      	mov	r0, r1
    7706:	4605      	mov	r5, r0
    7708:	f815 4b01 	ldrb.w	r4, [r5], #1
    770c:	5de6      	ldrb	r6, [r4, r7]
    770e:	f016 0608 	ands.w	r6, r6, #8
    7712:	d134      	bne.n	777e <_strtol_l.isra.0+0x82>
    7714:	2c2d      	cmp	r4, #45	; 0x2d
    7716:	d134      	bne.n	7782 <_strtol_l.isra.0+0x86>
    7718:	782c      	ldrb	r4, [r5, #0]
    771a:	f04f 0801 	mov.w	r8, #1
    771e:	1c85      	adds	r5, r0, #2
    7720:	2b00      	cmp	r3, #0
    7722:	d05c      	beq.n	77de <_strtol_l.isra.0+0xe2>
    7724:	2b10      	cmp	r3, #16
    7726:	d109      	bne.n	773c <_strtol_l.isra.0+0x40>
    7728:	2c30      	cmp	r4, #48	; 0x30
    772a:	d107      	bne.n	773c <_strtol_l.isra.0+0x40>
    772c:	7828      	ldrb	r0, [r5, #0]
    772e:	f000 00df 	and.w	r0, r0, #223	; 0xdf
    7732:	2858      	cmp	r0, #88	; 0x58
    7734:	d14e      	bne.n	77d4 <_strtol_l.isra.0+0xd8>
    7736:	786c      	ldrb	r4, [r5, #1]
    7738:	2310      	movs	r3, #16
    773a:	3502      	adds	r5, #2
    773c:	f1b8 0f00 	cmp.w	r8, #0
    7740:	bf14      	ite	ne
    7742:	f04f 4c00 	movne.w	ip, #2147483648	; 0x80000000
    7746:	f06f 4c00 	mvneq.w	ip, #2147483648	; 0x80000000
    774a:	2700      	movs	r7, #0
    774c:	fbbc f9f3 	udiv	r9, ip, r3
    7750:	4638      	mov	r0, r7
    7752:	fb03 ca19 	mls	sl, r3, r9, ip
    7756:	f1a4 0630 	sub.w	r6, r4, #48	; 0x30
    775a:	2e09      	cmp	r6, #9
    775c:	d818      	bhi.n	7790 <_strtol_l.isra.0+0x94>
    775e:	4634      	mov	r4, r6
    7760:	42a3      	cmp	r3, r4
    7762:	dd24      	ble.n	77ae <_strtol_l.isra.0+0xb2>
    7764:	1c7e      	adds	r6, r7, #1
    7766:	d007      	beq.n	7778 <_strtol_l.isra.0+0x7c>
    7768:	4581      	cmp	r9, r0
    776a:	d31d      	bcc.n	77a8 <_strtol_l.isra.0+0xac>
    776c:	d101      	bne.n	7772 <_strtol_l.isra.0+0x76>
    776e:	45a2      	cmp	sl, r4
    7770:	db1a      	blt.n	77a8 <_strtol_l.isra.0+0xac>
    7772:	fb00 4003 	mla	r0, r0, r3, r4
    7776:	2701      	movs	r7, #1
    7778:	f815 4b01 	ldrb.w	r4, [r5], #1
    777c:	e7eb      	b.n	7756 <_strtol_l.isra.0+0x5a>
    777e:	4628      	mov	r0, r5
    7780:	e7c1      	b.n	7706 <_strtol_l.isra.0+0xa>
    7782:	2c2b      	cmp	r4, #43	; 0x2b
    7784:	bf08      	it	eq
    7786:	782c      	ldrbeq	r4, [r5, #0]
    7788:	46b0      	mov	r8, r6
    778a:	bf08      	it	eq
    778c:	1c85      	addeq	r5, r0, #2
    778e:	e7c7      	b.n	7720 <_strtol_l.isra.0+0x24>
    7790:	f1a4 0641 	sub.w	r6, r4, #65	; 0x41
    7794:	2e19      	cmp	r6, #25
    7796:	d801      	bhi.n	779c <_strtol_l.isra.0+0xa0>
    7798:	3c37      	subs	r4, #55	; 0x37
    779a:	e7e1      	b.n	7760 <_strtol_l.isra.0+0x64>
    779c:	f1a4 0661 	sub.w	r6, r4, #97	; 0x61
    77a0:	2e19      	cmp	r6, #25
    77a2:	d804      	bhi.n	77ae <_strtol_l.isra.0+0xb2>
    77a4:	3c57      	subs	r4, #87	; 0x57
    77a6:	e7db      	b.n	7760 <_strtol_l.isra.0+0x64>
    77a8:	f04f 37ff 	mov.w	r7, #4294967295
    77ac:	e7e4      	b.n	7778 <_strtol_l.isra.0+0x7c>
    77ae:	1c7b      	adds	r3, r7, #1
    77b0:	d106      	bne.n	77c0 <_strtol_l.isra.0+0xc4>
    77b2:	2322      	movs	r3, #34	; 0x22
    77b4:	f8ce 3000 	str.w	r3, [lr]
    77b8:	4660      	mov	r0, ip
    77ba:	b942      	cbnz	r2, 77ce <_strtol_l.isra.0+0xd2>
    77bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    77c0:	f1b8 0f00 	cmp.w	r8, #0
    77c4:	d000      	beq.n	77c8 <_strtol_l.isra.0+0xcc>
    77c6:	4240      	negs	r0, r0
    77c8:	2a00      	cmp	r2, #0
    77ca:	d0f7      	beq.n	77bc <_strtol_l.isra.0+0xc0>
    77cc:	b107      	cbz	r7, 77d0 <_strtol_l.isra.0+0xd4>
    77ce:	1e69      	subs	r1, r5, #1
    77d0:	6011      	str	r1, [r2, #0]
    77d2:	e7f3      	b.n	77bc <_strtol_l.isra.0+0xc0>
    77d4:	2430      	movs	r4, #48	; 0x30
    77d6:	2b00      	cmp	r3, #0
    77d8:	d1b0      	bne.n	773c <_strtol_l.isra.0+0x40>
    77da:	2308      	movs	r3, #8
    77dc:	e7ae      	b.n	773c <_strtol_l.isra.0+0x40>
    77de:	2c30      	cmp	r4, #48	; 0x30
    77e0:	d0a4      	beq.n	772c <_strtol_l.isra.0+0x30>
    77e2:	230a      	movs	r3, #10
    77e4:	e7aa      	b.n	773c <_strtol_l.isra.0+0x40>
    77e6:	bf00      	nop
    77e8:	0000bd24 	.word	0x0000bd24

000077ec <_strtol_r>:
_strtol_r():
    77ec:	f7ff bf86 	b.w	76fc <_strtol_l.isra.0>

000077f0 <strtol>:
strtol():
    77f0:	4613      	mov	r3, r2
    77f2:	460a      	mov	r2, r1
    77f4:	4601      	mov	r1, r0
    77f6:	4802      	ldr	r0, [pc, #8]	; (7800 <strtol+0x10>)
    77f8:	6800      	ldr	r0, [r0, #0]
    77fa:	f7ff bf7f 	b.w	76fc <_strtol_l.isra.0>
    77fe:	bf00      	nop
    7800:	10000164 	.word	0x10000164

00007804 <_vsniprintf_r>:
_vsniprintf_r():
    7804:	b530      	push	{r4, r5, lr}
    7806:	1e14      	subs	r4, r2, #0
    7808:	4605      	mov	r5, r0
    780a:	b09b      	sub	sp, #108	; 0x6c
    780c:	4618      	mov	r0, r3
    780e:	da05      	bge.n	781c <_vsniprintf_r+0x18>
    7810:	238b      	movs	r3, #139	; 0x8b
    7812:	602b      	str	r3, [r5, #0]
    7814:	f04f 30ff 	mov.w	r0, #4294967295
    7818:	b01b      	add	sp, #108	; 0x6c
    781a:	bd30      	pop	{r4, r5, pc}
    781c:	f44f 7302 	mov.w	r3, #520	; 0x208
    7820:	f8ad 300c 	strh.w	r3, [sp, #12]
    7824:	bf14      	ite	ne
    7826:	f104 33ff 	addne.w	r3, r4, #4294967295
    782a:	4623      	moveq	r3, r4
    782c:	9302      	str	r3, [sp, #8]
    782e:	9305      	str	r3, [sp, #20]
    7830:	f64f 73ff 	movw	r3, #65535	; 0xffff
    7834:	9100      	str	r1, [sp, #0]
    7836:	9104      	str	r1, [sp, #16]
    7838:	f8ad 300e 	strh.w	r3, [sp, #14]
    783c:	4602      	mov	r2, r0
    783e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
    7840:	4669      	mov	r1, sp
    7842:	4628      	mov	r0, r5
    7844:	f002 f9f8 	bl	9c38 <_svfiprintf_r>
    7848:	1c43      	adds	r3, r0, #1
    784a:	bfbc      	itt	lt
    784c:	238b      	movlt	r3, #139	; 0x8b
    784e:	602b      	strlt	r3, [r5, #0]
    7850:	2c00      	cmp	r4, #0
    7852:	d0e1      	beq.n	7818 <_vsniprintf_r+0x14>
    7854:	9b00      	ldr	r3, [sp, #0]
    7856:	2200      	movs	r2, #0
    7858:	701a      	strb	r2, [r3, #0]
    785a:	e7dd      	b.n	7818 <_vsniprintf_r+0x14>

0000785c <vsniprintf>:
vsniprintf():
    785c:	b507      	push	{r0, r1, r2, lr}
    785e:	9300      	str	r3, [sp, #0]
    7860:	4613      	mov	r3, r2
    7862:	460a      	mov	r2, r1
    7864:	4601      	mov	r1, r0
    7866:	4803      	ldr	r0, [pc, #12]	; (7874 <vsniprintf+0x18>)
    7868:	6800      	ldr	r0, [r0, #0]
    786a:	f7ff ffcb 	bl	7804 <_vsniprintf_r>
    786e:	b003      	add	sp, #12
    7870:	f85d fb04 	ldr.w	pc, [sp], #4
    7874:	10000164 	.word	0x10000164

00007878 <_vsiscanf_r>:
_vsscanf_r():
    7878:	b570      	push	{r4, r5, r6, lr}
    787a:	b09a      	sub	sp, #104	; 0x68
    787c:	4604      	mov	r4, r0
    787e:	461e      	mov	r6, r3
    7880:	4608      	mov	r0, r1
    7882:	f44f 7301 	mov.w	r3, #516	; 0x204
    7886:	4615      	mov	r5, r2
    7888:	f8ad 300c 	strh.w	r3, [sp, #12]
    788c:	9100      	str	r1, [sp, #0]
    788e:	9104      	str	r1, [sp, #16]
    7890:	f7ff f8df 	bl	6a52 <strlen>
    7894:	4b09      	ldr	r3, [pc, #36]	; (78bc <_vsiscanf_r+0x44>)
    7896:	9309      	str	r3, [sp, #36]	; 0x24
    7898:	2100      	movs	r1, #0
    789a:	f64f 73ff 	movw	r3, #65535	; 0xffff
    789e:	9001      	str	r0, [sp, #4]
    78a0:	9005      	str	r0, [sp, #20]
    78a2:	910d      	str	r1, [sp, #52]	; 0x34
    78a4:	9112      	str	r1, [sp, #72]	; 0x48
    78a6:	f8ad 300e 	strh.w	r3, [sp, #14]
    78aa:	462a      	mov	r2, r5
    78ac:	4633      	mov	r3, r6
    78ae:	4669      	mov	r1, sp
    78b0:	4620      	mov	r0, r4
    78b2:	f002 fb13 	bl	9edc <__ssvfiscanf_r>
    78b6:	b01a      	add	sp, #104	; 0x68
    78b8:	bd70      	pop	{r4, r5, r6, pc}
    78ba:	bf00      	nop
    78bc:	0000a587 	.word	0x0000a587

000078c0 <vsiscanf>:
vsiscanf():
    78c0:	4613      	mov	r3, r2
    78c2:	460a      	mov	r2, r1
    78c4:	4601      	mov	r1, r0
    78c6:	4802      	ldr	r0, [pc, #8]	; (78d0 <vsiscanf+0x10>)
    78c8:	6800      	ldr	r0, [r0, #0]
    78ca:	f7ff bfd5 	b.w	7878 <_vsiscanf_r>
    78ce:	bf00      	nop
    78d0:	10000164 	.word	0x10000164

000078d4 <__swbuf_r>:
__swbuf_r():
    78d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    78d6:	460e      	mov	r6, r1
    78d8:	4614      	mov	r4, r2
    78da:	4605      	mov	r5, r0
    78dc:	b118      	cbz	r0, 78e6 <__swbuf_r+0x12>
    78de:	6983      	ldr	r3, [r0, #24]
    78e0:	b90b      	cbnz	r3, 78e6 <__swbuf_r+0x12>
    78e2:	f001 f827 	bl	8934 <__sinit>
    78e6:	4b21      	ldr	r3, [pc, #132]	; (796c <__swbuf_r+0x98>)
    78e8:	429c      	cmp	r4, r3
    78ea:	d12b      	bne.n	7944 <__swbuf_r+0x70>
    78ec:	686c      	ldr	r4, [r5, #4]
    78ee:	69a3      	ldr	r3, [r4, #24]
    78f0:	60a3      	str	r3, [r4, #8]
    78f2:	89a3      	ldrh	r3, [r4, #12]
    78f4:	071a      	lsls	r2, r3, #28
    78f6:	d52f      	bpl.n	7958 <__swbuf_r+0x84>
    78f8:	6923      	ldr	r3, [r4, #16]
    78fa:	b36b      	cbz	r3, 7958 <__swbuf_r+0x84>
    78fc:	6923      	ldr	r3, [r4, #16]
    78fe:	6820      	ldr	r0, [r4, #0]
    7900:	1ac0      	subs	r0, r0, r3
    7902:	6963      	ldr	r3, [r4, #20]
    7904:	b2f6      	uxtb	r6, r6
    7906:	4283      	cmp	r3, r0
    7908:	4637      	mov	r7, r6
    790a:	dc04      	bgt.n	7916 <__swbuf_r+0x42>
    790c:	4621      	mov	r1, r4
    790e:	4628      	mov	r0, r5
    7910:	f000 ff6a 	bl	87e8 <_fflush_r>
    7914:	bb30      	cbnz	r0, 7964 <__swbuf_r+0x90>
    7916:	68a3      	ldr	r3, [r4, #8]
    7918:	3b01      	subs	r3, #1
    791a:	60a3      	str	r3, [r4, #8]
    791c:	6823      	ldr	r3, [r4, #0]
    791e:	1c5a      	adds	r2, r3, #1
    7920:	6022      	str	r2, [r4, #0]
    7922:	701e      	strb	r6, [r3, #0]
    7924:	6963      	ldr	r3, [r4, #20]
    7926:	3001      	adds	r0, #1
    7928:	4283      	cmp	r3, r0
    792a:	d004      	beq.n	7936 <__swbuf_r+0x62>
    792c:	89a3      	ldrh	r3, [r4, #12]
    792e:	07db      	lsls	r3, r3, #31
    7930:	d506      	bpl.n	7940 <__swbuf_r+0x6c>
    7932:	2e0a      	cmp	r6, #10
    7934:	d104      	bne.n	7940 <__swbuf_r+0x6c>
    7936:	4621      	mov	r1, r4
    7938:	4628      	mov	r0, r5
    793a:	f000 ff55 	bl	87e8 <_fflush_r>
    793e:	b988      	cbnz	r0, 7964 <__swbuf_r+0x90>
    7940:	4638      	mov	r0, r7
    7942:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    7944:	4b0a      	ldr	r3, [pc, #40]	; (7970 <__swbuf_r+0x9c>)
    7946:	429c      	cmp	r4, r3
    7948:	d101      	bne.n	794e <__swbuf_r+0x7a>
    794a:	68ac      	ldr	r4, [r5, #8]
    794c:	e7cf      	b.n	78ee <__swbuf_r+0x1a>
    794e:	4b09      	ldr	r3, [pc, #36]	; (7974 <__swbuf_r+0xa0>)
    7950:	429c      	cmp	r4, r3
    7952:	bf08      	it	eq
    7954:	68ec      	ldreq	r4, [r5, #12]
    7956:	e7ca      	b.n	78ee <__swbuf_r+0x1a>
    7958:	4621      	mov	r1, r4
    795a:	4628      	mov	r0, r5
    795c:	f000 f80c 	bl	7978 <__swsetup_r>
    7960:	2800      	cmp	r0, #0
    7962:	d0cb      	beq.n	78fc <__swbuf_r+0x28>
    7964:	f04f 37ff 	mov.w	r7, #4294967295
    7968:	e7ea      	b.n	7940 <__swbuf_r+0x6c>
    796a:	bf00      	nop
    796c:	0000bef0 	.word	0x0000bef0
    7970:	0000bf10 	.word	0x0000bf10
    7974:	0000bed0 	.word	0x0000bed0

00007978 <__swsetup_r>:
__swsetup_r():
    7978:	4b32      	ldr	r3, [pc, #200]	; (7a44 <__swsetup_r+0xcc>)
    797a:	b570      	push	{r4, r5, r6, lr}
    797c:	681d      	ldr	r5, [r3, #0]
    797e:	4606      	mov	r6, r0
    7980:	460c      	mov	r4, r1
    7982:	b125      	cbz	r5, 798e <__swsetup_r+0x16>
    7984:	69ab      	ldr	r3, [r5, #24]
    7986:	b913      	cbnz	r3, 798e <__swsetup_r+0x16>
    7988:	4628      	mov	r0, r5
    798a:	f000 ffd3 	bl	8934 <__sinit>
    798e:	4b2e      	ldr	r3, [pc, #184]	; (7a48 <__swsetup_r+0xd0>)
    7990:	429c      	cmp	r4, r3
    7992:	d10f      	bne.n	79b4 <__swsetup_r+0x3c>
    7994:	686c      	ldr	r4, [r5, #4]
    7996:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    799a:	b29a      	uxth	r2, r3
    799c:	0715      	lsls	r5, r2, #28
    799e:	d42c      	bmi.n	79fa <__swsetup_r+0x82>
    79a0:	06d0      	lsls	r0, r2, #27
    79a2:	d411      	bmi.n	79c8 <__swsetup_r+0x50>
    79a4:	2209      	movs	r2, #9
    79a6:	6032      	str	r2, [r6, #0]
    79a8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    79ac:	81a3      	strh	r3, [r4, #12]
    79ae:	f04f 30ff 	mov.w	r0, #4294967295
    79b2:	e03e      	b.n	7a32 <__swsetup_r+0xba>
    79b4:	4b25      	ldr	r3, [pc, #148]	; (7a4c <__swsetup_r+0xd4>)
    79b6:	429c      	cmp	r4, r3
    79b8:	d101      	bne.n	79be <__swsetup_r+0x46>
    79ba:	68ac      	ldr	r4, [r5, #8]
    79bc:	e7eb      	b.n	7996 <__swsetup_r+0x1e>
    79be:	4b24      	ldr	r3, [pc, #144]	; (7a50 <__swsetup_r+0xd8>)
    79c0:	429c      	cmp	r4, r3
    79c2:	bf08      	it	eq
    79c4:	68ec      	ldreq	r4, [r5, #12]
    79c6:	e7e6      	b.n	7996 <__swsetup_r+0x1e>
    79c8:	0751      	lsls	r1, r2, #29
    79ca:	d512      	bpl.n	79f2 <__swsetup_r+0x7a>
    79cc:	6b61      	ldr	r1, [r4, #52]	; 0x34
    79ce:	b141      	cbz	r1, 79e2 <__swsetup_r+0x6a>
    79d0:	f104 0344 	add.w	r3, r4, #68	; 0x44
    79d4:	4299      	cmp	r1, r3
    79d6:	d002      	beq.n	79de <__swsetup_r+0x66>
    79d8:	4630      	mov	r0, r6
    79da:	f7fd fe59 	bl	5690 <_free_r>
    79de:	2300      	movs	r3, #0
    79e0:	6363      	str	r3, [r4, #52]	; 0x34
    79e2:	89a3      	ldrh	r3, [r4, #12]
    79e4:	f023 0324 	bic.w	r3, r3, #36	; 0x24
    79e8:	81a3      	strh	r3, [r4, #12]
    79ea:	2300      	movs	r3, #0
    79ec:	6063      	str	r3, [r4, #4]
    79ee:	6923      	ldr	r3, [r4, #16]
    79f0:	6023      	str	r3, [r4, #0]
    79f2:	89a3      	ldrh	r3, [r4, #12]
    79f4:	f043 0308 	orr.w	r3, r3, #8
    79f8:	81a3      	strh	r3, [r4, #12]
    79fa:	6923      	ldr	r3, [r4, #16]
    79fc:	b94b      	cbnz	r3, 7a12 <__swsetup_r+0x9a>
    79fe:	89a3      	ldrh	r3, [r4, #12]
    7a00:	f403 7320 	and.w	r3, r3, #640	; 0x280
    7a04:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
    7a08:	d003      	beq.n	7a12 <__swsetup_r+0x9a>
    7a0a:	4621      	mov	r1, r4
    7a0c:	4630      	mov	r0, r6
    7a0e:	f001 fbdb 	bl	91c8 <__smakebuf_r>
    7a12:	89a2      	ldrh	r2, [r4, #12]
    7a14:	f012 0301 	ands.w	r3, r2, #1
    7a18:	d00c      	beq.n	7a34 <__swsetup_r+0xbc>
    7a1a:	2300      	movs	r3, #0
    7a1c:	60a3      	str	r3, [r4, #8]
    7a1e:	6963      	ldr	r3, [r4, #20]
    7a20:	425b      	negs	r3, r3
    7a22:	61a3      	str	r3, [r4, #24]
    7a24:	6923      	ldr	r3, [r4, #16]
    7a26:	b953      	cbnz	r3, 7a3e <__swsetup_r+0xc6>
    7a28:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    7a2c:	f013 0080 	ands.w	r0, r3, #128	; 0x80
    7a30:	d1ba      	bne.n	79a8 <__swsetup_r+0x30>
    7a32:	bd70      	pop	{r4, r5, r6, pc}
    7a34:	0792      	lsls	r2, r2, #30
    7a36:	bf58      	it	pl
    7a38:	6963      	ldrpl	r3, [r4, #20]
    7a3a:	60a3      	str	r3, [r4, #8]
    7a3c:	e7f2      	b.n	7a24 <__swsetup_r+0xac>
    7a3e:	2000      	movs	r0, #0
    7a40:	e7f7      	b.n	7a32 <__swsetup_r+0xba>
    7a42:	bf00      	nop
    7a44:	10000164 	.word	0x10000164
    7a48:	0000bef0 	.word	0x0000bef0
    7a4c:	0000bf10 	.word	0x0000bf10
    7a50:	0000bed0 	.word	0x0000bed0

00007a54 <quorem>:
quorem():
    7a54:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7a58:	6903      	ldr	r3, [r0, #16]
    7a5a:	690c      	ldr	r4, [r1, #16]
    7a5c:	42a3      	cmp	r3, r4
    7a5e:	4680      	mov	r8, r0
    7a60:	db7f      	blt.n	7b62 <quorem+0x10e>
    7a62:	3c01      	subs	r4, #1
    7a64:	f101 0714 	add.w	r7, r1, #20
    7a68:	00a0      	lsls	r0, r4, #2
    7a6a:	f108 0514 	add.w	r5, r8, #20
    7a6e:	182b      	adds	r3, r5, r0
    7a70:	9301      	str	r3, [sp, #4]
    7a72:	f857 3024 	ldr.w	r3, [r7, r4, lsl #2]
    7a76:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
    7a7a:	3301      	adds	r3, #1
    7a7c:	429a      	cmp	r2, r3
    7a7e:	eb07 0900 	add.w	r9, r7, r0
    7a82:	fbb2 f6f3 	udiv	r6, r2, r3
    7a86:	d331      	bcc.n	7aec <quorem+0x98>
    7a88:	f04f 0a00 	mov.w	sl, #0
    7a8c:	46bc      	mov	ip, r7
    7a8e:	46ae      	mov	lr, r5
    7a90:	46d3      	mov	fp, sl
    7a92:	f85c 2b04 	ldr.w	r2, [ip], #4
    7a96:	b293      	uxth	r3, r2
    7a98:	fb06 a303 	mla	r3, r6, r3, sl
    7a9c:	ea4f 4a13 	mov.w	sl, r3, lsr #16
    7aa0:	b29b      	uxth	r3, r3
    7aa2:	ebab 0303 	sub.w	r3, fp, r3
    7aa6:	0c12      	lsrs	r2, r2, #16
    7aa8:	f8de b000 	ldr.w	fp, [lr]
    7aac:	fb06 a202 	mla	r2, r6, r2, sl
    7ab0:	fa13 f38b 	uxtah	r3, r3, fp
    7ab4:	ea4f 4a12 	mov.w	sl, r2, lsr #16
    7ab8:	fa1f fb82 	uxth.w	fp, r2
    7abc:	f8de 2000 	ldr.w	r2, [lr]
    7ac0:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
    7ac4:	eb02 4223 	add.w	r2, r2, r3, asr #16
    7ac8:	b29b      	uxth	r3, r3
    7aca:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
    7ace:	45e1      	cmp	r9, ip
    7ad0:	ea4f 4b22 	mov.w	fp, r2, asr #16
    7ad4:	f84e 3b04 	str.w	r3, [lr], #4
    7ad8:	d2db      	bcs.n	7a92 <quorem+0x3e>
    7ada:	582b      	ldr	r3, [r5, r0]
    7adc:	b933      	cbnz	r3, 7aec <quorem+0x98>
    7ade:	9b01      	ldr	r3, [sp, #4]
    7ae0:	3b04      	subs	r3, #4
    7ae2:	429d      	cmp	r5, r3
    7ae4:	461a      	mov	r2, r3
    7ae6:	d330      	bcc.n	7b4a <quorem+0xf6>
    7ae8:	f8c8 4010 	str.w	r4, [r8, #16]
    7aec:	4640      	mov	r0, r8
    7aee:	f001 fe6a 	bl	97c6 <__mcmp>
    7af2:	2800      	cmp	r0, #0
    7af4:	db25      	blt.n	7b42 <quorem+0xee>
    7af6:	3601      	adds	r6, #1
    7af8:	4628      	mov	r0, r5
    7afa:	f04f 0c00 	mov.w	ip, #0
    7afe:	f857 2b04 	ldr.w	r2, [r7], #4
    7b02:	f8d0 e000 	ldr.w	lr, [r0]
    7b06:	b293      	uxth	r3, r2
    7b08:	ebac 0303 	sub.w	r3, ip, r3
    7b0c:	0c12      	lsrs	r2, r2, #16
    7b0e:	fa13 f38e 	uxtah	r3, r3, lr
    7b12:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
    7b16:	eb02 4223 	add.w	r2, r2, r3, asr #16
    7b1a:	b29b      	uxth	r3, r3
    7b1c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
    7b20:	45b9      	cmp	r9, r7
    7b22:	ea4f 4c22 	mov.w	ip, r2, asr #16
    7b26:	f840 3b04 	str.w	r3, [r0], #4
    7b2a:	d2e8      	bcs.n	7afe <quorem+0xaa>
    7b2c:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
    7b30:	eb05 0384 	add.w	r3, r5, r4, lsl #2
    7b34:	b92a      	cbnz	r2, 7b42 <quorem+0xee>
    7b36:	3b04      	subs	r3, #4
    7b38:	429d      	cmp	r5, r3
    7b3a:	461a      	mov	r2, r3
    7b3c:	d30b      	bcc.n	7b56 <quorem+0x102>
    7b3e:	f8c8 4010 	str.w	r4, [r8, #16]
    7b42:	4630      	mov	r0, r6
    7b44:	b003      	add	sp, #12
    7b46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7b4a:	6812      	ldr	r2, [r2, #0]
    7b4c:	3b04      	subs	r3, #4
    7b4e:	2a00      	cmp	r2, #0
    7b50:	d1ca      	bne.n	7ae8 <quorem+0x94>
    7b52:	3c01      	subs	r4, #1
    7b54:	e7c5      	b.n	7ae2 <quorem+0x8e>
    7b56:	6812      	ldr	r2, [r2, #0]
    7b58:	3b04      	subs	r3, #4
    7b5a:	2a00      	cmp	r2, #0
    7b5c:	d1ef      	bne.n	7b3e <quorem+0xea>
    7b5e:	3c01      	subs	r4, #1
    7b60:	e7ea      	b.n	7b38 <quorem+0xe4>
    7b62:	2000      	movs	r0, #0
    7b64:	e7ee      	b.n	7b44 <quorem+0xf0>
    7b66:	Address 0x00007b66 is out of bounds.


00007b68 <_dtoa_r>:
_dtoa_r():
    7b68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7b6c:	ec55 4b10 	vmov	r4, r5, d0
    7b70:	b099      	sub	sp, #100	; 0x64
    7b72:	6a47      	ldr	r7, [r0, #36]	; 0x24
    7b74:	9108      	str	r1, [sp, #32]
    7b76:	4683      	mov	fp, r0
    7b78:	920d      	str	r2, [sp, #52]	; 0x34
    7b7a:	9314      	str	r3, [sp, #80]	; 0x50
    7b7c:	9e22      	ldr	r6, [sp, #136]	; 0x88
    7b7e:	e9cd 4500 	strd	r4, r5, [sp]
    7b82:	b947      	cbnz	r7, 7b96 <_dtoa_r+0x2e>
    7b84:	2010      	movs	r0, #16
    7b86:	f7fd fd43 	bl	5610 <malloc>
    7b8a:	e9c0 7701 	strd	r7, r7, [r0, #4]
    7b8e:	f8cb 0024 	str.w	r0, [fp, #36]	; 0x24
    7b92:	6007      	str	r7, [r0, #0]
    7b94:	60c7      	str	r7, [r0, #12]
    7b96:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
    7b9a:	6819      	ldr	r1, [r3, #0]
    7b9c:	b159      	cbz	r1, 7bb6 <_dtoa_r+0x4e>
    7b9e:	685a      	ldr	r2, [r3, #4]
    7ba0:	604a      	str	r2, [r1, #4]
    7ba2:	2301      	movs	r3, #1
    7ba4:	4093      	lsls	r3, r2
    7ba6:	608b      	str	r3, [r1, #8]
    7ba8:	4658      	mov	r0, fp
    7baa:	f001 fbf1 	bl	9390 <_Bfree>
    7bae:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
    7bb2:	2200      	movs	r2, #0
    7bb4:	601a      	str	r2, [r3, #0]
    7bb6:	1e2b      	subs	r3, r5, #0
    7bb8:	bfb9      	ittee	lt
    7bba:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
    7bbe:	9301      	strlt	r3, [sp, #4]
    7bc0:	2300      	movge	r3, #0
    7bc2:	6033      	strge	r3, [r6, #0]
    7bc4:	9c01      	ldr	r4, [sp, #4]
    7bc6:	4bb2      	ldr	r3, [pc, #712]	; (7e90 <_dtoa_r+0x328>)
    7bc8:	bfbc      	itt	lt
    7bca:	2201      	movlt	r2, #1
    7bcc:	6032      	strlt	r2, [r6, #0]
    7bce:	43a3      	bics	r3, r4
    7bd0:	d11a      	bne.n	7c08 <_dtoa_r+0xa0>
    7bd2:	9a14      	ldr	r2, [sp, #80]	; 0x50
    7bd4:	f242 730f 	movw	r3, #9999	; 0x270f
    7bd8:	6013      	str	r3, [r2, #0]
    7bda:	9a00      	ldr	r2, [sp, #0]
    7bdc:	f3c4 0313 	ubfx	r3, r4, #0, #20
    7be0:	4313      	orrs	r3, r2
    7be2:	f000 8552 	beq.w	868a <_dtoa_r+0xb22>
    7be6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    7be8:	b953      	cbnz	r3, 7c00 <_dtoa_r+0x98>
    7bea:	4baa      	ldr	r3, [pc, #680]	; (7e94 <_dtoa_r+0x32c>)
    7bec:	e023      	b.n	7c36 <_dtoa_r+0xce>
    7bee:	4baa      	ldr	r3, [pc, #680]	; (7e98 <_dtoa_r+0x330>)
    7bf0:	9303      	str	r3, [sp, #12]
    7bf2:	3308      	adds	r3, #8
    7bf4:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    7bf6:	6013      	str	r3, [r2, #0]
    7bf8:	9803      	ldr	r0, [sp, #12]
    7bfa:	b019      	add	sp, #100	; 0x64
    7bfc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7c00:	4ba4      	ldr	r3, [pc, #656]	; (7e94 <_dtoa_r+0x32c>)
    7c02:	9303      	str	r3, [sp, #12]
    7c04:	3303      	adds	r3, #3
    7c06:	e7f5      	b.n	7bf4 <_dtoa_r+0x8c>
    7c08:	ed9d 7b00 	vldr	d7, [sp]
    7c0c:	2200      	movs	r2, #0
    7c0e:	2300      	movs	r3, #0
    7c10:	ec51 0b17 	vmov	r0, r1, d7
    7c14:	ed8d 7b0e 	vstr	d7, [sp, #56]	; 0x38
    7c18:	f002 ff06 	bl	aa28 <__aeabi_dcmpeq>
    7c1c:	4607      	mov	r7, r0
    7c1e:	b160      	cbz	r0, 7c3a <_dtoa_r+0xd2>
    7c20:	9a14      	ldr	r2, [sp, #80]	; 0x50
    7c22:	2301      	movs	r3, #1
    7c24:	6013      	str	r3, [r2, #0]
    7c26:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    7c28:	2b00      	cmp	r3, #0
    7c2a:	f000 852b 	beq.w	8684 <_dtoa_r+0xb1c>
    7c2e:	4b9b      	ldr	r3, [pc, #620]	; (7e9c <_dtoa_r+0x334>)
    7c30:	9a23      	ldr	r2, [sp, #140]	; 0x8c
    7c32:	6013      	str	r3, [r2, #0]
    7c34:	3b01      	subs	r3, #1
    7c36:	9303      	str	r3, [sp, #12]
    7c38:	e7de      	b.n	7bf8 <_dtoa_r+0x90>
    7c3a:	aa16      	add	r2, sp, #88	; 0x58
    7c3c:	a917      	add	r1, sp, #92	; 0x5c
    7c3e:	ed9d 0b0e 	vldr	d0, [sp, #56]	; 0x38
    7c42:	4658      	mov	r0, fp
    7c44:	f001 feac 	bl	99a0 <__d2b>
    7c48:	f3c4 560a 	ubfx	r6, r4, #20, #11
    7c4c:	4680      	mov	r8, r0
    7c4e:	2e00      	cmp	r6, #0
    7c50:	d07f      	beq.n	7d52 <_dtoa_r+0x1ea>
    7c52:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    7c54:	9715      	str	r7, [sp, #84]	; 0x54
    7c56:	f3c3 0313 	ubfx	r3, r3, #0, #20
    7c5a:	e9dd 450e 	ldrd	r4, r5, [sp, #56]	; 0x38
    7c5e:	f043 557f 	orr.w	r5, r3, #1069547520	; 0x3fc00000
    7c62:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
    7c66:	f2a6 36ff 	subw	r6, r6, #1023	; 0x3ff
    7c6a:	2200      	movs	r2, #0
    7c6c:	4b8c      	ldr	r3, [pc, #560]	; (7ea0 <_dtoa_r+0x338>)
    7c6e:	4620      	mov	r0, r4
    7c70:	4629      	mov	r1, r5
    7c72:	f7fc fec7 	bl	4a04 <__aeabi_dsub>
    7c76:	a380      	add	r3, pc, #512	; (adr r3, 7e78 <_dtoa_r+0x310>)
    7c78:	e9d3 2300 	ldrd	r2, r3, [r3]
    7c7c:	f7fd f87a 	bl	4d74 <__aeabi_dmul>
    7c80:	a37f      	add	r3, pc, #508	; (adr r3, 7e80 <_dtoa_r+0x318>)
    7c82:	e9d3 2300 	ldrd	r2, r3, [r3]
    7c86:	f7fc febf 	bl	4a08 <__adddf3>
    7c8a:	4604      	mov	r4, r0
    7c8c:	4630      	mov	r0, r6
    7c8e:	460d      	mov	r5, r1
    7c90:	f7fd f806 	bl	4ca0 <__aeabi_i2d>
    7c94:	a37c      	add	r3, pc, #496	; (adr r3, 7e88 <_dtoa_r+0x320>)
    7c96:	e9d3 2300 	ldrd	r2, r3, [r3]
    7c9a:	f7fd f86b 	bl	4d74 <__aeabi_dmul>
    7c9e:	4602      	mov	r2, r0
    7ca0:	460b      	mov	r3, r1
    7ca2:	4620      	mov	r0, r4
    7ca4:	4629      	mov	r1, r5
    7ca6:	f7fc feaf 	bl	4a08 <__adddf3>
    7caa:	4604      	mov	r4, r0
    7cac:	460d      	mov	r5, r1
    7cae:	f002 ff03 	bl	aab8 <__aeabi_d2iz>
    7cb2:	2200      	movs	r2, #0
    7cb4:	4682      	mov	sl, r0
    7cb6:	2300      	movs	r3, #0
    7cb8:	4620      	mov	r0, r4
    7cba:	4629      	mov	r1, r5
    7cbc:	f002 febe 	bl	aa3c <__aeabi_dcmplt>
    7cc0:	b148      	cbz	r0, 7cd6 <_dtoa_r+0x16e>
    7cc2:	4650      	mov	r0, sl
    7cc4:	f7fc ffec 	bl	4ca0 <__aeabi_i2d>
    7cc8:	4622      	mov	r2, r4
    7cca:	462b      	mov	r3, r5
    7ccc:	f002 feac 	bl	aa28 <__aeabi_dcmpeq>
    7cd0:	b908      	cbnz	r0, 7cd6 <_dtoa_r+0x16e>
    7cd2:	f10a 3aff 	add.w	sl, sl, #4294967295
    7cd6:	f1ba 0f16 	cmp.w	sl, #22
    7cda:	d859      	bhi.n	7d90 <_dtoa_r+0x228>
    7cdc:	4b71      	ldr	r3, [pc, #452]	; (7ea4 <_dtoa_r+0x33c>)
    7cde:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
    7ce2:	e9d3 2300 	ldrd	r2, r3, [r3]
    7ce6:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
    7cea:	f002 fea7 	bl	aa3c <__aeabi_dcmplt>
    7cee:	2800      	cmp	r0, #0
    7cf0:	d050      	beq.n	7d94 <_dtoa_r+0x22c>
    7cf2:	f10a 3aff 	add.w	sl, sl, #4294967295
    7cf6:	2300      	movs	r3, #0
    7cf8:	9311      	str	r3, [sp, #68]	; 0x44
    7cfa:	9b16      	ldr	r3, [sp, #88]	; 0x58
    7cfc:	1b9e      	subs	r6, r3, r6
    7cfe:	1e73      	subs	r3, r6, #1
    7d00:	9307      	str	r3, [sp, #28]
    7d02:	bf45      	ittet	mi
    7d04:	f1c6 0301 	rsbmi	r3, r6, #1
    7d08:	9306      	strmi	r3, [sp, #24]
    7d0a:	2300      	movpl	r3, #0
    7d0c:	2300      	movmi	r3, #0
    7d0e:	bf4c      	ite	mi
    7d10:	9307      	strmi	r3, [sp, #28]
    7d12:	9306      	strpl	r3, [sp, #24]
    7d14:	f1ba 0f00 	cmp.w	sl, #0
    7d18:	db3e      	blt.n	7d98 <_dtoa_r+0x230>
    7d1a:	9b07      	ldr	r3, [sp, #28]
    7d1c:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
    7d20:	4453      	add	r3, sl
    7d22:	9307      	str	r3, [sp, #28]
    7d24:	2300      	movs	r3, #0
    7d26:	9309      	str	r3, [sp, #36]	; 0x24
    7d28:	9b08      	ldr	r3, [sp, #32]
    7d2a:	2b09      	cmp	r3, #9
    7d2c:	f200 808f 	bhi.w	7e4e <_dtoa_r+0x2e6>
    7d30:	2b05      	cmp	r3, #5
    7d32:	bfc4      	itt	gt
    7d34:	3b04      	subgt	r3, #4
    7d36:	9308      	strgt	r3, [sp, #32]
    7d38:	9b08      	ldr	r3, [sp, #32]
    7d3a:	f1a3 0302 	sub.w	r3, r3, #2
    7d3e:	bfcc      	ite	gt
    7d40:	2400      	movgt	r4, #0
    7d42:	2401      	movle	r4, #1
    7d44:	2b03      	cmp	r3, #3
    7d46:	f200 808d 	bhi.w	7e64 <_dtoa_r+0x2fc>
    7d4a:	e8df f003 	tbb	[pc, r3]
    7d4e:	3c2f      	.short	0x3c2f
    7d50:	7e3a      	.short	0x7e3a
    7d52:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	; 0x58
    7d56:	441e      	add	r6, r3
    7d58:	f206 4032 	addw	r0, r6, #1074	; 0x432
    7d5c:	2820      	cmp	r0, #32
    7d5e:	dd11      	ble.n	7d84 <_dtoa_r+0x21c>
    7d60:	f1c0 0040 	rsb	r0, r0, #64	; 0x40
    7d64:	9b00      	ldr	r3, [sp, #0]
    7d66:	4084      	lsls	r4, r0
    7d68:	f206 4012 	addw	r0, r6, #1042	; 0x412
    7d6c:	fa23 f000 	lsr.w	r0, r3, r0
    7d70:	4320      	orrs	r0, r4
    7d72:	f7fc ff85 	bl	4c80 <__aeabi_ui2d>
    7d76:	2301      	movs	r3, #1
    7d78:	4604      	mov	r4, r0
    7d7a:	f1a1 75f8 	sub.w	r5, r1, #32505856	; 0x1f00000
    7d7e:	3e01      	subs	r6, #1
    7d80:	9315      	str	r3, [sp, #84]	; 0x54
    7d82:	e772      	b.n	7c6a <_dtoa_r+0x102>
    7d84:	9b00      	ldr	r3, [sp, #0]
    7d86:	f1c0 0020 	rsb	r0, r0, #32
    7d8a:	fa03 f000 	lsl.w	r0, r3, r0
    7d8e:	e7f0      	b.n	7d72 <_dtoa_r+0x20a>
    7d90:	2301      	movs	r3, #1
    7d92:	e7b1      	b.n	7cf8 <_dtoa_r+0x190>
    7d94:	9011      	str	r0, [sp, #68]	; 0x44
    7d96:	e7b0      	b.n	7cfa <_dtoa_r+0x192>
    7d98:	9b06      	ldr	r3, [sp, #24]
    7d9a:	eba3 030a 	sub.w	r3, r3, sl
    7d9e:	9306      	str	r3, [sp, #24]
    7da0:	f1ca 0300 	rsb	r3, sl, #0
    7da4:	9309      	str	r3, [sp, #36]	; 0x24
    7da6:	2300      	movs	r3, #0
    7da8:	9310      	str	r3, [sp, #64]	; 0x40
    7daa:	e7bd      	b.n	7d28 <_dtoa_r+0x1c0>
    7dac:	2300      	movs	r3, #0
    7dae:	930c      	str	r3, [sp, #48]	; 0x30
    7db0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    7db2:	2b00      	cmp	r3, #0
    7db4:	dc59      	bgt.n	7e6a <_dtoa_r+0x302>
    7db6:	2301      	movs	r3, #1
    7db8:	9304      	str	r3, [sp, #16]
    7dba:	4699      	mov	r9, r3
    7dbc:	461a      	mov	r2, r3
    7dbe:	920d      	str	r2, [sp, #52]	; 0x34
    7dc0:	e00c      	b.n	7ddc <_dtoa_r+0x274>
    7dc2:	2301      	movs	r3, #1
    7dc4:	e7f3      	b.n	7dae <_dtoa_r+0x246>
    7dc6:	2300      	movs	r3, #0
    7dc8:	930c      	str	r3, [sp, #48]	; 0x30
    7dca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    7dcc:	4453      	add	r3, sl
    7dce:	f103 0901 	add.w	r9, r3, #1
    7dd2:	9304      	str	r3, [sp, #16]
    7dd4:	464b      	mov	r3, r9
    7dd6:	2b01      	cmp	r3, #1
    7dd8:	bfb8      	it	lt
    7dda:	2301      	movlt	r3, #1
    7ddc:	f8db 5024 	ldr.w	r5, [fp, #36]	; 0x24
    7de0:	2200      	movs	r2, #0
    7de2:	606a      	str	r2, [r5, #4]
    7de4:	2204      	movs	r2, #4
    7de6:	f102 0014 	add.w	r0, r2, #20
    7dea:	4298      	cmp	r0, r3
    7dec:	6869      	ldr	r1, [r5, #4]
    7dee:	d95d      	bls.n	7eac <_dtoa_r+0x344>
    7df0:	4658      	mov	r0, fp
    7df2:	f001 fa99 	bl	9328 <_Balloc>
    7df6:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
    7dfa:	6028      	str	r0, [r5, #0]
    7dfc:	681b      	ldr	r3, [r3, #0]
    7dfe:	9303      	str	r3, [sp, #12]
    7e00:	f1b9 0f0e 	cmp.w	r9, #14
    7e04:	f200 80d7 	bhi.w	7fb6 <_dtoa_r+0x44e>
    7e08:	2c00      	cmp	r4, #0
    7e0a:	f000 80d4 	beq.w	7fb6 <_dtoa_r+0x44e>
    7e0e:	f1ba 0f00 	cmp.w	sl, #0
    7e12:	dd69      	ble.n	7ee8 <_dtoa_r+0x380>
    7e14:	4a23      	ldr	r2, [pc, #140]	; (7ea4 <_dtoa_r+0x33c>)
    7e16:	f00a 030f 	and.w	r3, sl, #15
    7e1a:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
    7e1e:	ed93 7b00 	vldr	d7, [r3]
    7e22:	ea4f 142a 	mov.w	r4, sl, asr #4
    7e26:	06e2      	lsls	r2, r4, #27
    7e28:	ed8d 7b0a 	vstr	d7, [sp, #40]	; 0x28
    7e2c:	d55a      	bpl.n	7ee4 <_dtoa_r+0x37c>
    7e2e:	4b1e      	ldr	r3, [pc, #120]	; (7ea8 <_dtoa_r+0x340>)
    7e30:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
    7e34:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
    7e38:	f7fd f8c6 	bl	4fc8 <__aeabi_ddiv>
    7e3c:	e9cd 0100 	strd	r0, r1, [sp]
    7e40:	f004 040f 	and.w	r4, r4, #15
    7e44:	2603      	movs	r6, #3
    7e46:	4d18      	ldr	r5, [pc, #96]	; (7ea8 <_dtoa_r+0x340>)
    7e48:	e041      	b.n	7ece <_dtoa_r+0x366>
    7e4a:	2301      	movs	r3, #1
    7e4c:	e7bc      	b.n	7dc8 <_dtoa_r+0x260>
    7e4e:	2401      	movs	r4, #1
    7e50:	2300      	movs	r3, #0
    7e52:	9308      	str	r3, [sp, #32]
    7e54:	940c      	str	r4, [sp, #48]	; 0x30
    7e56:	f04f 33ff 	mov.w	r3, #4294967295
    7e5a:	9304      	str	r3, [sp, #16]
    7e5c:	4699      	mov	r9, r3
    7e5e:	2200      	movs	r2, #0
    7e60:	2312      	movs	r3, #18
    7e62:	e7ac      	b.n	7dbe <_dtoa_r+0x256>
    7e64:	2301      	movs	r3, #1
    7e66:	930c      	str	r3, [sp, #48]	; 0x30
    7e68:	e7f5      	b.n	7e56 <_dtoa_r+0x2ee>
    7e6a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    7e6c:	9304      	str	r3, [sp, #16]
    7e6e:	4699      	mov	r9, r3
    7e70:	e7b4      	b.n	7ddc <_dtoa_r+0x274>
    7e72:	bf00      	nop
    7e74:	f3af 8000 	nop.w
    7e78:	636f4361 	.word	0x636f4361
    7e7c:	3fd287a7 	.word	0x3fd287a7
    7e80:	8b60c8b3 	.word	0x8b60c8b3
    7e84:	3fc68a28 	.word	0x3fc68a28
    7e88:	509f79fb 	.word	0x509f79fb
    7e8c:	3fd34413 	.word	0x3fd34413
    7e90:	7ff00000 	.word	0x7ff00000
    7e94:	0000bec9 	.word	0x0000bec9
    7e98:	0000bec0 	.word	0x0000bec0
    7e9c:	0000b123 	.word	0x0000b123
    7ea0:	3ff80000 	.word	0x3ff80000
    7ea4:	0000bf70 	.word	0x0000bf70
    7ea8:	0000bf48 	.word	0x0000bf48
    7eac:	3101      	adds	r1, #1
    7eae:	6069      	str	r1, [r5, #4]
    7eb0:	0052      	lsls	r2, r2, #1
    7eb2:	e798      	b.n	7de6 <_dtoa_r+0x27e>
    7eb4:	07e3      	lsls	r3, r4, #31
    7eb6:	d508      	bpl.n	7eca <_dtoa_r+0x362>
    7eb8:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
    7ebc:	e9d5 2300 	ldrd	r2, r3, [r5]
    7ec0:	f7fc ff58 	bl	4d74 <__aeabi_dmul>
    7ec4:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
    7ec8:	3601      	adds	r6, #1
    7eca:	1064      	asrs	r4, r4, #1
    7ecc:	3508      	adds	r5, #8
    7ece:	2c00      	cmp	r4, #0
    7ed0:	d1f0      	bne.n	7eb4 <_dtoa_r+0x34c>
    7ed2:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
    7ed6:	e9dd 0100 	ldrd	r0, r1, [sp]
    7eda:	f7fd f875 	bl	4fc8 <__aeabi_ddiv>
    7ede:	e9cd 0100 	strd	r0, r1, [sp]
    7ee2:	e01a      	b.n	7f1a <_dtoa_r+0x3b2>
    7ee4:	2602      	movs	r6, #2
    7ee6:	e7ae      	b.n	7e46 <_dtoa_r+0x2de>
    7ee8:	f000 809f 	beq.w	802a <_dtoa_r+0x4c2>
    7eec:	f1ca 0400 	rsb	r4, sl, #0
    7ef0:	4b9f      	ldr	r3, [pc, #636]	; (8170 <_dtoa_r+0x608>)
    7ef2:	4da0      	ldr	r5, [pc, #640]	; (8174 <_dtoa_r+0x60c>)
    7ef4:	f004 020f 	and.w	r2, r4, #15
    7ef8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
    7efc:	e9d3 2300 	ldrd	r2, r3, [r3]
    7f00:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
    7f04:	f7fc ff36 	bl	4d74 <__aeabi_dmul>
    7f08:	e9cd 0100 	strd	r0, r1, [sp]
    7f0c:	1124      	asrs	r4, r4, #4
    7f0e:	2300      	movs	r3, #0
    7f10:	2602      	movs	r6, #2
    7f12:	2c00      	cmp	r4, #0
    7f14:	d17e      	bne.n	8014 <_dtoa_r+0x4ac>
    7f16:	2b00      	cmp	r3, #0
    7f18:	d1e1      	bne.n	7ede <_dtoa_r+0x376>
    7f1a:	9b11      	ldr	r3, [sp, #68]	; 0x44
    7f1c:	2b00      	cmp	r3, #0
    7f1e:	f000 8086 	beq.w	802e <_dtoa_r+0x4c6>
    7f22:	e9dd 4500 	ldrd	r4, r5, [sp]
    7f26:	2200      	movs	r2, #0
    7f28:	4b93      	ldr	r3, [pc, #588]	; (8178 <_dtoa_r+0x610>)
    7f2a:	4620      	mov	r0, r4
    7f2c:	4629      	mov	r1, r5
    7f2e:	f002 fd85 	bl	aa3c <__aeabi_dcmplt>
    7f32:	2800      	cmp	r0, #0
    7f34:	d07b      	beq.n	802e <_dtoa_r+0x4c6>
    7f36:	f1b9 0f00 	cmp.w	r9, #0
    7f3a:	d078      	beq.n	802e <_dtoa_r+0x4c6>
    7f3c:	9b04      	ldr	r3, [sp, #16]
    7f3e:	2b00      	cmp	r3, #0
    7f40:	dd35      	ble.n	7fae <_dtoa_r+0x446>
    7f42:	f10a 33ff 	add.w	r3, sl, #4294967295
    7f46:	930a      	str	r3, [sp, #40]	; 0x28
    7f48:	4620      	mov	r0, r4
    7f4a:	2200      	movs	r2, #0
    7f4c:	4b8b      	ldr	r3, [pc, #556]	; (817c <_dtoa_r+0x614>)
    7f4e:	4629      	mov	r1, r5
    7f50:	f7fc ff10 	bl	4d74 <__aeabi_dmul>
    7f54:	e9cd 0100 	strd	r0, r1, [sp]
    7f58:	9c04      	ldr	r4, [sp, #16]
    7f5a:	3601      	adds	r6, #1
    7f5c:	4630      	mov	r0, r6
    7f5e:	f7fc fe9f 	bl	4ca0 <__aeabi_i2d>
    7f62:	e9dd 2300 	ldrd	r2, r3, [sp]
    7f66:	f7fc ff05 	bl	4d74 <__aeabi_dmul>
    7f6a:	2200      	movs	r2, #0
    7f6c:	4b84      	ldr	r3, [pc, #528]	; (8180 <_dtoa_r+0x618>)
    7f6e:	f7fc fd4b 	bl	4a08 <__adddf3>
    7f72:	4606      	mov	r6, r0
    7f74:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
    7f78:	2c00      	cmp	r4, #0
    7f7a:	d15c      	bne.n	8036 <_dtoa_r+0x4ce>
    7f7c:	2200      	movs	r2, #0
    7f7e:	4b81      	ldr	r3, [pc, #516]	; (8184 <_dtoa_r+0x61c>)
    7f80:	e9dd 0100 	ldrd	r0, r1, [sp]
    7f84:	f7fc fd3e 	bl	4a04 <__aeabi_dsub>
    7f88:	4632      	mov	r2, r6
    7f8a:	463b      	mov	r3, r7
    7f8c:	e9cd 0100 	strd	r0, r1, [sp]
    7f90:	f002 fd72 	bl	aa78 <__aeabi_dcmpgt>
    7f94:	2800      	cmp	r0, #0
    7f96:	f040 828c 	bne.w	84b2 <_dtoa_r+0x94a>
    7f9a:	4632      	mov	r2, r6
    7f9c:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
    7fa0:	e9dd 0100 	ldrd	r0, r1, [sp]
    7fa4:	f002 fd4a 	bl	aa3c <__aeabi_dcmplt>
    7fa8:	2800      	cmp	r0, #0
    7faa:	f040 8280 	bne.w	84ae <_dtoa_r+0x946>
    7fae:	e9dd 340e 	ldrd	r3, r4, [sp, #56]	; 0x38
    7fb2:	e9cd 3400 	strd	r3, r4, [sp]
    7fb6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    7fb8:	2b00      	cmp	r3, #0
    7fba:	f2c0 814f 	blt.w	825c <_dtoa_r+0x6f4>
    7fbe:	f1ba 0f0e 	cmp.w	sl, #14
    7fc2:	f300 814b 	bgt.w	825c <_dtoa_r+0x6f4>
    7fc6:	4b6a      	ldr	r3, [pc, #424]	; (8170 <_dtoa_r+0x608>)
    7fc8:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
    7fcc:	ed93 7b00 	vldr	d7, [r3]
    7fd0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    7fd2:	2b00      	cmp	r3, #0
    7fd4:	ed8d 7b04 	vstr	d7, [sp, #16]
    7fd8:	f280 80d8 	bge.w	818c <_dtoa_r+0x624>
    7fdc:	f1b9 0f00 	cmp.w	r9, #0
    7fe0:	f300 80d4 	bgt.w	818c <_dtoa_r+0x624>
    7fe4:	f040 8262 	bne.w	84ac <_dtoa_r+0x944>
    7fe8:	2200      	movs	r2, #0
    7fea:	4b66      	ldr	r3, [pc, #408]	; (8184 <_dtoa_r+0x61c>)
    7fec:	ec51 0b17 	vmov	r0, r1, d7
    7ff0:	f7fc fec0 	bl	4d74 <__aeabi_dmul>
    7ff4:	e9dd 2300 	ldrd	r2, r3, [sp]
    7ff8:	f002 fd34 	bl	aa64 <__aeabi_dcmpge>
    7ffc:	464c      	mov	r4, r9
    7ffe:	464e      	mov	r6, r9
    8000:	2800      	cmp	r0, #0
    8002:	f040 823b 	bne.w	847c <_dtoa_r+0x914>
    8006:	9d03      	ldr	r5, [sp, #12]
    8008:	2331      	movs	r3, #49	; 0x31
    800a:	f805 3b01 	strb.w	r3, [r5], #1
    800e:	f10a 0a01 	add.w	sl, sl, #1
    8012:	e237      	b.n	8484 <_dtoa_r+0x91c>
    8014:	07e7      	lsls	r7, r4, #31
    8016:	d505      	bpl.n	8024 <_dtoa_r+0x4bc>
    8018:	e9d5 2300 	ldrd	r2, r3, [r5]
    801c:	f7fc feaa 	bl	4d74 <__aeabi_dmul>
    8020:	3601      	adds	r6, #1
    8022:	2301      	movs	r3, #1
    8024:	1064      	asrs	r4, r4, #1
    8026:	3508      	adds	r5, #8
    8028:	e773      	b.n	7f12 <_dtoa_r+0x3aa>
    802a:	2602      	movs	r6, #2
    802c:	e775      	b.n	7f1a <_dtoa_r+0x3b2>
    802e:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
    8032:	464c      	mov	r4, r9
    8034:	e792      	b.n	7f5c <_dtoa_r+0x3f4>
    8036:	4b4e      	ldr	r3, [pc, #312]	; (8170 <_dtoa_r+0x608>)
    8038:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
    803c:	e953 0102 	ldrd	r0, r1, [r3, #-8]
    8040:	9b03      	ldr	r3, [sp, #12]
    8042:	441c      	add	r4, r3
    8044:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    8046:	2b00      	cmp	r3, #0
    8048:	d046      	beq.n	80d8 <_dtoa_r+0x570>
    804a:	4602      	mov	r2, r0
    804c:	460b      	mov	r3, r1
    804e:	2000      	movs	r0, #0
    8050:	494d      	ldr	r1, [pc, #308]	; (8188 <_dtoa_r+0x620>)
    8052:	f7fc ffb9 	bl	4fc8 <__aeabi_ddiv>
    8056:	4632      	mov	r2, r6
    8058:	463b      	mov	r3, r7
    805a:	f7fc fcd3 	bl	4a04 <__aeabi_dsub>
    805e:	9d03      	ldr	r5, [sp, #12]
    8060:	4606      	mov	r6, r0
    8062:	460f      	mov	r7, r1
    8064:	e9dd 0100 	ldrd	r0, r1, [sp]
    8068:	f002 fd26 	bl	aab8 <__aeabi_d2iz>
    806c:	9012      	str	r0, [sp, #72]	; 0x48
    806e:	f7fc fe17 	bl	4ca0 <__aeabi_i2d>
    8072:	4602      	mov	r2, r0
    8074:	460b      	mov	r3, r1
    8076:	e9dd 0100 	ldrd	r0, r1, [sp]
    807a:	f7fc fcc3 	bl	4a04 <__aeabi_dsub>
    807e:	9b12      	ldr	r3, [sp, #72]	; 0x48
    8080:	3330      	adds	r3, #48	; 0x30
    8082:	f805 3b01 	strb.w	r3, [r5], #1
    8086:	4632      	mov	r2, r6
    8088:	463b      	mov	r3, r7
    808a:	e9cd 0100 	strd	r0, r1, [sp]
    808e:	f002 fcd5 	bl	aa3c <__aeabi_dcmplt>
    8092:	2800      	cmp	r0, #0
    8094:	d160      	bne.n	8158 <_dtoa_r+0x5f0>
    8096:	e9dd 2300 	ldrd	r2, r3, [sp]
    809a:	2000      	movs	r0, #0
    809c:	4936      	ldr	r1, [pc, #216]	; (8178 <_dtoa_r+0x610>)
    809e:	f7fc fcb1 	bl	4a04 <__aeabi_dsub>
    80a2:	4632      	mov	r2, r6
    80a4:	463b      	mov	r3, r7
    80a6:	f002 fcc9 	bl	aa3c <__aeabi_dcmplt>
    80aa:	2800      	cmp	r0, #0
    80ac:	f040 80b4 	bne.w	8218 <_dtoa_r+0x6b0>
    80b0:	42a5      	cmp	r5, r4
    80b2:	f43f af7c 	beq.w	7fae <_dtoa_r+0x446>
    80b6:	2200      	movs	r2, #0
    80b8:	4b30      	ldr	r3, [pc, #192]	; (817c <_dtoa_r+0x614>)
    80ba:	4630      	mov	r0, r6
    80bc:	4639      	mov	r1, r7
    80be:	f7fc fe59 	bl	4d74 <__aeabi_dmul>
    80c2:	2200      	movs	r2, #0
    80c4:	4606      	mov	r6, r0
    80c6:	460f      	mov	r7, r1
    80c8:	4b2c      	ldr	r3, [pc, #176]	; (817c <_dtoa_r+0x614>)
    80ca:	e9dd 0100 	ldrd	r0, r1, [sp]
    80ce:	f7fc fe51 	bl	4d74 <__aeabi_dmul>
    80d2:	e9cd 0100 	strd	r0, r1, [sp]
    80d6:	e7c5      	b.n	8064 <_dtoa_r+0x4fc>
    80d8:	4632      	mov	r2, r6
    80da:	463b      	mov	r3, r7
    80dc:	f7fc fe4a 	bl	4d74 <__aeabi_dmul>
    80e0:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
    80e4:	9e03      	ldr	r6, [sp, #12]
    80e6:	4625      	mov	r5, r4
    80e8:	e9dd 0100 	ldrd	r0, r1, [sp]
    80ec:	f002 fce4 	bl	aab8 <__aeabi_d2iz>
    80f0:	4607      	mov	r7, r0
    80f2:	f7fc fdd5 	bl	4ca0 <__aeabi_i2d>
    80f6:	3730      	adds	r7, #48	; 0x30
    80f8:	4602      	mov	r2, r0
    80fa:	460b      	mov	r3, r1
    80fc:	e9dd 0100 	ldrd	r0, r1, [sp]
    8100:	f7fc fc80 	bl	4a04 <__aeabi_dsub>
    8104:	f806 7b01 	strb.w	r7, [r6], #1
    8108:	42a6      	cmp	r6, r4
    810a:	e9cd 0100 	strd	r0, r1, [sp]
    810e:	f04f 0200 	mov.w	r2, #0
    8112:	d126      	bne.n	8162 <_dtoa_r+0x5fa>
    8114:	4b1c      	ldr	r3, [pc, #112]	; (8188 <_dtoa_r+0x620>)
    8116:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
    811a:	f7fc fc75 	bl	4a08 <__adddf3>
    811e:	4602      	mov	r2, r0
    8120:	460b      	mov	r3, r1
    8122:	e9dd 0100 	ldrd	r0, r1, [sp]
    8126:	f002 fca7 	bl	aa78 <__aeabi_dcmpgt>
    812a:	2800      	cmp	r0, #0
    812c:	d174      	bne.n	8218 <_dtoa_r+0x6b0>
    812e:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	; 0x48
    8132:	2000      	movs	r0, #0
    8134:	4914      	ldr	r1, [pc, #80]	; (8188 <_dtoa_r+0x620>)
    8136:	f7fc fc65 	bl	4a04 <__aeabi_dsub>
    813a:	4602      	mov	r2, r0
    813c:	460b      	mov	r3, r1
    813e:	e9dd 0100 	ldrd	r0, r1, [sp]
    8142:	f002 fc7b 	bl	aa3c <__aeabi_dcmplt>
    8146:	2800      	cmp	r0, #0
    8148:	f43f af31 	beq.w	7fae <_dtoa_r+0x446>
    814c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
    8150:	2b30      	cmp	r3, #48	; 0x30
    8152:	f105 32ff 	add.w	r2, r5, #4294967295
    8156:	d002      	beq.n	815e <_dtoa_r+0x5f6>
    8158:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
    815c:	e04a      	b.n	81f4 <_dtoa_r+0x68c>
    815e:	4615      	mov	r5, r2
    8160:	e7f4      	b.n	814c <_dtoa_r+0x5e4>
    8162:	4b06      	ldr	r3, [pc, #24]	; (817c <_dtoa_r+0x614>)
    8164:	f7fc fe06 	bl	4d74 <__aeabi_dmul>
    8168:	e9cd 0100 	strd	r0, r1, [sp]
    816c:	e7bc      	b.n	80e8 <_dtoa_r+0x580>
    816e:	bf00      	nop
    8170:	0000bf70 	.word	0x0000bf70
    8174:	0000bf48 	.word	0x0000bf48
    8178:	3ff00000 	.word	0x3ff00000
    817c:	40240000 	.word	0x40240000
    8180:	401c0000 	.word	0x401c0000
    8184:	40140000 	.word	0x40140000
    8188:	3fe00000 	.word	0x3fe00000
    818c:	e9dd 6700 	ldrd	r6, r7, [sp]
    8190:	9d03      	ldr	r5, [sp, #12]
    8192:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    8196:	4630      	mov	r0, r6
    8198:	4639      	mov	r1, r7
    819a:	f7fc ff15 	bl	4fc8 <__aeabi_ddiv>
    819e:	f002 fc8b 	bl	aab8 <__aeabi_d2iz>
    81a2:	4604      	mov	r4, r0
    81a4:	f7fc fd7c 	bl	4ca0 <__aeabi_i2d>
    81a8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    81ac:	f7fc fde2 	bl	4d74 <__aeabi_dmul>
    81b0:	4602      	mov	r2, r0
    81b2:	460b      	mov	r3, r1
    81b4:	4630      	mov	r0, r6
    81b6:	4639      	mov	r1, r7
    81b8:	f104 0630 	add.w	r6, r4, #48	; 0x30
    81bc:	f7fc fc22 	bl	4a04 <__aeabi_dsub>
    81c0:	f805 6b01 	strb.w	r6, [r5], #1
    81c4:	9e03      	ldr	r6, [sp, #12]
    81c6:	1bae      	subs	r6, r5, r6
    81c8:	45b1      	cmp	r9, r6
    81ca:	4602      	mov	r2, r0
    81cc:	460b      	mov	r3, r1
    81ce:	d138      	bne.n	8242 <_dtoa_r+0x6da>
    81d0:	f7fc fc1a 	bl	4a08 <__adddf3>
    81d4:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    81d8:	4606      	mov	r6, r0
    81da:	460f      	mov	r7, r1
    81dc:	f002 fc4c 	bl	aa78 <__aeabi_dcmpgt>
    81e0:	b9c0      	cbnz	r0, 8214 <_dtoa_r+0x6ac>
    81e2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
    81e6:	4630      	mov	r0, r6
    81e8:	4639      	mov	r1, r7
    81ea:	f002 fc1d 	bl	aa28 <__aeabi_dcmpeq>
    81ee:	b108      	cbz	r0, 81f4 <_dtoa_r+0x68c>
    81f0:	07e1      	lsls	r1, r4, #31
    81f2:	d40f      	bmi.n	8214 <_dtoa_r+0x6ac>
    81f4:	4641      	mov	r1, r8
    81f6:	4658      	mov	r0, fp
    81f8:	f001 f8ca 	bl	9390 <_Bfree>
    81fc:	2300      	movs	r3, #0
    81fe:	9a14      	ldr	r2, [sp, #80]	; 0x50
    8200:	702b      	strb	r3, [r5, #0]
    8202:	f10a 0301 	add.w	r3, sl, #1
    8206:	6013      	str	r3, [r2, #0]
    8208:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    820a:	2b00      	cmp	r3, #0
    820c:	f43f acf4 	beq.w	7bf8 <_dtoa_r+0x90>
    8210:	601d      	str	r5, [r3, #0]
    8212:	e4f1      	b.n	7bf8 <_dtoa_r+0x90>
    8214:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
    8218:	f815 2c01 	ldrb.w	r2, [r5, #-1]
    821c:	2a39      	cmp	r2, #57	; 0x39
    821e:	f105 33ff 	add.w	r3, r5, #4294967295
    8222:	d108      	bne.n	8236 <_dtoa_r+0x6ce>
    8224:	9a03      	ldr	r2, [sp, #12]
    8226:	429a      	cmp	r2, r3
    8228:	d109      	bne.n	823e <_dtoa_r+0x6d6>
    822a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    822c:	9903      	ldr	r1, [sp, #12]
    822e:	3201      	adds	r2, #1
    8230:	920a      	str	r2, [sp, #40]	; 0x28
    8232:	2230      	movs	r2, #48	; 0x30
    8234:	700a      	strb	r2, [r1, #0]
    8236:	781a      	ldrb	r2, [r3, #0]
    8238:	3201      	adds	r2, #1
    823a:	701a      	strb	r2, [r3, #0]
    823c:	e78c      	b.n	8158 <_dtoa_r+0x5f0>
    823e:	461d      	mov	r5, r3
    8240:	e7ea      	b.n	8218 <_dtoa_r+0x6b0>
    8242:	2200      	movs	r2, #0
    8244:	4b9d      	ldr	r3, [pc, #628]	; (84bc <_dtoa_r+0x954>)
    8246:	f7fc fd95 	bl	4d74 <__aeabi_dmul>
    824a:	2200      	movs	r2, #0
    824c:	2300      	movs	r3, #0
    824e:	4606      	mov	r6, r0
    8250:	460f      	mov	r7, r1
    8252:	f002 fbe9 	bl	aa28 <__aeabi_dcmpeq>
    8256:	2800      	cmp	r0, #0
    8258:	d09b      	beq.n	8192 <_dtoa_r+0x62a>
    825a:	e7cb      	b.n	81f4 <_dtoa_r+0x68c>
    825c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    825e:	2a00      	cmp	r2, #0
    8260:	f000 80cb 	beq.w	83fa <_dtoa_r+0x892>
    8264:	9a08      	ldr	r2, [sp, #32]
    8266:	2a01      	cmp	r2, #1
    8268:	f300 80ae 	bgt.w	83c8 <_dtoa_r+0x860>
    826c:	9a15      	ldr	r2, [sp, #84]	; 0x54
    826e:	2a00      	cmp	r2, #0
    8270:	f000 80a6 	beq.w	83c0 <_dtoa_r+0x858>
    8274:	f203 4333 	addw	r3, r3, #1075	; 0x433
    8278:	9c09      	ldr	r4, [sp, #36]	; 0x24
    827a:	9d06      	ldr	r5, [sp, #24]
    827c:	9a06      	ldr	r2, [sp, #24]
    827e:	441a      	add	r2, r3
    8280:	9206      	str	r2, [sp, #24]
    8282:	9a07      	ldr	r2, [sp, #28]
    8284:	2101      	movs	r1, #1
    8286:	441a      	add	r2, r3
    8288:	4658      	mov	r0, fp
    828a:	9207      	str	r2, [sp, #28]
    828c:	f001 f960 	bl	9550 <__i2b>
    8290:	4606      	mov	r6, r0
    8292:	2d00      	cmp	r5, #0
    8294:	dd0c      	ble.n	82b0 <_dtoa_r+0x748>
    8296:	9b07      	ldr	r3, [sp, #28]
    8298:	2b00      	cmp	r3, #0
    829a:	dd09      	ble.n	82b0 <_dtoa_r+0x748>
    829c:	42ab      	cmp	r3, r5
    829e:	9a06      	ldr	r2, [sp, #24]
    82a0:	bfa8      	it	ge
    82a2:	462b      	movge	r3, r5
    82a4:	1ad2      	subs	r2, r2, r3
    82a6:	9206      	str	r2, [sp, #24]
    82a8:	9a07      	ldr	r2, [sp, #28]
    82aa:	1aed      	subs	r5, r5, r3
    82ac:	1ad3      	subs	r3, r2, r3
    82ae:	9307      	str	r3, [sp, #28]
    82b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
    82b2:	b1f3      	cbz	r3, 82f2 <_dtoa_r+0x78a>
    82b4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    82b6:	2b00      	cmp	r3, #0
    82b8:	f000 80a3 	beq.w	8402 <_dtoa_r+0x89a>
    82bc:	2c00      	cmp	r4, #0
    82be:	dd10      	ble.n	82e2 <_dtoa_r+0x77a>
    82c0:	4631      	mov	r1, r6
    82c2:	4622      	mov	r2, r4
    82c4:	4658      	mov	r0, fp
    82c6:	f001 f9dd 	bl	9684 <__pow5mult>
    82ca:	4642      	mov	r2, r8
    82cc:	4601      	mov	r1, r0
    82ce:	4606      	mov	r6, r0
    82d0:	4658      	mov	r0, fp
    82d2:	f001 f946 	bl	9562 <__multiply>
    82d6:	4641      	mov	r1, r8
    82d8:	4607      	mov	r7, r0
    82da:	4658      	mov	r0, fp
    82dc:	f001 f858 	bl	9390 <_Bfree>
    82e0:	46b8      	mov	r8, r7
    82e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
    82e4:	1b1a      	subs	r2, r3, r4
    82e6:	d004      	beq.n	82f2 <_dtoa_r+0x78a>
    82e8:	4641      	mov	r1, r8
    82ea:	4658      	mov	r0, fp
    82ec:	f001 f9ca 	bl	9684 <__pow5mult>
    82f0:	4680      	mov	r8, r0
    82f2:	2101      	movs	r1, #1
    82f4:	4658      	mov	r0, fp
    82f6:	f001 f92b 	bl	9550 <__i2b>
    82fa:	9b10      	ldr	r3, [sp, #64]	; 0x40
    82fc:	2b00      	cmp	r3, #0
    82fe:	4604      	mov	r4, r0
    8300:	f340 8081 	ble.w	8406 <_dtoa_r+0x89e>
    8304:	461a      	mov	r2, r3
    8306:	4601      	mov	r1, r0
    8308:	4658      	mov	r0, fp
    830a:	f001 f9bb 	bl	9684 <__pow5mult>
    830e:	9b08      	ldr	r3, [sp, #32]
    8310:	2b01      	cmp	r3, #1
    8312:	4604      	mov	r4, r0
    8314:	dd7a      	ble.n	840c <_dtoa_r+0x8a4>
    8316:	2700      	movs	r7, #0
    8318:	6923      	ldr	r3, [r4, #16]
    831a:	eb04 0383 	add.w	r3, r4, r3, lsl #2
    831e:	6918      	ldr	r0, [r3, #16]
    8320:	f001 f8c6 	bl	94b0 <__hi0bits>
    8324:	f1c0 0020 	rsb	r0, r0, #32
    8328:	9b07      	ldr	r3, [sp, #28]
    832a:	4418      	add	r0, r3
    832c:	f010 001f 	ands.w	r0, r0, #31
    8330:	f000 808b 	beq.w	844a <_dtoa_r+0x8e2>
    8334:	f1c0 0320 	rsb	r3, r0, #32
    8338:	2b04      	cmp	r3, #4
    833a:	f340 8084 	ble.w	8446 <_dtoa_r+0x8de>
    833e:	f1c0 001c 	rsb	r0, r0, #28
    8342:	9b06      	ldr	r3, [sp, #24]
    8344:	4403      	add	r3, r0
    8346:	9306      	str	r3, [sp, #24]
    8348:	9b07      	ldr	r3, [sp, #28]
    834a:	4403      	add	r3, r0
    834c:	4405      	add	r5, r0
    834e:	9307      	str	r3, [sp, #28]
    8350:	9b06      	ldr	r3, [sp, #24]
    8352:	2b00      	cmp	r3, #0
    8354:	dd05      	ble.n	8362 <_dtoa_r+0x7fa>
    8356:	4641      	mov	r1, r8
    8358:	461a      	mov	r2, r3
    835a:	4658      	mov	r0, fp
    835c:	f001 f9e0 	bl	9720 <__lshift>
    8360:	4680      	mov	r8, r0
    8362:	9b07      	ldr	r3, [sp, #28]
    8364:	2b00      	cmp	r3, #0
    8366:	dd05      	ble.n	8374 <_dtoa_r+0x80c>
    8368:	4621      	mov	r1, r4
    836a:	461a      	mov	r2, r3
    836c:	4658      	mov	r0, fp
    836e:	f001 f9d7 	bl	9720 <__lshift>
    8372:	4604      	mov	r4, r0
    8374:	9b11      	ldr	r3, [sp, #68]	; 0x44
    8376:	2b00      	cmp	r3, #0
    8378:	d069      	beq.n	844e <_dtoa_r+0x8e6>
    837a:	4621      	mov	r1, r4
    837c:	4640      	mov	r0, r8
    837e:	f001 fa22 	bl	97c6 <__mcmp>
    8382:	2800      	cmp	r0, #0
    8384:	da63      	bge.n	844e <_dtoa_r+0x8e6>
    8386:	2300      	movs	r3, #0
    8388:	4641      	mov	r1, r8
    838a:	220a      	movs	r2, #10
    838c:	4658      	mov	r0, fp
    838e:	f001 f816 	bl	93be <__multadd>
    8392:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    8394:	f10a 3aff 	add.w	sl, sl, #4294967295
    8398:	4680      	mov	r8, r0
    839a:	2b00      	cmp	r3, #0
    839c:	f000 817c 	beq.w	8698 <_dtoa_r+0xb30>
    83a0:	2300      	movs	r3, #0
    83a2:	4631      	mov	r1, r6
    83a4:	220a      	movs	r2, #10
    83a6:	4658      	mov	r0, fp
    83a8:	f001 f809 	bl	93be <__multadd>
    83ac:	9b04      	ldr	r3, [sp, #16]
    83ae:	2b00      	cmp	r3, #0
    83b0:	4606      	mov	r6, r0
    83b2:	f300 808b 	bgt.w	84cc <_dtoa_r+0x964>
    83b6:	9b08      	ldr	r3, [sp, #32]
    83b8:	2b02      	cmp	r3, #2
    83ba:	f340 8087 	ble.w	84cc <_dtoa_r+0x964>
    83be:	e04e      	b.n	845e <_dtoa_r+0x8f6>
    83c0:	9b16      	ldr	r3, [sp, #88]	; 0x58
    83c2:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
    83c6:	e757      	b.n	8278 <_dtoa_r+0x710>
    83c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
    83ca:	f109 34ff 	add.w	r4, r9, #4294967295
    83ce:	42a3      	cmp	r3, r4
    83d0:	bfbf      	itttt	lt
    83d2:	9b09      	ldrlt	r3, [sp, #36]	; 0x24
    83d4:	9409      	strlt	r4, [sp, #36]	; 0x24
    83d6:	1ae2      	sublt	r2, r4, r3
    83d8:	9b10      	ldrlt	r3, [sp, #64]	; 0x40
    83da:	bfbb      	ittet	lt
    83dc:	189b      	addlt	r3, r3, r2
    83de:	9310      	strlt	r3, [sp, #64]	; 0x40
    83e0:	1b1c      	subge	r4, r3, r4
    83e2:	2400      	movlt	r4, #0
    83e4:	f1b9 0f00 	cmp.w	r9, #0
    83e8:	bfb5      	itete	lt
    83ea:	9b06      	ldrlt	r3, [sp, #24]
    83ec:	9d06      	ldrge	r5, [sp, #24]
    83ee:	eba3 0509 	sublt.w	r5, r3, r9
    83f2:	464b      	movge	r3, r9
    83f4:	bfb8      	it	lt
    83f6:	2300      	movlt	r3, #0
    83f8:	e740      	b.n	827c <_dtoa_r+0x714>
    83fa:	9c09      	ldr	r4, [sp, #36]	; 0x24
    83fc:	9d06      	ldr	r5, [sp, #24]
    83fe:	9e0c      	ldr	r6, [sp, #48]	; 0x30
    8400:	e747      	b.n	8292 <_dtoa_r+0x72a>
    8402:	9a09      	ldr	r2, [sp, #36]	; 0x24
    8404:	e770      	b.n	82e8 <_dtoa_r+0x780>
    8406:	9b08      	ldr	r3, [sp, #32]
    8408:	2b01      	cmp	r3, #1
    840a:	dc18      	bgt.n	843e <_dtoa_r+0x8d6>
    840c:	9b00      	ldr	r3, [sp, #0]
    840e:	b9b3      	cbnz	r3, 843e <_dtoa_r+0x8d6>
    8410:	9b01      	ldr	r3, [sp, #4]
    8412:	f3c3 0313 	ubfx	r3, r3, #0, #20
    8416:	b9a3      	cbnz	r3, 8442 <_dtoa_r+0x8da>
    8418:	9b01      	ldr	r3, [sp, #4]
    841a:	f023 4700 	bic.w	r7, r3, #2147483648	; 0x80000000
    841e:	0d3f      	lsrs	r7, r7, #20
    8420:	053f      	lsls	r7, r7, #20
    8422:	b137      	cbz	r7, 8432 <_dtoa_r+0x8ca>
    8424:	9b06      	ldr	r3, [sp, #24]
    8426:	3301      	adds	r3, #1
    8428:	9306      	str	r3, [sp, #24]
    842a:	9b07      	ldr	r3, [sp, #28]
    842c:	3301      	adds	r3, #1
    842e:	9307      	str	r3, [sp, #28]
    8430:	2701      	movs	r7, #1
    8432:	9b10      	ldr	r3, [sp, #64]	; 0x40
    8434:	2b00      	cmp	r3, #0
    8436:	f47f af6f 	bne.w	8318 <_dtoa_r+0x7b0>
    843a:	2001      	movs	r0, #1
    843c:	e774      	b.n	8328 <_dtoa_r+0x7c0>
    843e:	2700      	movs	r7, #0
    8440:	e7f7      	b.n	8432 <_dtoa_r+0x8ca>
    8442:	9f00      	ldr	r7, [sp, #0]
    8444:	e7f5      	b.n	8432 <_dtoa_r+0x8ca>
    8446:	d083      	beq.n	8350 <_dtoa_r+0x7e8>
    8448:	4618      	mov	r0, r3
    844a:	301c      	adds	r0, #28
    844c:	e779      	b.n	8342 <_dtoa_r+0x7da>
    844e:	f1b9 0f00 	cmp.w	r9, #0
    8452:	dc35      	bgt.n	84c0 <_dtoa_r+0x958>
    8454:	9b08      	ldr	r3, [sp, #32]
    8456:	2b02      	cmp	r3, #2
    8458:	dd32      	ble.n	84c0 <_dtoa_r+0x958>
    845a:	f8cd 9010 	str.w	r9, [sp, #16]
    845e:	9b04      	ldr	r3, [sp, #16]
    8460:	b963      	cbnz	r3, 847c <_dtoa_r+0x914>
    8462:	4621      	mov	r1, r4
    8464:	2205      	movs	r2, #5
    8466:	4658      	mov	r0, fp
    8468:	f000 ffa9 	bl	93be <__multadd>
    846c:	4601      	mov	r1, r0
    846e:	4604      	mov	r4, r0
    8470:	4640      	mov	r0, r8
    8472:	f001 f9a8 	bl	97c6 <__mcmp>
    8476:	2800      	cmp	r0, #0
    8478:	f73f adc5 	bgt.w	8006 <_dtoa_r+0x49e>
    847c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    847e:	9d03      	ldr	r5, [sp, #12]
    8480:	ea6f 0a03 	mvn.w	sl, r3
    8484:	2700      	movs	r7, #0
    8486:	4621      	mov	r1, r4
    8488:	4658      	mov	r0, fp
    848a:	f000 ff81 	bl	9390 <_Bfree>
    848e:	2e00      	cmp	r6, #0
    8490:	f43f aeb0 	beq.w	81f4 <_dtoa_r+0x68c>
    8494:	b12f      	cbz	r7, 84a2 <_dtoa_r+0x93a>
    8496:	42b7      	cmp	r7, r6
    8498:	d003      	beq.n	84a2 <_dtoa_r+0x93a>
    849a:	4639      	mov	r1, r7
    849c:	4658      	mov	r0, fp
    849e:	f000 ff77 	bl	9390 <_Bfree>
    84a2:	4631      	mov	r1, r6
    84a4:	4658      	mov	r0, fp
    84a6:	f000 ff73 	bl	9390 <_Bfree>
    84aa:	e6a3      	b.n	81f4 <_dtoa_r+0x68c>
    84ac:	2400      	movs	r4, #0
    84ae:	4626      	mov	r6, r4
    84b0:	e7e4      	b.n	847c <_dtoa_r+0x914>
    84b2:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
    84b6:	4626      	mov	r6, r4
    84b8:	e5a5      	b.n	8006 <_dtoa_r+0x49e>
    84ba:	bf00      	nop
    84bc:	40240000 	.word	0x40240000
    84c0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    84c2:	f8cd 9010 	str.w	r9, [sp, #16]
    84c6:	2b00      	cmp	r3, #0
    84c8:	f000 80ed 	beq.w	86a6 <_dtoa_r+0xb3e>
    84cc:	2d00      	cmp	r5, #0
    84ce:	dd05      	ble.n	84dc <_dtoa_r+0x974>
    84d0:	4631      	mov	r1, r6
    84d2:	462a      	mov	r2, r5
    84d4:	4658      	mov	r0, fp
    84d6:	f001 f923 	bl	9720 <__lshift>
    84da:	4606      	mov	r6, r0
    84dc:	2f00      	cmp	r7, #0
    84de:	d056      	beq.n	858e <_dtoa_r+0xa26>
    84e0:	6871      	ldr	r1, [r6, #4]
    84e2:	4658      	mov	r0, fp
    84e4:	f000 ff20 	bl	9328 <_Balloc>
    84e8:	6932      	ldr	r2, [r6, #16]
    84ea:	3202      	adds	r2, #2
    84ec:	4605      	mov	r5, r0
    84ee:	0092      	lsls	r2, r2, #2
    84f0:	f106 010c 	add.w	r1, r6, #12
    84f4:	300c      	adds	r0, #12
    84f6:	f7fd f89b 	bl	5630 <memcpy>
    84fa:	2201      	movs	r2, #1
    84fc:	4629      	mov	r1, r5
    84fe:	4658      	mov	r0, fp
    8500:	f001 f90e 	bl	9720 <__lshift>
    8504:	9b03      	ldr	r3, [sp, #12]
    8506:	f103 0901 	add.w	r9, r3, #1
    850a:	e9dd 2303 	ldrd	r2, r3, [sp, #12]
    850e:	4413      	add	r3, r2
    8510:	9309      	str	r3, [sp, #36]	; 0x24
    8512:	9b00      	ldr	r3, [sp, #0]
    8514:	f003 0301 	and.w	r3, r3, #1
    8518:	4637      	mov	r7, r6
    851a:	9307      	str	r3, [sp, #28]
    851c:	4606      	mov	r6, r0
    851e:	f109 33ff 	add.w	r3, r9, #4294967295
    8522:	4621      	mov	r1, r4
    8524:	4640      	mov	r0, r8
    8526:	9300      	str	r3, [sp, #0]
    8528:	f7ff fa94 	bl	7a54 <quorem>
    852c:	4603      	mov	r3, r0
    852e:	3330      	adds	r3, #48	; 0x30
    8530:	9004      	str	r0, [sp, #16]
    8532:	4639      	mov	r1, r7
    8534:	4640      	mov	r0, r8
    8536:	930a      	str	r3, [sp, #40]	; 0x28
    8538:	f001 f945 	bl	97c6 <__mcmp>
    853c:	4632      	mov	r2, r6
    853e:	9006      	str	r0, [sp, #24]
    8540:	4621      	mov	r1, r4
    8542:	4658      	mov	r0, fp
    8544:	f001 f959 	bl	97fa <__mdiff>
    8548:	68c2      	ldr	r2, [r0, #12]
    854a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    854c:	4605      	mov	r5, r0
    854e:	bb02      	cbnz	r2, 8592 <_dtoa_r+0xa2a>
    8550:	4601      	mov	r1, r0
    8552:	4640      	mov	r0, r8
    8554:	f001 f937 	bl	97c6 <__mcmp>
    8558:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    855a:	4602      	mov	r2, r0
    855c:	4629      	mov	r1, r5
    855e:	4658      	mov	r0, fp
    8560:	920c      	str	r2, [sp, #48]	; 0x30
    8562:	930a      	str	r3, [sp, #40]	; 0x28
    8564:	f000 ff14 	bl	9390 <_Bfree>
    8568:	9b08      	ldr	r3, [sp, #32]
    856a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    856c:	ea43 0102 	orr.w	r1, r3, r2
    8570:	9b07      	ldr	r3, [sp, #28]
    8572:	430b      	orrs	r3, r1
    8574:	464d      	mov	r5, r9
    8576:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8578:	d10d      	bne.n	8596 <_dtoa_r+0xa2e>
    857a:	2b39      	cmp	r3, #57	; 0x39
    857c:	d027      	beq.n	85ce <_dtoa_r+0xa66>
    857e:	9a06      	ldr	r2, [sp, #24]
    8580:	2a00      	cmp	r2, #0
    8582:	dd01      	ble.n	8588 <_dtoa_r+0xa20>
    8584:	9b04      	ldr	r3, [sp, #16]
    8586:	3331      	adds	r3, #49	; 0x31
    8588:	9a00      	ldr	r2, [sp, #0]
    858a:	7013      	strb	r3, [r2, #0]
    858c:	e77b      	b.n	8486 <_dtoa_r+0x91e>
    858e:	4630      	mov	r0, r6
    8590:	e7b8      	b.n	8504 <_dtoa_r+0x99c>
    8592:	2201      	movs	r2, #1
    8594:	e7e2      	b.n	855c <_dtoa_r+0x9f4>
    8596:	9906      	ldr	r1, [sp, #24]
    8598:	2900      	cmp	r1, #0
    859a:	db04      	blt.n	85a6 <_dtoa_r+0xa3e>
    859c:	9808      	ldr	r0, [sp, #32]
    859e:	4301      	orrs	r1, r0
    85a0:	9807      	ldr	r0, [sp, #28]
    85a2:	4301      	orrs	r1, r0
    85a4:	d11e      	bne.n	85e4 <_dtoa_r+0xa7c>
    85a6:	2a00      	cmp	r2, #0
    85a8:	ddee      	ble.n	8588 <_dtoa_r+0xa20>
    85aa:	4641      	mov	r1, r8
    85ac:	2201      	movs	r2, #1
    85ae:	4658      	mov	r0, fp
    85b0:	9306      	str	r3, [sp, #24]
    85b2:	f001 f8b5 	bl	9720 <__lshift>
    85b6:	4621      	mov	r1, r4
    85b8:	4680      	mov	r8, r0
    85ba:	f001 f904 	bl	97c6 <__mcmp>
    85be:	2800      	cmp	r0, #0
    85c0:	9b06      	ldr	r3, [sp, #24]
    85c2:	dc02      	bgt.n	85ca <_dtoa_r+0xa62>
    85c4:	d1e0      	bne.n	8588 <_dtoa_r+0xa20>
    85c6:	07da      	lsls	r2, r3, #31
    85c8:	d5de      	bpl.n	8588 <_dtoa_r+0xa20>
    85ca:	2b39      	cmp	r3, #57	; 0x39
    85cc:	d1da      	bne.n	8584 <_dtoa_r+0xa1c>
    85ce:	9a00      	ldr	r2, [sp, #0]
    85d0:	2339      	movs	r3, #57	; 0x39
    85d2:	7013      	strb	r3, [r2, #0]
    85d4:	f815 3c01 	ldrb.w	r3, [r5, #-1]
    85d8:	2b39      	cmp	r3, #57	; 0x39
    85da:	f105 32ff 	add.w	r2, r5, #4294967295
    85de:	d047      	beq.n	8670 <_dtoa_r+0xb08>
    85e0:	3301      	adds	r3, #1
    85e2:	e7d2      	b.n	858a <_dtoa_r+0xa22>
    85e4:	2a00      	cmp	r2, #0
    85e6:	dd03      	ble.n	85f0 <_dtoa_r+0xa88>
    85e8:	2b39      	cmp	r3, #57	; 0x39
    85ea:	d0f0      	beq.n	85ce <_dtoa_r+0xa66>
    85ec:	3301      	adds	r3, #1
    85ee:	e7cb      	b.n	8588 <_dtoa_r+0xa20>
    85f0:	9a09      	ldr	r2, [sp, #36]	; 0x24
    85f2:	f809 3c01 	strb.w	r3, [r9, #-1]
    85f6:	4591      	cmp	r9, r2
    85f8:	d021      	beq.n	863e <_dtoa_r+0xad6>
    85fa:	4641      	mov	r1, r8
    85fc:	2300      	movs	r3, #0
    85fe:	220a      	movs	r2, #10
    8600:	4658      	mov	r0, fp
    8602:	f000 fedc 	bl	93be <__multadd>
    8606:	42b7      	cmp	r7, r6
    8608:	4680      	mov	r8, r0
    860a:	f04f 0300 	mov.w	r3, #0
    860e:	f04f 020a 	mov.w	r2, #10
    8612:	4639      	mov	r1, r7
    8614:	4658      	mov	r0, fp
    8616:	d106      	bne.n	8626 <_dtoa_r+0xabe>
    8618:	f000 fed1 	bl	93be <__multadd>
    861c:	4607      	mov	r7, r0
    861e:	4606      	mov	r6, r0
    8620:	f109 0901 	add.w	r9, r9, #1
    8624:	e77b      	b.n	851e <_dtoa_r+0x9b6>
    8626:	f000 feca 	bl	93be <__multadd>
    862a:	4631      	mov	r1, r6
    862c:	4607      	mov	r7, r0
    862e:	2300      	movs	r3, #0
    8630:	220a      	movs	r2, #10
    8632:	4658      	mov	r0, fp
    8634:	f000 fec3 	bl	93be <__multadd>
    8638:	4606      	mov	r6, r0
    863a:	e7f1      	b.n	8620 <_dtoa_r+0xab8>
    863c:	2700      	movs	r7, #0
    863e:	4641      	mov	r1, r8
    8640:	2201      	movs	r2, #1
    8642:	4658      	mov	r0, fp
    8644:	9300      	str	r3, [sp, #0]
    8646:	f001 f86b 	bl	9720 <__lshift>
    864a:	4621      	mov	r1, r4
    864c:	4680      	mov	r8, r0
    864e:	f001 f8ba 	bl	97c6 <__mcmp>
    8652:	2800      	cmp	r0, #0
    8654:	dcbe      	bgt.n	85d4 <_dtoa_r+0xa6c>
    8656:	d102      	bne.n	865e <_dtoa_r+0xaf6>
    8658:	9b00      	ldr	r3, [sp, #0]
    865a:	07db      	lsls	r3, r3, #31
    865c:	d4ba      	bmi.n	85d4 <_dtoa_r+0xa6c>
    865e:	f815 3c01 	ldrb.w	r3, [r5, #-1]
    8662:	2b30      	cmp	r3, #48	; 0x30
    8664:	f105 32ff 	add.w	r2, r5, #4294967295
    8668:	f47f af0d 	bne.w	8486 <_dtoa_r+0x91e>
    866c:	4615      	mov	r5, r2
    866e:	e7f6      	b.n	865e <_dtoa_r+0xaf6>
    8670:	9b03      	ldr	r3, [sp, #12]
    8672:	4293      	cmp	r3, r2
    8674:	d104      	bne.n	8680 <_dtoa_r+0xb18>
    8676:	f10a 0a01 	add.w	sl, sl, #1
    867a:	2331      	movs	r3, #49	; 0x31
    867c:	9a03      	ldr	r2, [sp, #12]
    867e:	e784      	b.n	858a <_dtoa_r+0xa22>
    8680:	4615      	mov	r5, r2
    8682:	e7a7      	b.n	85d4 <_dtoa_r+0xa6c>
    8684:	4b13      	ldr	r3, [pc, #76]	; (86d4 <_dtoa_r+0xb6c>)
    8686:	f7ff bad6 	b.w	7c36 <_dtoa_r+0xce>
    868a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
    868c:	2b00      	cmp	r3, #0
    868e:	f47f aaae 	bne.w	7bee <_dtoa_r+0x86>
    8692:	4b11      	ldr	r3, [pc, #68]	; (86d8 <_dtoa_r+0xb70>)
    8694:	f7ff bacf 	b.w	7c36 <_dtoa_r+0xce>
    8698:	9b04      	ldr	r3, [sp, #16]
    869a:	2b00      	cmp	r3, #0
    869c:	dc03      	bgt.n	86a6 <_dtoa_r+0xb3e>
    869e:	9b08      	ldr	r3, [sp, #32]
    86a0:	2b02      	cmp	r3, #2
    86a2:	f73f aedc 	bgt.w	845e <_dtoa_r+0x8f6>
    86a6:	9d03      	ldr	r5, [sp, #12]
    86a8:	4621      	mov	r1, r4
    86aa:	4640      	mov	r0, r8
    86ac:	f7ff f9d2 	bl	7a54 <quorem>
    86b0:	f100 0330 	add.w	r3, r0, #48	; 0x30
    86b4:	f805 3b01 	strb.w	r3, [r5], #1
    86b8:	9a03      	ldr	r2, [sp, #12]
    86ba:	9904      	ldr	r1, [sp, #16]
    86bc:	1aaa      	subs	r2, r5, r2
    86be:	4291      	cmp	r1, r2
    86c0:	ddbc      	ble.n	863c <_dtoa_r+0xad4>
    86c2:	4641      	mov	r1, r8
    86c4:	2300      	movs	r3, #0
    86c6:	220a      	movs	r2, #10
    86c8:	4658      	mov	r0, fp
    86ca:	f000 fe78 	bl	93be <__multadd>
    86ce:	4680      	mov	r8, r0
    86d0:	e7ea      	b.n	86a8 <_dtoa_r+0xb40>
    86d2:	bf00      	nop
    86d4:	0000b122 	.word	0x0000b122
    86d8:	0000bec0 	.word	0x0000bec0

000086dc <__sflush_r>:
__sflush_r():
    86dc:	898a      	ldrh	r2, [r1, #12]
    86de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    86e2:	4605      	mov	r5, r0
    86e4:	0710      	lsls	r0, r2, #28
    86e6:	460c      	mov	r4, r1
    86e8:	d458      	bmi.n	879c <__sflush_r+0xc0>
    86ea:	684b      	ldr	r3, [r1, #4]
    86ec:	2b00      	cmp	r3, #0
    86ee:	dc05      	bgt.n	86fc <__sflush_r+0x20>
    86f0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
    86f2:	2b00      	cmp	r3, #0
    86f4:	dc02      	bgt.n	86fc <__sflush_r+0x20>
    86f6:	2000      	movs	r0, #0
    86f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    86fc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
    86fe:	2e00      	cmp	r6, #0
    8700:	d0f9      	beq.n	86f6 <__sflush_r+0x1a>
    8702:	2300      	movs	r3, #0
    8704:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
    8708:	682f      	ldr	r7, [r5, #0]
    870a:	602b      	str	r3, [r5, #0]
    870c:	d032      	beq.n	8774 <__sflush_r+0x98>
    870e:	6d60      	ldr	r0, [r4, #84]	; 0x54
    8710:	89a3      	ldrh	r3, [r4, #12]
    8712:	075a      	lsls	r2, r3, #29
    8714:	d505      	bpl.n	8722 <__sflush_r+0x46>
    8716:	6863      	ldr	r3, [r4, #4]
    8718:	1ac0      	subs	r0, r0, r3
    871a:	6b63      	ldr	r3, [r4, #52]	; 0x34
    871c:	b10b      	cbz	r3, 8722 <__sflush_r+0x46>
    871e:	6c23      	ldr	r3, [r4, #64]	; 0x40
    8720:	1ac0      	subs	r0, r0, r3
    8722:	2300      	movs	r3, #0
    8724:	4602      	mov	r2, r0
    8726:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
    8728:	6a21      	ldr	r1, [r4, #32]
    872a:	4628      	mov	r0, r5
    872c:	47b0      	blx	r6
    872e:	1c43      	adds	r3, r0, #1
    8730:	89a3      	ldrh	r3, [r4, #12]
    8732:	d106      	bne.n	8742 <__sflush_r+0x66>
    8734:	6829      	ldr	r1, [r5, #0]
    8736:	291d      	cmp	r1, #29
    8738:	d82c      	bhi.n	8794 <__sflush_r+0xb8>
    873a:	4a2a      	ldr	r2, [pc, #168]	; (87e4 <__sflush_r+0x108>)
    873c:	40ca      	lsrs	r2, r1
    873e:	07d6      	lsls	r6, r2, #31
    8740:	d528      	bpl.n	8794 <__sflush_r+0xb8>
    8742:	2200      	movs	r2, #0
    8744:	6062      	str	r2, [r4, #4]
    8746:	04d9      	lsls	r1, r3, #19
    8748:	6922      	ldr	r2, [r4, #16]
    874a:	6022      	str	r2, [r4, #0]
    874c:	d504      	bpl.n	8758 <__sflush_r+0x7c>
    874e:	1c42      	adds	r2, r0, #1
    8750:	d101      	bne.n	8756 <__sflush_r+0x7a>
    8752:	682b      	ldr	r3, [r5, #0]
    8754:	b903      	cbnz	r3, 8758 <__sflush_r+0x7c>
    8756:	6560      	str	r0, [r4, #84]	; 0x54
    8758:	6b61      	ldr	r1, [r4, #52]	; 0x34
    875a:	602f      	str	r7, [r5, #0]
    875c:	2900      	cmp	r1, #0
    875e:	d0ca      	beq.n	86f6 <__sflush_r+0x1a>
    8760:	f104 0344 	add.w	r3, r4, #68	; 0x44
    8764:	4299      	cmp	r1, r3
    8766:	d002      	beq.n	876e <__sflush_r+0x92>
    8768:	4628      	mov	r0, r5
    876a:	f7fc ff91 	bl	5690 <_free_r>
    876e:	2000      	movs	r0, #0
    8770:	6360      	str	r0, [r4, #52]	; 0x34
    8772:	e7c1      	b.n	86f8 <__sflush_r+0x1c>
    8774:	6a21      	ldr	r1, [r4, #32]
    8776:	2301      	movs	r3, #1
    8778:	4628      	mov	r0, r5
    877a:	47b0      	blx	r6
    877c:	1c41      	adds	r1, r0, #1
    877e:	d1c7      	bne.n	8710 <__sflush_r+0x34>
    8780:	682b      	ldr	r3, [r5, #0]
    8782:	2b00      	cmp	r3, #0
    8784:	d0c4      	beq.n	8710 <__sflush_r+0x34>
    8786:	2b1d      	cmp	r3, #29
    8788:	d001      	beq.n	878e <__sflush_r+0xb2>
    878a:	2b16      	cmp	r3, #22
    878c:	d101      	bne.n	8792 <__sflush_r+0xb6>
    878e:	602f      	str	r7, [r5, #0]
    8790:	e7b1      	b.n	86f6 <__sflush_r+0x1a>
    8792:	89a3      	ldrh	r3, [r4, #12]
    8794:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    8798:	81a3      	strh	r3, [r4, #12]
    879a:	e7ad      	b.n	86f8 <__sflush_r+0x1c>
    879c:	690f      	ldr	r7, [r1, #16]
    879e:	2f00      	cmp	r7, #0
    87a0:	d0a9      	beq.n	86f6 <__sflush_r+0x1a>
    87a2:	0793      	lsls	r3, r2, #30
    87a4:	680e      	ldr	r6, [r1, #0]
    87a6:	bf08      	it	eq
    87a8:	694b      	ldreq	r3, [r1, #20]
    87aa:	600f      	str	r7, [r1, #0]
    87ac:	bf18      	it	ne
    87ae:	2300      	movne	r3, #0
    87b0:	eba6 0807 	sub.w	r8, r6, r7
    87b4:	608b      	str	r3, [r1, #8]
    87b6:	f1b8 0f00 	cmp.w	r8, #0
    87ba:	dd9c      	ble.n	86f6 <__sflush_r+0x1a>
    87bc:	4643      	mov	r3, r8
    87be:	463a      	mov	r2, r7
    87c0:	6a21      	ldr	r1, [r4, #32]
    87c2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    87c4:	4628      	mov	r0, r5
    87c6:	47b0      	blx	r6
    87c8:	2800      	cmp	r0, #0
    87ca:	dc06      	bgt.n	87da <__sflush_r+0xfe>
    87cc:	89a3      	ldrh	r3, [r4, #12]
    87ce:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    87d2:	81a3      	strh	r3, [r4, #12]
    87d4:	f04f 30ff 	mov.w	r0, #4294967295
    87d8:	e78e      	b.n	86f8 <__sflush_r+0x1c>
    87da:	4407      	add	r7, r0
    87dc:	eba8 0800 	sub.w	r8, r8, r0
    87e0:	e7e9      	b.n	87b6 <__sflush_r+0xda>
    87e2:	bf00      	nop
    87e4:	20400001 	.word	0x20400001

000087e8 <_fflush_r>:
_fflush_r():
    87e8:	b538      	push	{r3, r4, r5, lr}
    87ea:	690b      	ldr	r3, [r1, #16]
    87ec:	4605      	mov	r5, r0
    87ee:	460c      	mov	r4, r1
    87f0:	b913      	cbnz	r3, 87f8 <_fflush_r+0x10>
    87f2:	2500      	movs	r5, #0
    87f4:	4628      	mov	r0, r5
    87f6:	bd38      	pop	{r3, r4, r5, pc}
    87f8:	b118      	cbz	r0, 8802 <_fflush_r+0x1a>
    87fa:	6983      	ldr	r3, [r0, #24]
    87fc:	b90b      	cbnz	r3, 8802 <_fflush_r+0x1a>
    87fe:	f000 f899 	bl	8934 <__sinit>
    8802:	4b14      	ldr	r3, [pc, #80]	; (8854 <_fflush_r+0x6c>)
    8804:	429c      	cmp	r4, r3
    8806:	d11b      	bne.n	8840 <_fflush_r+0x58>
    8808:	686c      	ldr	r4, [r5, #4]
    880a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    880e:	2b00      	cmp	r3, #0
    8810:	d0ef      	beq.n	87f2 <_fflush_r+0xa>
    8812:	6e62      	ldr	r2, [r4, #100]	; 0x64
    8814:	07d0      	lsls	r0, r2, #31
    8816:	d404      	bmi.n	8822 <_fflush_r+0x3a>
    8818:	0599      	lsls	r1, r3, #22
    881a:	d402      	bmi.n	8822 <_fflush_r+0x3a>
    881c:	6da0      	ldr	r0, [r4, #88]	; 0x58
    881e:	f7fc fef4 	bl	560a <__retarget_lock_acquire_recursive>
    8822:	4628      	mov	r0, r5
    8824:	4621      	mov	r1, r4
    8826:	f7ff ff59 	bl	86dc <__sflush_r>
    882a:	6e63      	ldr	r3, [r4, #100]	; 0x64
    882c:	07da      	lsls	r2, r3, #31
    882e:	4605      	mov	r5, r0
    8830:	d4e0      	bmi.n	87f4 <_fflush_r+0xc>
    8832:	89a3      	ldrh	r3, [r4, #12]
    8834:	059b      	lsls	r3, r3, #22
    8836:	d4dd      	bmi.n	87f4 <_fflush_r+0xc>
    8838:	6da0      	ldr	r0, [r4, #88]	; 0x58
    883a:	f7fc fee7 	bl	560c <__retarget_lock_release_recursive>
    883e:	e7d9      	b.n	87f4 <_fflush_r+0xc>
    8840:	4b05      	ldr	r3, [pc, #20]	; (8858 <_fflush_r+0x70>)
    8842:	429c      	cmp	r4, r3
    8844:	d101      	bne.n	884a <_fflush_r+0x62>
    8846:	68ac      	ldr	r4, [r5, #8]
    8848:	e7df      	b.n	880a <_fflush_r+0x22>
    884a:	4b04      	ldr	r3, [pc, #16]	; (885c <_fflush_r+0x74>)
    884c:	429c      	cmp	r4, r3
    884e:	bf08      	it	eq
    8850:	68ec      	ldreq	r4, [r5, #12]
    8852:	e7da      	b.n	880a <_fflush_r+0x22>
    8854:	0000bef0 	.word	0x0000bef0
    8858:	0000bf10 	.word	0x0000bf10
    885c:	0000bed0 	.word	0x0000bed0

00008860 <fflush>:
fflush():
    8860:	4601      	mov	r1, r0
    8862:	b920      	cbnz	r0, 886e <fflush+0xe>
    8864:	4b04      	ldr	r3, [pc, #16]	; (8878 <fflush+0x18>)
    8866:	4905      	ldr	r1, [pc, #20]	; (887c <fflush+0x1c>)
    8868:	6818      	ldr	r0, [r3, #0]
    886a:	f000 b8fd 	b.w	8a68 <_fwalk_reent>
    886e:	4b04      	ldr	r3, [pc, #16]	; (8880 <fflush+0x20>)
    8870:	6818      	ldr	r0, [r3, #0]
    8872:	f7ff bfb9 	b.w	87e8 <_fflush_r>
    8876:	bf00      	nop
    8878:	0000be24 	.word	0x0000be24
    887c:	000087e9 	.word	0x000087e9
    8880:	10000164 	.word	0x10000164

00008884 <std>:
std():
    8884:	2300      	movs	r3, #0
    8886:	b510      	push	{r4, lr}
    8888:	4604      	mov	r4, r0
    888a:	e9c0 3300 	strd	r3, r3, [r0]
    888e:	6083      	str	r3, [r0, #8]
    8890:	8181      	strh	r1, [r0, #12]
    8892:	6643      	str	r3, [r0, #100]	; 0x64
    8894:	81c2      	strh	r2, [r0, #14]
    8896:	e9c0 3304 	strd	r3, r3, [r0, #16]
    889a:	6183      	str	r3, [r0, #24]
    889c:	4619      	mov	r1, r3
    889e:	2208      	movs	r2, #8
    88a0:	305c      	adds	r0, #92	; 0x5c
    88a2:	f7fc feed 	bl	5680 <memset>
    88a6:	4b05      	ldr	r3, [pc, #20]	; (88bc <std+0x38>)
    88a8:	6263      	str	r3, [r4, #36]	; 0x24
    88aa:	4b05      	ldr	r3, [pc, #20]	; (88c0 <std+0x3c>)
    88ac:	62a3      	str	r3, [r4, #40]	; 0x28
    88ae:	4b05      	ldr	r3, [pc, #20]	; (88c4 <std+0x40>)
    88b0:	62e3      	str	r3, [r4, #44]	; 0x2c
    88b2:	4b05      	ldr	r3, [pc, #20]	; (88c8 <std+0x44>)
    88b4:	6224      	str	r4, [r4, #32]
    88b6:	6323      	str	r3, [r4, #48]	; 0x30
    88b8:	bd10      	pop	{r4, pc}
    88ba:	bf00      	nop
    88bc:	0000a565 	.word	0x0000a565
    88c0:	0000a58b 	.word	0x0000a58b
    88c4:	0000a5c3 	.word	0x0000a5c3
    88c8:	0000a5e7 	.word	0x0000a5e7

000088cc <_cleanup_r>:
_cleanup_r():
    88cc:	4901      	ldr	r1, [pc, #4]	; (88d4 <_cleanup_r+0x8>)
    88ce:	f000 b8cb 	b.w	8a68 <_fwalk_reent>
    88d2:	bf00      	nop
    88d4:	000087e9 	.word	0x000087e9

000088d8 <__sfmoreglue>:
__sfmoreglue():
    88d8:	b570      	push	{r4, r5, r6, lr}
    88da:	1e4a      	subs	r2, r1, #1
    88dc:	2568      	movs	r5, #104	; 0x68
    88de:	4355      	muls	r5, r2
    88e0:	460e      	mov	r6, r1
    88e2:	f105 0174 	add.w	r1, r5, #116	; 0x74
    88e6:	f7fc ff21 	bl	572c <_malloc_r>
    88ea:	4604      	mov	r4, r0
    88ec:	b140      	cbz	r0, 8900 <__sfmoreglue+0x28>
    88ee:	2100      	movs	r1, #0
    88f0:	e9c0 1600 	strd	r1, r6, [r0]
    88f4:	300c      	adds	r0, #12
    88f6:	60a0      	str	r0, [r4, #8]
    88f8:	f105 0268 	add.w	r2, r5, #104	; 0x68
    88fc:	f7fc fec0 	bl	5680 <memset>
    8900:	4620      	mov	r0, r4
    8902:	bd70      	pop	{r4, r5, r6, pc}

00008904 <__sfp_lock_acquire>:
__sfp_lock_acquire():
    8904:	4801      	ldr	r0, [pc, #4]	; (890c <__sfp_lock_acquire+0x8>)
    8906:	f7fc be80 	b.w	560a <__retarget_lock_acquire_recursive>
    890a:	bf00      	nop
    890c:	10001344 	.word	0x10001344

00008910 <__sfp_lock_release>:
__sfp_lock_release():
    8910:	4801      	ldr	r0, [pc, #4]	; (8918 <__sfp_lock_release+0x8>)
    8912:	f7fc be7b 	b.w	560c <__retarget_lock_release_recursive>
    8916:	bf00      	nop
    8918:	10001344 	.word	0x10001344

0000891c <__sinit_lock_acquire>:
__sinit_lock_acquire():
    891c:	4801      	ldr	r0, [pc, #4]	; (8924 <__sinit_lock_acquire+0x8>)
    891e:	f7fc be74 	b.w	560a <__retarget_lock_acquire_recursive>
    8922:	bf00      	nop
    8924:	1000133f 	.word	0x1000133f

00008928 <__sinit_lock_release>:
__sinit_lock_release():
    8928:	4801      	ldr	r0, [pc, #4]	; (8930 <__sinit_lock_release+0x8>)
    892a:	f7fc be6f 	b.w	560c <__retarget_lock_release_recursive>
    892e:	bf00      	nop
    8930:	1000133f 	.word	0x1000133f

00008934 <__sinit>:
__sinit():
    8934:	b510      	push	{r4, lr}
    8936:	4604      	mov	r4, r0
    8938:	f7ff fff0 	bl	891c <__sinit_lock_acquire>
    893c:	69a3      	ldr	r3, [r4, #24]
    893e:	b11b      	cbz	r3, 8948 <__sinit+0x14>
    8940:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    8944:	f7ff bff0 	b.w	8928 <__sinit_lock_release>
    8948:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
    894c:	6523      	str	r3, [r4, #80]	; 0x50
    894e:	4b13      	ldr	r3, [pc, #76]	; (899c <__sinit+0x68>)
    8950:	4a13      	ldr	r2, [pc, #76]	; (89a0 <__sinit+0x6c>)
    8952:	681b      	ldr	r3, [r3, #0]
    8954:	62a2      	str	r2, [r4, #40]	; 0x28
    8956:	42a3      	cmp	r3, r4
    8958:	bf04      	itt	eq
    895a:	2301      	moveq	r3, #1
    895c:	61a3      	streq	r3, [r4, #24]
    895e:	4620      	mov	r0, r4
    8960:	f000 f820 	bl	89a4 <__sfp>
    8964:	6060      	str	r0, [r4, #4]
    8966:	4620      	mov	r0, r4
    8968:	f000 f81c 	bl	89a4 <__sfp>
    896c:	60a0      	str	r0, [r4, #8]
    896e:	4620      	mov	r0, r4
    8970:	f000 f818 	bl	89a4 <__sfp>
    8974:	2200      	movs	r2, #0
    8976:	60e0      	str	r0, [r4, #12]
    8978:	2104      	movs	r1, #4
    897a:	6860      	ldr	r0, [r4, #4]
    897c:	f7ff ff82 	bl	8884 <std>
    8980:	2201      	movs	r2, #1
    8982:	2109      	movs	r1, #9
    8984:	68a0      	ldr	r0, [r4, #8]
    8986:	f7ff ff7d 	bl	8884 <std>
    898a:	2202      	movs	r2, #2
    898c:	2112      	movs	r1, #18
    898e:	68e0      	ldr	r0, [r4, #12]
    8990:	f7ff ff78 	bl	8884 <std>
    8994:	2301      	movs	r3, #1
    8996:	61a3      	str	r3, [r4, #24]
    8998:	e7d2      	b.n	8940 <__sinit+0xc>
    899a:	bf00      	nop
    899c:	0000be24 	.word	0x0000be24
    89a0:	000088cd 	.word	0x000088cd

000089a4 <__sfp>:
__sfp():
    89a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    89a6:	4607      	mov	r7, r0
    89a8:	f7ff ffac 	bl	8904 <__sfp_lock_acquire>
    89ac:	4b1e      	ldr	r3, [pc, #120]	; (8a28 <__sfp+0x84>)
    89ae:	681e      	ldr	r6, [r3, #0]
    89b0:	69b3      	ldr	r3, [r6, #24]
    89b2:	b913      	cbnz	r3, 89ba <__sfp+0x16>
    89b4:	4630      	mov	r0, r6
    89b6:	f7ff ffbd 	bl	8934 <__sinit>
    89ba:	3648      	adds	r6, #72	; 0x48
    89bc:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
    89c0:	3b01      	subs	r3, #1
    89c2:	d503      	bpl.n	89cc <__sfp+0x28>
    89c4:	6833      	ldr	r3, [r6, #0]
    89c6:	b30b      	cbz	r3, 8a0c <__sfp+0x68>
    89c8:	6836      	ldr	r6, [r6, #0]
    89ca:	e7f7      	b.n	89bc <__sfp+0x18>
    89cc:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
    89d0:	b9d5      	cbnz	r5, 8a08 <__sfp+0x64>
    89d2:	4b16      	ldr	r3, [pc, #88]	; (8a2c <__sfp+0x88>)
    89d4:	60e3      	str	r3, [r4, #12]
    89d6:	f104 0058 	add.w	r0, r4, #88	; 0x58
    89da:	6665      	str	r5, [r4, #100]	; 0x64
    89dc:	f7fc fe14 	bl	5608 <__retarget_lock_init_recursive>
    89e0:	f7ff ff96 	bl	8910 <__sfp_lock_release>
    89e4:	6025      	str	r5, [r4, #0]
    89e6:	e9c4 5501 	strd	r5, r5, [r4, #4]
    89ea:	e9c4 5504 	strd	r5, r5, [r4, #16]
    89ee:	61a5      	str	r5, [r4, #24]
    89f0:	2208      	movs	r2, #8
    89f2:	4629      	mov	r1, r5
    89f4:	f104 005c 	add.w	r0, r4, #92	; 0x5c
    89f8:	f7fc fe42 	bl	5680 <memset>
    89fc:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
    8a00:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
    8a04:	4620      	mov	r0, r4
    8a06:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    8a08:	3468      	adds	r4, #104	; 0x68
    8a0a:	e7d9      	b.n	89c0 <__sfp+0x1c>
    8a0c:	2104      	movs	r1, #4
    8a0e:	4638      	mov	r0, r7
    8a10:	f7ff ff62 	bl	88d8 <__sfmoreglue>
    8a14:	4604      	mov	r4, r0
    8a16:	6030      	str	r0, [r6, #0]
    8a18:	2800      	cmp	r0, #0
    8a1a:	d1d5      	bne.n	89c8 <__sfp+0x24>
    8a1c:	f7ff ff78 	bl	8910 <__sfp_lock_release>
    8a20:	230c      	movs	r3, #12
    8a22:	603b      	str	r3, [r7, #0]
    8a24:	e7ee      	b.n	8a04 <__sfp+0x60>
    8a26:	bf00      	nop
    8a28:	0000be24 	.word	0x0000be24
    8a2c:	ffff0001 	.word	0xffff0001

00008a30 <_fwalk>:
_fwalk():
    8a30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    8a34:	4688      	mov	r8, r1
    8a36:	f100 0448 	add.w	r4, r0, #72	; 0x48
    8a3a:	2600      	movs	r6, #0
    8a3c:	b914      	cbnz	r4, 8a44 <_fwalk+0x14>
    8a3e:	4630      	mov	r0, r6
    8a40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    8a44:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
    8a48:	3f01      	subs	r7, #1
    8a4a:	d501      	bpl.n	8a50 <_fwalk+0x20>
    8a4c:	6824      	ldr	r4, [r4, #0]
    8a4e:	e7f5      	b.n	8a3c <_fwalk+0xc>
    8a50:	89ab      	ldrh	r3, [r5, #12]
    8a52:	2b01      	cmp	r3, #1
    8a54:	d906      	bls.n	8a64 <_fwalk+0x34>
    8a56:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
    8a5a:	3301      	adds	r3, #1
    8a5c:	d002      	beq.n	8a64 <_fwalk+0x34>
    8a5e:	4628      	mov	r0, r5
    8a60:	47c0      	blx	r8
    8a62:	4306      	orrs	r6, r0
    8a64:	3568      	adds	r5, #104	; 0x68
    8a66:	e7ef      	b.n	8a48 <_fwalk+0x18>

00008a68 <_fwalk_reent>:
_fwalk_reent():
    8a68:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    8a6c:	4680      	mov	r8, r0
    8a6e:	4689      	mov	r9, r1
    8a70:	f100 0448 	add.w	r4, r0, #72	; 0x48
    8a74:	2600      	movs	r6, #0
    8a76:	b914      	cbnz	r4, 8a7e <_fwalk_reent+0x16>
    8a78:	4630      	mov	r0, r6
    8a7a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    8a7e:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
    8a82:	3f01      	subs	r7, #1
    8a84:	d501      	bpl.n	8a8a <_fwalk_reent+0x22>
    8a86:	6824      	ldr	r4, [r4, #0]
    8a88:	e7f5      	b.n	8a76 <_fwalk_reent+0xe>
    8a8a:	89ab      	ldrh	r3, [r5, #12]
    8a8c:	2b01      	cmp	r3, #1
    8a8e:	d907      	bls.n	8aa0 <_fwalk_reent+0x38>
    8a90:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
    8a94:	3301      	adds	r3, #1
    8a96:	d003      	beq.n	8aa0 <_fwalk_reent+0x38>
    8a98:	4629      	mov	r1, r5
    8a9a:	4640      	mov	r0, r8
    8a9c:	47c8      	blx	r9
    8a9e:	4306      	orrs	r6, r0
    8aa0:	3568      	adds	r5, #104	; 0x68
    8aa2:	e7ee      	b.n	8a82 <_fwalk_reent+0x1a>

00008aa4 <rshift>:
rshift():
    8aa4:	b5f0      	push	{r4, r5, r6, r7, lr}
    8aa6:	6906      	ldr	r6, [r0, #16]
    8aa8:	114b      	asrs	r3, r1, #5
    8aaa:	429e      	cmp	r6, r3
    8aac:	f100 0414 	add.w	r4, r0, #20
    8ab0:	dd30      	ble.n	8b14 <rshift+0x70>
    8ab2:	f011 011f 	ands.w	r1, r1, #31
    8ab6:	eb04 0686 	add.w	r6, r4, r6, lsl #2
    8aba:	eb04 0283 	add.w	r2, r4, r3, lsl #2
    8abe:	d108      	bne.n	8ad2 <rshift+0x2e>
    8ac0:	4621      	mov	r1, r4
    8ac2:	42b2      	cmp	r2, r6
    8ac4:	460b      	mov	r3, r1
    8ac6:	d211      	bcs.n	8aec <rshift+0x48>
    8ac8:	f852 3b04 	ldr.w	r3, [r2], #4
    8acc:	f841 3b04 	str.w	r3, [r1], #4
    8ad0:	e7f7      	b.n	8ac2 <rshift+0x1e>
    8ad2:	f854 5023 	ldr.w	r5, [r4, r3, lsl #2]
    8ad6:	f1c1 0c20 	rsb	ip, r1, #32
    8ada:	40cd      	lsrs	r5, r1
    8adc:	3204      	adds	r2, #4
    8ade:	4623      	mov	r3, r4
    8ae0:	4296      	cmp	r6, r2
    8ae2:	4617      	mov	r7, r2
    8ae4:	d80c      	bhi.n	8b00 <rshift+0x5c>
    8ae6:	601d      	str	r5, [r3, #0]
    8ae8:	b105      	cbz	r5, 8aec <rshift+0x48>
    8aea:	3304      	adds	r3, #4
    8aec:	1b1a      	subs	r2, r3, r4
    8aee:	42a3      	cmp	r3, r4
    8af0:	ea4f 02a2 	mov.w	r2, r2, asr #2
    8af4:	bf08      	it	eq
    8af6:	2300      	moveq	r3, #0
    8af8:	6102      	str	r2, [r0, #16]
    8afa:	bf08      	it	eq
    8afc:	6143      	streq	r3, [r0, #20]
    8afe:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8b00:	683f      	ldr	r7, [r7, #0]
    8b02:	fa07 f70c 	lsl.w	r7, r7, ip
    8b06:	433d      	orrs	r5, r7
    8b08:	f843 5b04 	str.w	r5, [r3], #4
    8b0c:	f852 5b04 	ldr.w	r5, [r2], #4
    8b10:	40cd      	lsrs	r5, r1
    8b12:	e7e5      	b.n	8ae0 <rshift+0x3c>
    8b14:	4623      	mov	r3, r4
    8b16:	e7e9      	b.n	8aec <rshift+0x48>

00008b18 <__hexdig_fun>:
__hexdig_fun():
    8b18:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
    8b1c:	2b09      	cmp	r3, #9
    8b1e:	d802      	bhi.n	8b26 <__hexdig_fun+0xe>
    8b20:	3820      	subs	r0, #32
    8b22:	b2c0      	uxtb	r0, r0
    8b24:	4770      	bx	lr
    8b26:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
    8b2a:	2b05      	cmp	r3, #5
    8b2c:	d801      	bhi.n	8b32 <__hexdig_fun+0x1a>
    8b2e:	3847      	subs	r0, #71	; 0x47
    8b30:	e7f7      	b.n	8b22 <__hexdig_fun+0xa>
    8b32:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
    8b36:	2b05      	cmp	r3, #5
    8b38:	d801      	bhi.n	8b3e <__hexdig_fun+0x26>
    8b3a:	3827      	subs	r0, #39	; 0x27
    8b3c:	e7f1      	b.n	8b22 <__hexdig_fun+0xa>
    8b3e:	2000      	movs	r0, #0
    8b40:	4770      	bx	lr
    8b42:	Address 0x00008b42 is out of bounds.


00008b44 <__gethex>:
__gethex():
    8b44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8b48:	b08b      	sub	sp, #44	; 0x2c
    8b4a:	468b      	mov	fp, r1
    8b4c:	9306      	str	r3, [sp, #24]
    8b4e:	4bb7      	ldr	r3, [pc, #732]	; (8e2c <__gethex+0x2e8>)
    8b50:	9002      	str	r0, [sp, #8]
    8b52:	681b      	ldr	r3, [r3, #0]
    8b54:	9303      	str	r3, [sp, #12]
    8b56:	4618      	mov	r0, r3
    8b58:	4690      	mov	r8, r2
    8b5a:	f7fd ff7a 	bl	6a52 <strlen>
    8b5e:	9b03      	ldr	r3, [sp, #12]
    8b60:	f8db 2000 	ldr.w	r2, [fp]
    8b64:	9001      	str	r0, [sp, #4]
    8b66:	4403      	add	r3, r0
    8b68:	f813 3c01 	ldrb.w	r3, [r3, #-1]
    8b6c:	9307      	str	r3, [sp, #28]
    8b6e:	1c93      	adds	r3, r2, #2
    8b70:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
    8b74:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
    8b78:	32fe      	adds	r2, #254	; 0xfe
    8b7a:	eb02 0a03 	add.w	sl, r2, r3
    8b7e:	461f      	mov	r7, r3
    8b80:	f813 0b01 	ldrb.w	r0, [r3], #1
    8b84:	2830      	cmp	r0, #48	; 0x30
    8b86:	d0f8      	beq.n	8b7a <__gethex+0x36>
    8b88:	f7ff ffc6 	bl	8b18 <__hexdig_fun>
    8b8c:	4604      	mov	r4, r0
    8b8e:	2800      	cmp	r0, #0
    8b90:	d168      	bne.n	8c64 <__gethex+0x120>
    8b92:	9a01      	ldr	r2, [sp, #4]
    8b94:	9903      	ldr	r1, [sp, #12]
    8b96:	4638      	mov	r0, r7
    8b98:	f7fd ff86 	bl	6aa8 <strncmp>
    8b9c:	4605      	mov	r5, r0
    8b9e:	2800      	cmp	r0, #0
    8ba0:	d163      	bne.n	8c6a <__gethex+0x126>
    8ba2:	9b01      	ldr	r3, [sp, #4]
    8ba4:	5cf8      	ldrb	r0, [r7, r3]
    8ba6:	18fe      	adds	r6, r7, r3
    8ba8:	f7ff ffb6 	bl	8b18 <__hexdig_fun>
    8bac:	2800      	cmp	r0, #0
    8bae:	d05e      	beq.n	8c6e <__gethex+0x12a>
    8bb0:	4633      	mov	r3, r6
    8bb2:	7818      	ldrb	r0, [r3, #0]
    8bb4:	2830      	cmp	r0, #48	; 0x30
    8bb6:	461f      	mov	r7, r3
    8bb8:	f103 0301 	add.w	r3, r3, #1
    8bbc:	d0f9      	beq.n	8bb2 <__gethex+0x6e>
    8bbe:	f7ff ffab 	bl	8b18 <__hexdig_fun>
    8bc2:	fab0 f480 	clz	r4, r0
    8bc6:	0964      	lsrs	r4, r4, #5
    8bc8:	4635      	mov	r5, r6
    8bca:	f04f 0a01 	mov.w	sl, #1
    8bce:	463a      	mov	r2, r7
    8bd0:	4616      	mov	r6, r2
    8bd2:	3201      	adds	r2, #1
    8bd4:	7830      	ldrb	r0, [r6, #0]
    8bd6:	f7ff ff9f 	bl	8b18 <__hexdig_fun>
    8bda:	2800      	cmp	r0, #0
    8bdc:	d1f8      	bne.n	8bd0 <__gethex+0x8c>
    8bde:	9a01      	ldr	r2, [sp, #4]
    8be0:	9903      	ldr	r1, [sp, #12]
    8be2:	4630      	mov	r0, r6
    8be4:	f7fd ff60 	bl	6aa8 <strncmp>
    8be8:	b950      	cbnz	r0, 8c00 <__gethex+0xbc>
    8bea:	b955      	cbnz	r5, 8c02 <__gethex+0xbe>
    8bec:	9b01      	ldr	r3, [sp, #4]
    8bee:	18f5      	adds	r5, r6, r3
    8bf0:	462a      	mov	r2, r5
    8bf2:	4616      	mov	r6, r2
    8bf4:	3201      	adds	r2, #1
    8bf6:	7830      	ldrb	r0, [r6, #0]
    8bf8:	f7ff ff8e 	bl	8b18 <__hexdig_fun>
    8bfc:	2800      	cmp	r0, #0
    8bfe:	d1f8      	bne.n	8bf2 <__gethex+0xae>
    8c00:	b10d      	cbz	r5, 8c06 <__gethex+0xc2>
    8c02:	1bad      	subs	r5, r5, r6
    8c04:	00ad      	lsls	r5, r5, #2
    8c06:	7833      	ldrb	r3, [r6, #0]
    8c08:	2b50      	cmp	r3, #80	; 0x50
    8c0a:	d001      	beq.n	8c10 <__gethex+0xcc>
    8c0c:	2b70      	cmp	r3, #112	; 0x70
    8c0e:	d13c      	bne.n	8c8a <__gethex+0x146>
    8c10:	7873      	ldrb	r3, [r6, #1]
    8c12:	2b2b      	cmp	r3, #43	; 0x2b
    8c14:	d02d      	beq.n	8c72 <__gethex+0x12e>
    8c16:	2b2d      	cmp	r3, #45	; 0x2d
    8c18:	d02f      	beq.n	8c7a <__gethex+0x136>
    8c1a:	1c71      	adds	r1, r6, #1
    8c1c:	f04f 0900 	mov.w	r9, #0
    8c20:	7808      	ldrb	r0, [r1, #0]
    8c22:	f7ff ff79 	bl	8b18 <__hexdig_fun>
    8c26:	1e43      	subs	r3, r0, #1
    8c28:	b2db      	uxtb	r3, r3
    8c2a:	2b18      	cmp	r3, #24
    8c2c:	d82d      	bhi.n	8c8a <__gethex+0x146>
    8c2e:	f1a0 0210 	sub.w	r2, r0, #16
    8c32:	f811 0f01 	ldrb.w	r0, [r1, #1]!
    8c36:	f7ff ff6f 	bl	8b18 <__hexdig_fun>
    8c3a:	1e43      	subs	r3, r0, #1
    8c3c:	b2db      	uxtb	r3, r3
    8c3e:	2b18      	cmp	r3, #24
    8c40:	d91e      	bls.n	8c80 <__gethex+0x13c>
    8c42:	f1b9 0f00 	cmp.w	r9, #0
    8c46:	d000      	beq.n	8c4a <__gethex+0x106>
    8c48:	4252      	negs	r2, r2
    8c4a:	4415      	add	r5, r2
    8c4c:	f8cb 1000 	str.w	r1, [fp]
    8c50:	b1ec      	cbz	r4, 8c8e <__gethex+0x14a>
    8c52:	f1ba 0f00 	cmp.w	sl, #0
    8c56:	bf14      	ite	ne
    8c58:	2700      	movne	r7, #0
    8c5a:	2706      	moveq	r7, #6
    8c5c:	4638      	mov	r0, r7
    8c5e:	b00b      	add	sp, #44	; 0x2c
    8c60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8c64:	2400      	movs	r4, #0
    8c66:	4625      	mov	r5, r4
    8c68:	e7b1      	b.n	8bce <__gethex+0x8a>
    8c6a:	463e      	mov	r6, r7
    8c6c:	4625      	mov	r5, r4
    8c6e:	2401      	movs	r4, #1
    8c70:	e7c9      	b.n	8c06 <__gethex+0xc2>
    8c72:	f04f 0900 	mov.w	r9, #0
    8c76:	1cb1      	adds	r1, r6, #2
    8c78:	e7d2      	b.n	8c20 <__gethex+0xdc>
    8c7a:	f04f 0901 	mov.w	r9, #1
    8c7e:	e7fa      	b.n	8c76 <__gethex+0x132>
    8c80:	230a      	movs	r3, #10
    8c82:	fb03 0202 	mla	r2, r3, r2, r0
    8c86:	3a10      	subs	r2, #16
    8c88:	e7d3      	b.n	8c32 <__gethex+0xee>
    8c8a:	4631      	mov	r1, r6
    8c8c:	e7de      	b.n	8c4c <__gethex+0x108>
    8c8e:	1bf3      	subs	r3, r6, r7
    8c90:	3b01      	subs	r3, #1
    8c92:	4621      	mov	r1, r4
    8c94:	2b07      	cmp	r3, #7
    8c96:	dc4f      	bgt.n	8d38 <__gethex+0x1f4>
    8c98:	9802      	ldr	r0, [sp, #8]
    8c9a:	f000 fb45 	bl	9328 <_Balloc>
    8c9e:	9b01      	ldr	r3, [sp, #4]
    8ca0:	f100 0914 	add.w	r9, r0, #20
    8ca4:	f04f 0b00 	mov.w	fp, #0
    8ca8:	f1c3 0301 	rsb	r3, r3, #1
    8cac:	4604      	mov	r4, r0
    8cae:	f8cd 9010 	str.w	r9, [sp, #16]
    8cb2:	46da      	mov	sl, fp
    8cb4:	9308      	str	r3, [sp, #32]
    8cb6:	42b7      	cmp	r7, r6
    8cb8:	d341      	bcc.n	8d3e <__gethex+0x1fa>
    8cba:	9804      	ldr	r0, [sp, #16]
    8cbc:	f840 ab04 	str.w	sl, [r0], #4
    8cc0:	eba0 0009 	sub.w	r0, r0, r9
    8cc4:	1080      	asrs	r0, r0, #2
    8cc6:	6120      	str	r0, [r4, #16]
    8cc8:	0147      	lsls	r7, r0, #5
    8cca:	4650      	mov	r0, sl
    8ccc:	f000 fbf0 	bl	94b0 <__hi0bits>
    8cd0:	f8d8 6000 	ldr.w	r6, [r8]
    8cd4:	1a3f      	subs	r7, r7, r0
    8cd6:	42b7      	cmp	r7, r6
    8cd8:	dd63      	ble.n	8da2 <__gethex+0x25e>
    8cda:	1bbf      	subs	r7, r7, r6
    8cdc:	4639      	mov	r1, r7
    8cde:	4620      	mov	r0, r4
    8ce0:	f000 fef9 	bl	9ad6 <__any_on>
    8ce4:	4682      	mov	sl, r0
    8ce6:	b1a8      	cbz	r0, 8d14 <__gethex+0x1d0>
    8ce8:	1e7b      	subs	r3, r7, #1
    8cea:	1159      	asrs	r1, r3, #5
    8cec:	f003 021f 	and.w	r2, r3, #31
    8cf0:	f04f 0a01 	mov.w	sl, #1
    8cf4:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
    8cf8:	fa0a f202 	lsl.w	r2, sl, r2
    8cfc:	420a      	tst	r2, r1
    8cfe:	d009      	beq.n	8d14 <__gethex+0x1d0>
    8d00:	4553      	cmp	r3, sl
    8d02:	dd05      	ble.n	8d10 <__gethex+0x1cc>
    8d04:	1eb9      	subs	r1, r7, #2
    8d06:	4620      	mov	r0, r4
    8d08:	f000 fee5 	bl	9ad6 <__any_on>
    8d0c:	2800      	cmp	r0, #0
    8d0e:	d145      	bne.n	8d9c <__gethex+0x258>
    8d10:	f04f 0a02 	mov.w	sl, #2
    8d14:	4639      	mov	r1, r7
    8d16:	4620      	mov	r0, r4
    8d18:	f7ff fec4 	bl	8aa4 <rshift>
    8d1c:	443d      	add	r5, r7
    8d1e:	f8d8 3008 	ldr.w	r3, [r8, #8]
    8d22:	42ab      	cmp	r3, r5
    8d24:	da4b      	bge.n	8dbe <__gethex+0x27a>
    8d26:	4621      	mov	r1, r4
    8d28:	9802      	ldr	r0, [sp, #8]
    8d2a:	f000 fb31 	bl	9390 <_Bfree>
    8d2e:	9a14      	ldr	r2, [sp, #80]	; 0x50
    8d30:	2300      	movs	r3, #0
    8d32:	6013      	str	r3, [r2, #0]
    8d34:	27a3      	movs	r7, #163	; 0xa3
    8d36:	e791      	b.n	8c5c <__gethex+0x118>
    8d38:	3101      	adds	r1, #1
    8d3a:	105b      	asrs	r3, r3, #1
    8d3c:	e7aa      	b.n	8c94 <__gethex+0x150>
    8d3e:	1e73      	subs	r3, r6, #1
    8d40:	9305      	str	r3, [sp, #20]
    8d42:	9a07      	ldr	r2, [sp, #28]
    8d44:	f816 3c01 	ldrb.w	r3, [r6, #-1]
    8d48:	4293      	cmp	r3, r2
    8d4a:	d017      	beq.n	8d7c <__gethex+0x238>
    8d4c:	f1bb 0f20 	cmp.w	fp, #32
    8d50:	d106      	bne.n	8d60 <__gethex+0x21c>
    8d52:	9b04      	ldr	r3, [sp, #16]
    8d54:	f843 ab04 	str.w	sl, [r3], #4
    8d58:	f04f 0a00 	mov.w	sl, #0
    8d5c:	9304      	str	r3, [sp, #16]
    8d5e:	46d3      	mov	fp, sl
    8d60:	f816 0c01 	ldrb.w	r0, [r6, #-1]
    8d64:	f7ff fed8 	bl	8b18 <__hexdig_fun>
    8d68:	f000 000f 	and.w	r0, r0, #15
    8d6c:	fa00 f00b 	lsl.w	r0, r0, fp
    8d70:	ea4a 0a00 	orr.w	sl, sl, r0
    8d74:	f10b 0b04 	add.w	fp, fp, #4
    8d78:	9b05      	ldr	r3, [sp, #20]
    8d7a:	e00d      	b.n	8d98 <__gethex+0x254>
    8d7c:	9b05      	ldr	r3, [sp, #20]
    8d7e:	9a08      	ldr	r2, [sp, #32]
    8d80:	4413      	add	r3, r2
    8d82:	42bb      	cmp	r3, r7
    8d84:	d3e2      	bcc.n	8d4c <__gethex+0x208>
    8d86:	4618      	mov	r0, r3
    8d88:	9a01      	ldr	r2, [sp, #4]
    8d8a:	9903      	ldr	r1, [sp, #12]
    8d8c:	9309      	str	r3, [sp, #36]	; 0x24
    8d8e:	f7fd fe8b 	bl	6aa8 <strncmp>
    8d92:	9b09      	ldr	r3, [sp, #36]	; 0x24
    8d94:	2800      	cmp	r0, #0
    8d96:	d1d9      	bne.n	8d4c <__gethex+0x208>
    8d98:	461e      	mov	r6, r3
    8d9a:	e78c      	b.n	8cb6 <__gethex+0x172>
    8d9c:	f04f 0a03 	mov.w	sl, #3
    8da0:	e7b8      	b.n	8d14 <__gethex+0x1d0>
    8da2:	da09      	bge.n	8db8 <__gethex+0x274>
    8da4:	1bf7      	subs	r7, r6, r7
    8da6:	4621      	mov	r1, r4
    8da8:	463a      	mov	r2, r7
    8daa:	9802      	ldr	r0, [sp, #8]
    8dac:	f000 fcb8 	bl	9720 <__lshift>
    8db0:	1bed      	subs	r5, r5, r7
    8db2:	4604      	mov	r4, r0
    8db4:	f100 0914 	add.w	r9, r0, #20
    8db8:	f04f 0a00 	mov.w	sl, #0
    8dbc:	e7af      	b.n	8d1e <__gethex+0x1da>
    8dbe:	f8d8 3004 	ldr.w	r3, [r8, #4]
    8dc2:	42ab      	cmp	r3, r5
    8dc4:	dd6d      	ble.n	8ea2 <__gethex+0x35e>
    8dc6:	1b5d      	subs	r5, r3, r5
    8dc8:	42ae      	cmp	r6, r5
    8dca:	dc31      	bgt.n	8e30 <__gethex+0x2ec>
    8dcc:	f8d8 300c 	ldr.w	r3, [r8, #12]
    8dd0:	2b02      	cmp	r3, #2
    8dd2:	d022      	beq.n	8e1a <__gethex+0x2d6>
    8dd4:	2b03      	cmp	r3, #3
    8dd6:	d024      	beq.n	8e22 <__gethex+0x2de>
    8dd8:	2b01      	cmp	r3, #1
    8dda:	d115      	bne.n	8e08 <__gethex+0x2c4>
    8ddc:	42ae      	cmp	r6, r5
    8dde:	d113      	bne.n	8e08 <__gethex+0x2c4>
    8de0:	2e01      	cmp	r6, #1
    8de2:	d10b      	bne.n	8dfc <__gethex+0x2b8>
    8de4:	9a06      	ldr	r2, [sp, #24]
    8de6:	f8d8 3004 	ldr.w	r3, [r8, #4]
    8dea:	6013      	str	r3, [r2, #0]
    8dec:	2301      	movs	r3, #1
    8dee:	6123      	str	r3, [r4, #16]
    8df0:	f8c9 3000 	str.w	r3, [r9]
    8df4:	9b14      	ldr	r3, [sp, #80]	; 0x50
    8df6:	2762      	movs	r7, #98	; 0x62
    8df8:	601c      	str	r4, [r3, #0]
    8dfa:	e72f      	b.n	8c5c <__gethex+0x118>
    8dfc:	1e71      	subs	r1, r6, #1
    8dfe:	4620      	mov	r0, r4
    8e00:	f000 fe69 	bl	9ad6 <__any_on>
    8e04:	2800      	cmp	r0, #0
    8e06:	d1ed      	bne.n	8de4 <__gethex+0x2a0>
    8e08:	4621      	mov	r1, r4
    8e0a:	9802      	ldr	r0, [sp, #8]
    8e0c:	f000 fac0 	bl	9390 <_Bfree>
    8e10:	9a14      	ldr	r2, [sp, #80]	; 0x50
    8e12:	2300      	movs	r3, #0
    8e14:	6013      	str	r3, [r2, #0]
    8e16:	2750      	movs	r7, #80	; 0x50
    8e18:	e720      	b.n	8c5c <__gethex+0x118>
    8e1a:	9b15      	ldr	r3, [sp, #84]	; 0x54
    8e1c:	2b00      	cmp	r3, #0
    8e1e:	d1f3      	bne.n	8e08 <__gethex+0x2c4>
    8e20:	e7e0      	b.n	8de4 <__gethex+0x2a0>
    8e22:	9b15      	ldr	r3, [sp, #84]	; 0x54
    8e24:	2b00      	cmp	r3, #0
    8e26:	d1dd      	bne.n	8de4 <__gethex+0x2a0>
    8e28:	e7ee      	b.n	8e08 <__gethex+0x2c4>
    8e2a:	bf00      	nop
    8e2c:	0000bf30 	.word	0x0000bf30
    8e30:	1e6f      	subs	r7, r5, #1
    8e32:	f1ba 0f00 	cmp.w	sl, #0
    8e36:	d131      	bne.n	8e9c <__gethex+0x358>
    8e38:	b127      	cbz	r7, 8e44 <__gethex+0x300>
    8e3a:	4639      	mov	r1, r7
    8e3c:	4620      	mov	r0, r4
    8e3e:	f000 fe4a 	bl	9ad6 <__any_on>
    8e42:	4682      	mov	sl, r0
    8e44:	117a      	asrs	r2, r7, #5
    8e46:	2301      	movs	r3, #1
    8e48:	f007 071f 	and.w	r7, r7, #31
    8e4c:	fa03 f707 	lsl.w	r7, r3, r7
    8e50:	f859 3022 	ldr.w	r3, [r9, r2, lsl #2]
    8e54:	4629      	mov	r1, r5
    8e56:	421f      	tst	r7, r3
    8e58:	4620      	mov	r0, r4
    8e5a:	bf18      	it	ne
    8e5c:	f04a 0a02 	orrne.w	sl, sl, #2
    8e60:	1b76      	subs	r6, r6, r5
    8e62:	f7ff fe1f 	bl	8aa4 <rshift>
    8e66:	f8d8 5004 	ldr.w	r5, [r8, #4]
    8e6a:	2702      	movs	r7, #2
    8e6c:	f1ba 0f00 	cmp.w	sl, #0
    8e70:	d048      	beq.n	8f04 <__gethex+0x3c0>
    8e72:	f8d8 300c 	ldr.w	r3, [r8, #12]
    8e76:	2b02      	cmp	r3, #2
    8e78:	d015      	beq.n	8ea6 <__gethex+0x362>
    8e7a:	2b03      	cmp	r3, #3
    8e7c:	d017      	beq.n	8eae <__gethex+0x36a>
    8e7e:	2b01      	cmp	r3, #1
    8e80:	d109      	bne.n	8e96 <__gethex+0x352>
    8e82:	f01a 0f02 	tst.w	sl, #2
    8e86:	d006      	beq.n	8e96 <__gethex+0x352>
    8e88:	f8d9 3000 	ldr.w	r3, [r9]
    8e8c:	ea4a 0a03 	orr.w	sl, sl, r3
    8e90:	f01a 0f01 	tst.w	sl, #1
    8e94:	d10e      	bne.n	8eb4 <__gethex+0x370>
    8e96:	f047 0710 	orr.w	r7, r7, #16
    8e9a:	e033      	b.n	8f04 <__gethex+0x3c0>
    8e9c:	f04f 0a01 	mov.w	sl, #1
    8ea0:	e7d0      	b.n	8e44 <__gethex+0x300>
    8ea2:	2701      	movs	r7, #1
    8ea4:	e7e2      	b.n	8e6c <__gethex+0x328>
    8ea6:	9b15      	ldr	r3, [sp, #84]	; 0x54
    8ea8:	f1c3 0301 	rsb	r3, r3, #1
    8eac:	9315      	str	r3, [sp, #84]	; 0x54
    8eae:	9b15      	ldr	r3, [sp, #84]	; 0x54
    8eb0:	2b00      	cmp	r3, #0
    8eb2:	d0f0      	beq.n	8e96 <__gethex+0x352>
    8eb4:	f8d4 9010 	ldr.w	r9, [r4, #16]
    8eb8:	f104 0314 	add.w	r3, r4, #20
    8ebc:	ea4f 0a89 	mov.w	sl, r9, lsl #2
    8ec0:	eb03 010a 	add.w	r1, r3, sl
    8ec4:	f04f 0c00 	mov.w	ip, #0
    8ec8:	4618      	mov	r0, r3
    8eca:	f853 2b04 	ldr.w	r2, [r3], #4
    8ece:	f1b2 3fff 	cmp.w	r2, #4294967295
    8ed2:	d01c      	beq.n	8f0e <__gethex+0x3ca>
    8ed4:	3201      	adds	r2, #1
    8ed6:	6002      	str	r2, [r0, #0]
    8ed8:	2f02      	cmp	r7, #2
    8eda:	f104 0314 	add.w	r3, r4, #20
    8ede:	d138      	bne.n	8f52 <__gethex+0x40e>
    8ee0:	f8d8 2000 	ldr.w	r2, [r8]
    8ee4:	3a01      	subs	r2, #1
    8ee6:	42b2      	cmp	r2, r6
    8ee8:	d10a      	bne.n	8f00 <__gethex+0x3bc>
    8eea:	1171      	asrs	r1, r6, #5
    8eec:	2201      	movs	r2, #1
    8eee:	f006 061f 	and.w	r6, r6, #31
    8ef2:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
    8ef6:	fa02 f606 	lsl.w	r6, r2, r6
    8efa:	421e      	tst	r6, r3
    8efc:	bf18      	it	ne
    8efe:	4617      	movne	r7, r2
    8f00:	f047 0720 	orr.w	r7, r7, #32
    8f04:	9b14      	ldr	r3, [sp, #80]	; 0x50
    8f06:	601c      	str	r4, [r3, #0]
    8f08:	9b06      	ldr	r3, [sp, #24]
    8f0a:	601d      	str	r5, [r3, #0]
    8f0c:	e6a6      	b.n	8c5c <__gethex+0x118>
    8f0e:	4299      	cmp	r1, r3
    8f10:	f843 cc04 	str.w	ip, [r3, #-4]
    8f14:	d8d8      	bhi.n	8ec8 <__gethex+0x384>
    8f16:	68a3      	ldr	r3, [r4, #8]
    8f18:	4599      	cmp	r9, r3
    8f1a:	db12      	blt.n	8f42 <__gethex+0x3fe>
    8f1c:	6861      	ldr	r1, [r4, #4]
    8f1e:	9802      	ldr	r0, [sp, #8]
    8f20:	3101      	adds	r1, #1
    8f22:	f000 fa01 	bl	9328 <_Balloc>
    8f26:	6922      	ldr	r2, [r4, #16]
    8f28:	3202      	adds	r2, #2
    8f2a:	f104 010c 	add.w	r1, r4, #12
    8f2e:	4683      	mov	fp, r0
    8f30:	0092      	lsls	r2, r2, #2
    8f32:	300c      	adds	r0, #12
    8f34:	f7fc fb7c 	bl	5630 <memcpy>
    8f38:	4621      	mov	r1, r4
    8f3a:	9802      	ldr	r0, [sp, #8]
    8f3c:	f000 fa28 	bl	9390 <_Bfree>
    8f40:	465c      	mov	r4, fp
    8f42:	6923      	ldr	r3, [r4, #16]
    8f44:	1c5a      	adds	r2, r3, #1
    8f46:	eb04 0383 	add.w	r3, r4, r3, lsl #2
    8f4a:	6122      	str	r2, [r4, #16]
    8f4c:	2201      	movs	r2, #1
    8f4e:	615a      	str	r2, [r3, #20]
    8f50:	e7c2      	b.n	8ed8 <__gethex+0x394>
    8f52:	6922      	ldr	r2, [r4, #16]
    8f54:	454a      	cmp	r2, r9
    8f56:	dd0b      	ble.n	8f70 <__gethex+0x42c>
    8f58:	2101      	movs	r1, #1
    8f5a:	4620      	mov	r0, r4
    8f5c:	f7ff fda2 	bl	8aa4 <rshift>
    8f60:	f8d8 3008 	ldr.w	r3, [r8, #8]
    8f64:	3501      	adds	r5, #1
    8f66:	42ab      	cmp	r3, r5
    8f68:	f6ff aedd 	blt.w	8d26 <__gethex+0x1e2>
    8f6c:	2701      	movs	r7, #1
    8f6e:	e7c7      	b.n	8f00 <__gethex+0x3bc>
    8f70:	f016 061f 	ands.w	r6, r6, #31
    8f74:	d0fa      	beq.n	8f6c <__gethex+0x428>
    8f76:	449a      	add	sl, r3
    8f78:	f1c6 0620 	rsb	r6, r6, #32
    8f7c:	f85a 0c04 	ldr.w	r0, [sl, #-4]
    8f80:	f000 fa96 	bl	94b0 <__hi0bits>
    8f84:	42b0      	cmp	r0, r6
    8f86:	dbe7      	blt.n	8f58 <__gethex+0x414>
    8f88:	e7f0      	b.n	8f6c <__gethex+0x428>
    8f8a:	bf00      	nop

00008f8c <L_shift>:
L_shift():
    8f8c:	f1c2 0208 	rsb	r2, r2, #8
    8f90:	0092      	lsls	r2, r2, #2
    8f92:	b570      	push	{r4, r5, r6, lr}
    8f94:	f1c2 0620 	rsb	r6, r2, #32
    8f98:	6843      	ldr	r3, [r0, #4]
    8f9a:	6804      	ldr	r4, [r0, #0]
    8f9c:	fa03 f506 	lsl.w	r5, r3, r6
    8fa0:	432c      	orrs	r4, r5
    8fa2:	40d3      	lsrs	r3, r2
    8fa4:	6004      	str	r4, [r0, #0]
    8fa6:	f840 3f04 	str.w	r3, [r0, #4]!
    8faa:	4288      	cmp	r0, r1
    8fac:	d3f4      	bcc.n	8f98 <L_shift+0xc>
    8fae:	bd70      	pop	{r4, r5, r6, pc}

00008fb0 <__match>:
__match():
    8fb0:	b530      	push	{r4, r5, lr}
    8fb2:	6803      	ldr	r3, [r0, #0]
    8fb4:	3301      	adds	r3, #1
    8fb6:	f811 4b01 	ldrb.w	r4, [r1], #1
    8fba:	b914      	cbnz	r4, 8fc2 <__match+0x12>
    8fbc:	6003      	str	r3, [r0, #0]
    8fbe:	2001      	movs	r0, #1
    8fc0:	bd30      	pop	{r4, r5, pc}
    8fc2:	f813 2b01 	ldrb.w	r2, [r3], #1
    8fc6:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
    8fca:	2d19      	cmp	r5, #25
    8fcc:	bf98      	it	ls
    8fce:	3220      	addls	r2, #32
    8fd0:	42a2      	cmp	r2, r4
    8fd2:	d0f0      	beq.n	8fb6 <__match+0x6>
    8fd4:	2000      	movs	r0, #0
    8fd6:	e7f3      	b.n	8fc0 <__match+0x10>

00008fd8 <__hexnan>:
__hexnan():
    8fd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8fdc:	680b      	ldr	r3, [r1, #0]
    8fde:	6801      	ldr	r1, [r0, #0]
    8fe0:	115f      	asrs	r7, r3, #5
    8fe2:	eb02 0787 	add.w	r7, r2, r7, lsl #2
    8fe6:	f013 031f 	ands.w	r3, r3, #31
    8fea:	b087      	sub	sp, #28
    8fec:	bf18      	it	ne
    8fee:	3704      	addne	r7, #4
    8ff0:	2500      	movs	r5, #0
    8ff2:	1f3e      	subs	r6, r7, #4
    8ff4:	4682      	mov	sl, r0
    8ff6:	4690      	mov	r8, r2
    8ff8:	9301      	str	r3, [sp, #4]
    8ffa:	f847 5c04 	str.w	r5, [r7, #-4]
    8ffe:	46b1      	mov	r9, r6
    9000:	4634      	mov	r4, r6
    9002:	9502      	str	r5, [sp, #8]
    9004:	46ab      	mov	fp, r5
    9006:	784a      	ldrb	r2, [r1, #1]
    9008:	1c4b      	adds	r3, r1, #1
    900a:	9303      	str	r3, [sp, #12]
    900c:	b342      	cbz	r2, 9060 <__hexnan+0x88>
    900e:	4610      	mov	r0, r2
    9010:	9105      	str	r1, [sp, #20]
    9012:	9204      	str	r2, [sp, #16]
    9014:	f7ff fd80 	bl	8b18 <__hexdig_fun>
    9018:	2800      	cmp	r0, #0
    901a:	d143      	bne.n	90a4 <__hexnan+0xcc>
    901c:	9a04      	ldr	r2, [sp, #16]
    901e:	9905      	ldr	r1, [sp, #20]
    9020:	2a20      	cmp	r2, #32
    9022:	d818      	bhi.n	9056 <__hexnan+0x7e>
    9024:	9b02      	ldr	r3, [sp, #8]
    9026:	459b      	cmp	fp, r3
    9028:	dd13      	ble.n	9052 <__hexnan+0x7a>
    902a:	454c      	cmp	r4, r9
    902c:	d206      	bcs.n	903c <__hexnan+0x64>
    902e:	2d07      	cmp	r5, #7
    9030:	dc04      	bgt.n	903c <__hexnan+0x64>
    9032:	462a      	mov	r2, r5
    9034:	4649      	mov	r1, r9
    9036:	4620      	mov	r0, r4
    9038:	f7ff ffa8 	bl	8f8c <L_shift>
    903c:	4544      	cmp	r4, r8
    903e:	d944      	bls.n	90ca <__hexnan+0xf2>
    9040:	2300      	movs	r3, #0
    9042:	f1a4 0904 	sub.w	r9, r4, #4
    9046:	f844 3c04 	str.w	r3, [r4, #-4]
    904a:	f8cd b008 	str.w	fp, [sp, #8]
    904e:	464c      	mov	r4, r9
    9050:	461d      	mov	r5, r3
    9052:	9903      	ldr	r1, [sp, #12]
    9054:	e7d7      	b.n	9006 <__hexnan+0x2e>
    9056:	2a29      	cmp	r2, #41	; 0x29
    9058:	d14a      	bne.n	90f0 <__hexnan+0x118>
    905a:	3102      	adds	r1, #2
    905c:	f8ca 1000 	str.w	r1, [sl]
    9060:	f1bb 0f00 	cmp.w	fp, #0
    9064:	d044      	beq.n	90f0 <__hexnan+0x118>
    9066:	454c      	cmp	r4, r9
    9068:	d206      	bcs.n	9078 <__hexnan+0xa0>
    906a:	2d07      	cmp	r5, #7
    906c:	dc04      	bgt.n	9078 <__hexnan+0xa0>
    906e:	462a      	mov	r2, r5
    9070:	4649      	mov	r1, r9
    9072:	4620      	mov	r0, r4
    9074:	f7ff ff8a 	bl	8f8c <L_shift>
    9078:	4544      	cmp	r4, r8
    907a:	d928      	bls.n	90ce <__hexnan+0xf6>
    907c:	4643      	mov	r3, r8
    907e:	f854 2b04 	ldr.w	r2, [r4], #4
    9082:	f843 2b04 	str.w	r2, [r3], #4
    9086:	42a6      	cmp	r6, r4
    9088:	d2f9      	bcs.n	907e <__hexnan+0xa6>
    908a:	2200      	movs	r2, #0
    908c:	f843 2b04 	str.w	r2, [r3], #4
    9090:	429e      	cmp	r6, r3
    9092:	d2fb      	bcs.n	908c <__hexnan+0xb4>
    9094:	6833      	ldr	r3, [r6, #0]
    9096:	b91b      	cbnz	r3, 90a0 <__hexnan+0xc8>
    9098:	4546      	cmp	r6, r8
    909a:	d127      	bne.n	90ec <__hexnan+0x114>
    909c:	2301      	movs	r3, #1
    909e:	6033      	str	r3, [r6, #0]
    90a0:	2005      	movs	r0, #5
    90a2:	e026      	b.n	90f2 <__hexnan+0x11a>
    90a4:	3501      	adds	r5, #1
    90a6:	2d08      	cmp	r5, #8
    90a8:	f10b 0b01 	add.w	fp, fp, #1
    90ac:	dd06      	ble.n	90bc <__hexnan+0xe4>
    90ae:	4544      	cmp	r4, r8
    90b0:	d9cf      	bls.n	9052 <__hexnan+0x7a>
    90b2:	2300      	movs	r3, #0
    90b4:	f844 3c04 	str.w	r3, [r4, #-4]
    90b8:	2501      	movs	r5, #1
    90ba:	3c04      	subs	r4, #4
    90bc:	6822      	ldr	r2, [r4, #0]
    90be:	f000 000f 	and.w	r0, r0, #15
    90c2:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
    90c6:	6020      	str	r0, [r4, #0]
    90c8:	e7c3      	b.n	9052 <__hexnan+0x7a>
    90ca:	2508      	movs	r5, #8
    90cc:	e7c1      	b.n	9052 <__hexnan+0x7a>
    90ce:	9b01      	ldr	r3, [sp, #4]
    90d0:	2b00      	cmp	r3, #0
    90d2:	d0df      	beq.n	9094 <__hexnan+0xbc>
    90d4:	f04f 32ff 	mov.w	r2, #4294967295
    90d8:	f1c3 0320 	rsb	r3, r3, #32
    90dc:	fa22 f303 	lsr.w	r3, r2, r3
    90e0:	f857 2c04 	ldr.w	r2, [r7, #-4]
    90e4:	401a      	ands	r2, r3
    90e6:	f847 2c04 	str.w	r2, [r7, #-4]
    90ea:	e7d3      	b.n	9094 <__hexnan+0xbc>
    90ec:	3e04      	subs	r6, #4
    90ee:	e7d1      	b.n	9094 <__hexnan+0xbc>
    90f0:	2004      	movs	r0, #4
    90f2:	b007      	add	sp, #28
    90f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

000090f8 <_getc_r>:
_getc_r():
    90f8:	b538      	push	{r3, r4, r5, lr}
    90fa:	460c      	mov	r4, r1
    90fc:	4605      	mov	r5, r0
    90fe:	b118      	cbz	r0, 9108 <_getc_r+0x10>
    9100:	6983      	ldr	r3, [r0, #24]
    9102:	b90b      	cbnz	r3, 9108 <_getc_r+0x10>
    9104:	f7ff fc16 	bl	8934 <__sinit>
    9108:	4b18      	ldr	r3, [pc, #96]	; (916c <_getc_r+0x74>)
    910a:	429c      	cmp	r4, r3
    910c:	d11e      	bne.n	914c <_getc_r+0x54>
    910e:	686c      	ldr	r4, [r5, #4]
    9110:	6e63      	ldr	r3, [r4, #100]	; 0x64
    9112:	07d8      	lsls	r0, r3, #31
    9114:	d405      	bmi.n	9122 <_getc_r+0x2a>
    9116:	89a3      	ldrh	r3, [r4, #12]
    9118:	0599      	lsls	r1, r3, #22
    911a:	d402      	bmi.n	9122 <_getc_r+0x2a>
    911c:	6da0      	ldr	r0, [r4, #88]	; 0x58
    911e:	f7fc fa74 	bl	560a <__retarget_lock_acquire_recursive>
    9122:	6863      	ldr	r3, [r4, #4]
    9124:	3b01      	subs	r3, #1
    9126:	2b00      	cmp	r3, #0
    9128:	6063      	str	r3, [r4, #4]
    912a:	da19      	bge.n	9160 <_getc_r+0x68>
    912c:	4628      	mov	r0, r5
    912e:	4621      	mov	r1, r4
    9130:	f001 f9b0 	bl	a494 <__srget_r>
    9134:	4605      	mov	r5, r0
    9136:	6e63      	ldr	r3, [r4, #100]	; 0x64
    9138:	07da      	lsls	r2, r3, #31
    913a:	d405      	bmi.n	9148 <_getc_r+0x50>
    913c:	89a3      	ldrh	r3, [r4, #12]
    913e:	059b      	lsls	r3, r3, #22
    9140:	d402      	bmi.n	9148 <_getc_r+0x50>
    9142:	6da0      	ldr	r0, [r4, #88]	; 0x58
    9144:	f7fc fa62 	bl	560c <__retarget_lock_release_recursive>
    9148:	4628      	mov	r0, r5
    914a:	bd38      	pop	{r3, r4, r5, pc}
    914c:	4b08      	ldr	r3, [pc, #32]	; (9170 <_getc_r+0x78>)
    914e:	429c      	cmp	r4, r3
    9150:	d101      	bne.n	9156 <_getc_r+0x5e>
    9152:	68ac      	ldr	r4, [r5, #8]
    9154:	e7dc      	b.n	9110 <_getc_r+0x18>
    9156:	4b07      	ldr	r3, [pc, #28]	; (9174 <_getc_r+0x7c>)
    9158:	429c      	cmp	r4, r3
    915a:	bf08      	it	eq
    915c:	68ec      	ldreq	r4, [r5, #12]
    915e:	e7d7      	b.n	9110 <_getc_r+0x18>
    9160:	6823      	ldr	r3, [r4, #0]
    9162:	1c5a      	adds	r2, r3, #1
    9164:	6022      	str	r2, [r4, #0]
    9166:	781d      	ldrb	r5, [r3, #0]
    9168:	e7e5      	b.n	9136 <_getc_r+0x3e>
    916a:	bf00      	nop
    916c:	0000bef0 	.word	0x0000bef0
    9170:	0000bf10 	.word	0x0000bf10
    9174:	0000bed0 	.word	0x0000bed0

00009178 <_localeconv_r>:
_localeconv_r():
    9178:	4800      	ldr	r0, [pc, #0]	; (917c <_localeconv_r+0x4>)
    917a:	4770      	bx	lr
    917c:	100002bc 	.word	0x100002bc

00009180 <__swhatbuf_r>:
__swhatbuf_r():
    9180:	b570      	push	{r4, r5, r6, lr}
    9182:	460e      	mov	r6, r1
    9184:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    9188:	2900      	cmp	r1, #0
    918a:	b096      	sub	sp, #88	; 0x58
    918c:	4614      	mov	r4, r2
    918e:	461d      	mov	r5, r3
    9190:	da07      	bge.n	91a2 <__swhatbuf_r+0x22>
    9192:	2300      	movs	r3, #0
    9194:	602b      	str	r3, [r5, #0]
    9196:	89b3      	ldrh	r3, [r6, #12]
    9198:	061a      	lsls	r2, r3, #24
    919a:	d410      	bmi.n	91be <__swhatbuf_r+0x3e>
    919c:	f44f 6380 	mov.w	r3, #1024	; 0x400
    91a0:	e00e      	b.n	91c0 <__swhatbuf_r+0x40>
    91a2:	466a      	mov	r2, sp
    91a4:	f001 fb06 	bl	a7b4 <_fstat_r>
    91a8:	2800      	cmp	r0, #0
    91aa:	dbf2      	blt.n	9192 <__swhatbuf_r+0x12>
    91ac:	9a01      	ldr	r2, [sp, #4]
    91ae:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
    91b2:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
    91b6:	425a      	negs	r2, r3
    91b8:	415a      	adcs	r2, r3
    91ba:	602a      	str	r2, [r5, #0]
    91bc:	e7ee      	b.n	919c <__swhatbuf_r+0x1c>
    91be:	2340      	movs	r3, #64	; 0x40
    91c0:	2000      	movs	r0, #0
    91c2:	6023      	str	r3, [r4, #0]
    91c4:	b016      	add	sp, #88	; 0x58
    91c6:	bd70      	pop	{r4, r5, r6, pc}

000091c8 <__smakebuf_r>:
__smakebuf_r():
    91c8:	898b      	ldrh	r3, [r1, #12]
    91ca:	b573      	push	{r0, r1, r4, r5, r6, lr}
    91cc:	079d      	lsls	r5, r3, #30
    91ce:	4606      	mov	r6, r0
    91d0:	460c      	mov	r4, r1
    91d2:	d507      	bpl.n	91e4 <__smakebuf_r+0x1c>
    91d4:	f104 0347 	add.w	r3, r4, #71	; 0x47
    91d8:	6023      	str	r3, [r4, #0]
    91da:	6123      	str	r3, [r4, #16]
    91dc:	2301      	movs	r3, #1
    91de:	6163      	str	r3, [r4, #20]
    91e0:	b002      	add	sp, #8
    91e2:	bd70      	pop	{r4, r5, r6, pc}
    91e4:	ab01      	add	r3, sp, #4
    91e6:	466a      	mov	r2, sp
    91e8:	f7ff ffca 	bl	9180 <__swhatbuf_r>
    91ec:	9900      	ldr	r1, [sp, #0]
    91ee:	4605      	mov	r5, r0
    91f0:	4630      	mov	r0, r6
    91f2:	f7fc fa9b 	bl	572c <_malloc_r>
    91f6:	b948      	cbnz	r0, 920c <__smakebuf_r+0x44>
    91f8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    91fc:	059a      	lsls	r2, r3, #22
    91fe:	d4ef      	bmi.n	91e0 <__smakebuf_r+0x18>
    9200:	f023 0303 	bic.w	r3, r3, #3
    9204:	f043 0302 	orr.w	r3, r3, #2
    9208:	81a3      	strh	r3, [r4, #12]
    920a:	e7e3      	b.n	91d4 <__smakebuf_r+0xc>
    920c:	4b0d      	ldr	r3, [pc, #52]	; (9244 <__smakebuf_r+0x7c>)
    920e:	62b3      	str	r3, [r6, #40]	; 0x28
    9210:	89a3      	ldrh	r3, [r4, #12]
    9212:	6020      	str	r0, [r4, #0]
    9214:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    9218:	81a3      	strh	r3, [r4, #12]
    921a:	9b00      	ldr	r3, [sp, #0]
    921c:	6163      	str	r3, [r4, #20]
    921e:	9b01      	ldr	r3, [sp, #4]
    9220:	6120      	str	r0, [r4, #16]
    9222:	b15b      	cbz	r3, 923c <__smakebuf_r+0x74>
    9224:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
    9228:	4630      	mov	r0, r6
    922a:	f001 fad5 	bl	a7d8 <_isatty_r>
    922e:	b128      	cbz	r0, 923c <__smakebuf_r+0x74>
    9230:	89a3      	ldrh	r3, [r4, #12]
    9232:	f023 0303 	bic.w	r3, r3, #3
    9236:	f043 0301 	orr.w	r3, r3, #1
    923a:	81a3      	strh	r3, [r4, #12]
    923c:	89a3      	ldrh	r3, [r4, #12]
    923e:	431d      	orrs	r5, r3
    9240:	81a5      	strh	r5, [r4, #12]
    9242:	e7cd      	b.n	91e0 <__smakebuf_r+0x18>
    9244:	000088cd 	.word	0x000088cd

00009248 <__ascii_mbtowc>:
__ascii_mbtowc():
    9248:	b082      	sub	sp, #8
    924a:	b901      	cbnz	r1, 924e <__ascii_mbtowc+0x6>
    924c:	a901      	add	r1, sp, #4
    924e:	b142      	cbz	r2, 9262 <__ascii_mbtowc+0x1a>
    9250:	b14b      	cbz	r3, 9266 <__ascii_mbtowc+0x1e>
    9252:	7813      	ldrb	r3, [r2, #0]
    9254:	600b      	str	r3, [r1, #0]
    9256:	7812      	ldrb	r2, [r2, #0]
    9258:	1c10      	adds	r0, r2, #0
    925a:	bf18      	it	ne
    925c:	2001      	movne	r0, #1
    925e:	b002      	add	sp, #8
    9260:	4770      	bx	lr
    9262:	4610      	mov	r0, r2
    9264:	e7fb      	b.n	925e <__ascii_mbtowc+0x16>
    9266:	f06f 0001 	mvn.w	r0, #1
    926a:	e7f8      	b.n	925e <__ascii_mbtowc+0x16>
    926c:	ffff ffff 			; <UNDEFINED> instruction: 0xffffffff

00009270 <memchr>:
memchr():
    9270:	f001 01ff 	and.w	r1, r1, #255	; 0xff
    9274:	2a10      	cmp	r2, #16
    9276:	db2b      	blt.n	92d0 <memchr+0x60>
    9278:	f010 0f07 	tst.w	r0, #7
    927c:	d008      	beq.n	9290 <memchr+0x20>
    927e:	f810 3b01 	ldrb.w	r3, [r0], #1
    9282:	3a01      	subs	r2, #1
    9284:	428b      	cmp	r3, r1
    9286:	d02d      	beq.n	92e4 <memchr+0x74>
    9288:	f010 0f07 	tst.w	r0, #7
    928c:	b342      	cbz	r2, 92e0 <memchr+0x70>
    928e:	d1f6      	bne.n	927e <memchr+0xe>
    9290:	b4f0      	push	{r4, r5, r6, r7}
    9292:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
    9296:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
    929a:	f022 0407 	bic.w	r4, r2, #7
    929e:	f07f 0700 	mvns.w	r7, #0
    92a2:	2300      	movs	r3, #0
    92a4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
    92a8:	3c08      	subs	r4, #8
    92aa:	ea85 0501 	eor.w	r5, r5, r1
    92ae:	ea86 0601 	eor.w	r6, r6, r1
    92b2:	fa85 f547 	uadd8	r5, r5, r7
    92b6:	faa3 f587 	sel	r5, r3, r7
    92ba:	fa86 f647 	uadd8	r6, r6, r7
    92be:	faa5 f687 	sel	r6, r5, r7
    92c2:	b98e      	cbnz	r6, 92e8 <memchr+0x78>
    92c4:	d1ee      	bne.n	92a4 <memchr+0x34>
    92c6:	bcf0      	pop	{r4, r5, r6, r7}
    92c8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
    92cc:	f002 0207 	and.w	r2, r2, #7
    92d0:	b132      	cbz	r2, 92e0 <memchr+0x70>
    92d2:	f810 3b01 	ldrb.w	r3, [r0], #1
    92d6:	3a01      	subs	r2, #1
    92d8:	ea83 0301 	eor.w	r3, r3, r1
    92dc:	b113      	cbz	r3, 92e4 <memchr+0x74>
    92de:	d1f8      	bne.n	92d2 <memchr+0x62>
    92e0:	2000      	movs	r0, #0
    92e2:	4770      	bx	lr
    92e4:	3801      	subs	r0, #1
    92e6:	4770      	bx	lr
    92e8:	2d00      	cmp	r5, #0
    92ea:	bf06      	itte	eq
    92ec:	4635      	moveq	r5, r6
    92ee:	3803      	subeq	r0, #3
    92f0:	3807      	subne	r0, #7
    92f2:	f015 0f01 	tst.w	r5, #1
    92f6:	d107      	bne.n	9308 <memchr+0x98>
    92f8:	3001      	adds	r0, #1
    92fa:	f415 7f80 	tst.w	r5, #256	; 0x100
    92fe:	bf02      	ittt	eq
    9300:	3001      	addeq	r0, #1
    9302:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
    9306:	3001      	addeq	r0, #1
    9308:	bcf0      	pop	{r4, r5, r6, r7}
    930a:	3801      	subs	r0, #1
    930c:	4770      	bx	lr
    930e:	bf00      	nop

00009310 <__malloc_lock>:
__malloc_lock():
    9310:	4801      	ldr	r0, [pc, #4]	; (9318 <__malloc_lock+0x8>)
    9312:	f7fc b97a 	b.w	560a <__retarget_lock_acquire_recursive>
    9316:	bf00      	nop
    9318:	10001340 	.word	0x10001340

0000931c <__malloc_unlock>:
__malloc_unlock():
    931c:	4801      	ldr	r0, [pc, #4]	; (9324 <__malloc_unlock+0x8>)
    931e:	f7fc b975 	b.w	560c <__retarget_lock_release_recursive>
    9322:	bf00      	nop
    9324:	10001340 	.word	0x10001340

00009328 <_Balloc>:
_Balloc():
    9328:	b570      	push	{r4, r5, r6, lr}
    932a:	6a45      	ldr	r5, [r0, #36]	; 0x24
    932c:	4604      	mov	r4, r0
    932e:	460e      	mov	r6, r1
    9330:	b93d      	cbnz	r5, 9342 <_Balloc+0x1a>
    9332:	2010      	movs	r0, #16
    9334:	f7fc f96c 	bl	5610 <malloc>
    9338:	e9c0 5501 	strd	r5, r5, [r0, #4]
    933c:	6260      	str	r0, [r4, #36]	; 0x24
    933e:	6005      	str	r5, [r0, #0]
    9340:	60c5      	str	r5, [r0, #12]
    9342:	6a65      	ldr	r5, [r4, #36]	; 0x24
    9344:	68eb      	ldr	r3, [r5, #12]
    9346:	b183      	cbz	r3, 936a <_Balloc+0x42>
    9348:	6a63      	ldr	r3, [r4, #36]	; 0x24
    934a:	68db      	ldr	r3, [r3, #12]
    934c:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
    9350:	b9b8      	cbnz	r0, 9382 <_Balloc+0x5a>
    9352:	2101      	movs	r1, #1
    9354:	fa01 f506 	lsl.w	r5, r1, r6
    9358:	1d6a      	adds	r2, r5, #5
    935a:	0092      	lsls	r2, r2, #2
    935c:	4620      	mov	r0, r4
    935e:	f000 fbdb 	bl	9b18 <_calloc_r>
    9362:	b160      	cbz	r0, 937e <_Balloc+0x56>
    9364:	e9c0 6501 	strd	r6, r5, [r0, #4]
    9368:	e00e      	b.n	9388 <_Balloc+0x60>
    936a:	2221      	movs	r2, #33	; 0x21
    936c:	2104      	movs	r1, #4
    936e:	4620      	mov	r0, r4
    9370:	f000 fbd2 	bl	9b18 <_calloc_r>
    9374:	6a63      	ldr	r3, [r4, #36]	; 0x24
    9376:	60e8      	str	r0, [r5, #12]
    9378:	68db      	ldr	r3, [r3, #12]
    937a:	2b00      	cmp	r3, #0
    937c:	d1e4      	bne.n	9348 <_Balloc+0x20>
    937e:	2000      	movs	r0, #0
    9380:	bd70      	pop	{r4, r5, r6, pc}
    9382:	6802      	ldr	r2, [r0, #0]
    9384:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
    9388:	2300      	movs	r3, #0
    938a:	e9c0 3303 	strd	r3, r3, [r0, #12]
    938e:	e7f7      	b.n	9380 <_Balloc+0x58>

00009390 <_Bfree>:
_Bfree():
    9390:	b570      	push	{r4, r5, r6, lr}
    9392:	6a44      	ldr	r4, [r0, #36]	; 0x24
    9394:	4606      	mov	r6, r0
    9396:	460d      	mov	r5, r1
    9398:	b93c      	cbnz	r4, 93aa <_Bfree+0x1a>
    939a:	2010      	movs	r0, #16
    939c:	f7fc f938 	bl	5610 <malloc>
    93a0:	e9c0 4401 	strd	r4, r4, [r0, #4]
    93a4:	6270      	str	r0, [r6, #36]	; 0x24
    93a6:	6004      	str	r4, [r0, #0]
    93a8:	60c4      	str	r4, [r0, #12]
    93aa:	b13d      	cbz	r5, 93bc <_Bfree+0x2c>
    93ac:	6a73      	ldr	r3, [r6, #36]	; 0x24
    93ae:	686a      	ldr	r2, [r5, #4]
    93b0:	68db      	ldr	r3, [r3, #12]
    93b2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
    93b6:	6029      	str	r1, [r5, #0]
    93b8:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
    93bc:	bd70      	pop	{r4, r5, r6, pc}

000093be <__multadd>:
__multadd():
    93be:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    93c2:	690d      	ldr	r5, [r1, #16]
    93c4:	461f      	mov	r7, r3
    93c6:	4606      	mov	r6, r0
    93c8:	460c      	mov	r4, r1
    93ca:	f101 0c14 	add.w	ip, r1, #20
    93ce:	2300      	movs	r3, #0
    93d0:	f8dc 0000 	ldr.w	r0, [ip]
    93d4:	b281      	uxth	r1, r0
    93d6:	fb02 7101 	mla	r1, r2, r1, r7
    93da:	0c0f      	lsrs	r7, r1, #16
    93dc:	0c00      	lsrs	r0, r0, #16
    93de:	fb02 7000 	mla	r0, r2, r0, r7
    93e2:	b289      	uxth	r1, r1
    93e4:	3301      	adds	r3, #1
    93e6:	eb01 4100 	add.w	r1, r1, r0, lsl #16
    93ea:	429d      	cmp	r5, r3
    93ec:	ea4f 4710 	mov.w	r7, r0, lsr #16
    93f0:	f84c 1b04 	str.w	r1, [ip], #4
    93f4:	dcec      	bgt.n	93d0 <__multadd+0x12>
    93f6:	b1d7      	cbz	r7, 942e <__multadd+0x70>
    93f8:	68a3      	ldr	r3, [r4, #8]
    93fa:	42ab      	cmp	r3, r5
    93fc:	dc12      	bgt.n	9424 <__multadd+0x66>
    93fe:	6861      	ldr	r1, [r4, #4]
    9400:	4630      	mov	r0, r6
    9402:	3101      	adds	r1, #1
    9404:	f7ff ff90 	bl	9328 <_Balloc>
    9408:	6922      	ldr	r2, [r4, #16]
    940a:	3202      	adds	r2, #2
    940c:	f104 010c 	add.w	r1, r4, #12
    9410:	4680      	mov	r8, r0
    9412:	0092      	lsls	r2, r2, #2
    9414:	300c      	adds	r0, #12
    9416:	f7fc f90b 	bl	5630 <memcpy>
    941a:	4621      	mov	r1, r4
    941c:	4630      	mov	r0, r6
    941e:	f7ff ffb7 	bl	9390 <_Bfree>
    9422:	4644      	mov	r4, r8
    9424:	eb04 0385 	add.w	r3, r4, r5, lsl #2
    9428:	3501      	adds	r5, #1
    942a:	615f      	str	r7, [r3, #20]
    942c:	6125      	str	r5, [r4, #16]
    942e:	4620      	mov	r0, r4
    9430:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00009434 <__s2b>:
__s2b():
    9434:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    9438:	460c      	mov	r4, r1
    943a:	4615      	mov	r5, r2
    943c:	461f      	mov	r7, r3
    943e:	2209      	movs	r2, #9
    9440:	3308      	adds	r3, #8
    9442:	4606      	mov	r6, r0
    9444:	fb93 f3f2 	sdiv	r3, r3, r2
    9448:	2100      	movs	r1, #0
    944a:	2201      	movs	r2, #1
    944c:	429a      	cmp	r2, r3
    944e:	db20      	blt.n	9492 <__s2b+0x5e>
    9450:	4630      	mov	r0, r6
    9452:	f7ff ff69 	bl	9328 <_Balloc>
    9456:	9b08      	ldr	r3, [sp, #32]
    9458:	6143      	str	r3, [r0, #20]
    945a:	2d09      	cmp	r5, #9
    945c:	f04f 0301 	mov.w	r3, #1
    9460:	6103      	str	r3, [r0, #16]
    9462:	dd19      	ble.n	9498 <__s2b+0x64>
    9464:	f104 0909 	add.w	r9, r4, #9
    9468:	46c8      	mov	r8, r9
    946a:	442c      	add	r4, r5
    946c:	f818 3b01 	ldrb.w	r3, [r8], #1
    9470:	4601      	mov	r1, r0
    9472:	3b30      	subs	r3, #48	; 0x30
    9474:	220a      	movs	r2, #10
    9476:	4630      	mov	r0, r6
    9478:	f7ff ffa1 	bl	93be <__multadd>
    947c:	45a0      	cmp	r8, r4
    947e:	d1f5      	bne.n	946c <__s2b+0x38>
    9480:	f1a5 0408 	sub.w	r4, r5, #8
    9484:	444c      	add	r4, r9
    9486:	1b2d      	subs	r5, r5, r4
    9488:	1963      	adds	r3, r4, r5
    948a:	42bb      	cmp	r3, r7
    948c:	db07      	blt.n	949e <__s2b+0x6a>
    948e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    9492:	0052      	lsls	r2, r2, #1
    9494:	3101      	adds	r1, #1
    9496:	e7d9      	b.n	944c <__s2b+0x18>
    9498:	340a      	adds	r4, #10
    949a:	2509      	movs	r5, #9
    949c:	e7f3      	b.n	9486 <__s2b+0x52>
    949e:	f814 3b01 	ldrb.w	r3, [r4], #1
    94a2:	4601      	mov	r1, r0
    94a4:	3b30      	subs	r3, #48	; 0x30
    94a6:	220a      	movs	r2, #10
    94a8:	4630      	mov	r0, r6
    94aa:	f7ff ff88 	bl	93be <__multadd>
    94ae:	e7eb      	b.n	9488 <__s2b+0x54>

000094b0 <__hi0bits>:
__hi0bits():
    94b0:	0c02      	lsrs	r2, r0, #16
    94b2:	0412      	lsls	r2, r2, #16
    94b4:	4603      	mov	r3, r0
    94b6:	b9ca      	cbnz	r2, 94ec <__hi0bits+0x3c>
    94b8:	0403      	lsls	r3, r0, #16
    94ba:	2010      	movs	r0, #16
    94bc:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
    94c0:	bf04      	itt	eq
    94c2:	021b      	lsleq	r3, r3, #8
    94c4:	3008      	addeq	r0, #8
    94c6:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
    94ca:	bf04      	itt	eq
    94cc:	011b      	lsleq	r3, r3, #4
    94ce:	3004      	addeq	r0, #4
    94d0:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
    94d4:	bf04      	itt	eq
    94d6:	009b      	lsleq	r3, r3, #2
    94d8:	3002      	addeq	r0, #2
    94da:	2b00      	cmp	r3, #0
    94dc:	db05      	blt.n	94ea <__hi0bits+0x3a>
    94de:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
    94e2:	f100 0001 	add.w	r0, r0, #1
    94e6:	bf08      	it	eq
    94e8:	2020      	moveq	r0, #32
    94ea:	4770      	bx	lr
    94ec:	2000      	movs	r0, #0
    94ee:	e7e5      	b.n	94bc <__hi0bits+0xc>

000094f0 <__lo0bits>:
__lo0bits():
    94f0:	6803      	ldr	r3, [r0, #0]
    94f2:	f013 0207 	ands.w	r2, r3, #7
    94f6:	4601      	mov	r1, r0
    94f8:	d00b      	beq.n	9512 <__lo0bits+0x22>
    94fa:	07da      	lsls	r2, r3, #31
    94fc:	d424      	bmi.n	9548 <__lo0bits+0x58>
    94fe:	0798      	lsls	r0, r3, #30
    9500:	bf49      	itett	mi
    9502:	085b      	lsrmi	r3, r3, #1
    9504:	089b      	lsrpl	r3, r3, #2
    9506:	2001      	movmi	r0, #1
    9508:	600b      	strmi	r3, [r1, #0]
    950a:	bf5c      	itt	pl
    950c:	600b      	strpl	r3, [r1, #0]
    950e:	2002      	movpl	r0, #2
    9510:	4770      	bx	lr
    9512:	b298      	uxth	r0, r3
    9514:	b9b0      	cbnz	r0, 9544 <__lo0bits+0x54>
    9516:	0c1b      	lsrs	r3, r3, #16
    9518:	2010      	movs	r0, #16
    951a:	f013 0fff 	tst.w	r3, #255	; 0xff
    951e:	bf04      	itt	eq
    9520:	0a1b      	lsreq	r3, r3, #8
    9522:	3008      	addeq	r0, #8
    9524:	071a      	lsls	r2, r3, #28
    9526:	bf04      	itt	eq
    9528:	091b      	lsreq	r3, r3, #4
    952a:	3004      	addeq	r0, #4
    952c:	079a      	lsls	r2, r3, #30
    952e:	bf04      	itt	eq
    9530:	089b      	lsreq	r3, r3, #2
    9532:	3002      	addeq	r0, #2
    9534:	07da      	lsls	r2, r3, #31
    9536:	d403      	bmi.n	9540 <__lo0bits+0x50>
    9538:	085b      	lsrs	r3, r3, #1
    953a:	f100 0001 	add.w	r0, r0, #1
    953e:	d005      	beq.n	954c <__lo0bits+0x5c>
    9540:	600b      	str	r3, [r1, #0]
    9542:	4770      	bx	lr
    9544:	4610      	mov	r0, r2
    9546:	e7e8      	b.n	951a <__lo0bits+0x2a>
    9548:	2000      	movs	r0, #0
    954a:	4770      	bx	lr
    954c:	2020      	movs	r0, #32
    954e:	4770      	bx	lr

00009550 <__i2b>:
__i2b():
    9550:	b510      	push	{r4, lr}
    9552:	460c      	mov	r4, r1
    9554:	2101      	movs	r1, #1
    9556:	f7ff fee7 	bl	9328 <_Balloc>
    955a:	2201      	movs	r2, #1
    955c:	6144      	str	r4, [r0, #20]
    955e:	6102      	str	r2, [r0, #16]
    9560:	bd10      	pop	{r4, pc}

00009562 <__multiply>:
__multiply():
    9562:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9566:	4690      	mov	r8, r2
    9568:	690a      	ldr	r2, [r1, #16]
    956a:	f8d8 3010 	ldr.w	r3, [r8, #16]
    956e:	429a      	cmp	r2, r3
    9570:	bfb8      	it	lt
    9572:	460b      	movlt	r3, r1
    9574:	460c      	mov	r4, r1
    9576:	bfbc      	itt	lt
    9578:	4644      	movlt	r4, r8
    957a:	4698      	movlt	r8, r3
    957c:	6927      	ldr	r7, [r4, #16]
    957e:	f8d8 9010 	ldr.w	r9, [r8, #16]
    9582:	68a3      	ldr	r3, [r4, #8]
    9584:	6861      	ldr	r1, [r4, #4]
    9586:	eb07 0609 	add.w	r6, r7, r9
    958a:	42b3      	cmp	r3, r6
    958c:	bfb8      	it	lt
    958e:	3101      	addlt	r1, #1
    9590:	f7ff feca 	bl	9328 <_Balloc>
    9594:	f100 0514 	add.w	r5, r0, #20
    9598:	eb05 0e86 	add.w	lr, r5, r6, lsl #2
    959c:	462b      	mov	r3, r5
    959e:	2200      	movs	r2, #0
    95a0:	4573      	cmp	r3, lr
    95a2:	d316      	bcc.n	95d2 <__multiply+0x70>
    95a4:	f104 0314 	add.w	r3, r4, #20
    95a8:	f108 0214 	add.w	r2, r8, #20
    95ac:	eb03 0787 	add.w	r7, r3, r7, lsl #2
    95b0:	eb02 0389 	add.w	r3, r2, r9, lsl #2
    95b4:	9300      	str	r3, [sp, #0]
    95b6:	9b00      	ldr	r3, [sp, #0]
    95b8:	9201      	str	r2, [sp, #4]
    95ba:	4293      	cmp	r3, r2
    95bc:	d80c      	bhi.n	95d8 <__multiply+0x76>
    95be:	2e00      	cmp	r6, #0
    95c0:	dd03      	ble.n	95ca <__multiply+0x68>
    95c2:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
    95c6:	2b00      	cmp	r3, #0
    95c8:	d059      	beq.n	967e <__multiply+0x11c>
    95ca:	6106      	str	r6, [r0, #16]
    95cc:	b003      	add	sp, #12
    95ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    95d2:	f843 2b04 	str.w	r2, [r3], #4
    95d6:	e7e3      	b.n	95a0 <__multiply+0x3e>
    95d8:	f8b2 a000 	ldrh.w	sl, [r2]
    95dc:	f1ba 0f00 	cmp.w	sl, #0
    95e0:	d023      	beq.n	962a <__multiply+0xc8>
    95e2:	f104 0914 	add.w	r9, r4, #20
    95e6:	46ac      	mov	ip, r5
    95e8:	f04f 0800 	mov.w	r8, #0
    95ec:	f859 1b04 	ldr.w	r1, [r9], #4
    95f0:	f8dc b000 	ldr.w	fp, [ip]
    95f4:	b28b      	uxth	r3, r1
    95f6:	fa1f fb8b 	uxth.w	fp, fp
    95fa:	fb0a b303 	mla	r3, sl, r3, fp
    95fe:	ea4f 4b11 	mov.w	fp, r1, lsr #16
    9602:	f8dc 1000 	ldr.w	r1, [ip]
    9606:	4443      	add	r3, r8
    9608:	ea4f 4811 	mov.w	r8, r1, lsr #16
    960c:	fb0a 810b 	mla	r1, sl, fp, r8
    9610:	eb01 4113 	add.w	r1, r1, r3, lsr #16
    9614:	b29b      	uxth	r3, r3
    9616:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
    961a:	454f      	cmp	r7, r9
    961c:	ea4f 4811 	mov.w	r8, r1, lsr #16
    9620:	f84c 3b04 	str.w	r3, [ip], #4
    9624:	d8e2      	bhi.n	95ec <__multiply+0x8a>
    9626:	f8cc 8000 	str.w	r8, [ip]
    962a:	9b01      	ldr	r3, [sp, #4]
    962c:	f8b3 9002 	ldrh.w	r9, [r3, #2]
    9630:	3204      	adds	r2, #4
    9632:	f1b9 0f00 	cmp.w	r9, #0
    9636:	d020      	beq.n	967a <__multiply+0x118>
    9638:	682b      	ldr	r3, [r5, #0]
    963a:	f104 0814 	add.w	r8, r4, #20
    963e:	46ac      	mov	ip, r5
    9640:	f04f 0a00 	mov.w	sl, #0
    9644:	f8b8 1000 	ldrh.w	r1, [r8]
    9648:	f8bc b002 	ldrh.w	fp, [ip, #2]
    964c:	fb09 b101 	mla	r1, r9, r1, fp
    9650:	448a      	add	sl, r1
    9652:	b29b      	uxth	r3, r3
    9654:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
    9658:	f84c 3b04 	str.w	r3, [ip], #4
    965c:	f858 3b04 	ldr.w	r3, [r8], #4
    9660:	f8bc 1000 	ldrh.w	r1, [ip]
    9664:	0c1b      	lsrs	r3, r3, #16
    9666:	fb09 1303 	mla	r3, r9, r3, r1
    966a:	eb03 431a 	add.w	r3, r3, sl, lsr #16
    966e:	4547      	cmp	r7, r8
    9670:	ea4f 4a13 	mov.w	sl, r3, lsr #16
    9674:	d8e6      	bhi.n	9644 <__multiply+0xe2>
    9676:	f8cc 3000 	str.w	r3, [ip]
    967a:	3504      	adds	r5, #4
    967c:	e79b      	b.n	95b6 <__multiply+0x54>
    967e:	3e01      	subs	r6, #1
    9680:	e79d      	b.n	95be <__multiply+0x5c>
    9682:	Address 0x00009682 is out of bounds.


00009684 <__pow5mult>:
__pow5mult():
    9684:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    9688:	4615      	mov	r5, r2
    968a:	f012 0203 	ands.w	r2, r2, #3
    968e:	4606      	mov	r6, r0
    9690:	460f      	mov	r7, r1
    9692:	d007      	beq.n	96a4 <__pow5mult+0x20>
    9694:	3a01      	subs	r2, #1
    9696:	4c21      	ldr	r4, [pc, #132]	; (971c <__pow5mult+0x98>)
    9698:	2300      	movs	r3, #0
    969a:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
    969e:	f7ff fe8e 	bl	93be <__multadd>
    96a2:	4607      	mov	r7, r0
    96a4:	10ad      	asrs	r5, r5, #2
    96a6:	d035      	beq.n	9714 <__pow5mult+0x90>
    96a8:	6a74      	ldr	r4, [r6, #36]	; 0x24
    96aa:	b93c      	cbnz	r4, 96bc <__pow5mult+0x38>
    96ac:	2010      	movs	r0, #16
    96ae:	f7fb ffaf 	bl	5610 <malloc>
    96b2:	e9c0 4401 	strd	r4, r4, [r0, #4]
    96b6:	6270      	str	r0, [r6, #36]	; 0x24
    96b8:	6004      	str	r4, [r0, #0]
    96ba:	60c4      	str	r4, [r0, #12]
    96bc:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
    96c0:	f8d8 4008 	ldr.w	r4, [r8, #8]
    96c4:	b94c      	cbnz	r4, 96da <__pow5mult+0x56>
    96c6:	f240 2171 	movw	r1, #625	; 0x271
    96ca:	4630      	mov	r0, r6
    96cc:	f7ff ff40 	bl	9550 <__i2b>
    96d0:	2300      	movs	r3, #0
    96d2:	f8c8 0008 	str.w	r0, [r8, #8]
    96d6:	4604      	mov	r4, r0
    96d8:	6003      	str	r3, [r0, #0]
    96da:	f04f 0800 	mov.w	r8, #0
    96de:	07eb      	lsls	r3, r5, #31
    96e0:	d50a      	bpl.n	96f8 <__pow5mult+0x74>
    96e2:	4639      	mov	r1, r7
    96e4:	4622      	mov	r2, r4
    96e6:	4630      	mov	r0, r6
    96e8:	f7ff ff3b 	bl	9562 <__multiply>
    96ec:	4639      	mov	r1, r7
    96ee:	4681      	mov	r9, r0
    96f0:	4630      	mov	r0, r6
    96f2:	f7ff fe4d 	bl	9390 <_Bfree>
    96f6:	464f      	mov	r7, r9
    96f8:	106d      	asrs	r5, r5, #1
    96fa:	d00b      	beq.n	9714 <__pow5mult+0x90>
    96fc:	6820      	ldr	r0, [r4, #0]
    96fe:	b938      	cbnz	r0, 9710 <__pow5mult+0x8c>
    9700:	4622      	mov	r2, r4
    9702:	4621      	mov	r1, r4
    9704:	4630      	mov	r0, r6
    9706:	f7ff ff2c 	bl	9562 <__multiply>
    970a:	6020      	str	r0, [r4, #0]
    970c:	f8c0 8000 	str.w	r8, [r0]
    9710:	4604      	mov	r4, r0
    9712:	e7e4      	b.n	96de <__pow5mult+0x5a>
    9714:	4638      	mov	r0, r7
    9716:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    971a:	bf00      	nop
    971c:	0000c038 	.word	0x0000c038

00009720 <__lshift>:
__lshift():
    9720:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    9724:	460c      	mov	r4, r1
    9726:	ea4f 1a62 	mov.w	sl, r2, asr #5
    972a:	6923      	ldr	r3, [r4, #16]
    972c:	6849      	ldr	r1, [r1, #4]
    972e:	eb0a 0903 	add.w	r9, sl, r3
    9732:	68a3      	ldr	r3, [r4, #8]
    9734:	4607      	mov	r7, r0
    9736:	4616      	mov	r6, r2
    9738:	f109 0501 	add.w	r5, r9, #1
    973c:	42ab      	cmp	r3, r5
    973e:	db33      	blt.n	97a8 <__lshift+0x88>
    9740:	4638      	mov	r0, r7
    9742:	f7ff fdf1 	bl	9328 <_Balloc>
    9746:	2300      	movs	r3, #0
    9748:	4680      	mov	r8, r0
    974a:	f100 0114 	add.w	r1, r0, #20
    974e:	f100 0210 	add.w	r2, r0, #16
    9752:	4618      	mov	r0, r3
    9754:	4553      	cmp	r3, sl
    9756:	db2a      	blt.n	97ae <__lshift+0x8e>
    9758:	6920      	ldr	r0, [r4, #16]
    975a:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
    975e:	f104 0314 	add.w	r3, r4, #20
    9762:	f016 021f 	ands.w	r2, r6, #31
    9766:	eb01 018a 	add.w	r1, r1, sl, lsl #2
    976a:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
    976e:	d022      	beq.n	97b6 <__lshift+0x96>
    9770:	f1c2 0e20 	rsb	lr, r2, #32
    9774:	2000      	movs	r0, #0
    9776:	681e      	ldr	r6, [r3, #0]
    9778:	4096      	lsls	r6, r2
    977a:	4330      	orrs	r0, r6
    977c:	f841 0b04 	str.w	r0, [r1], #4
    9780:	f853 0b04 	ldr.w	r0, [r3], #4
    9784:	459c      	cmp	ip, r3
    9786:	fa20 f00e 	lsr.w	r0, r0, lr
    978a:	d8f4      	bhi.n	9776 <__lshift+0x56>
    978c:	6008      	str	r0, [r1, #0]
    978e:	b108      	cbz	r0, 9794 <__lshift+0x74>
    9790:	f109 0502 	add.w	r5, r9, #2
    9794:	3d01      	subs	r5, #1
    9796:	4638      	mov	r0, r7
    9798:	f8c8 5010 	str.w	r5, [r8, #16]
    979c:	4621      	mov	r1, r4
    979e:	f7ff fdf7 	bl	9390 <_Bfree>
    97a2:	4640      	mov	r0, r8
    97a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    97a8:	3101      	adds	r1, #1
    97aa:	005b      	lsls	r3, r3, #1
    97ac:	e7c6      	b.n	973c <__lshift+0x1c>
    97ae:	f842 0f04 	str.w	r0, [r2, #4]!
    97b2:	3301      	adds	r3, #1
    97b4:	e7ce      	b.n	9754 <__lshift+0x34>
    97b6:	3904      	subs	r1, #4
    97b8:	f853 2b04 	ldr.w	r2, [r3], #4
    97bc:	f841 2f04 	str.w	r2, [r1, #4]!
    97c0:	459c      	cmp	ip, r3
    97c2:	d8f9      	bhi.n	97b8 <__lshift+0x98>
    97c4:	e7e6      	b.n	9794 <__lshift+0x74>

000097c6 <__mcmp>:
__mcmp():
    97c6:	6903      	ldr	r3, [r0, #16]
    97c8:	690a      	ldr	r2, [r1, #16]
    97ca:	1a9b      	subs	r3, r3, r2
    97cc:	b530      	push	{r4, r5, lr}
    97ce:	d10c      	bne.n	97ea <__mcmp+0x24>
    97d0:	0092      	lsls	r2, r2, #2
    97d2:	3014      	adds	r0, #20
    97d4:	3114      	adds	r1, #20
    97d6:	1884      	adds	r4, r0, r2
    97d8:	4411      	add	r1, r2
    97da:	f854 5d04 	ldr.w	r5, [r4, #-4]!
    97de:	f851 2d04 	ldr.w	r2, [r1, #-4]!
    97e2:	4295      	cmp	r5, r2
    97e4:	d003      	beq.n	97ee <__mcmp+0x28>
    97e6:	d305      	bcc.n	97f4 <__mcmp+0x2e>
    97e8:	2301      	movs	r3, #1
    97ea:	4618      	mov	r0, r3
    97ec:	bd30      	pop	{r4, r5, pc}
    97ee:	42a0      	cmp	r0, r4
    97f0:	d3f3      	bcc.n	97da <__mcmp+0x14>
    97f2:	e7fa      	b.n	97ea <__mcmp+0x24>
    97f4:	f04f 33ff 	mov.w	r3, #4294967295
    97f8:	e7f7      	b.n	97ea <__mcmp+0x24>

000097fa <__mdiff>:
__mdiff():
    97fa:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    97fe:	460d      	mov	r5, r1
    9800:	4607      	mov	r7, r0
    9802:	4611      	mov	r1, r2
    9804:	4628      	mov	r0, r5
    9806:	4614      	mov	r4, r2
    9808:	f7ff ffdd 	bl	97c6 <__mcmp>
    980c:	1e06      	subs	r6, r0, #0
    980e:	d108      	bne.n	9822 <__mdiff+0x28>
    9810:	4631      	mov	r1, r6
    9812:	4638      	mov	r0, r7
    9814:	f7ff fd88 	bl	9328 <_Balloc>
    9818:	2301      	movs	r3, #1
    981a:	e9c0 3604 	strd	r3, r6, [r0, #16]
    981e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    9822:	bfa4      	itt	ge
    9824:	4623      	movge	r3, r4
    9826:	462c      	movge	r4, r5
    9828:	4638      	mov	r0, r7
    982a:	6861      	ldr	r1, [r4, #4]
    982c:	bfa6      	itte	ge
    982e:	461d      	movge	r5, r3
    9830:	2600      	movge	r6, #0
    9832:	2601      	movlt	r6, #1
    9834:	f7ff fd78 	bl	9328 <_Balloc>
    9838:	692b      	ldr	r3, [r5, #16]
    983a:	60c6      	str	r6, [r0, #12]
    983c:	6926      	ldr	r6, [r4, #16]
    983e:	f105 0914 	add.w	r9, r5, #20
    9842:	f104 0214 	add.w	r2, r4, #20
    9846:	eb02 0786 	add.w	r7, r2, r6, lsl #2
    984a:	eb09 0883 	add.w	r8, r9, r3, lsl #2
    984e:	f100 0514 	add.w	r5, r0, #20
    9852:	f04f 0e00 	mov.w	lr, #0
    9856:	f852 ab04 	ldr.w	sl, [r2], #4
    985a:	f859 4b04 	ldr.w	r4, [r9], #4
    985e:	fa1e f18a 	uxtah	r1, lr, sl
    9862:	b2a3      	uxth	r3, r4
    9864:	1ac9      	subs	r1, r1, r3
    9866:	0c23      	lsrs	r3, r4, #16
    9868:	ebc3 431a 	rsb	r3, r3, sl, lsr #16
    986c:	eb03 4321 	add.w	r3, r3, r1, asr #16
    9870:	b289      	uxth	r1, r1
    9872:	ea4f 4e23 	mov.w	lr, r3, asr #16
    9876:	45c8      	cmp	r8, r9
    9878:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
    987c:	4694      	mov	ip, r2
    987e:	f845 3b04 	str.w	r3, [r5], #4
    9882:	d8e8      	bhi.n	9856 <__mdiff+0x5c>
    9884:	45bc      	cmp	ip, r7
    9886:	d304      	bcc.n	9892 <__mdiff+0x98>
    9888:	f855 3d04 	ldr.w	r3, [r5, #-4]!
    988c:	b183      	cbz	r3, 98b0 <__mdiff+0xb6>
    988e:	6106      	str	r6, [r0, #16]
    9890:	e7c5      	b.n	981e <__mdiff+0x24>
    9892:	f85c 1b04 	ldr.w	r1, [ip], #4
    9896:	fa1e f381 	uxtah	r3, lr, r1
    989a:	141a      	asrs	r2, r3, #16
    989c:	eb02 4211 	add.w	r2, r2, r1, lsr #16
    98a0:	b29b      	uxth	r3, r3
    98a2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
    98a6:	ea4f 4e22 	mov.w	lr, r2, asr #16
    98aa:	f845 3b04 	str.w	r3, [r5], #4
    98ae:	e7e9      	b.n	9884 <__mdiff+0x8a>
    98b0:	3e01      	subs	r6, #1
    98b2:	e7e9      	b.n	9888 <__mdiff+0x8e>

000098b4 <__ulp>:
__ulp():
    98b4:	4b11      	ldr	r3, [pc, #68]	; (98fc <__ulp+0x48>)
    98b6:	ee10 2a90 	vmov	r2, s1
    98ba:	401a      	ands	r2, r3
    98bc:	f1a2 7350 	sub.w	r3, r2, #54525952	; 0x3400000
    98c0:	2b00      	cmp	r3, #0
    98c2:	dd04      	ble.n	98ce <__ulp+0x1a>
    98c4:	2000      	movs	r0, #0
    98c6:	4619      	mov	r1, r3
    98c8:	ec41 0b10 	vmov	d0, r0, r1
    98cc:	4770      	bx	lr
    98ce:	425b      	negs	r3, r3
    98d0:	151b      	asrs	r3, r3, #20
    98d2:	2b13      	cmp	r3, #19
    98d4:	f04f 0000 	mov.w	r0, #0
    98d8:	f04f 0100 	mov.w	r1, #0
    98dc:	dc04      	bgt.n	98e8 <__ulp+0x34>
    98de:	f44f 2200 	mov.w	r2, #524288	; 0x80000
    98e2:	fa42 f103 	asr.w	r1, r2, r3
    98e6:	e7ef      	b.n	98c8 <__ulp+0x14>
    98e8:	3b14      	subs	r3, #20
    98ea:	2b1e      	cmp	r3, #30
    98ec:	bfda      	itte	le
    98ee:	f04f 4200 	movle.w	r2, #2147483648	; 0x80000000
    98f2:	fa22 f303 	lsrle.w	r3, r2, r3
    98f6:	2301      	movgt	r3, #1
    98f8:	4618      	mov	r0, r3
    98fa:	e7e5      	b.n	98c8 <__ulp+0x14>
    98fc:	7ff00000 	.word	0x7ff00000

00009900 <__b2d>:
__b2d():
    9900:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    9902:	6905      	ldr	r5, [r0, #16]
    9904:	f100 0714 	add.w	r7, r0, #20
    9908:	eb07 0585 	add.w	r5, r7, r5, lsl #2
    990c:	1f2e      	subs	r6, r5, #4
    990e:	f855 4c04 	ldr.w	r4, [r5, #-4]
    9912:	4620      	mov	r0, r4
    9914:	f7ff fdcc 	bl	94b0 <__hi0bits>
    9918:	f1c0 0320 	rsb	r3, r0, #32
    991c:	280a      	cmp	r0, #10
    991e:	600b      	str	r3, [r1, #0]
    9920:	f8df c078 	ldr.w	ip, [pc, #120]	; 999c <__b2d+0x9c>
    9924:	dc14      	bgt.n	9950 <__b2d+0x50>
    9926:	f1c0 0e0b 	rsb	lr, r0, #11
    992a:	fa24 f10e 	lsr.w	r1, r4, lr
    992e:	42b7      	cmp	r7, r6
    9930:	ea41 030c 	orr.w	r3, r1, ip
    9934:	bf34      	ite	cc
    9936:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
    993a:	2100      	movcs	r1, #0
    993c:	3015      	adds	r0, #21
    993e:	fa04 f000 	lsl.w	r0, r4, r0
    9942:	fa21 f10e 	lsr.w	r1, r1, lr
    9946:	ea40 0201 	orr.w	r2, r0, r1
    994a:	ec43 2b10 	vmov	d0, r2, r3
    994e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    9950:	42b7      	cmp	r7, r6
    9952:	bf3a      	itte	cc
    9954:	f1a5 0608 	subcc.w	r6, r5, #8
    9958:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
    995c:	2100      	movcs	r1, #0
    995e:	380b      	subs	r0, #11
    9960:	d017      	beq.n	9992 <__b2d+0x92>
    9962:	f1c0 0c20 	rsb	ip, r0, #32
    9966:	fa04 f500 	lsl.w	r5, r4, r0
    996a:	42be      	cmp	r6, r7
    996c:	fa21 f40c 	lsr.w	r4, r1, ip
    9970:	ea45 0504 	orr.w	r5, r5, r4
    9974:	bf8c      	ite	hi
    9976:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
    997a:	2400      	movls	r4, #0
    997c:	f045 537f 	orr.w	r3, r5, #1069547520	; 0x3fc00000
    9980:	fa01 f000 	lsl.w	r0, r1, r0
    9984:	fa24 f40c 	lsr.w	r4, r4, ip
    9988:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
    998c:	ea40 0204 	orr.w	r2, r0, r4
    9990:	e7db      	b.n	994a <__b2d+0x4a>
    9992:	ea44 030c 	orr.w	r3, r4, ip
    9996:	460a      	mov	r2, r1
    9998:	e7d7      	b.n	994a <__b2d+0x4a>
    999a:	bf00      	nop
    999c:	3ff00000 	.word	0x3ff00000

000099a0 <__d2b>:
__d2b():
    99a0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    99a4:	460e      	mov	r6, r1
    99a6:	2101      	movs	r1, #1
    99a8:	ec59 8b10 	vmov	r8, r9, d0
    99ac:	4615      	mov	r5, r2
    99ae:	f7ff fcbb 	bl	9328 <_Balloc>
    99b2:	f3c9 540a 	ubfx	r4, r9, #20, #11
    99b6:	4607      	mov	r7, r0
    99b8:	f3c9 0313 	ubfx	r3, r9, #0, #20
    99bc:	bb2c      	cbnz	r4, 9a0a <__d2b+0x6a>
    99be:	9301      	str	r3, [sp, #4]
    99c0:	f1b8 0300 	subs.w	r3, r8, #0
    99c4:	d026      	beq.n	9a14 <__d2b+0x74>
    99c6:	4668      	mov	r0, sp
    99c8:	9300      	str	r3, [sp, #0]
    99ca:	f7ff fd91 	bl	94f0 <__lo0bits>
    99ce:	9900      	ldr	r1, [sp, #0]
    99d0:	b1f0      	cbz	r0, 9a10 <__d2b+0x70>
    99d2:	9a01      	ldr	r2, [sp, #4]
    99d4:	f1c0 0320 	rsb	r3, r0, #32
    99d8:	fa02 f303 	lsl.w	r3, r2, r3
    99dc:	430b      	orrs	r3, r1
    99de:	40c2      	lsrs	r2, r0
    99e0:	617b      	str	r3, [r7, #20]
    99e2:	9201      	str	r2, [sp, #4]
    99e4:	9b01      	ldr	r3, [sp, #4]
    99e6:	61bb      	str	r3, [r7, #24]
    99e8:	2b00      	cmp	r3, #0
    99ea:	bf14      	ite	ne
    99ec:	2102      	movne	r1, #2
    99ee:	2101      	moveq	r1, #1
    99f0:	6139      	str	r1, [r7, #16]
    99f2:	b1c4      	cbz	r4, 9a26 <__d2b+0x86>
    99f4:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
    99f8:	4404      	add	r4, r0
    99fa:	6034      	str	r4, [r6, #0]
    99fc:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
    9a00:	6028      	str	r0, [r5, #0]
    9a02:	4638      	mov	r0, r7
    9a04:	b003      	add	sp, #12
    9a06:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    9a0a:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
    9a0e:	e7d6      	b.n	99be <__d2b+0x1e>
    9a10:	6179      	str	r1, [r7, #20]
    9a12:	e7e7      	b.n	99e4 <__d2b+0x44>
    9a14:	a801      	add	r0, sp, #4
    9a16:	f7ff fd6b 	bl	94f0 <__lo0bits>
    9a1a:	9b01      	ldr	r3, [sp, #4]
    9a1c:	617b      	str	r3, [r7, #20]
    9a1e:	2101      	movs	r1, #1
    9a20:	6139      	str	r1, [r7, #16]
    9a22:	3020      	adds	r0, #32
    9a24:	e7e5      	b.n	99f2 <__d2b+0x52>
    9a26:	eb07 0381 	add.w	r3, r7, r1, lsl #2
    9a2a:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
    9a2e:	6030      	str	r0, [r6, #0]
    9a30:	6918      	ldr	r0, [r3, #16]
    9a32:	f7ff fd3d 	bl	94b0 <__hi0bits>
    9a36:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
    9a3a:	e7e1      	b.n	9a00 <__d2b+0x60>

00009a3c <__ratio>:
__ratio():
    9a3c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9a40:	4688      	mov	r8, r1
    9a42:	4669      	mov	r1, sp
    9a44:	4681      	mov	r9, r0
    9a46:	f7ff ff5b 	bl	9900 <__b2d>
    9a4a:	a901      	add	r1, sp, #4
    9a4c:	4640      	mov	r0, r8
    9a4e:	ec57 6b10 	vmov	r6, r7, d0
    9a52:	f7ff ff55 	bl	9900 <__b2d>
    9a56:	f8d9 3010 	ldr.w	r3, [r9, #16]
    9a5a:	f8d8 2010 	ldr.w	r2, [r8, #16]
    9a5e:	eba3 0c02 	sub.w	ip, r3, r2
    9a62:	e9dd 3200 	ldrd	r3, r2, [sp]
    9a66:	1a9b      	subs	r3, r3, r2
    9a68:	eb03 134c 	add.w	r3, r3, ip, lsl #5
    9a6c:	ec5b ab10 	vmov	sl, fp, d0
    9a70:	2b00      	cmp	r3, #0
    9a72:	bfce      	itee	gt
    9a74:	463a      	movgt	r2, r7
    9a76:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
    9a7a:	465a      	movle	r2, fp
    9a7c:	4659      	mov	r1, fp
    9a7e:	463d      	mov	r5, r7
    9a80:	bfd4      	ite	le
    9a82:	eb02 5103 	addle.w	r1, r2, r3, lsl #20
    9a86:	eb02 5503 	addgt.w	r5, r2, r3, lsl #20
    9a8a:	4630      	mov	r0, r6
    9a8c:	ee10 2a10 	vmov	r2, s0
    9a90:	460b      	mov	r3, r1
    9a92:	4629      	mov	r1, r5
    9a94:	f7fb fa98 	bl	4fc8 <__aeabi_ddiv>
    9a98:	ec41 0b10 	vmov	d0, r0, r1
    9a9c:	b003      	add	sp, #12
    9a9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00009aa2 <__copybits>:
__copybits():
    9aa2:	3901      	subs	r1, #1
    9aa4:	b510      	push	{r4, lr}
    9aa6:	1149      	asrs	r1, r1, #5
    9aa8:	6914      	ldr	r4, [r2, #16]
    9aaa:	3101      	adds	r1, #1
    9aac:	f102 0314 	add.w	r3, r2, #20
    9ab0:	eb00 0181 	add.w	r1, r0, r1, lsl #2
    9ab4:	eb03 0484 	add.w	r4, r3, r4, lsl #2
    9ab8:	42a3      	cmp	r3, r4
    9aba:	4602      	mov	r2, r0
    9abc:	d303      	bcc.n	9ac6 <__copybits+0x24>
    9abe:	2300      	movs	r3, #0
    9ac0:	428a      	cmp	r2, r1
    9ac2:	d305      	bcc.n	9ad0 <__copybits+0x2e>
    9ac4:	bd10      	pop	{r4, pc}
    9ac6:	f853 2b04 	ldr.w	r2, [r3], #4
    9aca:	f840 2b04 	str.w	r2, [r0], #4
    9ace:	e7f3      	b.n	9ab8 <__copybits+0x16>
    9ad0:	f842 3b04 	str.w	r3, [r2], #4
    9ad4:	e7f4      	b.n	9ac0 <__copybits+0x1e>

00009ad6 <__any_on>:
__any_on():
    9ad6:	f100 0214 	add.w	r2, r0, #20
    9ada:	6900      	ldr	r0, [r0, #16]
    9adc:	114b      	asrs	r3, r1, #5
    9ade:	4298      	cmp	r0, r3
    9ae0:	b510      	push	{r4, lr}
    9ae2:	db11      	blt.n	9b08 <__any_on+0x32>
    9ae4:	dd0a      	ble.n	9afc <__any_on+0x26>
    9ae6:	f011 011f 	ands.w	r1, r1, #31
    9aea:	d007      	beq.n	9afc <__any_on+0x26>
    9aec:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
    9af0:	fa24 f001 	lsr.w	r0, r4, r1
    9af4:	fa00 f101 	lsl.w	r1, r0, r1
    9af8:	428c      	cmp	r4, r1
    9afa:	d10b      	bne.n	9b14 <__any_on+0x3e>
    9afc:	eb02 0383 	add.w	r3, r2, r3, lsl #2
    9b00:	4293      	cmp	r3, r2
    9b02:	d803      	bhi.n	9b0c <__any_on+0x36>
    9b04:	2000      	movs	r0, #0
    9b06:	bd10      	pop	{r4, pc}
    9b08:	4603      	mov	r3, r0
    9b0a:	e7f7      	b.n	9afc <__any_on+0x26>
    9b0c:	f853 1d04 	ldr.w	r1, [r3, #-4]!
    9b10:	2900      	cmp	r1, #0
    9b12:	d0f5      	beq.n	9b00 <__any_on+0x2a>
    9b14:	2001      	movs	r0, #1
    9b16:	e7f6      	b.n	9b06 <__any_on+0x30>

00009b18 <_calloc_r>:
_calloc_r():
    9b18:	b538      	push	{r3, r4, r5, lr}
    9b1a:	fb02 f401 	mul.w	r4, r2, r1
    9b1e:	4621      	mov	r1, r4
    9b20:	f7fb fe04 	bl	572c <_malloc_r>
    9b24:	4605      	mov	r5, r0
    9b26:	b118      	cbz	r0, 9b30 <_calloc_r+0x18>
    9b28:	4622      	mov	r2, r4
    9b2a:	2100      	movs	r1, #0
    9b2c:	f7fb fda8 	bl	5680 <memset>
    9b30:	4628      	mov	r0, r5
    9b32:	bd38      	pop	{r3, r4, r5, pc}

00009b34 <_realloc_r>:
_realloc_r():
    9b34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    9b36:	4607      	mov	r7, r0
    9b38:	4614      	mov	r4, r2
    9b3a:	460e      	mov	r6, r1
    9b3c:	b921      	cbnz	r1, 9b48 <_realloc_r+0x14>
    9b3e:	4611      	mov	r1, r2
    9b40:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    9b44:	f7fb bdf2 	b.w	572c <_malloc_r>
    9b48:	b922      	cbnz	r2, 9b54 <_realloc_r+0x20>
    9b4a:	f7fb fda1 	bl	5690 <_free_r>
    9b4e:	4625      	mov	r5, r4
    9b50:	4628      	mov	r0, r5
    9b52:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    9b54:	f000 fe62 	bl	a81c <_malloc_usable_size_r>
    9b58:	42a0      	cmp	r0, r4
    9b5a:	d20f      	bcs.n	9b7c <_realloc_r+0x48>
    9b5c:	4621      	mov	r1, r4
    9b5e:	4638      	mov	r0, r7
    9b60:	f7fb fde4 	bl	572c <_malloc_r>
    9b64:	4605      	mov	r5, r0
    9b66:	2800      	cmp	r0, #0
    9b68:	d0f2      	beq.n	9b50 <_realloc_r+0x1c>
    9b6a:	4631      	mov	r1, r6
    9b6c:	4622      	mov	r2, r4
    9b6e:	f7fb fd5f 	bl	5630 <memcpy>
    9b72:	4631      	mov	r1, r6
    9b74:	4638      	mov	r0, r7
    9b76:	f7fb fd8b 	bl	5690 <_free_r>
    9b7a:	e7e9      	b.n	9b50 <_realloc_r+0x1c>
    9b7c:	4635      	mov	r5, r6
    9b7e:	e7e7      	b.n	9b50 <_realloc_r+0x1c>

00009b80 <__ssputs_r>:
__ssputs_r():
    9b80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    9b84:	688e      	ldr	r6, [r1, #8]
    9b86:	429e      	cmp	r6, r3
    9b88:	4682      	mov	sl, r0
    9b8a:	460c      	mov	r4, r1
    9b8c:	4691      	mov	r9, r2
    9b8e:	4698      	mov	r8, r3
    9b90:	d838      	bhi.n	9c04 <__ssputs_r+0x84>
    9b92:	f8b1 c00c 	ldrh.w	ip, [r1, #12]
    9b96:	f41c 6f90 	tst.w	ip, #1152	; 0x480
    9b9a:	d031      	beq.n	9c00 <__ssputs_r+0x80>
    9b9c:	6962      	ldr	r2, [r4, #20]
    9b9e:	6825      	ldr	r5, [r4, #0]
    9ba0:	6909      	ldr	r1, [r1, #16]
    9ba2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
    9ba6:	1a6f      	subs	r7, r5, r1
    9ba8:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
    9bac:	3301      	adds	r3, #1
    9bae:	1055      	asrs	r5, r2, #1
    9bb0:	443b      	add	r3, r7
    9bb2:	429d      	cmp	r5, r3
    9bb4:	bf38      	it	cc
    9bb6:	461d      	movcc	r5, r3
    9bb8:	f41c 6f80 	tst.w	ip, #1024	; 0x400
    9bbc:	d030      	beq.n	9c20 <__ssputs_r+0xa0>
    9bbe:	4629      	mov	r1, r5
    9bc0:	f7fb fdb4 	bl	572c <_malloc_r>
    9bc4:	4606      	mov	r6, r0
    9bc6:	b950      	cbnz	r0, 9bde <__ssputs_r+0x5e>
    9bc8:	230c      	movs	r3, #12
    9bca:	f8ca 3000 	str.w	r3, [sl]
    9bce:	89a3      	ldrh	r3, [r4, #12]
    9bd0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    9bd4:	81a3      	strh	r3, [r4, #12]
    9bd6:	f04f 30ff 	mov.w	r0, #4294967295
    9bda:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    9bde:	463a      	mov	r2, r7
    9be0:	6921      	ldr	r1, [r4, #16]
    9be2:	f7fb fd25 	bl	5630 <memcpy>
    9be6:	89a3      	ldrh	r3, [r4, #12]
    9be8:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
    9bec:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    9bf0:	81a3      	strh	r3, [r4, #12]
    9bf2:	6126      	str	r6, [r4, #16]
    9bf4:	6165      	str	r5, [r4, #20]
    9bf6:	443e      	add	r6, r7
    9bf8:	1bed      	subs	r5, r5, r7
    9bfa:	6026      	str	r6, [r4, #0]
    9bfc:	60a5      	str	r5, [r4, #8]
    9bfe:	4646      	mov	r6, r8
    9c00:	4546      	cmp	r6, r8
    9c02:	d900      	bls.n	9c06 <__ssputs_r+0x86>
    9c04:	4646      	mov	r6, r8
    9c06:	4632      	mov	r2, r6
    9c08:	4649      	mov	r1, r9
    9c0a:	6820      	ldr	r0, [r4, #0]
    9c0c:	f7fb fd1e 	bl	564c <memmove>
    9c10:	68a3      	ldr	r3, [r4, #8]
    9c12:	1b9b      	subs	r3, r3, r6
    9c14:	60a3      	str	r3, [r4, #8]
    9c16:	6823      	ldr	r3, [r4, #0]
    9c18:	441e      	add	r6, r3
    9c1a:	6026      	str	r6, [r4, #0]
    9c1c:	2000      	movs	r0, #0
    9c1e:	e7dc      	b.n	9bda <__ssputs_r+0x5a>
    9c20:	462a      	mov	r2, r5
    9c22:	f7ff ff87 	bl	9b34 <_realloc_r>
    9c26:	4606      	mov	r6, r0
    9c28:	2800      	cmp	r0, #0
    9c2a:	d1e2      	bne.n	9bf2 <__ssputs_r+0x72>
    9c2c:	6921      	ldr	r1, [r4, #16]
    9c2e:	4650      	mov	r0, sl
    9c30:	f7fb fd2e 	bl	5690 <_free_r>
    9c34:	e7c8      	b.n	9bc8 <__ssputs_r+0x48>
    9c36:	Address 0x00009c36 is out of bounds.


00009c38 <_svfiprintf_r>:
_svfiprintf_r():
    9c38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9c3c:	461e      	mov	r6, r3
    9c3e:	898b      	ldrh	r3, [r1, #12]
    9c40:	061b      	lsls	r3, r3, #24
    9c42:	b09d      	sub	sp, #116	; 0x74
    9c44:	4607      	mov	r7, r0
    9c46:	460d      	mov	r5, r1
    9c48:	4614      	mov	r4, r2
    9c4a:	d50e      	bpl.n	9c6a <_svfiprintf_r+0x32>
    9c4c:	690b      	ldr	r3, [r1, #16]
    9c4e:	b963      	cbnz	r3, 9c6a <_svfiprintf_r+0x32>
    9c50:	2140      	movs	r1, #64	; 0x40
    9c52:	f7fb fd6b 	bl	572c <_malloc_r>
    9c56:	6028      	str	r0, [r5, #0]
    9c58:	6128      	str	r0, [r5, #16]
    9c5a:	b920      	cbnz	r0, 9c66 <_svfiprintf_r+0x2e>
    9c5c:	230c      	movs	r3, #12
    9c5e:	603b      	str	r3, [r7, #0]
    9c60:	f04f 30ff 	mov.w	r0, #4294967295
    9c64:	e0c9      	b.n	9dfa <_svfiprintf_r+0x1c2>
    9c66:	2340      	movs	r3, #64	; 0x40
    9c68:	616b      	str	r3, [r5, #20]
    9c6a:	2300      	movs	r3, #0
    9c6c:	9309      	str	r3, [sp, #36]	; 0x24
    9c6e:	2320      	movs	r3, #32
    9c70:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
    9c74:	f8df 919c 	ldr.w	r9, [pc, #412]	; 9e14 <_svfiprintf_r+0x1dc>
    9c78:	9603      	str	r6, [sp, #12]
    9c7a:	2330      	movs	r3, #48	; 0x30
    9c7c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
    9c80:	f04f 0a01 	mov.w	sl, #1
    9c84:	4623      	mov	r3, r4
    9c86:	461e      	mov	r6, r3
    9c88:	f813 2b01 	ldrb.w	r2, [r3], #1
    9c8c:	b10a      	cbz	r2, 9c92 <_svfiprintf_r+0x5a>
    9c8e:	2a25      	cmp	r2, #37	; 0x25
    9c90:	d1f9      	bne.n	9c86 <_svfiprintf_r+0x4e>
    9c92:	ebb6 0b04 	subs.w	fp, r6, r4
    9c96:	d00b      	beq.n	9cb0 <_svfiprintf_r+0x78>
    9c98:	465b      	mov	r3, fp
    9c9a:	4622      	mov	r2, r4
    9c9c:	4629      	mov	r1, r5
    9c9e:	4638      	mov	r0, r7
    9ca0:	f7ff ff6e 	bl	9b80 <__ssputs_r>
    9ca4:	3001      	adds	r0, #1
    9ca6:	f000 80a3 	beq.w	9df0 <_svfiprintf_r+0x1b8>
    9caa:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9cac:	445b      	add	r3, fp
    9cae:	9309      	str	r3, [sp, #36]	; 0x24
    9cb0:	7833      	ldrb	r3, [r6, #0]
    9cb2:	2b00      	cmp	r3, #0
    9cb4:	f000 809c 	beq.w	9df0 <_svfiprintf_r+0x1b8>
    9cb8:	2300      	movs	r3, #0
    9cba:	f04f 32ff 	mov.w	r2, #4294967295
    9cbe:	e9cd 2305 	strd	r2, r3, [sp, #20]
    9cc2:	3601      	adds	r6, #1
    9cc4:	9304      	str	r3, [sp, #16]
    9cc6:	9307      	str	r3, [sp, #28]
    9cc8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
    9ccc:	931a      	str	r3, [sp, #104]	; 0x68
    9cce:	4634      	mov	r4, r6
    9cd0:	2205      	movs	r2, #5
    9cd2:	f814 1b01 	ldrb.w	r1, [r4], #1
    9cd6:	484f      	ldr	r0, [pc, #316]	; (9e14 <_svfiprintf_r+0x1dc>)
    9cd8:	f7ff faca 	bl	9270 <memchr>
    9cdc:	9b04      	ldr	r3, [sp, #16]
    9cde:	b9c0      	cbnz	r0, 9d12 <_svfiprintf_r+0xda>
    9ce0:	06d9      	lsls	r1, r3, #27
    9ce2:	bf44      	itt	mi
    9ce4:	2220      	movmi	r2, #32
    9ce6:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
    9cea:	071a      	lsls	r2, r3, #28
    9cec:	bf44      	itt	mi
    9cee:	222b      	movmi	r2, #43	; 0x2b
    9cf0:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
    9cf4:	7832      	ldrb	r2, [r6, #0]
    9cf6:	2a2a      	cmp	r2, #42	; 0x2a
    9cf8:	d013      	beq.n	9d22 <_svfiprintf_r+0xea>
    9cfa:	9a07      	ldr	r2, [sp, #28]
    9cfc:	4634      	mov	r4, r6
    9cfe:	2000      	movs	r0, #0
    9d00:	260a      	movs	r6, #10
    9d02:	4621      	mov	r1, r4
    9d04:	f811 3b01 	ldrb.w	r3, [r1], #1
    9d08:	3b30      	subs	r3, #48	; 0x30
    9d0a:	2b09      	cmp	r3, #9
    9d0c:	d94b      	bls.n	9da6 <_svfiprintf_r+0x16e>
    9d0e:	b970      	cbnz	r0, 9d2e <_svfiprintf_r+0xf6>
    9d10:	e014      	b.n	9d3c <_svfiprintf_r+0x104>
    9d12:	eba0 0009 	sub.w	r0, r0, r9
    9d16:	fa0a f000 	lsl.w	r0, sl, r0
    9d1a:	4318      	orrs	r0, r3
    9d1c:	9004      	str	r0, [sp, #16]
    9d1e:	4626      	mov	r6, r4
    9d20:	e7d5      	b.n	9cce <_svfiprintf_r+0x96>
    9d22:	9a03      	ldr	r2, [sp, #12]
    9d24:	1d11      	adds	r1, r2, #4
    9d26:	6812      	ldr	r2, [r2, #0]
    9d28:	9103      	str	r1, [sp, #12]
    9d2a:	2a00      	cmp	r2, #0
    9d2c:	db01      	blt.n	9d32 <_svfiprintf_r+0xfa>
    9d2e:	9207      	str	r2, [sp, #28]
    9d30:	e004      	b.n	9d3c <_svfiprintf_r+0x104>
    9d32:	4252      	negs	r2, r2
    9d34:	f043 0302 	orr.w	r3, r3, #2
    9d38:	9207      	str	r2, [sp, #28]
    9d3a:	9304      	str	r3, [sp, #16]
    9d3c:	7823      	ldrb	r3, [r4, #0]
    9d3e:	2b2e      	cmp	r3, #46	; 0x2e
    9d40:	d10c      	bne.n	9d5c <_svfiprintf_r+0x124>
    9d42:	7863      	ldrb	r3, [r4, #1]
    9d44:	2b2a      	cmp	r3, #42	; 0x2a
    9d46:	d133      	bne.n	9db0 <_svfiprintf_r+0x178>
    9d48:	9b03      	ldr	r3, [sp, #12]
    9d4a:	1d1a      	adds	r2, r3, #4
    9d4c:	681b      	ldr	r3, [r3, #0]
    9d4e:	9203      	str	r2, [sp, #12]
    9d50:	2b00      	cmp	r3, #0
    9d52:	bfb8      	it	lt
    9d54:	f04f 33ff 	movlt.w	r3, #4294967295
    9d58:	3402      	adds	r4, #2
    9d5a:	9305      	str	r3, [sp, #20]
    9d5c:	4e2e      	ldr	r6, [pc, #184]	; (9e18 <_svfiprintf_r+0x1e0>)
    9d5e:	7821      	ldrb	r1, [r4, #0]
    9d60:	2203      	movs	r2, #3
    9d62:	4630      	mov	r0, r6
    9d64:	f7ff fa84 	bl	9270 <memchr>
    9d68:	b138      	cbz	r0, 9d7a <_svfiprintf_r+0x142>
    9d6a:	2340      	movs	r3, #64	; 0x40
    9d6c:	1b80      	subs	r0, r0, r6
    9d6e:	fa03 f000 	lsl.w	r0, r3, r0
    9d72:	9b04      	ldr	r3, [sp, #16]
    9d74:	4303      	orrs	r3, r0
    9d76:	3401      	adds	r4, #1
    9d78:	9304      	str	r3, [sp, #16]
    9d7a:	f814 1b01 	ldrb.w	r1, [r4], #1
    9d7e:	4827      	ldr	r0, [pc, #156]	; (9e1c <_svfiprintf_r+0x1e4>)
    9d80:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
    9d84:	2206      	movs	r2, #6
    9d86:	f7ff fa73 	bl	9270 <memchr>
    9d8a:	2800      	cmp	r0, #0
    9d8c:	d038      	beq.n	9e00 <_svfiprintf_r+0x1c8>
    9d8e:	4b24      	ldr	r3, [pc, #144]	; (9e20 <_svfiprintf_r+0x1e8>)
    9d90:	bb13      	cbnz	r3, 9dd8 <_svfiprintf_r+0x1a0>
    9d92:	9b03      	ldr	r3, [sp, #12]
    9d94:	3307      	adds	r3, #7
    9d96:	f023 0307 	bic.w	r3, r3, #7
    9d9a:	3308      	adds	r3, #8
    9d9c:	9303      	str	r3, [sp, #12]
    9d9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9da0:	4443      	add	r3, r8
    9da2:	9309      	str	r3, [sp, #36]	; 0x24
    9da4:	e76e      	b.n	9c84 <_svfiprintf_r+0x4c>
    9da6:	fb06 3202 	mla	r2, r6, r2, r3
    9daa:	2001      	movs	r0, #1
    9dac:	460c      	mov	r4, r1
    9dae:	e7a8      	b.n	9d02 <_svfiprintf_r+0xca>
    9db0:	2300      	movs	r3, #0
    9db2:	3401      	adds	r4, #1
    9db4:	9305      	str	r3, [sp, #20]
    9db6:	4619      	mov	r1, r3
    9db8:	260a      	movs	r6, #10
    9dba:	4620      	mov	r0, r4
    9dbc:	f810 2b01 	ldrb.w	r2, [r0], #1
    9dc0:	3a30      	subs	r2, #48	; 0x30
    9dc2:	2a09      	cmp	r2, #9
    9dc4:	d903      	bls.n	9dce <_svfiprintf_r+0x196>
    9dc6:	2b00      	cmp	r3, #0
    9dc8:	d0c8      	beq.n	9d5c <_svfiprintf_r+0x124>
    9dca:	9105      	str	r1, [sp, #20]
    9dcc:	e7c6      	b.n	9d5c <_svfiprintf_r+0x124>
    9dce:	fb06 2101 	mla	r1, r6, r1, r2
    9dd2:	2301      	movs	r3, #1
    9dd4:	4604      	mov	r4, r0
    9dd6:	e7f0      	b.n	9dba <_svfiprintf_r+0x182>
    9dd8:	ab03      	add	r3, sp, #12
    9dda:	9300      	str	r3, [sp, #0]
    9ddc:	462a      	mov	r2, r5
    9dde:	4b11      	ldr	r3, [pc, #68]	; (9e24 <_svfiprintf_r+0x1ec>)
    9de0:	a904      	add	r1, sp, #16
    9de2:	4638      	mov	r0, r7
    9de4:	f7fb fede 	bl	5ba4 <_printf_float>
    9de8:	f1b0 3fff 	cmp.w	r0, #4294967295
    9dec:	4680      	mov	r8, r0
    9dee:	d1d6      	bne.n	9d9e <_svfiprintf_r+0x166>
    9df0:	89ab      	ldrh	r3, [r5, #12]
    9df2:	065b      	lsls	r3, r3, #25
    9df4:	f53f af34 	bmi.w	9c60 <_svfiprintf_r+0x28>
    9df8:	9809      	ldr	r0, [sp, #36]	; 0x24
    9dfa:	b01d      	add	sp, #116	; 0x74
    9dfc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9e00:	ab03      	add	r3, sp, #12
    9e02:	9300      	str	r3, [sp, #0]
    9e04:	462a      	mov	r2, r5
    9e06:	4b07      	ldr	r3, [pc, #28]	; (9e24 <_svfiprintf_r+0x1ec>)
    9e08:	a904      	add	r1, sp, #16
    9e0a:	4638      	mov	r0, r7
    9e0c:	f7fc f96a 	bl	60e4 <_printf_i>
    9e10:	e7ea      	b.n	9de8 <_svfiprintf_r+0x1b0>
    9e12:	bf00      	nop
    9e14:	0000be28 	.word	0x0000be28
    9e18:	0000be2e 	.word	0x0000be2e
    9e1c:	0000be32 	.word	0x0000be32
    9e20:	00005ba5 	.word	0x00005ba5
    9e24:	00009b81 	.word	0x00009b81

00009e28 <_sungetc_r>:
_sungetc_r():
    9e28:	b538      	push	{r3, r4, r5, lr}
    9e2a:	1c4b      	adds	r3, r1, #1
    9e2c:	4614      	mov	r4, r2
    9e2e:	d103      	bne.n	9e38 <_sungetc_r+0x10>
    9e30:	f04f 35ff 	mov.w	r5, #4294967295
    9e34:	4628      	mov	r0, r5
    9e36:	bd38      	pop	{r3, r4, r5, pc}
    9e38:	8993      	ldrh	r3, [r2, #12]
    9e3a:	f023 0320 	bic.w	r3, r3, #32
    9e3e:	8193      	strh	r3, [r2, #12]
    9e40:	6b63      	ldr	r3, [r4, #52]	; 0x34
    9e42:	6852      	ldr	r2, [r2, #4]
    9e44:	b2cd      	uxtb	r5, r1
    9e46:	b18b      	cbz	r3, 9e6c <_sungetc_r+0x44>
    9e48:	6ba3      	ldr	r3, [r4, #56]	; 0x38
    9e4a:	4293      	cmp	r3, r2
    9e4c:	dd08      	ble.n	9e60 <_sungetc_r+0x38>
    9e4e:	6823      	ldr	r3, [r4, #0]
    9e50:	1e5a      	subs	r2, r3, #1
    9e52:	6022      	str	r2, [r4, #0]
    9e54:	f803 5c01 	strb.w	r5, [r3, #-1]
    9e58:	6863      	ldr	r3, [r4, #4]
    9e5a:	3301      	adds	r3, #1
    9e5c:	6063      	str	r3, [r4, #4]
    9e5e:	e7e9      	b.n	9e34 <_sungetc_r+0xc>
    9e60:	4621      	mov	r1, r4
    9e62:	f000 fc3d 	bl	a6e0 <__submore>
    9e66:	2800      	cmp	r0, #0
    9e68:	d0f1      	beq.n	9e4e <_sungetc_r+0x26>
    9e6a:	e7e1      	b.n	9e30 <_sungetc_r+0x8>
    9e6c:	6921      	ldr	r1, [r4, #16]
    9e6e:	6823      	ldr	r3, [r4, #0]
    9e70:	b151      	cbz	r1, 9e88 <_sungetc_r+0x60>
    9e72:	4299      	cmp	r1, r3
    9e74:	d208      	bcs.n	9e88 <_sungetc_r+0x60>
    9e76:	f813 1c01 	ldrb.w	r1, [r3, #-1]
    9e7a:	42a9      	cmp	r1, r5
    9e7c:	d104      	bne.n	9e88 <_sungetc_r+0x60>
    9e7e:	3b01      	subs	r3, #1
    9e80:	3201      	adds	r2, #1
    9e82:	6023      	str	r3, [r4, #0]
    9e84:	6062      	str	r2, [r4, #4]
    9e86:	e7d5      	b.n	9e34 <_sungetc_r+0xc>
    9e88:	e9c4 320f 	strd	r3, r2, [r4, #60]	; 0x3c
    9e8c:	f104 0344 	add.w	r3, r4, #68	; 0x44
    9e90:	6363      	str	r3, [r4, #52]	; 0x34
    9e92:	2303      	movs	r3, #3
    9e94:	63a3      	str	r3, [r4, #56]	; 0x38
    9e96:	4623      	mov	r3, r4
    9e98:	f803 5f46 	strb.w	r5, [r3, #70]!
    9e9c:	6023      	str	r3, [r4, #0]
    9e9e:	2301      	movs	r3, #1
    9ea0:	e7dc      	b.n	9e5c <_sungetc_r+0x34>

00009ea2 <__ssrefill_r>:
__ssrefill_r():
    9ea2:	b510      	push	{r4, lr}
    9ea4:	460c      	mov	r4, r1
    9ea6:	6b49      	ldr	r1, [r1, #52]	; 0x34
    9ea8:	b169      	cbz	r1, 9ec6 <__ssrefill_r+0x24>
    9eaa:	f104 0344 	add.w	r3, r4, #68	; 0x44
    9eae:	4299      	cmp	r1, r3
    9eb0:	d001      	beq.n	9eb6 <__ssrefill_r+0x14>
    9eb2:	f7fb fbed 	bl	5690 <_free_r>
    9eb6:	6c23      	ldr	r3, [r4, #64]	; 0x40
    9eb8:	6063      	str	r3, [r4, #4]
    9eba:	2000      	movs	r0, #0
    9ebc:	6360      	str	r0, [r4, #52]	; 0x34
    9ebe:	b113      	cbz	r3, 9ec6 <__ssrefill_r+0x24>
    9ec0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    9ec2:	6023      	str	r3, [r4, #0]
    9ec4:	bd10      	pop	{r4, pc}
    9ec6:	6923      	ldr	r3, [r4, #16]
    9ec8:	6023      	str	r3, [r4, #0]
    9eca:	2300      	movs	r3, #0
    9ecc:	6063      	str	r3, [r4, #4]
    9ece:	89a3      	ldrh	r3, [r4, #12]
    9ed0:	f043 0320 	orr.w	r3, r3, #32
    9ed4:	81a3      	strh	r3, [r4, #12]
    9ed6:	f04f 30ff 	mov.w	r0, #4294967295
    9eda:	e7f3      	b.n	9ec4 <__ssrefill_r+0x22>

00009edc <__ssvfiscanf_r>:
__ssvfiscanf_r():
    9edc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9ee0:	460c      	mov	r4, r1
    9ee2:	f5ad 7d23 	sub.w	sp, sp, #652	; 0x28c
    9ee6:	2100      	movs	r1, #0
    9ee8:	e9cd 1144 	strd	r1, r1, [sp, #272]	; 0x110
    9eec:	499a      	ldr	r1, [pc, #616]	; (a158 <__ssvfiscanf_r+0x27c>)
    9eee:	91a0      	str	r1, [sp, #640]	; 0x280
    9ef0:	f10d 0804 	add.w	r8, sp, #4
    9ef4:	4999      	ldr	r1, [pc, #612]	; (a15c <__ssvfiscanf_r+0x280>)
    9ef6:	4f9a      	ldr	r7, [pc, #616]	; (a160 <__ssvfiscanf_r+0x284>)
    9ef8:	f8df 9268 	ldr.w	r9, [pc, #616]	; a164 <__ssvfiscanf_r+0x288>
    9efc:	f8cd 8118 	str.w	r8, [sp, #280]	; 0x118
    9f00:	4606      	mov	r6, r0
    9f02:	91a1      	str	r1, [sp, #644]	; 0x284
    9f04:	9300      	str	r3, [sp, #0]
    9f06:	f892 a000 	ldrb.w	sl, [r2]
    9f0a:	f1ba 0f00 	cmp.w	sl, #0
    9f0e:	f000 8120 	beq.w	a152 <__ssvfiscanf_r+0x276>
    9f12:	f81a 3007 	ldrb.w	r3, [sl, r7]
    9f16:	f013 0308 	ands.w	r3, r3, #8
    9f1a:	f102 0501 	add.w	r5, r2, #1
    9f1e:	d019      	beq.n	9f54 <__ssvfiscanf_r+0x78>
    9f20:	6863      	ldr	r3, [r4, #4]
    9f22:	2b00      	cmp	r3, #0
    9f24:	dd0f      	ble.n	9f46 <__ssvfiscanf_r+0x6a>
    9f26:	6823      	ldr	r3, [r4, #0]
    9f28:	781a      	ldrb	r2, [r3, #0]
    9f2a:	5cba      	ldrb	r2, [r7, r2]
    9f2c:	0712      	lsls	r2, r2, #28
    9f2e:	d401      	bmi.n	9f34 <__ssvfiscanf_r+0x58>
    9f30:	462a      	mov	r2, r5
    9f32:	e7e8      	b.n	9f06 <__ssvfiscanf_r+0x2a>
    9f34:	9a45      	ldr	r2, [sp, #276]	; 0x114
    9f36:	3201      	adds	r2, #1
    9f38:	9245      	str	r2, [sp, #276]	; 0x114
    9f3a:	6862      	ldr	r2, [r4, #4]
    9f3c:	3301      	adds	r3, #1
    9f3e:	3a01      	subs	r2, #1
    9f40:	6062      	str	r2, [r4, #4]
    9f42:	6023      	str	r3, [r4, #0]
    9f44:	e7ec      	b.n	9f20 <__ssvfiscanf_r+0x44>
    9f46:	9ba1      	ldr	r3, [sp, #644]	; 0x284
    9f48:	4621      	mov	r1, r4
    9f4a:	4630      	mov	r0, r6
    9f4c:	4798      	blx	r3
    9f4e:	2800      	cmp	r0, #0
    9f50:	d0e9      	beq.n	9f26 <__ssvfiscanf_r+0x4a>
    9f52:	e7ed      	b.n	9f30 <__ssvfiscanf_r+0x54>
    9f54:	f1ba 0f25 	cmp.w	sl, #37	; 0x25
    9f58:	d17d      	bne.n	a056 <__ssvfiscanf_r+0x17a>
    9f5a:	9341      	str	r3, [sp, #260]	; 0x104
    9f5c:	9343      	str	r3, [sp, #268]	; 0x10c
    9f5e:	7853      	ldrb	r3, [r2, #1]
    9f60:	2b2a      	cmp	r3, #42	; 0x2a
    9f62:	bf02      	ittt	eq
    9f64:	2310      	moveq	r3, #16
    9f66:	1c95      	addeq	r5, r2, #2
    9f68:	9341      	streq	r3, [sp, #260]	; 0x104
    9f6a:	220a      	movs	r2, #10
    9f6c:	46ab      	mov	fp, r5
    9f6e:	f81b 1b01 	ldrb.w	r1, [fp], #1
    9f72:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
    9f76:	2b09      	cmp	r3, #9
    9f78:	d921      	bls.n	9fbe <__ssvfiscanf_r+0xe2>
    9f7a:	2203      	movs	r2, #3
    9f7c:	4879      	ldr	r0, [pc, #484]	; (a164 <__ssvfiscanf_r+0x288>)
    9f7e:	f7ff f977 	bl	9270 <memchr>
    9f82:	b138      	cbz	r0, 9f94 <__ssvfiscanf_r+0xb8>
    9f84:	eba0 0309 	sub.w	r3, r0, r9
    9f88:	2001      	movs	r0, #1
    9f8a:	4098      	lsls	r0, r3
    9f8c:	9b41      	ldr	r3, [sp, #260]	; 0x104
    9f8e:	4318      	orrs	r0, r3
    9f90:	9041      	str	r0, [sp, #260]	; 0x104
    9f92:	465d      	mov	r5, fp
    9f94:	f815 3b01 	ldrb.w	r3, [r5], #1
    9f98:	2b67      	cmp	r3, #103	; 0x67
    9f9a:	d848      	bhi.n	a02e <__ssvfiscanf_r+0x152>
    9f9c:	2b65      	cmp	r3, #101	; 0x65
    9f9e:	f080 809e 	bcs.w	a0de <__ssvfiscanf_r+0x202>
    9fa2:	2b47      	cmp	r3, #71	; 0x47
    9fa4:	d812      	bhi.n	9fcc <__ssvfiscanf_r+0xf0>
    9fa6:	2b45      	cmp	r3, #69	; 0x45
    9fa8:	f080 8099 	bcs.w	a0de <__ssvfiscanf_r+0x202>
    9fac:	2b00      	cmp	r3, #0
    9fae:	d06b      	beq.n	a088 <__ssvfiscanf_r+0x1ac>
    9fb0:	2b25      	cmp	r3, #37	; 0x25
    9fb2:	d050      	beq.n	a056 <__ssvfiscanf_r+0x17a>
    9fb4:	2303      	movs	r3, #3
    9fb6:	9347      	str	r3, [sp, #284]	; 0x11c
    9fb8:	230a      	movs	r3, #10
    9fba:	9342      	str	r3, [sp, #264]	; 0x108
    9fbc:	e016      	b.n	9fec <__ssvfiscanf_r+0x110>
    9fbe:	9b43      	ldr	r3, [sp, #268]	; 0x10c
    9fc0:	fb02 1303 	mla	r3, r2, r3, r1
    9fc4:	3b30      	subs	r3, #48	; 0x30
    9fc6:	9343      	str	r3, [sp, #268]	; 0x10c
    9fc8:	465d      	mov	r5, fp
    9fca:	e7cf      	b.n	9f6c <__ssvfiscanf_r+0x90>
    9fcc:	2b5b      	cmp	r3, #91	; 0x5b
    9fce:	d067      	beq.n	a0a0 <__ssvfiscanf_r+0x1c4>
    9fd0:	d827      	bhi.n	a022 <__ssvfiscanf_r+0x146>
    9fd2:	2b58      	cmp	r3, #88	; 0x58
    9fd4:	d1ee      	bne.n	9fb4 <__ssvfiscanf_r+0xd8>
    9fd6:	9a41      	ldr	r2, [sp, #260]	; 0x104
    9fd8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    9fdc:	9241      	str	r2, [sp, #260]	; 0x104
    9fde:	2210      	movs	r2, #16
    9fe0:	2b6f      	cmp	r3, #111	; 0x6f
    9fe2:	9242      	str	r2, [sp, #264]	; 0x108
    9fe4:	bf34      	ite	cc
    9fe6:	2303      	movcc	r3, #3
    9fe8:	2304      	movcs	r3, #4
    9fea:	9347      	str	r3, [sp, #284]	; 0x11c
    9fec:	6863      	ldr	r3, [r4, #4]
    9fee:	2b00      	cmp	r3, #0
    9ff0:	dd77      	ble.n	a0e2 <__ssvfiscanf_r+0x206>
    9ff2:	9b41      	ldr	r3, [sp, #260]	; 0x104
    9ff4:	0659      	lsls	r1, r3, #25
    9ff6:	d404      	bmi.n	a002 <__ssvfiscanf_r+0x126>
    9ff8:	6823      	ldr	r3, [r4, #0]
    9ffa:	781a      	ldrb	r2, [r3, #0]
    9ffc:	5cba      	ldrb	r2, [r7, r2]
    9ffe:	0712      	lsls	r2, r2, #28
    a000:	d476      	bmi.n	a0f0 <__ssvfiscanf_r+0x214>
    a002:	9b47      	ldr	r3, [sp, #284]	; 0x11c
    a004:	2b02      	cmp	r3, #2
    a006:	f300 8086 	bgt.w	a116 <__ssvfiscanf_r+0x23a>
    a00a:	466b      	mov	r3, sp
    a00c:	4622      	mov	r2, r4
    a00e:	a941      	add	r1, sp, #260	; 0x104
    a010:	4630      	mov	r0, r6
    a012:	f000 f8ab 	bl	a16c <_scanf_chars>
    a016:	2801      	cmp	r0, #1
    a018:	f000 809b 	beq.w	a152 <__ssvfiscanf_r+0x276>
    a01c:	2802      	cmp	r0, #2
    a01e:	d187      	bne.n	9f30 <__ssvfiscanf_r+0x54>
    a020:	e02f      	b.n	a082 <__ssvfiscanf_r+0x1a6>
    a022:	2b63      	cmp	r3, #99	; 0x63
    a024:	d047      	beq.n	a0b6 <__ssvfiscanf_r+0x1da>
    a026:	2b64      	cmp	r3, #100	; 0x64
    a028:	d1c4      	bne.n	9fb4 <__ssvfiscanf_r+0xd8>
    a02a:	220a      	movs	r2, #10
    a02c:	e7d8      	b.n	9fe0 <__ssvfiscanf_r+0x104>
    a02e:	2b70      	cmp	r3, #112	; 0x70
    a030:	d02d      	beq.n	a08e <__ssvfiscanf_r+0x1b2>
    a032:	d808      	bhi.n	a046 <__ssvfiscanf_r+0x16a>
    a034:	2b6e      	cmp	r3, #110	; 0x6e
    a036:	d044      	beq.n	a0c2 <__ssvfiscanf_r+0x1e6>
    a038:	d82e      	bhi.n	a098 <__ssvfiscanf_r+0x1bc>
    a03a:	2b69      	cmp	r3, #105	; 0x69
    a03c:	d1ba      	bne.n	9fb4 <__ssvfiscanf_r+0xd8>
    a03e:	2300      	movs	r3, #0
    a040:	9342      	str	r3, [sp, #264]	; 0x108
    a042:	2303      	movs	r3, #3
    a044:	e7d1      	b.n	9fea <__ssvfiscanf_r+0x10e>
    a046:	2b75      	cmp	r3, #117	; 0x75
    a048:	d0ef      	beq.n	a02a <__ssvfiscanf_r+0x14e>
    a04a:	2b78      	cmp	r3, #120	; 0x78
    a04c:	d0c3      	beq.n	9fd6 <__ssvfiscanf_r+0xfa>
    a04e:	2b73      	cmp	r3, #115	; 0x73
    a050:	d1b0      	bne.n	9fb4 <__ssvfiscanf_r+0xd8>
    a052:	2302      	movs	r3, #2
    a054:	e7c9      	b.n	9fea <__ssvfiscanf_r+0x10e>
    a056:	6863      	ldr	r3, [r4, #4]
    a058:	2b00      	cmp	r3, #0
    a05a:	dd0c      	ble.n	a076 <__ssvfiscanf_r+0x19a>
    a05c:	6823      	ldr	r3, [r4, #0]
    a05e:	781a      	ldrb	r2, [r3, #0]
    a060:	4552      	cmp	r2, sl
    a062:	d176      	bne.n	a152 <__ssvfiscanf_r+0x276>
    a064:	3301      	adds	r3, #1
    a066:	6862      	ldr	r2, [r4, #4]
    a068:	6023      	str	r3, [r4, #0]
    a06a:	9b45      	ldr	r3, [sp, #276]	; 0x114
    a06c:	3a01      	subs	r2, #1
    a06e:	3301      	adds	r3, #1
    a070:	6062      	str	r2, [r4, #4]
    a072:	9345      	str	r3, [sp, #276]	; 0x114
    a074:	e75c      	b.n	9f30 <__ssvfiscanf_r+0x54>
    a076:	9ba1      	ldr	r3, [sp, #644]	; 0x284
    a078:	4621      	mov	r1, r4
    a07a:	4630      	mov	r0, r6
    a07c:	4798      	blx	r3
    a07e:	2800      	cmp	r0, #0
    a080:	d0ec      	beq.n	a05c <__ssvfiscanf_r+0x180>
    a082:	9844      	ldr	r0, [sp, #272]	; 0x110
    a084:	2800      	cmp	r0, #0
    a086:	d15a      	bne.n	a13e <__ssvfiscanf_r+0x262>
    a088:	f04f 30ff 	mov.w	r0, #4294967295
    a08c:	e05d      	b.n	a14a <__ssvfiscanf_r+0x26e>
    a08e:	9a41      	ldr	r2, [sp, #260]	; 0x104
    a090:	f042 0220 	orr.w	r2, r2, #32
    a094:	9241      	str	r2, [sp, #260]	; 0x104
    a096:	e79e      	b.n	9fd6 <__ssvfiscanf_r+0xfa>
    a098:	2308      	movs	r3, #8
    a09a:	9342      	str	r3, [sp, #264]	; 0x108
    a09c:	2304      	movs	r3, #4
    a09e:	e7a4      	b.n	9fea <__ssvfiscanf_r+0x10e>
    a0a0:	4629      	mov	r1, r5
    a0a2:	4640      	mov	r0, r8
    a0a4:	f000 fa2c 	bl	a500 <__sccl>
    a0a8:	9b41      	ldr	r3, [sp, #260]	; 0x104
    a0aa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    a0ae:	9341      	str	r3, [sp, #260]	; 0x104
    a0b0:	4605      	mov	r5, r0
    a0b2:	2301      	movs	r3, #1
    a0b4:	e799      	b.n	9fea <__ssvfiscanf_r+0x10e>
    a0b6:	9b41      	ldr	r3, [sp, #260]	; 0x104
    a0b8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    a0bc:	9341      	str	r3, [sp, #260]	; 0x104
    a0be:	2300      	movs	r3, #0
    a0c0:	e793      	b.n	9fea <__ssvfiscanf_r+0x10e>
    a0c2:	9841      	ldr	r0, [sp, #260]	; 0x104
    a0c4:	06c3      	lsls	r3, r0, #27
    a0c6:	f53f af33 	bmi.w	9f30 <__ssvfiscanf_r+0x54>
    a0ca:	9b00      	ldr	r3, [sp, #0]
    a0cc:	9a45      	ldr	r2, [sp, #276]	; 0x114
    a0ce:	1d19      	adds	r1, r3, #4
    a0d0:	9100      	str	r1, [sp, #0]
    a0d2:	681b      	ldr	r3, [r3, #0]
    a0d4:	07c0      	lsls	r0, r0, #31
    a0d6:	bf4c      	ite	mi
    a0d8:	801a      	strhmi	r2, [r3, #0]
    a0da:	601a      	strpl	r2, [r3, #0]
    a0dc:	e728      	b.n	9f30 <__ssvfiscanf_r+0x54>
    a0de:	2305      	movs	r3, #5
    a0e0:	e783      	b.n	9fea <__ssvfiscanf_r+0x10e>
    a0e2:	9ba1      	ldr	r3, [sp, #644]	; 0x284
    a0e4:	4621      	mov	r1, r4
    a0e6:	4630      	mov	r0, r6
    a0e8:	4798      	blx	r3
    a0ea:	2800      	cmp	r0, #0
    a0ec:	d081      	beq.n	9ff2 <__ssvfiscanf_r+0x116>
    a0ee:	e7c8      	b.n	a082 <__ssvfiscanf_r+0x1a6>
    a0f0:	9a45      	ldr	r2, [sp, #276]	; 0x114
    a0f2:	3201      	adds	r2, #1
    a0f4:	9245      	str	r2, [sp, #276]	; 0x114
    a0f6:	6862      	ldr	r2, [r4, #4]
    a0f8:	3a01      	subs	r2, #1
    a0fa:	2a00      	cmp	r2, #0
    a0fc:	6062      	str	r2, [r4, #4]
    a0fe:	dd02      	ble.n	a106 <__ssvfiscanf_r+0x22a>
    a100:	3301      	adds	r3, #1
    a102:	6023      	str	r3, [r4, #0]
    a104:	e778      	b.n	9ff8 <__ssvfiscanf_r+0x11c>
    a106:	9ba1      	ldr	r3, [sp, #644]	; 0x284
    a108:	4621      	mov	r1, r4
    a10a:	4630      	mov	r0, r6
    a10c:	4798      	blx	r3
    a10e:	2800      	cmp	r0, #0
    a110:	f43f af72 	beq.w	9ff8 <__ssvfiscanf_r+0x11c>
    a114:	e7b5      	b.n	a082 <__ssvfiscanf_r+0x1a6>
    a116:	2b04      	cmp	r3, #4
    a118:	dc06      	bgt.n	a128 <__ssvfiscanf_r+0x24c>
    a11a:	466b      	mov	r3, sp
    a11c:	4622      	mov	r2, r4
    a11e:	a941      	add	r1, sp, #260	; 0x104
    a120:	4630      	mov	r0, r6
    a122:	f000 f87b 	bl	a21c <_scanf_i>
    a126:	e776      	b.n	a016 <__ssvfiscanf_r+0x13a>
    a128:	4b0f      	ldr	r3, [pc, #60]	; (a168 <__ssvfiscanf_r+0x28c>)
    a12a:	2b00      	cmp	r3, #0
    a12c:	f43f af00 	beq.w	9f30 <__ssvfiscanf_r+0x54>
    a130:	466b      	mov	r3, sp
    a132:	4622      	mov	r2, r4
    a134:	a941      	add	r1, sp, #260	; 0x104
    a136:	4630      	mov	r0, r6
    a138:	f7fc f8e8 	bl	630c <_scanf_float>
    a13c:	e76b      	b.n	a016 <__ssvfiscanf_r+0x13a>
    a13e:	89a3      	ldrh	r3, [r4, #12]
    a140:	f013 0f40 	tst.w	r3, #64	; 0x40
    a144:	bf18      	it	ne
    a146:	f04f 30ff 	movne.w	r0, #4294967295
    a14a:	f50d 7d23 	add.w	sp, sp, #652	; 0x28c
    a14e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a152:	9844      	ldr	r0, [sp, #272]	; 0x110
    a154:	e7f9      	b.n	a14a <__ssvfiscanf_r+0x26e>
    a156:	bf00      	nop
    a158:	00009e29 	.word	0x00009e29
    a15c:	00009ea3 	.word	0x00009ea3
    a160:	0000bd24 	.word	0x0000bd24
    a164:	0000be2e 	.word	0x0000be2e
    a168:	0000630d 	.word	0x0000630d

0000a16c <_scanf_chars>:
_scanf_chars():
    a16c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    a170:	4615      	mov	r5, r2
    a172:	688a      	ldr	r2, [r1, #8]
    a174:	4680      	mov	r8, r0
    a176:	460c      	mov	r4, r1
    a178:	b932      	cbnz	r2, a188 <_scanf_chars+0x1c>
    a17a:	698a      	ldr	r2, [r1, #24]
    a17c:	2a00      	cmp	r2, #0
    a17e:	bf0c      	ite	eq
    a180:	2201      	moveq	r2, #1
    a182:	f04f 32ff 	movne.w	r2, #4294967295
    a186:	608a      	str	r2, [r1, #8]
    a188:	6822      	ldr	r2, [r4, #0]
    a18a:	f8df 908c 	ldr.w	r9, [pc, #140]	; a218 <_scanf_chars+0xac>
    a18e:	06d1      	lsls	r1, r2, #27
    a190:	bf5f      	itttt	pl
    a192:	681a      	ldrpl	r2, [r3, #0]
    a194:	1d11      	addpl	r1, r2, #4
    a196:	6019      	strpl	r1, [r3, #0]
    a198:	6816      	ldrpl	r6, [r2, #0]
    a19a:	2700      	movs	r7, #0
    a19c:	69a0      	ldr	r0, [r4, #24]
    a19e:	b188      	cbz	r0, a1c4 <_scanf_chars+0x58>
    a1a0:	2801      	cmp	r0, #1
    a1a2:	d107      	bne.n	a1b4 <_scanf_chars+0x48>
    a1a4:	682b      	ldr	r3, [r5, #0]
    a1a6:	781a      	ldrb	r2, [r3, #0]
    a1a8:	6963      	ldr	r3, [r4, #20]
    a1aa:	5c9b      	ldrb	r3, [r3, r2]
    a1ac:	b953      	cbnz	r3, a1c4 <_scanf_chars+0x58>
    a1ae:	bb27      	cbnz	r7, a1fa <_scanf_chars+0x8e>
    a1b0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    a1b4:	2802      	cmp	r0, #2
    a1b6:	d120      	bne.n	a1fa <_scanf_chars+0x8e>
    a1b8:	682b      	ldr	r3, [r5, #0]
    a1ba:	781b      	ldrb	r3, [r3, #0]
    a1bc:	f813 3009 	ldrb.w	r3, [r3, r9]
    a1c0:	071b      	lsls	r3, r3, #28
    a1c2:	d41a      	bmi.n	a1fa <_scanf_chars+0x8e>
    a1c4:	6823      	ldr	r3, [r4, #0]
    a1c6:	06da      	lsls	r2, r3, #27
    a1c8:	bf5e      	ittt	pl
    a1ca:	682b      	ldrpl	r3, [r5, #0]
    a1cc:	781b      	ldrbpl	r3, [r3, #0]
    a1ce:	f806 3b01 	strbpl.w	r3, [r6], #1
    a1d2:	682a      	ldr	r2, [r5, #0]
    a1d4:	686b      	ldr	r3, [r5, #4]
    a1d6:	3201      	adds	r2, #1
    a1d8:	602a      	str	r2, [r5, #0]
    a1da:	68a2      	ldr	r2, [r4, #8]
    a1dc:	3b01      	subs	r3, #1
    a1de:	3a01      	subs	r2, #1
    a1e0:	606b      	str	r3, [r5, #4]
    a1e2:	3701      	adds	r7, #1
    a1e4:	60a2      	str	r2, [r4, #8]
    a1e6:	b142      	cbz	r2, a1fa <_scanf_chars+0x8e>
    a1e8:	2b00      	cmp	r3, #0
    a1ea:	dcd7      	bgt.n	a19c <_scanf_chars+0x30>
    a1ec:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
    a1f0:	4629      	mov	r1, r5
    a1f2:	4640      	mov	r0, r8
    a1f4:	4798      	blx	r3
    a1f6:	2800      	cmp	r0, #0
    a1f8:	d0d0      	beq.n	a19c <_scanf_chars+0x30>
    a1fa:	6823      	ldr	r3, [r4, #0]
    a1fc:	f013 0310 	ands.w	r3, r3, #16
    a200:	d105      	bne.n	a20e <_scanf_chars+0xa2>
    a202:	68e2      	ldr	r2, [r4, #12]
    a204:	3201      	adds	r2, #1
    a206:	60e2      	str	r2, [r4, #12]
    a208:	69a2      	ldr	r2, [r4, #24]
    a20a:	b102      	cbz	r2, a20e <_scanf_chars+0xa2>
    a20c:	7033      	strb	r3, [r6, #0]
    a20e:	6923      	ldr	r3, [r4, #16]
    a210:	441f      	add	r7, r3
    a212:	6127      	str	r7, [r4, #16]
    a214:	2000      	movs	r0, #0
    a216:	e7cb      	b.n	a1b0 <_scanf_chars+0x44>
    a218:	0000bd24 	.word	0x0000bd24

0000a21c <_scanf_i>:
_scanf_i():
    a21c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a220:	4699      	mov	r9, r3
    a222:	4b74      	ldr	r3, [pc, #464]	; (a3f4 <_scanf_i+0x1d8>)
    a224:	460c      	mov	r4, r1
    a226:	4682      	mov	sl, r0
    a228:	4616      	mov	r6, r2
    a22a:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
    a22e:	b087      	sub	sp, #28
    a230:	ab03      	add	r3, sp, #12
    a232:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    a236:	4b70      	ldr	r3, [pc, #448]	; (a3f8 <_scanf_i+0x1dc>)
    a238:	69a1      	ldr	r1, [r4, #24]
    a23a:	4a70      	ldr	r2, [pc, #448]	; (a3fc <_scanf_i+0x1e0>)
    a23c:	2903      	cmp	r1, #3
    a23e:	bf18      	it	ne
    a240:	461a      	movne	r2, r3
    a242:	68a3      	ldr	r3, [r4, #8]
    a244:	9201      	str	r2, [sp, #4]
    a246:	1e5a      	subs	r2, r3, #1
    a248:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
    a24c:	bf88      	it	hi
    a24e:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
    a252:	4627      	mov	r7, r4
    a254:	bf82      	ittt	hi
    a256:	eb03 0805 	addhi.w	r8, r3, r5
    a25a:	f240 135d 	movwhi	r3, #349	; 0x15d
    a25e:	60a3      	strhi	r3, [r4, #8]
    a260:	f857 3b1c 	ldr.w	r3, [r7], #28
    a264:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
    a268:	bf98      	it	ls
    a26a:	f04f 0800 	movls.w	r8, #0
    a26e:	6023      	str	r3, [r4, #0]
    a270:	463d      	mov	r5, r7
    a272:	f04f 0b00 	mov.w	fp, #0
    a276:	6831      	ldr	r1, [r6, #0]
    a278:	ab03      	add	r3, sp, #12
    a27a:	2202      	movs	r2, #2
    a27c:	7809      	ldrb	r1, [r1, #0]
    a27e:	f853 002b 	ldr.w	r0, [r3, fp, lsl #2]
    a282:	f7fe fff5 	bl	9270 <memchr>
    a286:	b328      	cbz	r0, a2d4 <_scanf_i+0xb8>
    a288:	f1bb 0f01 	cmp.w	fp, #1
    a28c:	d159      	bne.n	a342 <_scanf_i+0x126>
    a28e:	6862      	ldr	r2, [r4, #4]
    a290:	b92a      	cbnz	r2, a29e <_scanf_i+0x82>
    a292:	6822      	ldr	r2, [r4, #0]
    a294:	2308      	movs	r3, #8
    a296:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    a29a:	6063      	str	r3, [r4, #4]
    a29c:	6022      	str	r2, [r4, #0]
    a29e:	6822      	ldr	r2, [r4, #0]
    a2a0:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
    a2a4:	6022      	str	r2, [r4, #0]
    a2a6:	68a2      	ldr	r2, [r4, #8]
    a2a8:	1e51      	subs	r1, r2, #1
    a2aa:	60a1      	str	r1, [r4, #8]
    a2ac:	b192      	cbz	r2, a2d4 <_scanf_i+0xb8>
    a2ae:	6832      	ldr	r2, [r6, #0]
    a2b0:	1c51      	adds	r1, r2, #1
    a2b2:	6031      	str	r1, [r6, #0]
    a2b4:	7812      	ldrb	r2, [r2, #0]
    a2b6:	f805 2b01 	strb.w	r2, [r5], #1
    a2ba:	6872      	ldr	r2, [r6, #4]
    a2bc:	3a01      	subs	r2, #1
    a2be:	2a00      	cmp	r2, #0
    a2c0:	6072      	str	r2, [r6, #4]
    a2c2:	dc07      	bgt.n	a2d4 <_scanf_i+0xb8>
    a2c4:	f8d4 2180 	ldr.w	r2, [r4, #384]	; 0x180
    a2c8:	4631      	mov	r1, r6
    a2ca:	4650      	mov	r0, sl
    a2cc:	4790      	blx	r2
    a2ce:	2800      	cmp	r0, #0
    a2d0:	f040 8085 	bne.w	a3de <_scanf_i+0x1c2>
    a2d4:	f10b 0b01 	add.w	fp, fp, #1
    a2d8:	f1bb 0f03 	cmp.w	fp, #3
    a2dc:	d1cb      	bne.n	a276 <_scanf_i+0x5a>
    a2de:	6863      	ldr	r3, [r4, #4]
    a2e0:	b90b      	cbnz	r3, a2e6 <_scanf_i+0xca>
    a2e2:	230a      	movs	r3, #10
    a2e4:	6063      	str	r3, [r4, #4]
    a2e6:	6863      	ldr	r3, [r4, #4]
    a2e8:	4945      	ldr	r1, [pc, #276]	; (a400 <_scanf_i+0x1e4>)
    a2ea:	6960      	ldr	r0, [r4, #20]
    a2ec:	1ac9      	subs	r1, r1, r3
    a2ee:	f000 f907 	bl	a500 <__sccl>
    a2f2:	f04f 0b00 	mov.w	fp, #0
    a2f6:	68a3      	ldr	r3, [r4, #8]
    a2f8:	6822      	ldr	r2, [r4, #0]
    a2fa:	2b00      	cmp	r3, #0
    a2fc:	d03d      	beq.n	a37a <_scanf_i+0x15e>
    a2fe:	6831      	ldr	r1, [r6, #0]
    a300:	6960      	ldr	r0, [r4, #20]
    a302:	f891 c000 	ldrb.w	ip, [r1]
    a306:	f810 000c 	ldrb.w	r0, [r0, ip]
    a30a:	2800      	cmp	r0, #0
    a30c:	d035      	beq.n	a37a <_scanf_i+0x15e>
    a30e:	f1bc 0f30 	cmp.w	ip, #48	; 0x30
    a312:	d124      	bne.n	a35e <_scanf_i+0x142>
    a314:	0510      	lsls	r0, r2, #20
    a316:	d522      	bpl.n	a35e <_scanf_i+0x142>
    a318:	f10b 0b01 	add.w	fp, fp, #1
    a31c:	f1b8 0f00 	cmp.w	r8, #0
    a320:	d003      	beq.n	a32a <_scanf_i+0x10e>
    a322:	3301      	adds	r3, #1
    a324:	f108 38ff 	add.w	r8, r8, #4294967295
    a328:	60a3      	str	r3, [r4, #8]
    a32a:	6873      	ldr	r3, [r6, #4]
    a32c:	3b01      	subs	r3, #1
    a32e:	2b00      	cmp	r3, #0
    a330:	6073      	str	r3, [r6, #4]
    a332:	dd1b      	ble.n	a36c <_scanf_i+0x150>
    a334:	6833      	ldr	r3, [r6, #0]
    a336:	3301      	adds	r3, #1
    a338:	6033      	str	r3, [r6, #0]
    a33a:	68a3      	ldr	r3, [r4, #8]
    a33c:	3b01      	subs	r3, #1
    a33e:	60a3      	str	r3, [r4, #8]
    a340:	e7d9      	b.n	a2f6 <_scanf_i+0xda>
    a342:	f1bb 0f02 	cmp.w	fp, #2
    a346:	d1ae      	bne.n	a2a6 <_scanf_i+0x8a>
    a348:	6822      	ldr	r2, [r4, #0]
    a34a:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
    a34e:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
    a352:	d1bf      	bne.n	a2d4 <_scanf_i+0xb8>
    a354:	2310      	movs	r3, #16
    a356:	6063      	str	r3, [r4, #4]
    a358:	f442 7280 	orr.w	r2, r2, #256	; 0x100
    a35c:	e7a2      	b.n	a2a4 <_scanf_i+0x88>
    a35e:	f422 6210 	bic.w	r2, r2, #2304	; 0x900
    a362:	6022      	str	r2, [r4, #0]
    a364:	780b      	ldrb	r3, [r1, #0]
    a366:	f805 3b01 	strb.w	r3, [r5], #1
    a36a:	e7de      	b.n	a32a <_scanf_i+0x10e>
    a36c:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
    a370:	4631      	mov	r1, r6
    a372:	4650      	mov	r0, sl
    a374:	4798      	blx	r3
    a376:	2800      	cmp	r0, #0
    a378:	d0df      	beq.n	a33a <_scanf_i+0x11e>
    a37a:	6823      	ldr	r3, [r4, #0]
    a37c:	05d9      	lsls	r1, r3, #23
    a37e:	d50d      	bpl.n	a39c <_scanf_i+0x180>
    a380:	42bd      	cmp	r5, r7
    a382:	d909      	bls.n	a398 <_scanf_i+0x17c>
    a384:	f815 1c01 	ldrb.w	r1, [r5, #-1]
    a388:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
    a38c:	4632      	mov	r2, r6
    a38e:	4650      	mov	r0, sl
    a390:	4798      	blx	r3
    a392:	f105 38ff 	add.w	r8, r5, #4294967295
    a396:	4645      	mov	r5, r8
    a398:	42bd      	cmp	r5, r7
    a39a:	d028      	beq.n	a3ee <_scanf_i+0x1d2>
    a39c:	6822      	ldr	r2, [r4, #0]
    a39e:	f012 0210 	ands.w	r2, r2, #16
    a3a2:	d113      	bne.n	a3cc <_scanf_i+0x1b0>
    a3a4:	702a      	strb	r2, [r5, #0]
    a3a6:	6863      	ldr	r3, [r4, #4]
    a3a8:	9e01      	ldr	r6, [sp, #4]
    a3aa:	4639      	mov	r1, r7
    a3ac:	4650      	mov	r0, sl
    a3ae:	47b0      	blx	r6
    a3b0:	f8d9 3000 	ldr.w	r3, [r9]
    a3b4:	6821      	ldr	r1, [r4, #0]
    a3b6:	1d1a      	adds	r2, r3, #4
    a3b8:	f8c9 2000 	str.w	r2, [r9]
    a3bc:	f011 0f20 	tst.w	r1, #32
    a3c0:	681b      	ldr	r3, [r3, #0]
    a3c2:	d00f      	beq.n	a3e4 <_scanf_i+0x1c8>
    a3c4:	6018      	str	r0, [r3, #0]
    a3c6:	68e3      	ldr	r3, [r4, #12]
    a3c8:	3301      	adds	r3, #1
    a3ca:	60e3      	str	r3, [r4, #12]
    a3cc:	1bed      	subs	r5, r5, r7
    a3ce:	44ab      	add	fp, r5
    a3d0:	6925      	ldr	r5, [r4, #16]
    a3d2:	445d      	add	r5, fp
    a3d4:	6125      	str	r5, [r4, #16]
    a3d6:	2000      	movs	r0, #0
    a3d8:	b007      	add	sp, #28
    a3da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a3de:	f04f 0b00 	mov.w	fp, #0
    a3e2:	e7ca      	b.n	a37a <_scanf_i+0x15e>
    a3e4:	07ca      	lsls	r2, r1, #31
    a3e6:	bf4c      	ite	mi
    a3e8:	8018      	strhmi	r0, [r3, #0]
    a3ea:	6018      	strpl	r0, [r3, #0]
    a3ec:	e7eb      	b.n	a3c6 <_scanf_i+0x1aa>
    a3ee:	2001      	movs	r0, #1
    a3f0:	e7f2      	b.n	a3d8 <_scanf_i+0x1bc>
    a3f2:	bf00      	nop
    a3f4:	0000c044 	.word	0x0000c044
    a3f8:	0000a6dd 	.word	0x0000a6dd
    a3fc:	000077ed 	.word	0x000077ed
    a400:	0000c060 	.word	0x0000c060

0000a404 <_putc_r>:
_putc_r():
    a404:	b570      	push	{r4, r5, r6, lr}
    a406:	460d      	mov	r5, r1
    a408:	4614      	mov	r4, r2
    a40a:	4606      	mov	r6, r0
    a40c:	b118      	cbz	r0, a416 <_putc_r+0x12>
    a40e:	6983      	ldr	r3, [r0, #24]
    a410:	b90b      	cbnz	r3, a416 <_putc_r+0x12>
    a412:	f7fe fa8f 	bl	8934 <__sinit>
    a416:	4b1c      	ldr	r3, [pc, #112]	; (a488 <_putc_r+0x84>)
    a418:	429c      	cmp	r4, r3
    a41a:	d124      	bne.n	a466 <_putc_r+0x62>
    a41c:	6874      	ldr	r4, [r6, #4]
    a41e:	6e63      	ldr	r3, [r4, #100]	; 0x64
    a420:	07d8      	lsls	r0, r3, #31
    a422:	d405      	bmi.n	a430 <_putc_r+0x2c>
    a424:	89a3      	ldrh	r3, [r4, #12]
    a426:	0599      	lsls	r1, r3, #22
    a428:	d402      	bmi.n	a430 <_putc_r+0x2c>
    a42a:	6da0      	ldr	r0, [r4, #88]	; 0x58
    a42c:	f7fb f8ed 	bl	560a <__retarget_lock_acquire_recursive>
    a430:	68a3      	ldr	r3, [r4, #8]
    a432:	3b01      	subs	r3, #1
    a434:	2b00      	cmp	r3, #0
    a436:	60a3      	str	r3, [r4, #8]
    a438:	da05      	bge.n	a446 <_putc_r+0x42>
    a43a:	69a2      	ldr	r2, [r4, #24]
    a43c:	4293      	cmp	r3, r2
    a43e:	db1c      	blt.n	a47a <_putc_r+0x76>
    a440:	b2eb      	uxtb	r3, r5
    a442:	2b0a      	cmp	r3, #10
    a444:	d019      	beq.n	a47a <_putc_r+0x76>
    a446:	6823      	ldr	r3, [r4, #0]
    a448:	1c5a      	adds	r2, r3, #1
    a44a:	6022      	str	r2, [r4, #0]
    a44c:	701d      	strb	r5, [r3, #0]
    a44e:	b2ed      	uxtb	r5, r5
    a450:	6e63      	ldr	r3, [r4, #100]	; 0x64
    a452:	07da      	lsls	r2, r3, #31
    a454:	d405      	bmi.n	a462 <_putc_r+0x5e>
    a456:	89a3      	ldrh	r3, [r4, #12]
    a458:	059b      	lsls	r3, r3, #22
    a45a:	d402      	bmi.n	a462 <_putc_r+0x5e>
    a45c:	6da0      	ldr	r0, [r4, #88]	; 0x58
    a45e:	f7fb f8d5 	bl	560c <__retarget_lock_release_recursive>
    a462:	4628      	mov	r0, r5
    a464:	bd70      	pop	{r4, r5, r6, pc}
    a466:	4b09      	ldr	r3, [pc, #36]	; (a48c <_putc_r+0x88>)
    a468:	429c      	cmp	r4, r3
    a46a:	d101      	bne.n	a470 <_putc_r+0x6c>
    a46c:	68b4      	ldr	r4, [r6, #8]
    a46e:	e7d6      	b.n	a41e <_putc_r+0x1a>
    a470:	4b07      	ldr	r3, [pc, #28]	; (a490 <_putc_r+0x8c>)
    a472:	429c      	cmp	r4, r3
    a474:	bf08      	it	eq
    a476:	68f4      	ldreq	r4, [r6, #12]
    a478:	e7d1      	b.n	a41e <_putc_r+0x1a>
    a47a:	4629      	mov	r1, r5
    a47c:	4622      	mov	r2, r4
    a47e:	4630      	mov	r0, r6
    a480:	f7fd fa28 	bl	78d4 <__swbuf_r>
    a484:	4605      	mov	r5, r0
    a486:	e7e3      	b.n	a450 <_putc_r+0x4c>
    a488:	0000bef0 	.word	0x0000bef0
    a48c:	0000bf10 	.word	0x0000bf10
    a490:	0000bed0 	.word	0x0000bed0

0000a494 <__srget_r>:
__srget_r():
    a494:	b538      	push	{r3, r4, r5, lr}
    a496:	460c      	mov	r4, r1
    a498:	4605      	mov	r5, r0
    a49a:	b118      	cbz	r0, a4a4 <__srget_r+0x10>
    a49c:	6983      	ldr	r3, [r0, #24]
    a49e:	b90b      	cbnz	r3, a4a4 <__srget_r+0x10>
    a4a0:	f7fe fa48 	bl	8934 <__sinit>
    a4a4:	4b0e      	ldr	r3, [pc, #56]	; (a4e0 <__srget_r+0x4c>)
    a4a6:	429c      	cmp	r4, r3
    a4a8:	d10d      	bne.n	a4c6 <__srget_r+0x32>
    a4aa:	686c      	ldr	r4, [r5, #4]
    a4ac:	4621      	mov	r1, r4
    a4ae:	4628      	mov	r0, r5
    a4b0:	f000 f9d8 	bl	a864 <__srefill_r>
    a4b4:	b988      	cbnz	r0, a4da <__srget_r+0x46>
    a4b6:	6863      	ldr	r3, [r4, #4]
    a4b8:	3b01      	subs	r3, #1
    a4ba:	6063      	str	r3, [r4, #4]
    a4bc:	6823      	ldr	r3, [r4, #0]
    a4be:	1c5a      	adds	r2, r3, #1
    a4c0:	6022      	str	r2, [r4, #0]
    a4c2:	7818      	ldrb	r0, [r3, #0]
    a4c4:	bd38      	pop	{r3, r4, r5, pc}
    a4c6:	4b07      	ldr	r3, [pc, #28]	; (a4e4 <__srget_r+0x50>)
    a4c8:	429c      	cmp	r4, r3
    a4ca:	d101      	bne.n	a4d0 <__srget_r+0x3c>
    a4cc:	68ac      	ldr	r4, [r5, #8]
    a4ce:	e7ed      	b.n	a4ac <__srget_r+0x18>
    a4d0:	4b05      	ldr	r3, [pc, #20]	; (a4e8 <__srget_r+0x54>)
    a4d2:	429c      	cmp	r4, r3
    a4d4:	bf08      	it	eq
    a4d6:	68ec      	ldreq	r4, [r5, #12]
    a4d8:	e7e8      	b.n	a4ac <__srget_r+0x18>
    a4da:	f04f 30ff 	mov.w	r0, #4294967295
    a4de:	e7f1      	b.n	a4c4 <__srget_r+0x30>
    a4e0:	0000bef0 	.word	0x0000bef0
    a4e4:	0000bf10 	.word	0x0000bf10
    a4e8:	0000bed0 	.word	0x0000bed0
    a4ec:	ffffffff 	.word	0xffffffff

0000a4f0 <nan>:
nan():
    a4f0:	ed9f 0b01 	vldr	d0, [pc, #4]	; a4f8 <nan+0x8>
    a4f4:	4770      	bx	lr
    a4f6:	bf00      	nop
    a4f8:	00000000 	.word	0x00000000
    a4fc:	7ff80000 	.word	0x7ff80000

0000a500 <__sccl>:
__sccl():
    a500:	b570      	push	{r4, r5, r6, lr}
    a502:	780b      	ldrb	r3, [r1, #0]
    a504:	2b5e      	cmp	r3, #94	; 0x5e
    a506:	bf13      	iteet	ne
    a508:	1c4a      	addne	r2, r1, #1
    a50a:	1c8a      	addeq	r2, r1, #2
    a50c:	784b      	ldrbeq	r3, [r1, #1]
    a50e:	2100      	movne	r1, #0
    a510:	bf08      	it	eq
    a512:	2101      	moveq	r1, #1
    a514:	1e44      	subs	r4, r0, #1
    a516:	f100 05ff 	add.w	r5, r0, #255	; 0xff
    a51a:	f804 1f01 	strb.w	r1, [r4, #1]!
    a51e:	42ac      	cmp	r4, r5
    a520:	d1fb      	bne.n	a51a <__sccl+0x1a>
    a522:	b913      	cbnz	r3, a52a <__sccl+0x2a>
    a524:	3a01      	subs	r2, #1
    a526:	4610      	mov	r0, r2
    a528:	bd70      	pop	{r4, r5, r6, pc}
    a52a:	f081 0401 	eor.w	r4, r1, #1
    a52e:	54c4      	strb	r4, [r0, r3]
    a530:	1c51      	adds	r1, r2, #1
    a532:	f811 5c01 	ldrb.w	r5, [r1, #-1]
    a536:	2d2d      	cmp	r5, #45	; 0x2d
    a538:	f101 36ff 	add.w	r6, r1, #4294967295
    a53c:	460a      	mov	r2, r1
    a53e:	d006      	beq.n	a54e <__sccl+0x4e>
    a540:	2d5d      	cmp	r5, #93	; 0x5d
    a542:	d0f0      	beq.n	a526 <__sccl+0x26>
    a544:	b90d      	cbnz	r5, a54a <__sccl+0x4a>
    a546:	4632      	mov	r2, r6
    a548:	e7ed      	b.n	a526 <__sccl+0x26>
    a54a:	462b      	mov	r3, r5
    a54c:	e7ef      	b.n	a52e <__sccl+0x2e>
    a54e:	780e      	ldrb	r6, [r1, #0]
    a550:	2e5d      	cmp	r6, #93	; 0x5d
    a552:	d0fa      	beq.n	a54a <__sccl+0x4a>
    a554:	42b3      	cmp	r3, r6
    a556:	dcf8      	bgt.n	a54a <__sccl+0x4a>
    a558:	3301      	adds	r3, #1
    a55a:	429e      	cmp	r6, r3
    a55c:	54c4      	strb	r4, [r0, r3]
    a55e:	dcfb      	bgt.n	a558 <__sccl+0x58>
    a560:	3102      	adds	r1, #2
    a562:	e7e6      	b.n	a532 <__sccl+0x32>

0000a564 <__sread>:
__sread():
    a564:	b510      	push	{r4, lr}
    a566:	460c      	mov	r4, r1
    a568:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    a56c:	f000 f95e 	bl	a82c <_read_r>
    a570:	2800      	cmp	r0, #0
    a572:	bfab      	itete	ge
    a574:	6d63      	ldrge	r3, [r4, #84]	; 0x54
    a576:	89a3      	ldrhlt	r3, [r4, #12]
    a578:	181b      	addge	r3, r3, r0
    a57a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
    a57e:	bfac      	ite	ge
    a580:	6563      	strge	r3, [r4, #84]	; 0x54
    a582:	81a3      	strhlt	r3, [r4, #12]
    a584:	bd10      	pop	{r4, pc}

0000a586 <__seofread>:
__seofread():
    a586:	2000      	movs	r0, #0
    a588:	4770      	bx	lr

0000a58a <__swrite>:
__swrite():
    a58a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    a58e:	461f      	mov	r7, r3
    a590:	898b      	ldrh	r3, [r1, #12]
    a592:	05db      	lsls	r3, r3, #23
    a594:	4605      	mov	r5, r0
    a596:	460c      	mov	r4, r1
    a598:	4616      	mov	r6, r2
    a59a:	d505      	bpl.n	a5a8 <__swrite+0x1e>
    a59c:	2302      	movs	r3, #2
    a59e:	2200      	movs	r2, #0
    a5a0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    a5a4:	f000 f928 	bl	a7f8 <_lseek_r>
    a5a8:	89a3      	ldrh	r3, [r4, #12]
    a5aa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
    a5ae:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
    a5b2:	81a3      	strh	r3, [r4, #12]
    a5b4:	4632      	mov	r2, r6
    a5b6:	463b      	mov	r3, r7
    a5b8:	4628      	mov	r0, r5
    a5ba:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    a5be:	f000 b8d7 	b.w	a770 <_write_r>

0000a5c2 <__sseek>:
__sseek():
    a5c2:	b510      	push	{r4, lr}
    a5c4:	460c      	mov	r4, r1
    a5c6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    a5ca:	f000 f915 	bl	a7f8 <_lseek_r>
    a5ce:	1c43      	adds	r3, r0, #1
    a5d0:	89a3      	ldrh	r3, [r4, #12]
    a5d2:	bf15      	itete	ne
    a5d4:	6560      	strne	r0, [r4, #84]	; 0x54
    a5d6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
    a5da:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
    a5de:	81a3      	strheq	r3, [r4, #12]
    a5e0:	bf18      	it	ne
    a5e2:	81a3      	strhne	r3, [r4, #12]
    a5e4:	bd10      	pop	{r4, pc}

0000a5e6 <__sclose>:
__sclose():
    a5e6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    a5ea:	f000 b8d3 	b.w	a794 <_close_r>
    a5ee:	Address 0x0000a5ee is out of bounds.


0000a5f0 <_strtoul_l.isra.0>:
_strtoul_l.isra.0():
    a5f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    a5f4:	4f38      	ldr	r7, [pc, #224]	; (a6d8 <_strtoul_l.isra.0+0xe8>)
    a5f6:	4686      	mov	lr, r0
    a5f8:	4608      	mov	r0, r1
    a5fa:	4605      	mov	r5, r0
    a5fc:	f815 4b01 	ldrb.w	r4, [r5], #1
    a600:	5de6      	ldrb	r6, [r4, r7]
    a602:	f016 0608 	ands.w	r6, r6, #8
    a606:	d131      	bne.n	a66c <_strtoul_l.isra.0+0x7c>
    a608:	2c2d      	cmp	r4, #45	; 0x2d
    a60a:	d131      	bne.n	a670 <_strtoul_l.isra.0+0x80>
    a60c:	782c      	ldrb	r4, [r5, #0]
    a60e:	f04f 0801 	mov.w	r8, #1
    a612:	1c85      	adds	r5, r0, #2
    a614:	2b00      	cmp	r3, #0
    a616:	d05a      	beq.n	a6ce <_strtoul_l.isra.0+0xde>
    a618:	2b10      	cmp	r3, #16
    a61a:	d109      	bne.n	a630 <_strtoul_l.isra.0+0x40>
    a61c:	2c30      	cmp	r4, #48	; 0x30
    a61e:	d107      	bne.n	a630 <_strtoul_l.isra.0+0x40>
    a620:	7828      	ldrb	r0, [r5, #0]
    a622:	f000 00df 	and.w	r0, r0, #223	; 0xdf
    a626:	2858      	cmp	r0, #88	; 0x58
    a628:	d14c      	bne.n	a6c4 <_strtoul_l.isra.0+0xd4>
    a62a:	786c      	ldrb	r4, [r5, #1]
    a62c:	2310      	movs	r3, #16
    a62e:	3502      	adds	r5, #2
    a630:	f04f 3cff 	mov.w	ip, #4294967295
    a634:	2600      	movs	r6, #0
    a636:	fbbc fcf3 	udiv	ip, ip, r3
    a63a:	fb03 f90c 	mul.w	r9, r3, ip
    a63e:	ea6f 0909 	mvn.w	r9, r9
    a642:	4630      	mov	r0, r6
    a644:	f1a4 0730 	sub.w	r7, r4, #48	; 0x30
    a648:	2f09      	cmp	r7, #9
    a64a:	d818      	bhi.n	a67e <_strtoul_l.isra.0+0x8e>
    a64c:	463c      	mov	r4, r7
    a64e:	42a3      	cmp	r3, r4
    a650:	dd24      	ble.n	a69c <_strtoul_l.isra.0+0xac>
    a652:	2e00      	cmp	r6, #0
    a654:	db1f      	blt.n	a696 <_strtoul_l.isra.0+0xa6>
    a656:	4584      	cmp	ip, r0
    a658:	d31d      	bcc.n	a696 <_strtoul_l.isra.0+0xa6>
    a65a:	d101      	bne.n	a660 <_strtoul_l.isra.0+0x70>
    a65c:	45a1      	cmp	r9, r4
    a65e:	db1a      	blt.n	a696 <_strtoul_l.isra.0+0xa6>
    a660:	fb00 4003 	mla	r0, r0, r3, r4
    a664:	2601      	movs	r6, #1
    a666:	f815 4b01 	ldrb.w	r4, [r5], #1
    a66a:	e7eb      	b.n	a644 <_strtoul_l.isra.0+0x54>
    a66c:	4628      	mov	r0, r5
    a66e:	e7c4      	b.n	a5fa <_strtoul_l.isra.0+0xa>
    a670:	2c2b      	cmp	r4, #43	; 0x2b
    a672:	bf08      	it	eq
    a674:	782c      	ldrbeq	r4, [r5, #0]
    a676:	46b0      	mov	r8, r6
    a678:	bf08      	it	eq
    a67a:	1c85      	addeq	r5, r0, #2
    a67c:	e7ca      	b.n	a614 <_strtoul_l.isra.0+0x24>
    a67e:	f1a4 0741 	sub.w	r7, r4, #65	; 0x41
    a682:	2f19      	cmp	r7, #25
    a684:	d801      	bhi.n	a68a <_strtoul_l.isra.0+0x9a>
    a686:	3c37      	subs	r4, #55	; 0x37
    a688:	e7e1      	b.n	a64e <_strtoul_l.isra.0+0x5e>
    a68a:	f1a4 0761 	sub.w	r7, r4, #97	; 0x61
    a68e:	2f19      	cmp	r7, #25
    a690:	d804      	bhi.n	a69c <_strtoul_l.isra.0+0xac>
    a692:	3c57      	subs	r4, #87	; 0x57
    a694:	e7db      	b.n	a64e <_strtoul_l.isra.0+0x5e>
    a696:	f04f 36ff 	mov.w	r6, #4294967295
    a69a:	e7e4      	b.n	a666 <_strtoul_l.isra.0+0x76>
    a69c:	2e00      	cmp	r6, #0
    a69e:	da07      	bge.n	a6b0 <_strtoul_l.isra.0+0xc0>
    a6a0:	2322      	movs	r3, #34	; 0x22
    a6a2:	f8ce 3000 	str.w	r3, [lr]
    a6a6:	f04f 30ff 	mov.w	r0, #4294967295
    a6aa:	b942      	cbnz	r2, a6be <_strtoul_l.isra.0+0xce>
    a6ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    a6b0:	f1b8 0f00 	cmp.w	r8, #0
    a6b4:	d000      	beq.n	a6b8 <_strtoul_l.isra.0+0xc8>
    a6b6:	4240      	negs	r0, r0
    a6b8:	2a00      	cmp	r2, #0
    a6ba:	d0f7      	beq.n	a6ac <_strtoul_l.isra.0+0xbc>
    a6bc:	b106      	cbz	r6, a6c0 <_strtoul_l.isra.0+0xd0>
    a6be:	1e69      	subs	r1, r5, #1
    a6c0:	6011      	str	r1, [r2, #0]
    a6c2:	e7f3      	b.n	a6ac <_strtoul_l.isra.0+0xbc>
    a6c4:	2430      	movs	r4, #48	; 0x30
    a6c6:	2b00      	cmp	r3, #0
    a6c8:	d1b2      	bne.n	a630 <_strtoul_l.isra.0+0x40>
    a6ca:	2308      	movs	r3, #8
    a6cc:	e7b0      	b.n	a630 <_strtoul_l.isra.0+0x40>
    a6ce:	2c30      	cmp	r4, #48	; 0x30
    a6d0:	d0a6      	beq.n	a620 <_strtoul_l.isra.0+0x30>
    a6d2:	230a      	movs	r3, #10
    a6d4:	e7ac      	b.n	a630 <_strtoul_l.isra.0+0x40>
    a6d6:	bf00      	nop
    a6d8:	0000bd24 	.word	0x0000bd24

0000a6dc <_strtoul_r>:
_strtoul_r():
    a6dc:	f7ff bf88 	b.w	a5f0 <_strtoul_l.isra.0>

0000a6e0 <__submore>:
__submore():
    a6e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    a6e4:	460c      	mov	r4, r1
    a6e6:	6b49      	ldr	r1, [r1, #52]	; 0x34
    a6e8:	f104 0344 	add.w	r3, r4, #68	; 0x44
    a6ec:	4299      	cmp	r1, r3
    a6ee:	d11d      	bne.n	a72c <__submore+0x4c>
    a6f0:	f44f 6180 	mov.w	r1, #1024	; 0x400
    a6f4:	f7fb f81a 	bl	572c <_malloc_r>
    a6f8:	b918      	cbnz	r0, a702 <__submore+0x22>
    a6fa:	f04f 30ff 	mov.w	r0, #4294967295
    a6fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    a702:	f44f 6380 	mov.w	r3, #1024	; 0x400
    a706:	63a3      	str	r3, [r4, #56]	; 0x38
    a708:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
    a70c:	6360      	str	r0, [r4, #52]	; 0x34
    a70e:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
    a712:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
    a716:	f880 33fe 	strb.w	r3, [r0, #1022]	; 0x3fe
    a71a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
    a71e:	f880 33fd 	strb.w	r3, [r0, #1021]	; 0x3fd
    a722:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
    a726:	6020      	str	r0, [r4, #0]
    a728:	2000      	movs	r0, #0
    a72a:	e7e8      	b.n	a6fe <__submore+0x1e>
    a72c:	6ba6      	ldr	r6, [r4, #56]	; 0x38
    a72e:	0077      	lsls	r7, r6, #1
    a730:	463a      	mov	r2, r7
    a732:	f7ff f9ff 	bl	9b34 <_realloc_r>
    a736:	4605      	mov	r5, r0
    a738:	2800      	cmp	r0, #0
    a73a:	d0de      	beq.n	a6fa <__submore+0x1a>
    a73c:	eb00 0806 	add.w	r8, r0, r6
    a740:	4601      	mov	r1, r0
    a742:	4632      	mov	r2, r6
    a744:	4640      	mov	r0, r8
    a746:	f7fa ff73 	bl	5630 <memcpy>
    a74a:	f8c4 8000 	str.w	r8, [r4]
    a74e:	e9c4 570d 	strd	r5, r7, [r4, #52]	; 0x34
    a752:	e7e9      	b.n	a728 <__submore+0x48>

0000a754 <__ascii_wctomb>:
__ascii_wctomb():
    a754:	b149      	cbz	r1, a76a <__ascii_wctomb+0x16>
    a756:	2aff      	cmp	r2, #255	; 0xff
    a758:	bf85      	ittet	hi
    a75a:	238a      	movhi	r3, #138	; 0x8a
    a75c:	6003      	strhi	r3, [r0, #0]
    a75e:	700a      	strbls	r2, [r1, #0]
    a760:	f04f 30ff 	movhi.w	r0, #4294967295
    a764:	bf98      	it	ls
    a766:	2001      	movls	r0, #1
    a768:	4770      	bx	lr
    a76a:	4608      	mov	r0, r1
    a76c:	4770      	bx	lr
    a76e:	Address 0x0000a76e is out of bounds.


0000a770 <_write_r>:
_write_r():
    a770:	b538      	push	{r3, r4, r5, lr}
    a772:	4c07      	ldr	r4, [pc, #28]	; (a790 <_write_r+0x20>)
    a774:	4605      	mov	r5, r0
    a776:	4608      	mov	r0, r1
    a778:	4611      	mov	r1, r2
    a77a:	2200      	movs	r2, #0
    a77c:	6022      	str	r2, [r4, #0]
    a77e:	461a      	mov	r2, r3
    a780:	f7f9 fafc 	bl	3d7c <_write>
    a784:	1c43      	adds	r3, r0, #1
    a786:	d102      	bne.n	a78e <_write_r+0x1e>
    a788:	6823      	ldr	r3, [r4, #0]
    a78a:	b103      	cbz	r3, a78e <_write_r+0x1e>
    a78c:	602b      	str	r3, [r5, #0]
    a78e:	bd38      	pop	{r3, r4, r5, pc}
    a790:	10001348 	.word	0x10001348

0000a794 <_close_r>:
_close_r():
    a794:	b538      	push	{r3, r4, r5, lr}
    a796:	4c06      	ldr	r4, [pc, #24]	; (a7b0 <_close_r+0x1c>)
    a798:	2300      	movs	r3, #0
    a79a:	4605      	mov	r5, r0
    a79c:	4608      	mov	r0, r1
    a79e:	6023      	str	r3, [r4, #0]
    a7a0:	f000 fa38 	bl	ac14 <_close>
    a7a4:	1c43      	adds	r3, r0, #1
    a7a6:	d102      	bne.n	a7ae <_close_r+0x1a>
    a7a8:	6823      	ldr	r3, [r4, #0]
    a7aa:	b103      	cbz	r3, a7ae <_close_r+0x1a>
    a7ac:	602b      	str	r3, [r5, #0]
    a7ae:	bd38      	pop	{r3, r4, r5, pc}
    a7b0:	10001348 	.word	0x10001348

0000a7b4 <_fstat_r>:
_fstat_r():
    a7b4:	b538      	push	{r3, r4, r5, lr}
    a7b6:	4c07      	ldr	r4, [pc, #28]	; (a7d4 <_fstat_r+0x20>)
    a7b8:	2300      	movs	r3, #0
    a7ba:	4605      	mov	r5, r0
    a7bc:	4608      	mov	r0, r1
    a7be:	4611      	mov	r1, r2
    a7c0:	6023      	str	r3, [r4, #0]
    a7c2:	f000 fa2f 	bl	ac24 <_fstat>
    a7c6:	1c43      	adds	r3, r0, #1
    a7c8:	d102      	bne.n	a7d0 <_fstat_r+0x1c>
    a7ca:	6823      	ldr	r3, [r4, #0]
    a7cc:	b103      	cbz	r3, a7d0 <_fstat_r+0x1c>
    a7ce:	602b      	str	r3, [r5, #0]
    a7d0:	bd38      	pop	{r3, r4, r5, pc}
    a7d2:	bf00      	nop
    a7d4:	10001348 	.word	0x10001348

0000a7d8 <_isatty_r>:
_isatty_r():
    a7d8:	b538      	push	{r3, r4, r5, lr}
    a7da:	4c06      	ldr	r4, [pc, #24]	; (a7f4 <_isatty_r+0x1c>)
    a7dc:	2300      	movs	r3, #0
    a7de:	4605      	mov	r5, r0
    a7e0:	4608      	mov	r0, r1
    a7e2:	6023      	str	r3, [r4, #0]
    a7e4:	f7f9 fab6 	bl	3d54 <_isatty>
    a7e8:	1c43      	adds	r3, r0, #1
    a7ea:	d102      	bne.n	a7f2 <_isatty_r+0x1a>
    a7ec:	6823      	ldr	r3, [r4, #0]
    a7ee:	b103      	cbz	r3, a7f2 <_isatty_r+0x1a>
    a7f0:	602b      	str	r3, [r5, #0]
    a7f2:	bd38      	pop	{r3, r4, r5, pc}
    a7f4:	10001348 	.word	0x10001348

0000a7f8 <_lseek_r>:
_lseek_r():
    a7f8:	b538      	push	{r3, r4, r5, lr}
    a7fa:	4c07      	ldr	r4, [pc, #28]	; (a818 <_lseek_r+0x20>)
    a7fc:	4605      	mov	r5, r0
    a7fe:	4608      	mov	r0, r1
    a800:	4611      	mov	r1, r2
    a802:	2200      	movs	r2, #0
    a804:	6022      	str	r2, [r4, #0]
    a806:	461a      	mov	r2, r3
    a808:	f000 fa14 	bl	ac34 <_lseek>
    a80c:	1c43      	adds	r3, r0, #1
    a80e:	d102      	bne.n	a816 <_lseek_r+0x1e>
    a810:	6823      	ldr	r3, [r4, #0]
    a812:	b103      	cbz	r3, a816 <_lseek_r+0x1e>
    a814:	602b      	str	r3, [r5, #0]
    a816:	bd38      	pop	{r3, r4, r5, pc}
    a818:	10001348 	.word	0x10001348

0000a81c <_malloc_usable_size_r>:
_malloc_usable_size_r():
    a81c:	f851 3c04 	ldr.w	r3, [r1, #-4]
    a820:	1f18      	subs	r0, r3, #4
    a822:	2b00      	cmp	r3, #0
    a824:	bfbc      	itt	lt
    a826:	580b      	ldrlt	r3, [r1, r0]
    a828:	18c0      	addlt	r0, r0, r3
    a82a:	4770      	bx	lr

0000a82c <_read_r>:
_read_r():
    a82c:	b538      	push	{r3, r4, r5, lr}
    a82e:	4c07      	ldr	r4, [pc, #28]	; (a84c <_read_r+0x20>)
    a830:	4605      	mov	r5, r0
    a832:	4608      	mov	r0, r1
    a834:	4611      	mov	r1, r2
    a836:	2200      	movs	r2, #0
    a838:	6022      	str	r2, [r4, #0]
    a83a:	461a      	mov	r2, r3
    a83c:	f7f9 fad6 	bl	3dec <_read>
    a840:	1c43      	adds	r3, r0, #1
    a842:	d102      	bne.n	a84a <_read_r+0x1e>
    a844:	6823      	ldr	r3, [r4, #0]
    a846:	b103      	cbz	r3, a84a <_read_r+0x1e>
    a848:	602b      	str	r3, [r5, #0]
    a84a:	bd38      	pop	{r3, r4, r5, pc}
    a84c:	10001348 	.word	0x10001348

0000a850 <lflush>:
lflush():
    a850:	8983      	ldrh	r3, [r0, #12]
    a852:	f003 0309 	and.w	r3, r3, #9
    a856:	2b09      	cmp	r3, #9
    a858:	d101      	bne.n	a85e <lflush+0xe>
    a85a:	f7fe b801 	b.w	8860 <fflush>
    a85e:	2000      	movs	r0, #0
    a860:	4770      	bx	lr
    a862:	Address 0x0000a862 is out of bounds.


0000a864 <__srefill_r>:
__srefill_r():
    a864:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    a866:	460c      	mov	r4, r1
    a868:	4605      	mov	r5, r0
    a86a:	b118      	cbz	r0, a874 <__srefill_r+0x10>
    a86c:	6983      	ldr	r3, [r0, #24]
    a86e:	b90b      	cbnz	r3, a874 <__srefill_r+0x10>
    a870:	f7fe f860 	bl	8934 <__sinit>
    a874:	4b3c      	ldr	r3, [pc, #240]	; (a968 <__srefill_r+0x104>)
    a876:	429c      	cmp	r4, r3
    a878:	d10a      	bne.n	a890 <__srefill_r+0x2c>
    a87a:	686c      	ldr	r4, [r5, #4]
    a87c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
    a880:	2300      	movs	r3, #0
    a882:	6063      	str	r3, [r4, #4]
    a884:	b293      	uxth	r3, r2
    a886:	069e      	lsls	r6, r3, #26
    a888:	d50c      	bpl.n	a8a4 <__srefill_r+0x40>
    a88a:	f04f 30ff 	mov.w	r0, #4294967295
    a88e:	e067      	b.n	a960 <__srefill_r+0xfc>
    a890:	4b36      	ldr	r3, [pc, #216]	; (a96c <__srefill_r+0x108>)
    a892:	429c      	cmp	r4, r3
    a894:	d101      	bne.n	a89a <__srefill_r+0x36>
    a896:	68ac      	ldr	r4, [r5, #8]
    a898:	e7f0      	b.n	a87c <__srefill_r+0x18>
    a89a:	4b35      	ldr	r3, [pc, #212]	; (a970 <__srefill_r+0x10c>)
    a89c:	429c      	cmp	r4, r3
    a89e:	bf08      	it	eq
    a8a0:	68ec      	ldreq	r4, [r5, #12]
    a8a2:	e7eb      	b.n	a87c <__srefill_r+0x18>
    a8a4:	0758      	lsls	r0, r3, #29
    a8a6:	d449      	bmi.n	a93c <__srefill_r+0xd8>
    a8a8:	06d9      	lsls	r1, r3, #27
    a8aa:	d405      	bmi.n	a8b8 <__srefill_r+0x54>
    a8ac:	2309      	movs	r3, #9
    a8ae:	f042 0240 	orr.w	r2, r2, #64	; 0x40
    a8b2:	602b      	str	r3, [r5, #0]
    a8b4:	81a2      	strh	r2, [r4, #12]
    a8b6:	e7e8      	b.n	a88a <__srefill_r+0x26>
    a8b8:	071a      	lsls	r2, r3, #28
    a8ba:	d50b      	bpl.n	a8d4 <__srefill_r+0x70>
    a8bc:	4621      	mov	r1, r4
    a8be:	4628      	mov	r0, r5
    a8c0:	f7fd ff92 	bl	87e8 <_fflush_r>
    a8c4:	2800      	cmp	r0, #0
    a8c6:	d1e0      	bne.n	a88a <__srefill_r+0x26>
    a8c8:	89a3      	ldrh	r3, [r4, #12]
    a8ca:	60a0      	str	r0, [r4, #8]
    a8cc:	f023 0308 	bic.w	r3, r3, #8
    a8d0:	81a3      	strh	r3, [r4, #12]
    a8d2:	61a0      	str	r0, [r4, #24]
    a8d4:	89a3      	ldrh	r3, [r4, #12]
    a8d6:	f043 0304 	orr.w	r3, r3, #4
    a8da:	81a3      	strh	r3, [r4, #12]
    a8dc:	6923      	ldr	r3, [r4, #16]
    a8de:	b91b      	cbnz	r3, a8e8 <__srefill_r+0x84>
    a8e0:	4621      	mov	r1, r4
    a8e2:	4628      	mov	r0, r5
    a8e4:	f7fe fc70 	bl	91c8 <__smakebuf_r>
    a8e8:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
    a8ec:	b2be      	uxth	r6, r7
    a8ee:	07b3      	lsls	r3, r6, #30
    a8f0:	d00f      	beq.n	a912 <__srefill_r+0xae>
    a8f2:	2301      	movs	r3, #1
    a8f4:	81a3      	strh	r3, [r4, #12]
    a8f6:	4b1f      	ldr	r3, [pc, #124]	; (a974 <__srefill_r+0x110>)
    a8f8:	491f      	ldr	r1, [pc, #124]	; (a978 <__srefill_r+0x114>)
    a8fa:	6818      	ldr	r0, [r3, #0]
    a8fc:	f006 0609 	and.w	r6, r6, #9
    a900:	f7fe f896 	bl	8a30 <_fwalk>
    a904:	2e09      	cmp	r6, #9
    a906:	81a7      	strh	r7, [r4, #12]
    a908:	d103      	bne.n	a912 <__srefill_r+0xae>
    a90a:	4621      	mov	r1, r4
    a90c:	4628      	mov	r0, r5
    a90e:	f7fd fee5 	bl	86dc <__sflush_r>
    a912:	6922      	ldr	r2, [r4, #16]
    a914:	6022      	str	r2, [r4, #0]
    a916:	6a66      	ldr	r6, [r4, #36]	; 0x24
    a918:	6963      	ldr	r3, [r4, #20]
    a91a:	6a21      	ldr	r1, [r4, #32]
    a91c:	4628      	mov	r0, r5
    a91e:	47b0      	blx	r6
    a920:	2800      	cmp	r0, #0
    a922:	6060      	str	r0, [r4, #4]
    a924:	dc1d      	bgt.n	a962 <__srefill_r+0xfe>
    a926:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    a92a:	bf17      	itett	ne
    a92c:	2200      	movne	r2, #0
    a92e:	f043 0320 	orreq.w	r3, r3, #32
    a932:	f043 0340 	orrne.w	r3, r3, #64	; 0x40
    a936:	6062      	strne	r2, [r4, #4]
    a938:	81a3      	strh	r3, [r4, #12]
    a93a:	e7a6      	b.n	a88a <__srefill_r+0x26>
    a93c:	6b61      	ldr	r1, [r4, #52]	; 0x34
    a93e:	2900      	cmp	r1, #0
    a940:	d0cc      	beq.n	a8dc <__srefill_r+0x78>
    a942:	f104 0344 	add.w	r3, r4, #68	; 0x44
    a946:	4299      	cmp	r1, r3
    a948:	d002      	beq.n	a950 <__srefill_r+0xec>
    a94a:	4628      	mov	r0, r5
    a94c:	f7fa fea0 	bl	5690 <_free_r>
    a950:	6c23      	ldr	r3, [r4, #64]	; 0x40
    a952:	6063      	str	r3, [r4, #4]
    a954:	2000      	movs	r0, #0
    a956:	6360      	str	r0, [r4, #52]	; 0x34
    a958:	2b00      	cmp	r3, #0
    a95a:	d0bf      	beq.n	a8dc <__srefill_r+0x78>
    a95c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    a95e:	6023      	str	r3, [r4, #0]
    a960:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    a962:	2000      	movs	r0, #0
    a964:	e7fc      	b.n	a960 <__srefill_r+0xfc>
    a966:	bf00      	nop
    a968:	0000bef0 	.word	0x0000bef0
    a96c:	0000bf10 	.word	0x0000bf10
    a970:	0000bed0 	.word	0x0000bed0
    a974:	0000be24 	.word	0x0000be24
    a978:	0000a851 	.word	0x0000a851

0000a97c <__gedf2>:
__gedf2():
    a97c:	f04f 3cff 	mov.w	ip, #4294967295
    a980:	e006      	b.n	a990 <__cmpdf2+0x4>
    a982:	bf00      	nop

0000a984 <__ledf2>:
__ledf2():
    a984:	f04f 0c01 	mov.w	ip, #1
    a988:	e002      	b.n	a990 <__cmpdf2+0x4>
    a98a:	bf00      	nop

0000a98c <__cmpdf2>:
__nedf2():
    a98c:	f04f 0c01 	mov.w	ip, #1
    a990:	f84d cd04 	str.w	ip, [sp, #-4]!
    a994:	ea4f 0c41 	mov.w	ip, r1, lsl #1
    a998:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    a99c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
    a9a0:	bf18      	it	ne
    a9a2:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
    a9a6:	d01b      	beq.n	a9e0 <__cmpdf2+0x54>
    a9a8:	b001      	add	sp, #4
    a9aa:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
    a9ae:	bf0c      	ite	eq
    a9b0:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
    a9b4:	ea91 0f03 	teqne	r1, r3
    a9b8:	bf02      	ittt	eq
    a9ba:	ea90 0f02 	teqeq	r0, r2
    a9be:	2000      	moveq	r0, #0
    a9c0:	4770      	bxeq	lr
    a9c2:	f110 0f00 	cmn.w	r0, #0
    a9c6:	ea91 0f03 	teq	r1, r3
    a9ca:	bf58      	it	pl
    a9cc:	4299      	cmppl	r1, r3
    a9ce:	bf08      	it	eq
    a9d0:	4290      	cmpeq	r0, r2
    a9d2:	bf2c      	ite	cs
    a9d4:	17d8      	asrcs	r0, r3, #31
    a9d6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
    a9da:	f040 0001 	orr.w	r0, r0, #1
    a9de:	4770      	bx	lr
    a9e0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
    a9e4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    a9e8:	d102      	bne.n	a9f0 <__cmpdf2+0x64>
    a9ea:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
    a9ee:	d107      	bne.n	aa00 <__cmpdf2+0x74>
    a9f0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
    a9f4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    a9f8:	d1d6      	bne.n	a9a8 <__cmpdf2+0x1c>
    a9fa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
    a9fe:	d0d3      	beq.n	a9a8 <__cmpdf2+0x1c>
    aa00:	f85d 0b04 	ldr.w	r0, [sp], #4
    aa04:	4770      	bx	lr
    aa06:	bf00      	nop

0000aa08 <__aeabi_cdrcmple>:
__aeabi_cdrcmple():
    aa08:	4684      	mov	ip, r0
    aa0a:	4610      	mov	r0, r2
    aa0c:	4662      	mov	r2, ip
    aa0e:	468c      	mov	ip, r1
    aa10:	4619      	mov	r1, r3
    aa12:	4663      	mov	r3, ip
    aa14:	e000      	b.n	aa18 <__aeabi_cdcmpeq>
    aa16:	bf00      	nop

0000aa18 <__aeabi_cdcmpeq>:
__aeabi_cdcmpeq():
    aa18:	b501      	push	{r0, lr}
    aa1a:	f7ff ffb7 	bl	a98c <__cmpdf2>
    aa1e:	2800      	cmp	r0, #0
    aa20:	bf48      	it	mi
    aa22:	f110 0f00 	cmnmi.w	r0, #0
    aa26:	bd01      	pop	{r0, pc}

0000aa28 <__aeabi_dcmpeq>:
__aeabi_dcmpeq():
    aa28:	f84d ed08 	str.w	lr, [sp, #-8]!
    aa2c:	f7ff fff4 	bl	aa18 <__aeabi_cdcmpeq>
    aa30:	bf0c      	ite	eq
    aa32:	2001      	moveq	r0, #1
    aa34:	2000      	movne	r0, #0
    aa36:	f85d fb08 	ldr.w	pc, [sp], #8
    aa3a:	bf00      	nop

0000aa3c <__aeabi_dcmplt>:
__aeabi_dcmplt():
    aa3c:	f84d ed08 	str.w	lr, [sp, #-8]!
    aa40:	f7ff ffea 	bl	aa18 <__aeabi_cdcmpeq>
    aa44:	bf34      	ite	cc
    aa46:	2001      	movcc	r0, #1
    aa48:	2000      	movcs	r0, #0
    aa4a:	f85d fb08 	ldr.w	pc, [sp], #8
    aa4e:	bf00      	nop

0000aa50 <__aeabi_dcmple>:
__aeabi_dcmple():
    aa50:	f84d ed08 	str.w	lr, [sp, #-8]!
    aa54:	f7ff ffe0 	bl	aa18 <__aeabi_cdcmpeq>
    aa58:	bf94      	ite	ls
    aa5a:	2001      	movls	r0, #1
    aa5c:	2000      	movhi	r0, #0
    aa5e:	f85d fb08 	ldr.w	pc, [sp], #8
    aa62:	bf00      	nop

0000aa64 <__aeabi_dcmpge>:
__aeabi_dcmpge():
    aa64:	f84d ed08 	str.w	lr, [sp, #-8]!
    aa68:	f7ff ffce 	bl	aa08 <__aeabi_cdrcmple>
    aa6c:	bf94      	ite	ls
    aa6e:	2001      	movls	r0, #1
    aa70:	2000      	movhi	r0, #0
    aa72:	f85d fb08 	ldr.w	pc, [sp], #8
    aa76:	bf00      	nop

0000aa78 <__aeabi_dcmpgt>:
__aeabi_dcmpgt():
    aa78:	f84d ed08 	str.w	lr, [sp, #-8]!
    aa7c:	f7ff ffc4 	bl	aa08 <__aeabi_cdrcmple>
    aa80:	bf34      	ite	cc
    aa82:	2001      	movcc	r0, #1
    aa84:	2000      	movcs	r0, #0
    aa86:	f85d fb08 	ldr.w	pc, [sp], #8
    aa8a:	bf00      	nop

0000aa8c <__aeabi_dcmpun>:
__unorddf2():
    aa8c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
    aa90:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    aa94:	d102      	bne.n	aa9c <__aeabi_dcmpun+0x10>
    aa96:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
    aa9a:	d10a      	bne.n	aab2 <__aeabi_dcmpun+0x26>
    aa9c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
    aaa0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
    aaa4:	d102      	bne.n	aaac <__aeabi_dcmpun+0x20>
    aaa6:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
    aaaa:	d102      	bne.n	aab2 <__aeabi_dcmpun+0x26>
    aaac:	f04f 0000 	mov.w	r0, #0
    aab0:	4770      	bx	lr
    aab2:	f04f 0001 	mov.w	r0, #1
    aab6:	4770      	bx	lr

0000aab8 <__aeabi_d2iz>:
__aeabi_d2iz():
    aab8:	ea4f 0241 	mov.w	r2, r1, lsl #1
    aabc:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
    aac0:	d215      	bcs.n	aaee <__aeabi_d2iz+0x36>
    aac2:	d511      	bpl.n	aae8 <__aeabi_d2iz+0x30>
    aac4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
    aac8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
    aacc:	d912      	bls.n	aaf4 <__aeabi_d2iz+0x3c>
    aace:	ea4f 23c1 	mov.w	r3, r1, lsl #11
    aad2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
    aad6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
    aada:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
    aade:	fa23 f002 	lsr.w	r0, r3, r2
    aae2:	bf18      	it	ne
    aae4:	4240      	negne	r0, r0
    aae6:	4770      	bx	lr
    aae8:	f04f 0000 	mov.w	r0, #0
    aaec:	4770      	bx	lr
    aaee:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
    aaf2:	d105      	bne.n	ab00 <__aeabi_d2iz+0x48>
    aaf4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
    aaf8:	bf08      	it	eq
    aafa:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
    aafe:	4770      	bx	lr
    ab00:	f04f 0000 	mov.w	r0, #0
    ab04:	4770      	bx	lr
    ab06:	bf00      	nop

0000ab08 <__aeabi_d2f>:
__truncdfsf2():
    ab08:	ea4f 0241 	mov.w	r2, r1, lsl #1
    ab0c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
    ab10:	bf24      	itt	cs
    ab12:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
    ab16:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
    ab1a:	d90d      	bls.n	ab38 <__aeabi_d2f+0x30>
    ab1c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
    ab20:	ea4f 02c0 	mov.w	r2, r0, lsl #3
    ab24:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
    ab28:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
    ab2c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
    ab30:	bf08      	it	eq
    ab32:	f020 0001 	biceq.w	r0, r0, #1
    ab36:	4770      	bx	lr
    ab38:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
    ab3c:	d121      	bne.n	ab82 <__aeabi_d2f+0x7a>
    ab3e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
    ab42:	bfbc      	itt	lt
    ab44:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
    ab48:	4770      	bxlt	lr
    ab4a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
    ab4e:	ea4f 5252 	mov.w	r2, r2, lsr #21
    ab52:	f1c2 0218 	rsb	r2, r2, #24
    ab56:	f1c2 0c20 	rsb	ip, r2, #32
    ab5a:	fa10 f30c 	lsls.w	r3, r0, ip
    ab5e:	fa20 f002 	lsr.w	r0, r0, r2
    ab62:	bf18      	it	ne
    ab64:	f040 0001 	orrne.w	r0, r0, #1
    ab68:	ea4f 23c1 	mov.w	r3, r1, lsl #11
    ab6c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
    ab70:	fa03 fc0c 	lsl.w	ip, r3, ip
    ab74:	ea40 000c 	orr.w	r0, r0, ip
    ab78:	fa23 f302 	lsr.w	r3, r3, r2
    ab7c:	ea4f 0343 	mov.w	r3, r3, lsl #1
    ab80:	e7cc      	b.n	ab1c <__aeabi_d2f+0x14>
    ab82:	ea7f 5362 	mvns.w	r3, r2, asr #21
    ab86:	d107      	bne.n	ab98 <__aeabi_d2f+0x90>
    ab88:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
    ab8c:	bf1e      	ittt	ne
    ab8e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
    ab92:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
    ab96:	4770      	bxne	lr
    ab98:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
    ab9c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
    aba0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
    aba4:	4770      	bx	lr
    aba6:	bf00      	nop

0000aba8 <__aeabi_d2lz>:
__fixdfdi():
    aba8:	b538      	push	{r3, r4, r5, lr}
    abaa:	2200      	movs	r2, #0
    abac:	2300      	movs	r3, #0
    abae:	4604      	mov	r4, r0
    abb0:	460d      	mov	r5, r1
    abb2:	f7ff ff43 	bl	aa3c <__aeabi_dcmplt>
    abb6:	b928      	cbnz	r0, abc4 <__aeabi_d2lz+0x1c>
    abb8:	4620      	mov	r0, r4
    abba:	4629      	mov	r1, r5
    abbc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    abc0:	f000 b80a 	b.w	abd8 <__aeabi_d2ulz>
    abc4:	4620      	mov	r0, r4
    abc6:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
    abca:	f000 f805 	bl	abd8 <__aeabi_d2ulz>
    abce:	4240      	negs	r0, r0
    abd0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
    abd4:	bd38      	pop	{r3, r4, r5, pc}
    abd6:	bf00      	nop

0000abd8 <__aeabi_d2ulz>:
__fixunsdfdi():
    abd8:	b5d0      	push	{r4, r6, r7, lr}
    abda:	2200      	movs	r2, #0
    abdc:	4b0b      	ldr	r3, [pc, #44]	; (ac0c <__aeabi_d2ulz+0x34>)
    abde:	4606      	mov	r6, r0
    abe0:	460f      	mov	r7, r1
    abe2:	f7fa f8c7 	bl	4d74 <__aeabi_dmul>
    abe6:	f7fa fad7 	bl	5198 <__aeabi_d2uiz>
    abea:	4604      	mov	r4, r0
    abec:	f7fa f848 	bl	4c80 <__aeabi_ui2d>
    abf0:	2200      	movs	r2, #0
    abf2:	4b07      	ldr	r3, [pc, #28]	; (ac10 <__aeabi_d2ulz+0x38>)
    abf4:	f7fa f8be 	bl	4d74 <__aeabi_dmul>
    abf8:	4602      	mov	r2, r0
    abfa:	460b      	mov	r3, r1
    abfc:	4630      	mov	r0, r6
    abfe:	4639      	mov	r1, r7
    ac00:	f7f9 ff00 	bl	4a04 <__aeabi_dsub>
    ac04:	f7fa fac8 	bl	5198 <__aeabi_d2uiz>
    ac08:	4621      	mov	r1, r4
    ac0a:	bdd0      	pop	{r4, r6, r7, pc}
    ac0c:	3df00000 	.word	0x3df00000
    ac10:	41f00000 	.word	0x41f00000

0000ac14 <_close>:
_close():
    ac14:	4b02      	ldr	r3, [pc, #8]	; (ac20 <_close+0xc>)
    ac16:	2258      	movs	r2, #88	; 0x58
    ac18:	601a      	str	r2, [r3, #0]
    ac1a:	f04f 30ff 	mov.w	r0, #4294967295
    ac1e:	4770      	bx	lr
    ac20:	10001348 	.word	0x10001348

0000ac24 <_fstat>:
_fstat():
    ac24:	4b02      	ldr	r3, [pc, #8]	; (ac30 <_fstat+0xc>)
    ac26:	2258      	movs	r2, #88	; 0x58
    ac28:	601a      	str	r2, [r3, #0]
    ac2a:	f04f 30ff 	mov.w	r0, #4294967295
    ac2e:	4770      	bx	lr
    ac30:	10001348 	.word	0x10001348

0000ac34 <_lseek>:
_lseek():
    ac34:	4b02      	ldr	r3, [pc, #8]	; (ac40 <_lseek+0xc>)
    ac36:	2258      	movs	r2, #88	; 0x58
    ac38:	601a      	str	r2, [r3, #0]
    ac3a:	f04f 30ff 	mov.w	r0, #4294967295
    ac3e:	4770      	bx	lr
    ac40:	10001348 	.word	0x10001348

0000ac44 <__FUNCTION__.6167>:
    ac44:	72746e65 6f705f79 00746e69 2873250a     entry_point..%s(
    ac54:	57203a29 494e5241 203a474e 736e6553     ): WARNING: Sens
    ac64:	6520726f 726f7272 6e6f2073 69687420     or errors on thi
    ac74:	6f622073 0a647261 73250a00 203a2928     s board...%s(): 
    ac84:	65746e45 676e6972 69616d20 0a29286e     Entering main().
    ac94:	52524500 203a524f 6e69616d 73202928     .ERROR: main() s
    aca4:	6c756f68 656e2064 20726576 75746572     hould never retu
    acb4:	202c6e72 676f7270 206d6172 20736168     rn, program has 
    acc4:	6e656562 6c616820 00646574 78656e55     been halted.Unex
    acd4:	74636570 43206465 65205550 70656378     pected CPU excep
    ace4:	6e6f6974 75250020 6e692820 72726574     tion .%u (interr
    acf4:	29747075 73616820 63636f20 64657275     upt) has occured
    ad04:	646e6120 65687420 6f727020 6d617267      and the program
    ad14:	6c697720 6f6e206c 61682077 000a746c      will now halt..
    ad24:	65637845 6f697470 7061206e 72616570     Exception appear
    ad34:	6f742073 20656220 27732527 6944000a     s to be '%s'..Di
    ad44:	6f792064 65722075 74736967 74207265     d you register t
    ad54:	69206568 7265746e 74707572 726f6320     he interrupt cor
    ad64:	74636572 7520796c 676e6973 63706c20     rectly using lpc
    ad74:	7265705f 65687069 736c6172 4120682e     _peripherals.h A
    ad84:	003f4950 61747365 72006b63 74657365     PI?.estack.reset
    ad94:	494d4e00 72616800 61662064 00746c75     .NMI.hard fault.
    ada4:	6f6d656d 66207972 746c7561 73756200     memory fault.bus
    adb4:	75616620 7500746c 65676173 75616620      fault.usage fau
    adc4:	7200746c 72657365 00646576 736f7472     lt.reserved.rtos
    add4:	62656400 ff006775                       .debug..

0000addc <table.8042>:
    addc:	0000ad88 0000ad8f 0000ad95 0000ad99     ................
    adec:	0000ada4 0000adb1 0000adbb 0000adc7     ................
    adfc:	0000adc7 0000adc7 0000adc7 0000add0     ................
    ae0c:	0000add5 0000adc7 0000add0 0000add0     ................
    ae1c:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    ae2c:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    ae3c:	2d2d2d2d 2d2d2d2d 2d2d2d0a 4157202d     --------.---- WA
    ae4c:	4e494e52 57203a47 72632065 65687361     RNING: We crashe
    ae5c:	72702064 6f697665 796c7375 2d2d2d20     d previously ---
    ae6c:	20000a2d 3a435020 25783020 586c3830     -..  PC: 0x%08lX
    ae7c:	2020000a 203a524c 30257830 0a586c38     ..  LR: 0x%08lX.
    ae8c:	53502000 30203a52 38302578 000a586c     . PSR: 0x%08lX..
    ae9c:	30522020 7830203a 6c383025 20000a58       R0: 0x%08lX.. 
    aeac:	3a315220 25783020 586c3830 2020000a      R1: 0x%08lX..  
    aebc:	203a3252 30257830 0a586c38 52202000     R2: 0x%08lX..  R
    aecc:	30203a33 38302578 000a586c 4620200a     3: 0x%08lX...  F
    aedc:	20646e69 20656874 736c2e2a 69662074     ind the *.lst fi
    aeec:	6920656c 6f79206e 5f207275 6c697562     le in your _buil
    aefc:	69642064 74636572 2c79726f 646e6120     d directory, and
    af0c:	6f6f6c20 0a70756b 68742020 43502065      lookup.  the PC
    af1c:	6c617620 74206575 6f6c206f 65746163      value to locate
    af2c:	69687720 66206863 74636e75 206e6f69      which function 
    af3c:	73756163 74206465 2e736968 5420200a     caused this..  T
    af4c:	4c206568 68732052 646c756f 20656220     he LR should be 
    af5c:	20656874 65727027 756f6976 66202773     the 'previous' f
    af6c:	74636e75 206e6f69 74616874 73617720     unction that was
    af7c:	6e757220 676e696e 20200a2e 522d3052      running..  R0-R
    af8c:	72612033 61702065 656d6172 73726574     3 are parameters
    af9c:	206f7420 636e7566 6e6f6974 000a2e73      to functions...
    afac:	72437875 63697469 654e6c61 6e697473     uxCriticalNestin
    afbc:	3d3d2067 55307e20 2028004c 74726f70     g == ~0UL.( port
    afcc:	4349564e 544e495f 5254435f 45525f4c     NVIC_INT_CTRL_RE
    afdc:	20262047 74726f70 54434556 49544341     G & portVECTACTI
    afec:	4d5f4556 204b5341 3d3d2029 75003020     VE_MASK ) == 0.u
    affc:	69724378 61636974 73654e6c 676e6974     xCriticalNesting
    b00c:	43637500 65727275 7250746e 69726f69     .ucCurrentPriori
    b01c:	3e207974 6375203d 5378614d 61437379     ty >= ucMaxSysCa
    b02c:	72506c6c 69726f69 28007974 726f7020     llPriority.( por
    b03c:	52494174 525f5243 26204745 726f7020     tAIRCR_REG & por
    b04c:	49525074 5449524f 52475f59 5f50554f     tPRIORITY_GROUP_
    b05c:	4b53414d 3c202920 6c75203d 5078614d     MASK ) <= ulMaxP
    b06c:	52474952 5650554f 65756c61 726f7000     RIGROUPValue.por
    b07c:	55504374 21204449 6f70203d 4f437472     tCPUID != portCO
    b08c:	58455452 5f374d5f 31703072 0044495f     RTEX_M7_r0p1_ID.
    b09c:	74726f70 49555043 3d212044 726f7020     portCPUID != por
    b0ac:	524f4374 5f584554 725f374d 5f307030     tCORTEX_M7_r0p0_
    b0bc:	28004449 726f7020 58414d74 4952505f     ID.( portMAX_PRI
    b0cc:	554f5247 49425f50 2d205354 4d6c7520     GROUP_BITS - ulM
    b0dc:	52507861 4f524749 61565055 2065756c     axPRIGROUPValue 
    b0ec:	3d3d2029 4e5f5f20 5f434956 4f495250     ) == __NVIC_PRIO
    b0fc:	5449425f 78750053 75657551 6e654c65     _BITS.uxQueueLen
    b10c:	20687467 2028203e 73614255 70795465     gth > ( UBaseTyp
    b11c:	20745f65 00302029 74537870 63697461     e_t ) 0.pxStatic
    b12c:	75657551 3d212065 4c554e20 2821004c     Queue != NULL.!(
    b13c:	70202820 75516375 53657565 61726f74      ( pucQueueStora
    b14c:	21206567 554e203d 29204c4c 20262620     ge != NULL ) && 
    b15c:	78752028 6d657449 657a6953 203d3d20     ( uxItemSize == 
    b16c:	20292030 28210029 70202820 75516375     0 ) ).!( ( pucQu
    b17c:	53657565 61726f74 3d206567 554e203d     eueStorage == NU
    b18c:	29204c4c 20262620 78752028 6d657449     LL ) && ( uxItem
    b19c:	657a6953 203d2120 20292030 53780029     Size != 0 ) ).xS
    b1ac:	20657a69 73203d3d 6f657a69 51202866     ize == sizeof( Q
    b1bc:	65756575 2920745f 51787000 65756575     ueue_t ).pxQueue
    b1cc:	20282100 76702028 6d657449 75516f54     .!( ( pvItemToQu
    b1dc:	20657565 4e203d3d 204c4c55 26262029     eue == NULL ) &&
    b1ec:	70202820 65755178 3e2d6575 74497875      ( pxQueue->uxIt
    b1fc:	69536d65 2120657a 2028203d 73614255     emSize != ( UBas
    b20c:	70795465 20745f65 55302029 29202920     eType_t ) 0U ) )
    b21c:	20282100 43782028 5079706f 7469736f     .!( ( xCopyPosit
    b22c:	206e6f69 71203d3d 65756575 5245564f     ion == queueOVER
    b23c:	54495257 20292045 28202626 51787020     WRITE ) && ( pxQ
    b24c:	65756575 78753e2d 676e654c 21206874     ueue->uxLength !
    b25c:	2031203d 00292029 28202821 61547820     = 1 ) ).!( ( xTa
    b26c:	65476b73 68635374 6c756465 74537265     skGetSchedulerSt
    b27c:	28657461 3d3d2029 73617420 4843536b     ate() == taskSCH
    b28c:	4c554445 535f5245 45505355 4445444e     EDULER_SUSPENDED
    b29c:	26202920 20282026 63695478 6f54736b      ) && ( xTicksTo
    b2ac:	74696157 203d2120 20292030 78700029     Wait != 0 ) ).px
    b2bc:	75657551 753e2d65 65744978 7a69536d     Queue->uxItemSiz
    b2cc:	3d3d2065 21003020 20282028 75517870     e == 0.!( ( pxQu
    b2dc:	2d657565 5178753e 65756575 65707954     eue->uxQueueType
    b2ec:	203d3d20 75657571 45555165 495f4555      == queueQUEUE_I
    b2fc:	554d5f53 20584554 26262029 70202820     S_MUTEX ) && ( p
    b30c:	65755178 3e2d6575 53782e75 70616d65     xQueue->u.xSemap
    b31c:	65726f68 754d782e 48786574 65646c6f     hore.xMutexHolde
    b32c:	3d212072 4c554e20 2029204c 20280029     r != NULL ) ).( 
    b33c:	75517870 20657565 28210029 28202820     pxQueue ).!( ( (
    b34c:	42767020 65666675 20292072 4e203d3d      pvBuffer ) == N
    b35c:	204c4c55 26262029 28202820 51787020     ULL ) && ( ( pxQ
    b36c:	65756575 3e2d2920 74497875 69536d65     ueue )->uxItemSi
    b37c:	2120657a 2028203d 73614255 70795465     ze != ( UBaseTyp
    b38c:	20745f65 55302029 29202920 20282100     e_t ) 0U ) ).!( 
    b39c:	76702028 66667542 3d207265 554e203d     ( pvBuffer == NU
    b3ac:	29204c4c 20262620 78702028 75657551     LL ) && ( pxQueu
    b3bc:	753e2d65 65744978 7a69536d 3d212065     e->uxItemSize !=
    b3cc:	55202820 65736142 65707954 2920745f      ( UBaseType_t )
    b3dc:	20553020 00292029 686e4978 74697265      0U ) ).xInherit
    b3ec:	65636e61 7563634f 64657272 203d3d20     anceOccurred == 
    b3fc:	41466470 0045534c 43547870 78700042     pdFALSE.pxTCB.px
    b40c:	76657250 73756f69 656b6157 656d6954     PreviousWakeTime
    b41c:	78202800 656d6954 72636e49 6e656d65     .( xTimeIncremen
    b42c:	203e2074 29205530 53787500 64656863     t > 0U ).uxSched
    b43c:	72656c75 70737553 65646e65 3d3d2064     ulerSuspended ==
    b44c:	70003020 65764578 694c746e 70007473      0.pxEventList.p
    b45c:	42435478 203d2120 75437870 6e657272     xTCB != pxCurren
    b46c:	42435474 54787000 4f656d69 49007475     tTCB.pxTimeOut.I
    b47c:	00454c44 7473696c 52525543 5f544e45     DLE.listCURRENT_
    b48c:	5453494c 4e454c5f 28485447 20282620     LIST_LENGTH( &( 
    b49c:	65527870 54796461 736b7361 7473694c     pxReadyTasksList
    b4ac:	75205b73 706f5478 6f697250 79746972     s[ uxTopPriority
    b4bc:	29205d20 3e202920 70003020 63695478      ] ) ) > 0.pxTic
    b4cc:	6f54736b 74696157 78757000 63617453     ksToWait.puxStac
    b4dc:	6675426b 20726566 4e203d21 004c4c55     kBuffer != NULL.
    b4ec:	61547870 75426b73 72656666 203d2120     pxTaskBuffer != 
    b4fc:	4c4c554e 69537800 3d20657a 6973203d     NULL.xSize == si
    b50c:	666f657a 43542028 20745f42 20280029     zeof( TCB_t ).( 
    b51c:	7473696c 5453494c 5f53495f 54504d45     listLIST_IS_EMPT
    b52c:	70202859 6c654478 64657961 6b736154     Y( pxDelayedTask
    b53c:	7473694c 29202920 54787000 3d204243     List ) ).pxTCB =
    b54c:	7870203d 72727543 54746e65 70004243     = pxCurrentTCB.p
    b55c:	42435478 78753e2d 6574754d 48736578     xTCB->uxMutexesH
    b56c:	00646c65 6e557870 636f6c62 5464656b     eld.pxUnblockedT
    b57c:	75004243 68635378 6c756465 75537265     CB.uxSchedulerSu
    b58c:	6e657073 00646564                       spended.

0000b594 <gpio_memory_map>:
    b594:	20098000 20098020 20098040 20098060     ...  .. @.. `.. 
    b5a4:	20098080 200980a0                       ... ... 

0000b5ac <hw_timers>:
    b5ac:	40004000 00000001 40008000 00000002     .@.@.......@....
    b5bc:	40090000 00000003 40094000 00000004     ...@.....@.@....
    b5cc:	00002759 0000274d 00002741              Y'..M'..A'..

0000b5d8 <lpc_peripheral_pconp_bit_map>:
    b5d8:	16020100 18040317 13070619 0a15001a     ................
    b5e8:	00000000 000c0000 001d0000 00000000     ................
    b5f8:	00000000 ffffff14                       ........

0000b600 <uart__isrs>:
    b600:	00002b9d 00002b91 00002b85 00002b79     .+...+...+..y+..

0000b610 <uart_peripheral_ids>:
    b610:	08070605 694c0a0d 6f207473 6f632066     ......List of co
    b620:	6e616d6d 28207364 20657375 706c6568     mmands (use help
    b630:	616e3c20 203e656d 67206f74 66207465      <name> to get f
    b640:	206c6c75 706c6568 20666920 20756f79     ull help if you 
    b650:	20656573 292e2e2e 0a0d203a 25202000     see ...): ...  %
    b660:	20733631 2e25203a 20733035 002e2e2e     16s : %.50s ....
    b670:	31252020 3a207336 00732520 6568000d       %16s : %s...he
    b680:	4300706c 616d6d6f 6620646e 656c6961     lp.Command faile
    b690:	00203a64 6f430a0d 6e616d6d 65682064     d: ...Command he
    b6a0:	6d20706c 61737365 203a6567 0a0d7325     lp message: %s..
    b6b0:	52524500 203a524f 6c756f43 6f6e2064     .ERROR: Could no
    b6c0:	69662074 6820646e 20706c65 20726f66     t find help for 
    b6d0:	6d6d6f63 3a646e61 6e550020 656c6261     command: .Unable
    b6e0:	206f7420 6374616d 6e612068 65722079      to match any re
    b6f0:	74736967 64657265 494c4320 6d6f6320     gistered CLI com
    b700:	646e616d 726f6620 2d00203a 2d2d2d2d     mand for: .-----
    b710:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    b720:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    b730:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    b740:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    b750:	2d2d2d2d 2d2d2d2d 0d2d2d2d 6c63000a     -----------...cl
    b760:	65440069 6562696c 65746172 6320796c     i.Deliberately c
    b770:	68736172 74207365 73206568 65747379     rashes the syste
    b780:	6f74206d 6d656420 74736e6f 65746172     m to demonstrate
    b790:	776f6820 206f7420 75626564 20612067      how to debug a 
    b7a0:	73617263 32690068 32690063 65722063     crash.i2c.i2c re
    b7b0:	30206461 20444478 52527830 3e6e3c20     ad 0xDD 0xRR <n>
    b7c0:	6332690a 69727720 30206574 20444478     .i2c write 0xDD 
    b7d0:	52527830 61763c20 3e65756c 61763c20     0xRR <value> <va
    b7e0:	3e65756c 2e2e2e20 73617400 73696c6b     lue> ....tasklis
    b7f0:	754f0074 74757074 696c2073 6f207473     t.Outputs list o
    b800:	54522066 7420534f 736b7361 5043202c     f RTOS tasks, CP
    b810:	6e612055 74732064 206b6361 67617375     U and stack usag
    b820:	740a2e65 6c6b7361 20747369 6d69743c     e..tasklist <tim
    b830:	20273e65 6c6c6977 73696420 79616c70     e>' will display
    b840:	55504320 69747520 617a696c 6e6f6974      CPU utilization
    b850:	74697720 206e6968 73696874 6d697420      within this tim
    b860:	69772065 776f646e 6572002e 77006461     e window..read.w
    b870:	65746972 20782500 25207825 32490075     rite.%x %x %u.I2
    b880:	65522043 6f206461 6c532066 20657661     C Read of Slave 
    b890:	30257830 000a5832 78302020 58323025     0x%02X..  0x%02X
    b8a0:	7830203a 58323025 64252820 49000a29     : 0x%02X (%d)..I
    b8b0:	62204332 65207375 726f7272 72756420     2C bus error dur
    b8c0:	20676e69 5f633269 6165725f 6c735f64     ing i2c__read_sl
    b8d0:	5f657661 61746164 000a2928 6d6d6f43     ave_data()..Comm
    b8e0:	20646e61 6f727265 52203a72 20646165     and error: Read 
    b8f0:	6d6d6f63 20646e61 756f6873 6220646c     command should b
    b900:	69272065 72206332 20646165 44447830     e 'i2c read 0xDD
    b910:	52783020 6e3c2052 000a273e 25207825      0xRR <n>'..%x %
    b920:	72570078 2065746f 62207525 73657479     x.Wrote %u bytes
    b930:	206f7420 76616c73 78302065 58323025      to slave 0x%02X
    b940:	2020000a 6433255b 203d205d 30257830     ..  [%3d] = 0x%0
    b950:	28205832 0a296425 43324900 73756220     2X (%d)..I2C bus
    b960:	72726520 6420726f 6e697275 32692067      error during i2
    b970:	775f5f63 65746972 616c735f 645f6576     c__write_slave_d
    b980:	28617461 43000a29 616d6d6f 6520646e     ata()..Command e
    b990:	726f7272 7257203a 20657469 6d6d6f63     rror: Write comm
    b9a0:	20646e61 756f6873 6220646c 69272065     and should be 'i
    b9b0:	77206332 65746972 44783020 78302044     2c write 0xDD 0x
    b9c0:	3c205252 756c6176 3c203e65 756c6176     RR <value> <valu
    b9d0:	2e203e65 0a272e2e 6d614e00 31250065     e> ...'..Name.%1
    b9e0:	20207330 74617453 50207375 74532072     0s  Status Pr St
    b9f0:	206b6361 25555043 20202025 20202020     ack CPU%%       
    ba00:	54202020 0a656d69 30312500 73252073        Time..%10s %s
    ba10:	75322520 75352520 75342520 30312520      %2u %5u %4u %10
    ba20:	73752075 764f000a 65687265 203a6461     u us..Overhead: 
    ba30:	75207525 72000a53 696e6e75 2000676e     %u uS..running. 
    ba40:	64616572 62002079 6b636f6c 73006465     ready .blocked.s
    ba50:	65707375 6400646e 74656c65 ff006465     uspend.deleted..

0000ba60 <task_status_table.7877>:
    ba60:	0000ba37 0000ba3f 0000ba47 0000ba4f     7...?...G...O...
    ba70:	0000ba57 00544146 33544146 52450032     W...FAT.FAT32.ER
    ba80:	3a524f52 6c614320 6f74206c 65725f20     ROR: Call to _re
    ba90:	29286461 74697720 6e612068 736e7520     ad() with an uns
    baa0:	6f707075 64657472 6e616820 00656c64     upported handle.
    bab0:	4f525245 43203a52 206c6c61 5f206f74     ERROR: Call to _
    bac0:	74697277 20292865 68746977 206e6120     write() with an 
    bad0:	75736e75 726f7070 20646574 646e6168     unsupported hand
    bae0:	                                         le.

0000bae3 <__FUNCTION__.9166>:
    bae3:	69726570 72656870 5f736c61 74696e69     peripherals_init
    baf3:	2d2d2d00 2d2d2d2d 2d2d2d2d 2d2d2d2d     .---------------
    bb03:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    bb13:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    bb23:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    bb33:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
    bb43:	250a002d 73250a73 203a2928 20776f4c     -..%s.%s(): Low 
    bb53:	6576656c 7473206c 75747261 49000a70     level startup..I
    bb63:	73204332 6576616c 74656420 65746365     2C slave detecte
    bb73:	74612064 64646120 73736572 7830203a     d at address: 0x
    bb83:	58323025 3d78000a 202c6425 64253d79     %02X..x=%d, y=%d
    bb93:	6e69202c 3d786564 000a6425 65786950     , index=%d..Pixe
    bba3:	2528206c 25202c64 3d202964 2c782520     l (%d, %d) = %x,
    bbb3:	2c782520 0a782520 64656c00 656c0030      %x, %x..led0.le
    bbc3:	53003164 74726174 20676e69 534f5452     d1.Starting RTOS
    bbd3:	65724600 4f545265 53412053 54524553     .FreeRTOS ASSERT
    bbe3:	6f202928 72756363 20646572 69646e69     () occurred indi
    bbf3:	69746163 6120676e 7265206e 20726f72     cating an error 
    bc03:	646e6f63 6f697469 6874206e 73207461     condition that s
    bc13:	6c756f68 454e2064 20524556 70706168     hould NEVER happ
    bc23:	20006e65 6944202d 6f792064 61632075     en. - Did you ca
    bc33:	61206c6c 6f6c6220 6e696b63 50412067     ll a blocking AP
    bc43:	726f2049 6e6f6e20 6f724620 5253496d     I or non FromISR
    bc53:	41202928 69204950 6469736e 6e612065     () API inside an
    bc63:	52534920 2d20003f 64694420 756f7920      ISR?. - Did you
    bc73:	726f6620 20746567 75206f74 66206573      forget to use f
    bc83:	6e697270 73286674 72656474 69202972     printf(stderr) i
    bc93:	6e61206e 52534920 6548003f 69206572     n an ISR?.Here i
    bca3:	68742073 696c2065 6f20656e 6f632066     s the line of co
    bcb3:	74206564 20746168 746c6168 74206465     de that halted t
    bcc3:	43206568 203a5550 70417600 63696c70     he CPU: .vApplic
    bcd3:	6f697461 6c614d6e 46636f6c 656c6961     ationMallocFaile
    bce3:	6f6f4864 2029286b 6c6c6163 203b6465     dHook() called; 
    bcf3:	6d206f6e 2065726f 204d4152 6f6d656d     no more RAM memo
    bd03:	73007972 6b636174 65766f20 6f6c6672     ry.stack overflo
    bd13:	79622077 69687420 61742073 003a6b73     w by this task:.

0000bd23 <_ctype_>:
    bd23:	20202000 20202020 28282020 20282828     .         ((((( 
    bd33:	20202020 20202020 20202020 20202020                     
    bd43:	10108820 10101010 10101010 10101010      ...............
    bd53:	04040410 04040404 10040404 10101010     ................
    bd63:	41411010 41414141 01010101 01010101     ..AAAAAA........
    bd73:	01010101 01010101 01010101 10101010     ................
    bd83:	42421010 42424242 02020202 02020202     ..BBBBBB........
    bd93:	02020202 02020202 02020202 10101010     ................
    bda3:	00000020 00000000 00000000 00000000      ...............
	...

0000be24 <_global_impure_ptr>:
    be24:	10000168 2b302d23 6c680020 6665004c     h...#-0+ .hlL.ef
    be34:	47464567 464e4900 666e6900 4e414e00     gEFG.INF.inf.NAN
    be44:	6e616e00 32313000 36353433 41393837     .nan.0123456789A
    be54:	45444342 31300046 35343332 39383736     BCDEF.0123456789
    be64:	64636261 65006665 00646c25              abcdef.e%ld.

0000be70 <fpi.7522>:
    be70:	00000035 fffffbce 000003cb 00000001     5...............
    be80:	00000000                                ....

0000be84 <fpinan.7558>:
    be84:	00000034 fffffbce 000003cb 00000001     4...............
    be94:	00000000                                ....

0000be98 <tinytens>:
    be98:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
    bea8:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
    beb8:	64ac6f43 11680628 69666e49 7974696e     Co.d(.h.Infinity
    bec8:	4e614e00 ffffff00                       .NaN....

0000bed0 <__sf_fake_stderr>:
	...

0000bef0 <__sf_fake_stdin>:
	...

0000bf10 <__sf_fake_stdout>:
	...

0000bf30 <_C_numeric_locale>:
    bf30:	0000b7e7 0000b65c 100001c8 4f500043     ....\.......C.PO
    bf40:	00584953 ffffffff                       SIX.....

0000bf48 <__mprec_bigtens>:
    bf48:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
    bf58:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
    bf68:	7f73bf3c 75154fdd                       <.s..O.u

0000bf70 <__mprec_tens>:
    bf70:	00000000 3ff00000 00000000 40240000     .......?......$@
    bf80:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
    bf90:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
    bfa0:	00000000 412e8480 00000000 416312d0     .......A......cA
    bfb0:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
    bfc0:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
    bfd0:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
    bfe0:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
    bff0:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
    c000:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
    c010:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
    c020:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
    c030:	79d99db4 44ea7843                       ...yCx.D

0000c038 <p05.7444>:
    c038:	00000005 00000019 0000007d 0000c062     ........}...b...
    c048:	0000c065 0000c068 61462d41 3938662d     e...h...A-Fa-f89
    c058:	33323130 37363534 2d2b005d 00303000     01234567].+-.00.
    c068:	ff005878                                xX..
