
_build/sjtwo-c.elf:     file format elf32-littlearm
_build/sjtwo-c.elf
architecture: armv7e-m, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x0000010d

Program Header:
    LOAD off    0x00010000 vaddr 0x00000000 paddr 0x00000000 align 2**16
         filesz 0x000018a0 memsz 0x000018a0 flags r-x
    LOAD off    0x00020000 vaddr 0x10000000 paddr 0x000018a0 align 2**16
         filesz 0x0000016c memsz 0x0000016c flags rw-
    LOAD off    0x0002016c vaddr 0x1000016c paddr 0x1000016c align 2**16
         filesz 0x00000000 memsz 0x00000114 flags rw-
private flags = 5000400: [Version5 EABI] [hard-float ABI]

Sections:
Idx Name             Size      VMA       LMA       File off  Algn  Flags
  0 .text            000018a0  00000000  00000000  00010000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data            0000016c  10000000  000018a0  00020000  2**2  CONTENTS, ALLOC, LOAD, DATA
  2 .data_RAM2       00000000  20000000  20000000  0002016c  2**2  CONTENTS
  3 .bss             00000114  1000016c  1000016c  0002016c  2**2  ALLOC
  4 .uninit_RESERVED 00000000  10000000  10000000  0002016c  2**2  CONTENTS
  5 .noinit_RAM2     00000000  20000000  20000000  0002016c  2**2  CONTENTS
  6 .noinit          00000000  10000280  10000280  0002016c  2**2  CONTENTS
  7 .debug_info      0000c135  00000000  00000000  0002016c  2**0  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev    0000279e  00000000  00000000  0002c2a1  2**0  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges   00000658  00000000  00000000  0002ea3f  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges    00000b28  00000000  00000000  0002f097  2**0  CONTENTS, READONLY, DEBUGGING
 11 .debug_line      00006038  00000000  00000000  0002fbbf  2**0  CONTENTS, READONLY, DEBUGGING
 12 .debug_str       0000336d  00000000  00000000  00035bf7  2**0  CONTENTS, READONLY, DEBUGGING
 13 .comment         00000076  00000000  00000000  00038f64  2**0  CONTENTS, READONLY
 14 .ARM.attributes  00000032  00000000  00000000  00038fda  2**0  CONTENTS, READONLY
 15 .debug_frame     00001244  00000000  00000000  0003900c  2**2  CONTENTS, READONLY, DEBUGGING
 16 .debug_loc       00004b3d  00000000  00000000  0003a250  2**0  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
10000000 l    d  .data	00000000 .data
20000000 l    d  .data_RAM2	00000000 .data_RAM2
1000016c l    d  .bss	00000000 .bss
10000000 l    d  .uninit_RESERVED	00000000 .uninit_RESERVED
20000000 l    d  .noinit_RAM2	00000000 .noinit_RAM2
10000280 l    d  .noinit	00000000 .noinit
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 interrupt_vector_table.c
00000128 l     F .text	00000002 halt
00000000 l    df *ABS*	00000000 entry_point.c
00000000 l    df *ABS*	00000000 main.c
0000012c l     F .text	00000028 led_task
00000000 l    df *ABS*	00000000 rtos_hooks.c
00000000 l    df *ABS*	00000000 list.c
00000000 l    df *ABS*	00000000 queue.c
00000264 l     F .text	0000006a prvCopyDataToQueue
000002ce l     F .text	00000056 prvNotifyQueueSetContainer
00000324 l     F .text	0000002a prvCopyDataFromQueue
0000034e l     F .text	0000007e prvUnlockQueue
00000000 l    df *ABS*	00000000 tasks.c
000006d4 l     F .text	00000028 prvIdleTask
000006fc l     F .text	00000024 prvResetNextTaskUnblockTime
00000720 l     F .text	0000008c prvAddCurrentTaskToDelayedList
10000170 l     O .bss	00000004 pxDelayedTaskList
10000174 l     O .bss	00000004 pxOverflowDelayedTaskList
10000178 l     O .bss	00000064 pxReadyTasksLists
100001dc l     O .bss	00000004 uxCurrentNumberOfTasks
100001e0 l     O .bss	00000004 uxPendedTicks
100001e4 l     O .bss	00000004 uxSchedulerSuspended
100001e8 l     O .bss	00000004 uxTaskNumber
100001ec l     O .bss	00000004 uxTopReadyPriority
100001f0 l     O .bss	00000014 xDelayedTaskList1
10000204 l     O .bss	00000014 xDelayedTaskList2
10000218 l     O .bss	00000004 xIdleTaskHandle
1000021c l     O .bss	00000004 xNextTaskUnblockTime
10000220 l     O .bss	00000004 xNumOfOverflows
10000224 l     O .bss	00000014 xPendingReadyList
10000238 l     O .bss	00000004 xSchedulerRunning
1000023c l     O .bss	00000014 xSuspendedTaskList
10000250 l     O .bss	00000004 xTickCount
10000254 l     O .bss	00000004 xYieldPending
00000000 l    df *ABS*	00000000 heap_3.c
00000000 l    df *ABS*	00000000 port.c
00000e8c l     F .text	00000030 prvTaskExitError
00000ebc l     F .text	00000022 prvPortStartFirstTask
00000ee4 l     F .text	0000000e vPortEnableVFP
00000f50 l       .text	00000000 pxCurrentTCBConst2
00001000 l       .text	00000000 pxCurrentTCBConst
10000258 l     O .bss	00000001 ucMaxSysCallPriority
1000025c l     O .bss	00000004 ulMaxPRIGROUPValue
10000000 l     O .data	00000004 uxCriticalNesting
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 ram.c
00000000 l    df *ABS*	00000000 startup.c
00000000 l    df *ABS*	00000000 syscall.c
10000260 l     O .bss	00000004 current_heap_base_ptr.5383
00000000 l    df *ABS*	00000000 gpio.c
00000000 l    df *ABS*	00000000 hw_timer.c
00001874 l     O .text	00000020 hw_timers
00000000 l    df *ABS*	00000000 lpc_peripherals.c
00001340 l     F .text	00000002 lpc_peripheral__halt_handler
10000004 l     O .data	000000a4 lpc_peripheral__isr_registrations
00001894 l     O .text	00000009 lpc_peripheral_pconp_bit_map
00000000 l    df *ABS*	00000000 uart.c
000013a8 l     F .text	00000094 uart__isr_common
0000143c l     F .text	0000000c uart3_isr
00001448 l     F .text	0000000c uart2_isr
00001454 l     F .text	0000000c uart1_isr
00001460 l     F .text	0000000c uart0_isr
100000a8 l     O .data	00000060 uarts
00000000 l    df *ABS*	00000000 sys_time.c
000015e4 l     F .text	00000014 sys_time__1sec_isr
10000264 l     O .bss	00000004 sys_time__sec_counter
00000000 l    df *ABS*	00000000 uart_printf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 memcpy-stub.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 lock.c
00000000 l    df *ABS*	00000000 impure.c
1000010c l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 reent.c
00001534 g     F .text	00000068 uart__put
00000f88 g     F .text	00000018 vPortExitCritical
0000010c g       .text	00000000 bss_section_table_end
10000274 g     O .bss	00000001 __lock___atexit_recursive_mutex
00000000         *UND*	00000000  _printf_float
000015f8 g     F .text	00000028 sys_time__init
00000000 g       *ABS*	00000000 __vectors_start__
00001300 g     F .text	0000002c hw_timer__enable_match_isr_and_reset
00001824 g     F .text	0000000c __malloc_unlock
10000275 g     O .bss	00000001 __lock___arc4random_mutex
20000000 g       *ABS*	00000000 __base_RAM2
000005b4 g     F .text	000000a0 xQueueGenericSendFromISR
000018a0 g       .text	00000000 __exidx_end
00001380 g     F .text	00000028 lpc_peripheral__enable_interrupt
1000016c g     O .bss	00000004 pxCurrentTCB
10000270 g     O .bss	00000004 errno
000018a0 g       .text	00000000 _etext
00001488 g     F .text	00000064 uart__init
00080000 g       *ABS*	00000000 __top_MFlash512
00001174 g     F .text	00000040 clock__initialize_system_clock_96mhz
00000d38 g     F .text	00000018 vTaskInternalSetTimeOutState
0000159c g     F .text	00000048 uart__polled_put
00001060 g     F .text	000000d0 xPortStartScheduler
0000166c g     F .text	0000001c memcpy
00000ca0 g     F .text	00000024 vTaskPlaceOnEventList
00001030  w    F .text	00000030 vPortSetupTimerInterrupt
000011b4 g     F .text	00000044 ram__init_data
00001004 g     F .text	0000002c xPortSysTickHandler
10000280 g       .noinit	00000000 _noinit
00000e72 g     F .text	0000001a vPortFree
20000000 g       .data_RAM2	00000000 __end_data_RAM2
0000164c g     F .text	00000010 malloc
00001130 g     F .text	0000003c vPortValidateInterruptPriority
10010000 g       *ABS*	00000000 __top_RAM
00000fa0 g     F .text	00000064 xPortPendSVHandler
10000000 g       *ABS*	00000000 __base_RamLoc64
000001fe g     F .text	00000018 vListInsertEnd
00000000 g       *ABS*	00000000 __base_MFlash512
10010000 g       *ABS*	00000000 StackTop
20000000 g       .uninit_RESERVED	00000000 _bbss_peripheral
000017e8 g     F .text	00000020 _sbrk_r
000000fc g       .text	00000000 bss_section_table
000012a8 g     F .text	0000001e gpio__construct_with_function
20008000 g       *ABS*	00000000 __top_RAM2
000001f8 g     F .text	00000006 vListInitialiseItem
20000000 g       *ABS*	00000000 __user_heap_base
000018a0 g       .text	00000000 __exidx_start
10000276 g     O .bss	00000001 __lock___env_recursive_mutex
10000277 g     O .bss	00000001 __lock___sinit_recursive_mutex
000014ec g     F .text	00000048 uart__enable_queues
20000000 g       .uninit_RESERVED	00000000 __end_bss_RAM2
00001250 g     F .text	00000028 _sbrk
00000e54 g     F .text	0000001e pvPortMalloc
0000010c g       .text	00000000 section_table_end
000001e2 g     F .text	00000016 vListInitialise
00001620 g     F .text	0000002a uart_puts__polled
00000474 g     F .text	00000140 xQueueGenericSend
000000e4 g       .text	00000000 section_table_start
10000280 g       .bss	00000000 _ebss
00000dd4 g     F .text	00000080 xTaskPriorityDisinherit
10000278 g     O .bss	00000001 __lock___malloc_recursive_mutex
000018a0 g       *ABS*	00000000 _bdata_lma_peripheral
00000cc4 g     F .text	00000074 xTaskRemoveFromEventList
000001d0 g     F .text	00000010 vApplicationMallocFailedHook
10000000 g       .data	00000000 _bdata_vma
000012c8 g     F .text	00000038 hw_timer__enable
00001832 g     F .text	00000002 __retarget_lock_release_recursive
0000122c g     F .text	0000000e startup__initialize_ram
00000000 g       *ABS*	00000000 __base_Flash
00000d50 g     F .text	00000058 xTaskCheckForTimeOut
00001698 g     F .text	0000009c _free_r
10010000 g       *ABS*	00000000 __top_RamLoc64
1000016c g       .bss	00000000 _bss
000009d4 g     F .text	00000010 vTaskSuspendAll
20000000 g       .uninit_RESERVED	00000000 __start_bss_RAM2
00000244 g     F .text	00000020 uxListRemove
00080000 g       *ABS*	00000000 __top_Flash
10000280 g       .noinit	00000000 _end_noinit
00000c0c g     F .text	00000094 vTaskSwitchContext
20000000 g       *ABS*	00000000 __base_RamPeriph32
000001c4 g     F .text	0000000a vApplicationStackOverflowHook
000000e4 g       .text	00000000 data_section_table
00001818 g     F .text	0000000c __malloc_lock
00001830 g     F .text	00000002 __retarget_lock_acquire_recursive
00001688 g     F .text	00000010 memset
00000154 g     F .text	00000070 main
20000000 g       *ABS*	00000000 heap
20000000 g       .uninit_RESERVED	00000000 _ebss_peripheral
00000216 g     F .text	0000002e vListInsert
0000010c g       .text	00000000 __init_array_end
00000f30 g     F .text	00000024 vPortSVCHandler
00001734 g     F .text	000000b4 _malloc_r
00000654 g     F .text	0000007e xQueueReceiveFromISR
0000043c g     F .text	00000036 xQueueGenericCreate
20008000 g       *ABS*	00000000 heap_end
00000af8 g     F .text	000000dc xTaskResumeAll
000000fc g       .text	00000000 data_section_table_end
0000096c g     F .text	00000068 vTaskStartScheduler
00001344 g     F .text	00000018 lpc_peripheral__interrupt_dispatcher
0000116c g     F .text	00000008 clock__get_core_clock_hz
0000146c g     F .text	0000001c uart__enable_receive_and_transmit_interrupts
10000108 g     O .data	00000004 _impure_ptr
10000000 g       .uninit_RESERVED	00000000 _end_uninit_RESERVED
0000010c g       .text	00000000 __preinit_array_end
10000000 g       .data	00000000 _data
00000da8 g     F .text	0000000c vTaskMissedYield
000009e4 g     F .text	00000114 xTaskIncrementTick
10010000 g       *ABS*	00000000 _estack
20008000 g       *ABS*	00000000 _eheap
000003cc g     F .text	00000070 xQueueGenericReset
1000016c g       .data	00000000 _edata
00000000 g     O .text	000000e4 interrupt_vector_table
10000279 g     O .bss	00000001 __lock___at_quick_exit_mutex
000007ac g     F .text	000001c0 xTaskCreate
20000000 g       *ABS*	00000000 _bheap
20008000 g       *ABS*	00000000 __top_RamPeriph32
10000000 g       *ABS*	00000000 __base_RAM
00001278 g     F .text	00000030 gpio__set_function
1000016c g       .bss	00000000 _bbss
000018a0 g       *ABS*	00000000 _bdata_lma
00000bd4 g     F .text	00000038 vTaskDelay
20000000 g       .data_RAM2	00000000 _bdata_vma_peripheral
00000db4 g     F .text	00000020 xTaskGetSchedulerState
0000010c g       .text	00000000 __init_array_start
0000132c g     F .text	00000014 hw_timer__acknowledge_interrupt
0000123c g     F .text	00000014 startup__initialize_fpu
1000027a g     O .bss	00000001 __lock___dd_hash_mutex
1000027b g     O .bss	00000001 __lock___tz_mutex
000011f8 g     F .text	00000034 ram__init_bss
00001808 g     F .text	00000010 strlen
00000ef8 g     F .text	0000002c pxPortInitialiseStack
1000026c g     O .bss	00000004 __malloc_sbrk_start
00000f54 g     F .text	00000034 vPortEnterCritical
0000135c g     F .text	00000024 lpc_peripheral__turn_on_power_to
10000268 g     O .bss	00000004 __malloc_free_list
0000010c g       .text	00000000 __preinit_array_start
0000010c g     F .text	0000001c entry_point
20000000 g       .data_RAM2	00000000 _edata_peripheral
1000027c g     O .bss	00000001 __lock___sfp_recursive_mutex
0000165c g     F .text	00000010 free
000001e0 g     F .text	00000002 vApplicationIdleHook



Disassembly of section .text:

00000000 <interrupt_vector_table>:
       0:	00 00 01 10 0d 01 00 00 29 01 00 00 29 01 00 00     ........)...)...
      10:	29 01 00 00 29 01 00 00 29 01 00 00 29 01 00 00     )...)...)...)...
      20:	29 01 00 00 29 01 00 00 29 01 00 00 31 0f 00 00     )...)...)...1...
      30:	29 01 00 00 29 01 00 00 a1 0f 00 00 05 10 00 00     )...)...........
      40:	45 13 00 00 45 13 00 00 45 13 00 00 45 13 00 00     E...E...E...E...
      50:	45 13 00 00 45 13 00 00 45 13 00 00 45 13 00 00     E...E...E...E...
      60:	45 13 00 00 45 13 00 00 45 13 00 00 45 13 00 00     E...E...E...E...
      70:	45 13 00 00 45 13 00 00 45 13 00 00 45 13 00 00     E...E...E...E...
      80:	45 13 00 00 45 13 00 00 45 13 00 00 45 13 00 00     E...E...E...E...
      90:	45 13 00 00 45 13 00 00 45 13 00 00 45 13 00 00     E...E...E...E...
      a0:	45 13 00 00 45 13 00 00 45 13 00 00 45 13 00 00     E...E...E...E...
      b0:	45 13 00 00 45 13 00 00 45 13 00 00 45 13 00 00     E...E...E...E...
      c0:	45 13 00 00 45 13 00 00 45 13 00 00 45 13 00 00     E...E...E...E...
      d0:	45 13 00 00 45 13 00 00 45 13 00 00 45 13 00 00     E...E...E...E...
      e0:	45 13 00 00                                         E...

000000e4 <data_section_table>:
data_section_table():
      e4:	000018a0 	.word	0x000018a0
      e8:	10000000 	.word	0x10000000
      ec:	0000016c 	.word	0x0000016c
      f0:	000018a0 	.word	0x000018a0
      f4:	20000000 	.word	0x20000000
      f8:	00000000 	.word	0x00000000

000000fc <bss_section_table>:
data_section_table_end():
      fc:	1000016c 	.word	0x1000016c
     100:	00000114 	.word	0x00000114
     104:	20000000 	.word	0x20000000
     108:	00000000 	.word	0x00000000

0000010c <entry_point>:
entry_point():
/home/rutuja/sjtwo-c/lpc40xx_freertos/entry_point.c:7
#include "startup.h"
#include "sys_time.h"

extern void main(void);

void entry_point(void) {
     10c:	b508      	push	{r3, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/entry_point.c:8
  startup__initialize_ram();
     10e:	f001 f88d 	bl	122c <startup__initialize_ram>
/home/rutuja/sjtwo-c/lpc40xx_freertos/entry_point.c:9
  startup__initialize_fpu();
     112:	f001 f893 	bl	123c <startup__initialize_fpu>
/home/rutuja/sjtwo-c/lpc40xx_freertos/entry_point.c:11

  clock__initialize_system_clock_96mhz();
     116:	f001 f82d 	bl	1174 <clock__initialize_system_clock_96mhz>
/home/rutuja/sjtwo-c/lpc40xx_freertos/entry_point.c:12
  sys_time__init(clock__get_core_clock_hz());
     11a:	f001 f827 	bl	116c <clock__get_core_clock_hz>
     11e:	f001 fa6b 	bl	15f8 <sys_time__init>
/home/rutuja/sjtwo-c/lpc40xx_freertos/entry_point.c:14

  main();
     122:	f000 f817 	bl	154 <main>
/home/rutuja/sjtwo-c/lpc40xx_freertos/entry_point.c:21 (discriminator 1)
  /**
   * main() should never return.
   * CPU will now halt forever at this point.
   */
  while (1) {
  }
     126:	e7fe      	b.n	126 <entry_point+0x1a>

00000128 <halt>:
halt():
/home/rutuja/sjtwo-c/lpc40xx_freertos/interrupt_vector_table.c:97 (discriminator 1)
static void halt(void) {
  // This statement resolves compiler warning: variable define but not used
  (void)interrupt_vector_table;

  while (true) {
  }
     128:	e7fe      	b.n	128 <halt>
     12a:	Address 0x000000000000012a is out of bounds.


0000012c <led_task>:
led_task():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:48
}

static void led_task(void *pvParameters) {
     //Choose one of the onboard LEDS by looking into schematics and write code for the below
    //Port 2 pin 3
    LPC_GPIO2->DIR |= (1<<3);
     12c:	4c08      	ldr	r4, [pc, #32]	; (150 <led_task+0x24>)
     12e:	6822      	ldr	r2, [r4, #0]
     130:	f042 0208 	orr.w	r2, r2, #8
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:45
static void led_task(void *pvParameters) {
     134:	b508      	push	{r3, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:55
    //1) Set the PIN register bits for the LED
    //2) Set the DIR register bit for the LED

    while(1) {
        //3) Use CLR register to turn the LED ON (led may be active low)
        LPC_GPIO2->CLR = (1<<3);
     136:	2508      	movs	r5, #8
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:48
    LPC_GPIO2->DIR |= (1<<3);
     138:	6022      	str	r2, [r4, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:55 (discriminator 1)
        LPC_GPIO2->CLR = (1<<3);
     13a:	61e5      	str	r5, [r4, #28]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:56 (discriminator 1)
        vTaskDelay(500);
     13c:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
     140:	f000 fd48 	bl	bd4 <vTaskDelay>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:59 (discriminator 1)
 
        //4) Use SET register to turn the LED OFF
        LPC_GPIO2->SET = (1<<3);
     144:	61a5      	str	r5, [r4, #24]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:60 (discriminator 1)
        vTaskDelay(500);
     146:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
     14a:	f000 fd43 	bl	bd4 <vTaskDelay>
     14e:	e7f4      	b.n	13a <led_task+0xe>
     150:	20098040 	.word	0x20098040

00000154 <main>:
main():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:19
int main(void) {
     154:	b513      	push	{r0, r1, r4, lr}
uart0_init():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:93
    gpio__toggle(gpio);
  }
}

static void uart0_init(void) {
  (void)gpio__construct_with_function(gpio__port_0, 2, gpio__function_1); // P0.2 - Uart-0 Tx
     156:	2201      	movs	r2, #1
     158:	2102      	movs	r1, #2
     15a:	2000      	movs	r0, #0
     15c:	f001 f8a4 	bl	12a8 <gpio__construct_with_function>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:94
  (void)gpio__construct_with_function(gpio__port_0, 3, gpio__function_1); // P0.3 - Uart-0 Rx
     160:	2201      	movs	r2, #1
     162:	2103      	movs	r1, #3
     164:	2000      	movs	r0, #0
     166:	f001 f89f 	bl	12a8 <gpio__construct_with_function>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:96

  uart__init(UART__0, clock__get_core_clock_hz(), 115200);
     16a:	f000 ffff 	bl	116c <clock__get_core_clock_hz>
     16e:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
     172:	4601      	mov	r1, r0
     174:	2000      	movs	r0, #0
     176:	f001 f987 	bl	1488 <uart__init>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:99

  // Make UART more efficient by backing it with RTOS queues (optional but highly recommended with RTOS)
  QueueHandle_t tx_queue = xQueueCreate(128, sizeof(char));
     17a:	2200      	movs	r2, #0
     17c:	2101      	movs	r1, #1
     17e:	2080      	movs	r0, #128	; 0x80
     180:	f000 f95c 	bl	43c <xQueueGenericCreate>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:100
  QueueHandle_t rx_queue = xQueueCreate(32, sizeof(char));
     184:	2200      	movs	r2, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:99
  QueueHandle_t tx_queue = xQueueCreate(128, sizeof(char));
     186:	4604      	mov	r4, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:100
  QueueHandle_t rx_queue = xQueueCreate(32, sizeof(char));
     188:	2101      	movs	r1, #1
     18a:	2020      	movs	r0, #32
     18c:	f000 f956 	bl	43c <xQueueGenericCreate>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:101
  uart__enable_queues(UART__0, tx_queue, rx_queue);
     190:	4621      	mov	r1, r4
     192:	4602      	mov	r2, r0
     194:	2000      	movs	r0, #0
     196:	f001 f9a9 	bl	14ec <uart__enable_queues>
main():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:32
  xTaskCreate(led_task, "led", (512U * 4) / sizeof(void *), NULL, PRIORITY_LOW, NULL);
     19a:	2400      	movs	r4, #0
     19c:	2301      	movs	r3, #1
     19e:	e9cd 3400 	strd	r3, r4, [sp]
     1a2:	f44f 7200 	mov.w	r2, #512	; 0x200
     1a6:	4623      	mov	r3, r4
     1a8:	4904      	ldr	r1, [pc, #16]	; (1bc <main+0x68>)
     1aa:	4805      	ldr	r0, [pc, #20]	; (1c0 <main+0x6c>)
     1ac:	f000 fafe 	bl	7ac <xTaskCreate>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:33
  vTaskStartScheduler();
     1b0:	f000 fbdc 	bl	96c <vTaskStartScheduler>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/main.c:43
}
     1b4:	4620      	mov	r0, r4
     1b6:	b002      	add	sp, #8
     1b8:	bd10      	pop	{r4, pc}
     1ba:	bf00      	nop
     1bc:	00001834 	.word	0x00001834
     1c0:	0000012d 	.word	0x0000012d

000001c4 <vApplicationStackOverflowHook>:
vApplicationStackOverflowHook():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:17
}
#endif

#if (configCHECK_FOR_STACK_OVERFLOW != 0)
/// Invoked by FreeRTOS when it detects stack overflow
void vApplicationStackOverflowHook(TaskHandle_t task_handle, signed char *task_name) { halt((const char *)task_name); }
     1c4:	b508      	push	{r3, lr}
halt():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:9
  uart_puts__polled(UART__0, message);
     1c6:	2000      	movs	r0, #0
     1c8:	f001 fa2a 	bl	1620 <uart_puts__polled>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:11
  }
     1cc:	e7fe      	b.n	1cc <vApplicationStackOverflowHook+0x8>
vApplicationStackOverflowHook():
     1ce:	Address 0x00000000000001ce is out of bounds.


000001d0 <vApplicationMallocFailedHook>:
vApplicationMallocFailedHook():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:22
#endif

#if (configUSE_MALLOC_FAILED_HOOK == 1)
/// Invoked by FreeRTOS when there pvPortMalloc() function has encountered NULL pointer to memory request
void vApplicationMallocFailedHook(void) { halt("vApplicationMallocFailedHook() called; no more memory"); }
     1d0:	b508      	push	{r3, lr}
halt():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:9
  uart_puts__polled(UART__0, message);
     1d2:	4902      	ldr	r1, [pc, #8]	; (1dc <vApplicationMallocFailedHook+0xc>)
     1d4:	2000      	movs	r0, #0
     1d6:	f001 fa23 	bl	1620 <uart_puts__polled>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:11
  }
     1da:	e7fe      	b.n	1da <vApplicationMallocFailedHook+0xa>
     1dc:	00001838 	.word	0x00001838

000001e0 <vApplicationIdleHook>:
vApplicationIdleHook():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l5_application/rtos_hooks.c:32
 * FreeRTOS note:
 * vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES, CALL A FUNCTION THAT MIGHT BLOCK
 */
void vApplicationIdleHook(void) {
  // TODO: Put the CPU to sleep
}
     1e0:	4770      	bx	lr

000001e2 <vListInitialise>:
vListInitialise():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:42
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
     1e2:	f100 0308 	add.w	r3, r0, #8
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:46

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
     1e6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:42
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
     1ea:	6043      	str	r3, [r0, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:50

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
     1ec:	e9c0 2302 	strd	r2, r3, [r0, #8]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:51
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
     1f0:	6103      	str	r3, [r0, #16]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:53

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
     1f2:	2300      	movs	r3, #0
     1f4:	6003      	str	r3, [r0, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:59

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
     1f6:	4770      	bx	lr

000001f8 <vListInitialiseItem>:
vListInitialiseItem():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:65
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
     1f8:	2300      	movs	r3, #0
     1fa:	6103      	str	r3, [r0, #16]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:71

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
     1fc:	4770      	bx	lr

000001fe <vListInsertEnd>:
vListInsertEnd():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:76
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
     1fe:	6843      	ldr	r3, [r0, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:87
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
     200:	604b      	str	r3, [r1, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:88
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
     202:	689a      	ldr	r2, [r3, #8]
     204:	608a      	str	r2, [r1, #8]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:93

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
     206:	689a      	ldr	r2, [r3, #8]
     208:	6051      	str	r1, [r2, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:94
	pxIndex->pxPrevious = pxNewListItem;
     20a:	6099      	str	r1, [r3, #8]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:99

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
     20c:	6803      	ldr	r3, [r0, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:97
	pxNewListItem->pxContainer = pxList;
     20e:	6108      	str	r0, [r1, #16]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:99
	( pxList->uxNumberOfItems )++;
     210:	3301      	adds	r3, #1
     212:	6003      	str	r3, [r0, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:100
}
     214:	4770      	bx	lr

00000216 <vListInsert>:
vListInsert():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:106
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
     216:	680a      	ldr	r2, [r1, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:122
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
     218:	1c53      	adds	r3, r2, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:104
{
     21a:	b530      	push	{r4, r5, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:122
	if( xValueOfInsertion == portMAX_DELAY )
     21c:	d10a      	bne.n	234 <vListInsert+0x1e>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:124
	{
		pxIterator = pxList->xListEnd.pxPrevious;
     21e:	6903      	ldr	r3, [r0, #16]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:157
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
     220:	685a      	ldr	r2, [r3, #4]
     222:	604a      	str	r2, [r1, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:158
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
     224:	6091      	str	r1, [r2, #8]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:159
	pxNewListItem->pxPrevious = pxIterator;
     226:	608b      	str	r3, [r1, #8]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:160
	pxIterator->pxNext = pxNewListItem;
     228:	6059      	str	r1, [r3, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:166

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
     22a:	6803      	ldr	r3, [r0, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:164
	pxNewListItem->pxContainer = pxList;
     22c:	6108      	str	r0, [r1, #16]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:166
	( pxList->uxNumberOfItems )++;
     22e:	3301      	adds	r3, #1
     230:	6003      	str	r3, [r0, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:167
}
     232:	bd30      	pop	{r4, r5, pc}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:150
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
     234:	f100 0308 	add.w	r3, r0, #8
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:150 (discriminator 1)
     238:	685c      	ldr	r4, [r3, #4]
     23a:	6825      	ldr	r5, [r4, #0]
     23c:	4295      	cmp	r5, r2
     23e:	d8ef      	bhi.n	220 <vListInsert+0xa>
     240:	4623      	mov	r3, r4
     242:	e7f9      	b.n	238 <vListInsert+0x22>

00000244 <uxListRemove>:
uxListRemove():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:176
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
     244:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:174
List_t * const pxList = pxItemToRemove->pxContainer;
     248:	6903      	ldr	r3, [r0, #16]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:176
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
     24a:	608a      	str	r2, [r1, #8]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:177
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
     24c:	6051      	str	r1, [r2, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:183

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
     24e:	6859      	ldr	r1, [r3, #4]
     250:	4281      	cmp	r1, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:185
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
     252:	bf08      	it	eq
     254:	605a      	streq	r2, [r3, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:192
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
     256:	2200      	movs	r2, #0
     258:	6102      	str	r2, [r0, #16]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:193
	( pxList->uxNumberOfItems )--;
     25a:	681a      	ldr	r2, [r3, #0]
     25c:	3a01      	subs	r2, #1
     25e:	601a      	str	r2, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:195

	return pxList->uxNumberOfItems;
     260:	6818      	ldr	r0, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/list.c:196
}
     262:	4770      	bx	lr

00000264 <prvCopyDataToQueue>:
prvCopyDataToQueue():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2071

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
     264:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     266:	4615      	mov	r5, r2
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2079

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
     268:	6c02      	ldr	r2, [r0, #64]	; 0x40
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2077
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
     26a:	6b86      	ldr	r6, [r0, #56]	; 0x38
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2071
{
     26c:	4604      	mov	r4, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2079
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
     26e:	b952      	cbnz	r2, 286 <prvCopyDataToQueue+0x22>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2083
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
     270:	6807      	ldr	r7, [r0, #0]
     272:	bb47      	cbnz	r7, 2c6 <prvCopyDataToQueue+0x62>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2086
			{
				/* The mutex is no longer being held. */
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
     274:	6880      	ldr	r0, [r0, #8]
     276:	f000 fdad 	bl	dd4 <xTaskPriorityDisinherit>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2087
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
     27a:	60a7      	str	r7, [r4, #8]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2086
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
     27c:	4605      	mov	r5, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2143
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
     27e:	3601      	adds	r6, #1
     280:	63a6      	str	r6, [r4, #56]	; 0x38
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2146

	return xReturn;
}
     282:	4628      	mov	r0, r5
     284:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2096
	else if( xPosition == queueSEND_TO_BACK )
     286:	b965      	cbnz	r5, 2a2 <prvCopyDataToQueue+0x3e>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2098
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
     288:	6840      	ldr	r0, [r0, #4]
     28a:	f001 f9ef 	bl	166c <memcpy>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2099
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
     28e:	6863      	ldr	r3, [r4, #4]
     290:	6c22      	ldr	r2, [r4, #64]	; 0x40
     292:	4413      	add	r3, r2
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2100
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
     294:	68a2      	ldr	r2, [r4, #8]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2099
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
     296:	6063      	str	r3, [r4, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2100
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
     298:	4293      	cmp	r3, r2
     29a:	d3f0      	bcc.n	27e <prvCopyDataToQueue+0x1a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2102
			pxQueue->pcWriteTo = pxQueue->pcHead;
     29c:	6823      	ldr	r3, [r4, #0]
     29e:	6063      	str	r3, [r4, #4]
     2a0:	e7ed      	b.n	27e <prvCopyDataToQueue+0x1a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2111
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
     2a2:	68c0      	ldr	r0, [r0, #12]
     2a4:	f001 f9e2 	bl	166c <memcpy>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2112
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
     2a8:	6c23      	ldr	r3, [r4, #64]	; 0x40
     2aa:	68e2      	ldr	r2, [r4, #12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2113
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
     2ac:	6821      	ldr	r1, [r4, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2112
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
     2ae:	425b      	negs	r3, r3
     2b0:	441a      	add	r2, r3
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2113
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
     2b2:	428a      	cmp	r2, r1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2112
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
     2b4:	60e2      	str	r2, [r4, #12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2115
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
     2b6:	bf3e      	ittt	cc
     2b8:	68a2      	ldrcc	r2, [r4, #8]
     2ba:	189b      	addcc	r3, r3, r2
     2bc:	60e3      	strcc	r3, [r4, #12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2122
		if( xPosition == queueOVERWRITE )
     2be:	2d02      	cmp	r5, #2
     2c0:	d101      	bne.n	2c6 <prvCopyDataToQueue+0x62>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2124
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
     2c2:	b116      	cbz	r6, 2ca <prvCopyDataToQueue+0x66>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2130
				--uxMessagesWaiting;
     2c4:	3e01      	subs	r6, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2072
BaseType_t xReturn = pdFALSE;
     2c6:	2500      	movs	r5, #0
     2c8:	e7d9      	b.n	27e <prvCopyDataToQueue+0x1a>
     2ca:	4635      	mov	r5, r6
     2cc:	e7d7      	b.n	27e <prvCopyDataToQueue+0x1a>

000002ce <prvNotifyQueueSetContainer>:
prvNotifyQueueSetContainer():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2879
/*-----------------------------------------------------------*/

#if ( configUSE_QUEUE_SETS == 1 )

	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCopyPosition )
	{
     2ce:	b573      	push	{r0, r1, r4, r5, r6, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2880
	Queue_t *pxQueueSetContainer = pxQueue->pxQueueSetContainer;
     2d0:	6c84      	ldr	r4, [r0, #72]	; 0x48
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2879
	{
     2d2:	9001      	str	r0, [sp, #4]
     2d4:	460a      	mov	r2, r1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2885
	BaseType_t xReturn = pdFALSE;

		/* This function must be called form a critical section. */

		configASSERT( pxQueueSetContainer );
     2d6:	b904      	cbnz	r4, 2da <prvNotifyQueueSetContainer+0xc>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2885 (discriminator 1)
     2d8:	e7fe      	b.n	2d8 <prvNotifyQueueSetContainer+0xa>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2886
		configASSERT( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength );
     2da:	6ba1      	ldr	r1, [r4, #56]	; 0x38
     2dc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
     2de:	4299      	cmp	r1, r3
     2e0:	d300      	bcc.n	2e4 <prvNotifyQueueSetContainer+0x16>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2886 (discriminator 2)
     2e2:	e7fe      	b.n	2e2 <prvNotifyQueueSetContainer+0x14>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2888

		if( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength )
     2e4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
     2e6:	428b      	cmp	r3, r1
     2e8:	d91a      	bls.n	320 <prvNotifyQueueSetContainer+0x52>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2890
		{
			const int8_t cTxLock = pxQueueSetContainer->cTxLock;
     2ea:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2895

			traceQUEUE_SEND( pxQueueSetContainer );

			/* The data copied is the handle of the queue that contains data. */
			xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, xCopyPosition );
     2ee:	a901      	add	r1, sp, #4
     2f0:	4620      	mov	r0, r4
     2f2:	f7ff ffb7 	bl	264 <prvCopyDataToQueue>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2890
			const int8_t cTxLock = pxQueueSetContainer->cTxLock;
     2f6:	b26d      	sxtb	r5, r5
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2897

			if( cTxLock == queueUNLOCKED )
     2f8:	1c6b      	adds	r3, r5, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2895
			xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, xCopyPosition );
     2fa:	4606      	mov	r6, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2897
			if( cTxLock == queueUNLOCKED )
     2fc:	d10b      	bne.n	316 <prvNotifyQueueSetContainer+0x48>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2899
			{
				if( listLIST_IS_EMPTY( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) == pdFALSE )
     2fe:	6a63      	ldr	r3, [r4, #36]	; 0x24
     300:	b133      	cbz	r3, 310 <prvNotifyQueueSetContainer+0x42>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2901
				{
					if( xTaskRemoveFromEventList( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) != pdFALSE )
     302:	f104 0024 	add.w	r0, r4, #36	; 0x24
     306:	f000 fcdd 	bl	cc4 <xTaskRemoveFromEventList>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2904
					{
						/* The task waiting has a higher priority. */
						xReturn = pdTRUE;
     30a:	2800      	cmp	r0, #0
     30c:	bf18      	it	ne
     30e:	2601      	movne	r6, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2927
		{
			mtCOVERAGE_TEST_MARKER();
		}

		return xReturn;
	}
     310:	4630      	mov	r0, r6
     312:	b002      	add	sp, #8
     314:	bd70      	pop	{r4, r5, r6, pc}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2918
				pxQueueSetContainer->cTxLock = ( int8_t ) ( cTxLock + 1 );
     316:	3501      	adds	r5, #1
     318:	b26d      	sxtb	r5, r5
     31a:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
     31e:	e7f7      	b.n	310 <prvNotifyQueueSetContainer+0x42>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2881
	BaseType_t xReturn = pdFALSE;
     320:	2600      	movs	r6, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2926
		return xReturn;
     322:	e7f5      	b.n	310 <prvNotifyQueueSetContainer+0x42>

00000324 <prvCopyDataFromQueue>:
prvCopyDataFromQueue():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2150
{
     324:	4603      	mov	r3, r0
     326:	b410      	push	{r4}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2151
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
     328:	6c1a      	ldr	r2, [r3, #64]	; 0x40
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2150
{
     32a:	4608      	mov	r0, r1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2151
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
     32c:	b162      	cbz	r2, 348 <prvCopyDataFromQueue+0x24>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2153
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
     32e:	68d9      	ldr	r1, [r3, #12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2154
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
     330:	689c      	ldr	r4, [r3, #8]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2153
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
     332:	4411      	add	r1, r2
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2154
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
     334:	42a1      	cmp	r1, r4
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2153
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
     336:	60d9      	str	r1, [r3, #12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2156
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
     338:	bf24      	itt	cs
     33a:	6819      	ldrcs	r1, [r3, #0]
     33c:	60d9      	strcs	r1, [r3, #12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2162
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
     33e:	68d9      	ldr	r1, [r3, #12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2164
}
     340:	f85d 4b04 	ldr.w	r4, [sp], #4
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2162
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
     344:	f001 b992 	b.w	166c <memcpy>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2164
}
     348:	f85d 4b04 	ldr.w	r4, [sp], #4
     34c:	4770      	bx	lr

0000034e <prvUnlockQueue>:
prvUnlockQueue():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2168
{
     34e:	b570      	push	{r4, r5, r6, lr}
     350:	4604      	mov	r4, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2175
	taskENTER_CRITICAL();
     352:	f000 fdff 	bl	f54 <vPortEnterCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2177
		int8_t cTxLock = pxQueue->cTxLock;
     356:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2207
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
     35a:	f104 0624 	add.w	r6, r4, #36	; 0x24
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2177
		int8_t cTxLock = pxQueue->cTxLock;
     35e:	b26d      	sxtb	r5, r5
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2180
		while( cTxLock > queueLOCKED_UNMODIFIED )
     360:	2d00      	cmp	r5, #0
     362:	dc14      	bgt.n	38e <prvUnlockQueue+0x40>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2251
		pxQueue->cTxLock = queueUNLOCKED;
     364:	23ff      	movs	r3, #255	; 0xff
     366:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2253
	taskEXIT_CRITICAL();
     36a:	f000 fe0d 	bl	f88 <vPortExitCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2256
	taskENTER_CRITICAL();
     36e:	f000 fdf1 	bl	f54 <vPortEnterCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2258
		int8_t cRxLock = pxQueue->cRxLock;
     372:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2264
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
     376:	f104 0610 	add.w	r6, r4, #16
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2258
		int8_t cRxLock = pxQueue->cRxLock;
     37a:	b26d      	sxtb	r5, r5
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2260
		while( cRxLock > queueLOCKED_UNMODIFIED )
     37c:	2d00      	cmp	r5, #0
     37e:	dc19      	bgt.n	3b4 <prvUnlockQueue+0x66>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2281
		pxQueue->cRxLock = queueUNLOCKED;
     380:	23ff      	movs	r3, #255	; 0xff
     382:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2284
}
     386:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2283
	taskEXIT_CRITICAL();
     38a:	f000 bdfd 	b.w	f88 <vPortExitCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2186
				if( pxQueue->pxQueueSetContainer != NULL )
     38e:	6ca3      	ldr	r3, [r4, #72]	; 0x48
     390:	b14b      	cbz	r3, 3a6 <prvUnlockQueue+0x58>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2188
					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
     392:	2100      	movs	r1, #0
     394:	4620      	mov	r0, r4
     396:	f7ff ff9a 	bl	2ce <prvNotifyQueueSetContainer>
     39a:	b108      	cbz	r0, 3a0 <prvUnlockQueue+0x52>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2193
						vTaskMissedYield();
     39c:	f000 fd04 	bl	da8 <vTaskMissedYield>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2248
			--cTxLock;
     3a0:	3d01      	subs	r5, #1
     3a2:	b26d      	sxtb	r5, r5
     3a4:	e7dc      	b.n	360 <prvUnlockQueue+0x12>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2205
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
     3a6:	6a63      	ldr	r3, [r4, #36]	; 0x24
     3a8:	2b00      	cmp	r3, #0
     3aa:	d0db      	beq.n	364 <prvUnlockQueue+0x16>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2207
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
     3ac:	4630      	mov	r0, r6
     3ae:	f000 fc89 	bl	cc4 <xTaskRemoveFromEventList>
     3b2:	e7f2      	b.n	39a <prvUnlockQueue+0x4c>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2262
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
     3b4:	6923      	ldr	r3, [r4, #16]
     3b6:	2b00      	cmp	r3, #0
     3b8:	d0e2      	beq.n	380 <prvUnlockQueue+0x32>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2264
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
     3ba:	4630      	mov	r0, r6
     3bc:	f000 fc82 	bl	cc4 <xTaskRemoveFromEventList>
     3c0:	b108      	cbz	r0, 3c6 <prvUnlockQueue+0x78>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2266
					vTaskMissedYield();
     3c2:	f000 fcf1 	bl	da8 <vTaskMissedYield>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2273
				--cRxLock;
     3c6:	3d01      	subs	r5, #1
     3c8:	b26d      	sxtb	r5, r5
     3ca:	e7d7      	b.n	37c <prvUnlockQueue+0x2e>

000003cc <xQueueGenericReset>:
xQueueGenericReset():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:256
{
     3cc:	b538      	push	{r3, r4, r5, lr}
     3ce:	460d      	mov	r5, r1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:259
	configASSERT( pxQueue );
     3d0:	4604      	mov	r4, r0
     3d2:	b900      	cbnz	r0, 3d6 <xQueueGenericReset+0xa>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:259 (discriminator 1)
     3d4:	e7fe      	b.n	3d4 <xQueueGenericReset+0x8>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:261
	taskENTER_CRITICAL();
     3d6:	f000 fdbd 	bl	f54 <vPortEnterCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:263
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
     3da:	e9d4 300f 	ldrd	r3, r0, [r4, #60]	; 0x3c
     3de:	6822      	ldr	r2, [r4, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:265
		pxQueue->pcWriteTo = pxQueue->pcHead;
     3e0:	6062      	str	r2, [r4, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:263
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
     3e2:	4343      	muls	r3, r0
     3e4:	18d1      	adds	r1, r2, r3
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:266
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
     3e6:	1a1b      	subs	r3, r3, r0
     3e8:	4413      	add	r3, r2
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:263
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
     3ea:	60a1      	str	r1, [r4, #8]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:266
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
     3ec:	60e3      	str	r3, [r4, #12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:264
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
     3ee:	2100      	movs	r1, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:267
		pxQueue->cRxLock = queueUNLOCKED;
     3f0:	23ff      	movs	r3, #255	; 0xff
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:264
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
     3f2:	63a1      	str	r1, [r4, #56]	; 0x38
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:267
		pxQueue->cRxLock = queueUNLOCKED;
     3f4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:268
		pxQueue->cTxLock = queueUNLOCKED;
     3f8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:270
		if( xNewQueue == pdFALSE )
     3fc:	b995      	cbnz	r5, 424 <xQueueGenericReset+0x58>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:277
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
     3fe:	6923      	ldr	r3, [r4, #16]
     400:	b163      	cbz	r3, 41c <xQueueGenericReset+0x50>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:279
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
     402:	f104 0010 	add.w	r0, r4, #16
     406:	f000 fc5d 	bl	cc4 <xTaskRemoveFromEventList>
     40a:	b138      	cbz	r0, 41c <xQueueGenericReset+0x50>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:281
					queueYIELD_IF_USING_PREEMPTION();
     40c:	4b0a      	ldr	r3, [pc, #40]	; (438 <xQueueGenericReset+0x6c>)
     40e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
     412:	601a      	str	r2, [r3, #0]
     414:	f3bf 8f4f 	dsb	sy
     418:	f3bf 8f6f 	isb	sy
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:300
	taskEXIT_CRITICAL();
     41c:	f000 fdb4 	bl	f88 <vPortExitCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:305
}
     420:	2001      	movs	r0, #1
     422:	bd38      	pop	{r3, r4, r5, pc}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:296
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
     424:	f104 0010 	add.w	r0, r4, #16
     428:	f7ff fedb 	bl	1e2 <vListInitialise>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:297
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
     42c:	f104 0024 	add.w	r0, r4, #36	; 0x24
     430:	f7ff fed7 	bl	1e2 <vListInitialise>
     434:	e7f2      	b.n	41c <xQueueGenericReset+0x50>
     436:	bf00      	nop
     438:	e000ed04 	.word	0xe000ed04

0000043c <xQueueGenericCreate>:
xQueueGenericCreate():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:369
	{
     43c:	b570      	push	{r4, r5, r6, lr}
     43e:	460d      	mov	r5, r1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:374
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
     440:	4606      	mov	r6, r0
     442:	b900      	cbnz	r0, 446 <xQueueGenericCreate+0xa>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:374 (discriminator 1)
     444:	e7fe      	b.n	444 <xQueueGenericCreate+0x8>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:385
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
     446:	4348      	muls	r0, r1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:397
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
     448:	304c      	adds	r0, #76	; 0x4c
     44a:	f000 fd03 	bl	e54 <pvPortMalloc>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:399
		if( pxNewQueue != NULL )
     44e:	4604      	mov	r4, r0
     450:	b158      	cbz	r0, 46a <xQueueGenericCreate+0x2e>
prvInitialiseNewQueue():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:435
	if( uxItemSize == ( UBaseType_t ) 0 )
     452:	b165      	cbz	r5, 46e <xQueueGenericCreate+0x32>
xQueueGenericCreate():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:404
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
     454:	f100 034c 	add.w	r3, r0, #76	; 0x4c
prvInitialiseNewQueue():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:446
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
     458:	6023      	str	r3, [r4, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:452
	pxNewQueue->uxItemSize = uxItemSize;
     45a:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:453
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
     45e:	2101      	movs	r1, #1
     460:	4620      	mov	r0, r4
     462:	f7ff ffb3 	bl	3cc <xQueueGenericReset>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:463
		pxNewQueue->pxQueueSetContainer = NULL;
     466:	2300      	movs	r3, #0
     468:	64a3      	str	r3, [r4, #72]	; 0x48
xQueueGenericCreate():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:424
	}
     46a:	4620      	mov	r0, r4
     46c:	bd70      	pop	{r4, r5, r6, pc}
prvInitialiseNewQueue():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:435
	if( uxItemSize == ( UBaseType_t ) 0 )
     46e:	4603      	mov	r3, r0
     470:	e7f2      	b.n	458 <xQueueGenericCreate+0x1c>
xQueueGenericCreate():
     472:	Address 0x0000000000000472 is out of bounds.


00000474 <xQueueGenericSend>:
xQueueGenericSend():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:748
{
     474:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
     478:	4688      	mov	r8, r1
     47a:	9201      	str	r2, [sp, #4]
     47c:	461e      	mov	r6, r3
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:753
	configASSERT( pxQueue );
     47e:	4604      	mov	r4, r0
     480:	b900      	cbnz	r0, 484 <xQueueGenericSend+0x10>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:753 (discriminator 1)
     482:	e7fe      	b.n	482 <xQueueGenericSend+0xe>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:754
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
     484:	b911      	cbnz	r1, 48c <xQueueGenericSend+0x18>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:754 (discriminator 1)
     486:	6c03      	ldr	r3, [r0, #64]	; 0x40
     488:	b103      	cbz	r3, 48c <xQueueGenericSend+0x18>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:754 (discriminator 2)
     48a:	e7fe      	b.n	48a <xQueueGenericSend+0x16>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:755
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
     48c:	2e02      	cmp	r6, #2
     48e:	d103      	bne.n	498 <xQueueGenericSend+0x24>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:755 (discriminator 1)
     490:	6be3      	ldr	r3, [r4, #60]	; 0x3c
     492:	2b01      	cmp	r3, #1
     494:	d000      	beq.n	498 <xQueueGenericSend+0x24>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:755 (discriminator 3)
     496:	e7fe      	b.n	496 <xQueueGenericSend+0x22>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:758
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
     498:	f000 fc8c 	bl	db4 <xTaskGetSchedulerState>
     49c:	4607      	mov	r7, r0
     49e:	b910      	cbnz	r0, 4a6 <xQueueGenericSend+0x32>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:758 (discriminator 1)
     4a0:	9b01      	ldr	r3, [sp, #4]
     4a2:	b10b      	cbz	r3, 4a8 <xQueueGenericSend+0x34>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:758 (discriminator 4)
     4a4:	e7fe      	b.n	4a4 <xQueueGenericSend+0x30>
     4a6:	2700      	movs	r7, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:910
		prvLockQueue( pxQueue );
     4a8:	f04f 0900 	mov.w	r9, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:934
					portYIELD_WITHIN_API();
     4ac:	f8df a100 	ldr.w	sl, [pc, #256]	; 5b0 <xQueueGenericSend+0x13c>
     4b0:	e03f      	b.n	532 <xQueueGenericSend+0xbe>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:809
						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
     4b2:	6a63      	ldr	r3, [r4, #36]	; 0x24
     4b4:	2b00      	cmp	r3, #0
     4b6:	d054      	beq.n	562 <xQueueGenericSend+0xee>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:811
							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
     4b8:	f104 0024 	add.w	r0, r4, #36	; 0x24
     4bc:	f000 fc02 	bl	cc4 <xTaskRemoveFromEventList>
     4c0:	e04f      	b.n	562 <xQueueGenericSend+0xee>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:879
				if( xTicksToWait == ( TickType_t ) 0 )
     4c2:	9d01      	ldr	r5, [sp, #4]
     4c4:	b91d      	cbnz	r5, 4ce <xQueueGenericSend+0x5a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:883
					taskEXIT_CRITICAL();
     4c6:	f000 fd5f 	bl	f88 <vPortExitCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:951
			return errQUEUE_FULL;
     4ca:	2000      	movs	r0, #0
     4cc:	e055      	b.n	57a <xQueueGenericSend+0x106>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:890
				else if( xEntryTimeSet == pdFALSE )
     4ce:	b917      	cbnz	r7, 4d6 <xQueueGenericSend+0x62>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:894
					vTaskInternalSetTimeOutState( &xTimeOut );
     4d0:	a802      	add	r0, sp, #8
     4d2:	f000 fc31 	bl	d38 <vTaskInternalSetTimeOutState>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:904
		taskEXIT_CRITICAL();
     4d6:	f000 fd57 	bl	f88 <vPortExitCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:909
		vTaskSuspendAll();
     4da:	f000 fa7b 	bl	9d4 <vTaskSuspendAll>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:910
		prvLockQueue( pxQueue );
     4de:	f000 fd39 	bl	f54 <vPortEnterCritical>
     4e2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
     4e6:	2bff      	cmp	r3, #255	; 0xff
     4e8:	bf08      	it	eq
     4ea:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
     4ee:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
     4f2:	2bff      	cmp	r3, #255	; 0xff
     4f4:	bf08      	it	eq
     4f6:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
     4fa:	f000 fd45 	bl	f88 <vPortExitCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:913
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
     4fe:	a901      	add	r1, sp, #4
     500:	a802      	add	r0, sp, #8
     502:	f000 fc25 	bl	d50 <xTaskCheckForTimeOut>
     506:	2800      	cmp	r0, #0
     508:	d14b      	bne.n	5a2 <xQueueGenericSend+0x12e>
prvIsQueueFull():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2331
	taskENTER_CRITICAL();
     50a:	f000 fd23 	bl	f54 <vPortEnterCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2333
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
     50e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
     510:	6be3      	ldr	r3, [r4, #60]	; 0x3c
     512:	429a      	cmp	r2, r3
     514:	d134      	bne.n	580 <xQueueGenericSend+0x10c>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2342
	taskEXIT_CRITICAL();
     516:	f000 fd37 	bl	f88 <vPortExitCritical>
xQueueGenericSend():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:918
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
     51a:	9901      	ldr	r1, [sp, #4]
     51c:	f104 0010 	add.w	r0, r4, #16
     520:	f000 fbbe 	bl	ca0 <vTaskPlaceOnEventList>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:925
				prvUnlockQueue( pxQueue );
     524:	4620      	mov	r0, r4
     526:	f7ff ff12 	bl	34e <prvUnlockQueue>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:932
				if( xTaskResumeAll() == pdFALSE )
     52a:	f000 fae5 	bl	af8 <xTaskResumeAll>
     52e:	b378      	cbz	r0, 590 <xQueueGenericSend+0x11c>
     530:	2701      	movs	r7, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:768
		taskENTER_CRITICAL();
     532:	f000 fd0f 	bl	f54 <vPortEnterCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:774
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
     536:	6ba2      	ldr	r2, [r4, #56]	; 0x38
     538:	6be3      	ldr	r3, [r4, #60]	; 0x3c
     53a:	429a      	cmp	r2, r3
     53c:	d301      	bcc.n	542 <xQueueGenericSend+0xce>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:774 (discriminator 1)
     53e:	2e02      	cmp	r6, #2
     540:	d1bf      	bne.n	4c2 <xQueueGenericSend+0x4e>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:782
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
     542:	4632      	mov	r2, r6
     544:	4641      	mov	r1, r8
     546:	4620      	mov	r0, r4
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:780
				UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
     548:	6ba5      	ldr	r5, [r4, #56]	; 0x38
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:782
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
     54a:	f7ff fe8b 	bl	264 <prvCopyDataToQueue>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:784
					if( pxQueue->pxQueueSetContainer != NULL )
     54e:	6ca3      	ldr	r3, [r4, #72]	; 0x48
     550:	2b00      	cmp	r3, #0
     552:	d0ae      	beq.n	4b2 <xQueueGenericSend+0x3e>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:786
						if( ( xCopyPosition == queueOVERWRITE ) && ( uxPreviousMessagesWaiting != ( UBaseType_t ) 0 ) )
     554:	2e02      	cmp	r6, #2
     556:	d100      	bne.n	55a <xQueueGenericSend+0xe6>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:786 (discriminator 1)
     558:	b965      	cbnz	r5, 574 <xQueueGenericSend+0x100>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:793
						else if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
     55a:	4631      	mov	r1, r6
     55c:	4620      	mov	r0, r4
     55e:	f7ff feb6 	bl	2ce <prvNotifyQueueSetContainer>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:824
						else if( xYieldRequired != pdFALSE )
     562:	b138      	cbz	r0, 574 <xQueueGenericSend+0x100>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:830
							queueYIELD_IF_USING_PREEMPTION();
     564:	4b12      	ldr	r3, [pc, #72]	; (5b0 <xQueueGenericSend+0x13c>)
     566:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
     56a:	601a      	str	r2, [r3, #0]
     56c:	f3bf 8f4f 	dsb	sy
     570:	f3bf 8f6f 	isb	sy
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:874
				taskEXIT_CRITICAL();
     574:	f000 fd08 	bl	f88 <vPortExitCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:875
				return pdPASS;
     578:	2001      	movs	r0, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:954
}
     57a:	b004      	add	sp, #16
     57c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
prvIsQueueFull():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:2342
	taskEXIT_CRITICAL();
     580:	f000 fd02 	bl	f88 <vPortExitCritical>
xQueueGenericSend():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:940
				prvUnlockQueue( pxQueue );
     584:	4620      	mov	r0, r4
     586:	f7ff fee2 	bl	34e <prvUnlockQueue>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:941
				( void ) xTaskResumeAll();
     58a:	f000 fab5 	bl	af8 <xTaskResumeAll>
     58e:	e7cf      	b.n	530 <xQueueGenericSend+0xbc>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:934
					portYIELD_WITHIN_API();
     590:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
     594:	f8ca 3000 	str.w	r3, [sl]
     598:	f3bf 8f4f 	dsb	sy
     59c:	f3bf 8f6f 	isb	sy
     5a0:	e7c6      	b.n	530 <xQueueGenericSend+0xbc>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:947
			prvUnlockQueue( pxQueue );
     5a2:	4620      	mov	r0, r4
     5a4:	f7ff fed3 	bl	34e <prvUnlockQueue>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:948
			( void ) xTaskResumeAll();
     5a8:	f000 faa6 	bl	af8 <xTaskResumeAll>
     5ac:	e78d      	b.n	4ca <xQueueGenericSend+0x56>
     5ae:	bf00      	nop
     5b0:	e000ed04 	.word	0xe000ed04

000005b4 <xQueueGenericSendFromISR>:
xQueueGenericSendFromISR():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:958
{
     5b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
     5b8:	4689      	mov	r9, r1
     5ba:	4690      	mov	r8, r2
     5bc:	461f      	mov	r7, r3
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:963
	configASSERT( pxQueue );
     5be:	4604      	mov	r4, r0
     5c0:	b900      	cbnz	r0, 5c4 <xQueueGenericSendFromISR+0x10>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:963 (discriminator 1)
     5c2:	e7fe      	b.n	5c2 <xQueueGenericSendFromISR+0xe>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:964
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
     5c4:	b911      	cbnz	r1, 5cc <xQueueGenericSendFromISR+0x18>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:964 (discriminator 1)
     5c6:	6c03      	ldr	r3, [r0, #64]	; 0x40
     5c8:	b103      	cbz	r3, 5cc <xQueueGenericSendFromISR+0x18>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:964 (discriminator 2)
     5ca:	e7fe      	b.n	5ca <xQueueGenericSendFromISR+0x16>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:965
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
     5cc:	2f02      	cmp	r7, #2
     5ce:	d103      	bne.n	5d8 <xQueueGenericSendFromISR+0x24>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:965 (discriminator 1)
     5d0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
     5d2:	2b01      	cmp	r3, #1
     5d4:	d000      	beq.n	5d8 <xQueueGenericSendFromISR+0x24>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:965 (discriminator 3)
     5d6:	e7fe      	b.n	5d6 <xQueueGenericSendFromISR+0x22>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:981
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
     5d8:	f000 fdaa 	bl	1130 <vPortValidateInterruptPriority>
ulPortRaiseBASEPRI():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:211

portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
{
uint32_t ulOriginalBASEPRI, ulNewBASEPRI;

	__asm volatile
     5dc:	f3ef 8611 	mrs	r6, BASEPRI
     5e0:	f04f 03ff 	mov.w	r3, #255	; 0xff
     5e4:	f383 8811 	msr	BASEPRI, r3
     5e8:	f3bf 8f6f 	isb	sy
     5ec:	f3bf 8f4f 	dsb	sy
xQueueGenericSendFromISR():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:990
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
     5f0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
     5f2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
     5f4:	429a      	cmp	r2, r3
     5f6:	d301      	bcc.n	5fc <xQueueGenericSendFromISR+0x48>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:990 (discriminator 1)
     5f8:	2f02      	cmp	r7, #2
     5fa:	d129      	bne.n	650 <xQueueGenericSendFromISR+0x9c>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:992
			const int8_t cTxLock = pxQueue->cTxLock;
     5fc:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1001
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
     600:	463a      	mov	r2, r7
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:992
			const int8_t cTxLock = pxQueue->cTxLock;
     602:	b26d      	sxtb	r5, r5
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1001
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
     604:	4649      	mov	r1, r9
     606:	4620      	mov	r0, r4
     608:	f7ff fe2c 	bl	264 <prvCopyDataToQueue>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1005
			if( cTxLock == queueUNLOCKED )
     60c:	1c6b      	adds	r3, r5, #1
     60e:	d11a      	bne.n	646 <xQueueGenericSendFromISR+0x92>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1009
					if( pxQueue->pxQueueSetContainer != NULL )
     610:	6ca3      	ldr	r3, [r4, #72]	; 0x48
     612:	b183      	cbz	r3, 636 <xQueueGenericSendFromISR+0x82>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1011
						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
     614:	4639      	mov	r1, r7
     616:	4620      	mov	r0, r4
     618:	f7ff fe59 	bl	2ce <prvNotifyQueueSetContainer>
     61c:	b908      	cbnz	r0, 622 <xQueueGenericSendFromISR+0x6e>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1094
			xReturn = pdPASS;
     61e:	2001      	movs	r0, #1
     620:	e005      	b.n	62e <xQueueGenericSendFromISR+0x7a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1016
							if( pxHigherPriorityTaskWoken != NULL )
     622:	f1b8 0f00 	cmp.w	r8, #0
     626:	d0fa      	beq.n	61e <xQueueGenericSendFromISR+0x6a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1018
								*pxHigherPriorityTaskWoken = pdTRUE;
     628:	2001      	movs	r0, #1
     62a:	f8c8 0000 	str.w	r0, [r8]
vPortSetBASEPRI():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:229
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
     62e:	f386 8811 	msr	BASEPRI, r6
xQueueGenericSendFromISR():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1105
}
     632:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1032
						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
     636:	6a63      	ldr	r3, [r4, #36]	; 0x24
     638:	2b00      	cmp	r3, #0
     63a:	d0f0      	beq.n	61e <xQueueGenericSendFromISR+0x6a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1034
							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
     63c:	f104 0024 	add.w	r0, r4, #36	; 0x24
     640:	f000 fb40 	bl	cc4 <xTaskRemoveFromEventList>
     644:	e7ea      	b.n	61c <xQueueGenericSendFromISR+0x68>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1091
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
     646:	3501      	adds	r5, #1
     648:	b26d      	sxtb	r5, r5
     64a:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
     64e:	e7e6      	b.n	61e <xQueueGenericSendFromISR+0x6a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1099
			xReturn = errQUEUE_FULL;
     650:	2000      	movs	r0, #0
     652:	e7ec      	b.n	62e <xQueueGenericSendFromISR+0x7a>

00000654 <xQueueReceiveFromISR>:
xQueueReceiveFromISR():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1782
{
     654:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
     658:	4689      	mov	r9, r1
     65a:	4690      	mov	r8, r2
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1787
	configASSERT( pxQueue );
     65c:	4605      	mov	r5, r0
     65e:	b900      	cbnz	r0, 662 <xQueueReceiveFromISR+0xe>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1787 (discriminator 1)
     660:	e7fe      	b.n	660 <xQueueReceiveFromISR+0xc>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1788
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
     662:	b911      	cbnz	r1, 66a <xQueueReceiveFromISR+0x16>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1788 (discriminator 1)
     664:	6c03      	ldr	r3, [r0, #64]	; 0x40
     666:	b103      	cbz	r3, 66a <xQueueReceiveFromISR+0x16>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1788 (discriminator 2)
     668:	e7fe      	b.n	668 <xQueueReceiveFromISR+0x14>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1804
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
     66a:	f000 fd61 	bl	1130 <vPortValidateInterruptPriority>
ulPortRaiseBASEPRI():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:211
	__asm volatile
     66e:	f3ef 8711 	mrs	r7, BASEPRI
     672:	f04f 03ff 	mov.w	r3, #255	; 0xff
     676:	f383 8811 	msr	BASEPRI, r3
     67a:	f3bf 8f6f 	isb	sy
     67e:	f3bf 8f4f 	dsb	sy
xQueueReceiveFromISR():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1808
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
     682:	6bac      	ldr	r4, [r5, #56]	; 0x38
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1811
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
     684:	b31c      	cbz	r4, 6ce <xQueueReceiveFromISR+0x7a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1813
			const int8_t cRxLock = pxQueue->cRxLock;
     686:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1817
			prvCopyDataFromQueue( pxQueue, pvBuffer );
     68a:	4649      	mov	r1, r9
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1813
			const int8_t cRxLock = pxQueue->cRxLock;
     68c:	b276      	sxtb	r6, r6
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1817
			prvCopyDataFromQueue( pxQueue, pvBuffer );
     68e:	4628      	mov	r0, r5
     690:	f7ff fe48 	bl	324 <prvCopyDataFromQueue>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1818
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
     694:	3c01      	subs	r4, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1824
			if( cRxLock == queueUNLOCKED )
     696:	1c73      	adds	r3, r6, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1818
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
     698:	63ac      	str	r4, [r5, #56]	; 0x38
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1824
			if( cRxLock == queueUNLOCKED )
     69a:	d113      	bne.n	6c4 <xQueueReceiveFromISR+0x70>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1826
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
     69c:	692b      	ldr	r3, [r5, #16]
     69e:	b90b      	cbnz	r3, 6a4 <xQueueReceiveFromISR+0x50>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1858
			xReturn = pdPASS;
     6a0:	2001      	movs	r0, #1
     6a2:	e00b      	b.n	6bc <xQueueReceiveFromISR+0x68>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1828
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
     6a4:	f105 0010 	add.w	r0, r5, #16
     6a8:	f000 fb0c 	bl	cc4 <xTaskRemoveFromEventList>
     6ac:	2800      	cmp	r0, #0
     6ae:	d0f7      	beq.n	6a0 <xQueueReceiveFromISR+0x4c>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1832
						if( pxHigherPriorityTaskWoken != NULL )
     6b0:	f1b8 0f00 	cmp.w	r8, #0
     6b4:	d0f4      	beq.n	6a0 <xQueueReceiveFromISR+0x4c>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1834
							*pxHigherPriorityTaskWoken = pdTRUE;
     6b6:	2001      	movs	r0, #1
     6b8:	f8c8 0000 	str.w	r0, [r8]
vPortSetBASEPRI():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:229
	__asm volatile
     6bc:	f387 8811 	msr	BASEPRI, r7
xQueueReceiveFromISR():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1869
}
     6c0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1855
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
     6c4:	3601      	adds	r6, #1
     6c6:	b276      	sxtb	r6, r6
     6c8:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
     6cc:	e7e8      	b.n	6a0 <xQueueReceiveFromISR+0x4c>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/queue.c:1862
			xReturn = pdFAIL;
     6ce:	4620      	mov	r0, r4
     6d0:	e7f4      	b.n	6bc <xQueueReceiveFromISR+0x68>
     6d2:	Address 0x00000000000006d2 is out of bounds.


000006d4 <prvIdleTask>:
prvIdleTask():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3335
 *
 * void prvIdleTask( void *pvParameters );
 *
 */
static portTASK_FUNCTION( prvIdleTask, pvParameters )
{
     6d4:	b508      	push	{r3, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3374

			A critical region is not required here as we are just reading from
			the list, and an occasional incorrect value will not matter.  If
			the ready list at the idle priority contains more than one task
			then a task other than the idle task is ready to execute. */
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
     6d6:	4c07      	ldr	r4, [pc, #28]	; (6f4 <prvIdleTask+0x20>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3376
			{
				taskYIELD();
     6d8:	4d07      	ldr	r5, [pc, #28]	; (6f8 <prvIdleTask+0x24>)
     6da:	f04f 5680 	mov.w	r6, #268435456	; 0x10000000
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3374
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
     6de:	6823      	ldr	r3, [r4, #0]
     6e0:	2b01      	cmp	r3, #1
     6e2:	d904      	bls.n	6ee <prvIdleTask+0x1a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3376
				taskYIELD();
     6e4:	602e      	str	r6, [r5, #0]
     6e6:	f3bf 8f4f 	dsb	sy
     6ea:	f3bf 8f6f 	isb	sy
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3394
			/* Call the user defined function from within the idle task.  This
			allows the application designer to add background functionality
			without the overhead of a separate task.
			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
			CALL A FUNCTION THAT MIGHT BLOCK. */
			vApplicationIdleHook();
     6ee:	f7ff fd77 	bl	1e0 <vApplicationIdleHook>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3351
		prvCheckTasksWaitingTermination();
     6f2:	e7f4      	b.n	6de <prvIdleTask+0xa>
     6f4:	10000178 	.word	0x10000178
     6f8:	e000ed04 	.word	0xe000ed04

000006fc <prvResetNextTaskUnblockTime>:
prvResetNextTaskUnblockTime():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3884

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
     6fc:	4a06      	ldr	r2, [pc, #24]	; (718 <prvResetNextTaskUnblockTime+0x1c>)
     6fe:	6813      	ldr	r3, [r2, #0]
     700:	6819      	ldr	r1, [r3, #0]
     702:	4b06      	ldr	r3, [pc, #24]	; (71c <prvResetNextTaskUnblockTime+0x20>)
     704:	b919      	cbnz	r1, 70e <prvResetNextTaskUnblockTime+0x12>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3890
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
     706:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3899
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
     70a:	601a      	str	r2, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3901
	}
}
     70c:	4770      	bx	lr
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3898
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
     70e:	6812      	ldr	r2, [r2, #0]
     710:	68d2      	ldr	r2, [r2, #12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3899
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
     712:	68d2      	ldr	r2, [r2, #12]
     714:	6852      	ldr	r2, [r2, #4]
     716:	e7f8      	b.n	70a <prvResetNextTaskUnblockTime+0xe>
     718:	10000170 	.word	0x10000170
     71c:	1000021c 	.word	0x1000021c

00000720 <prvAddCurrentTaskToDelayedList>:
prvAddCurrentTaskToDelayedList():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5082
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
     720:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5084
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
     722:	4b1b      	ldr	r3, [pc, #108]	; (790 <prvAddCurrentTaskToDelayedList+0x70>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5097
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
     724:	4e1b      	ldr	r6, [pc, #108]	; (794 <prvAddCurrentTaskToDelayedList+0x74>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5084
const TickType_t xConstTickCount = xTickCount;
     726:	681c      	ldr	r4, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5082
{
     728:	4605      	mov	r5, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5097
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
     72a:	6830      	ldr	r0, [r6, #0]
     72c:	3004      	adds	r0, #4
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5082
{
     72e:	460f      	mov	r7, r1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5097
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
     730:	f7ff fd88 	bl	244 <uxListRemove>
     734:	4633      	mov	r3, r6
     736:	b940      	cbnz	r0, 74a <prvAddCurrentTaskToDelayedList+0x2a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5101
	{
		/* The current task must be in a ready list, so there is no need to
		check, and the port reset macro can be called directly. */
		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority ); /*lint !e931 pxCurrentTCB cannot change as it is the calling task.  pxCurrentTCB->uxPriority and uxTopReadyPriority cannot change as called with scheduler suspended or in a critical section. */
     738:	6831      	ldr	r1, [r6, #0]
     73a:	4e17      	ldr	r6, [pc, #92]	; (798 <prvAddCurrentTaskToDelayedList+0x78>)
     73c:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
     73e:	6832      	ldr	r2, [r6, #0]
     740:	2001      	movs	r0, #1
     742:	4088      	lsls	r0, r1
     744:	ea22 0200 	bic.w	r2, r2, r0
     748:	6032      	str	r2, [r6, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5110
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
     74a:	1c6a      	adds	r2, r5, #1
     74c:	d107      	bne.n	75e <prvAddCurrentTaskToDelayedList+0x3e>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5110 (discriminator 1)
     74e:	b137      	cbz	r7, 75e <prvAddCurrentTaskToDelayedList+0x3e>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5115
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
     750:	6819      	ldr	r1, [r3, #0]
     752:	4812      	ldr	r0, [pc, #72]	; (79c <prvAddCurrentTaskToDelayedList+0x7c>)
     754:	3104      	adds	r1, #4
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5190

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
     756:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5115
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
     75a:	f7ff bd50 	b.w	1fe <vListInsertEnd>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5125
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
     75e:	681a      	ldr	r2, [r3, #0]
     760:	1964      	adds	r4, r4, r5
     762:	6054      	str	r4, [r2, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5127
			if( xTimeToWake < xConstTickCount )
     764:	d307      	bcc.n	776 <prvAddCurrentTaskToDelayedList+0x56>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5131
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
     766:	4a0e      	ldr	r2, [pc, #56]	; (7a0 <prvAddCurrentTaskToDelayedList+0x80>)
     768:	6810      	ldr	r0, [r2, #0]
     76a:	6819      	ldr	r1, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5190
}
     76c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5131
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
     770:	3104      	adds	r1, #4
     772:	f7ff bd50 	b.w	216 <vListInsert>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5137
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
     776:	4a0b      	ldr	r2, [pc, #44]	; (7a4 <prvAddCurrentTaskToDelayedList+0x84>)
     778:	6810      	ldr	r0, [r2, #0]
     77a:	6819      	ldr	r1, [r3, #0]
     77c:	3104      	adds	r1, #4
     77e:	f7ff fd4a 	bl	216 <vListInsert>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5142
				if( xTimeToWake < xNextTaskUnblockTime )
     782:	4b09      	ldr	r3, [pc, #36]	; (7a8 <prvAddCurrentTaskToDelayedList+0x88>)
     784:	681a      	ldr	r2, [r3, #0]
     786:	42a2      	cmp	r2, r4
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5144
					xNextTaskUnblockTime = xTimeToWake;
     788:	bf88      	it	hi
     78a:	601c      	strhi	r4, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:5190
}
     78c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     78e:	bf00      	nop
     790:	10000250 	.word	0x10000250
     794:	1000016c 	.word	0x1000016c
     798:	100001ec 	.word	0x100001ec
     79c:	1000023c 	.word	0x1000023c
     7a0:	10000174 	.word	0x10000174
     7a4:	10000170 	.word	0x10000170
     7a8:	1000021c 	.word	0x1000021c

000007ac <xTaskCreate>:
xTaskCreate():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:736
	{
     7ac:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:770
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
     7b0:	0096      	lsls	r6, r2, #2
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:736
	{
     7b2:	4681      	mov	r9, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:770
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
     7b4:	4630      	mov	r0, r6
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:736
	{
     7b6:	460d      	mov	r5, r1
     7b8:	469a      	mov	sl, r3
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:770
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
     7ba:	f000 fb4b 	bl	e54 <pvPortMalloc>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:772
			if( pxStack != NULL )
     7be:	4607      	mov	r7, r0
     7c0:	b198      	cbz	r0, 7ea <xTaskCreate+0x3e>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:775
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
     7c2:	2050      	movs	r0, #80	; 0x50
     7c4:	f000 fb46 	bl	e54 <pvPortMalloc>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:777
				if( pxNewTCB != NULL )
     7c8:	4604      	mov	r4, r0
     7ca:	b158      	cbz	r0, 7e4 <xTaskCreate+0x38>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:780
					pxNewTCB->pxStack = pxStack;
     7cc:	6307      	str	r7, [r0, #48]	; 0x30
prvInitialiseNewTask():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:851
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
     7ce:	4632      	mov	r2, r6
     7d0:	21a5      	movs	r1, #165	; 0xa5
     7d2:	4638      	mov	r0, r7
     7d4:	f000 ff58 	bl	1688 <memset>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:861
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
     7d8:	f8d4 b030 	ldr.w	fp, [r4, #48]	; 0x30
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:889
	if( pcName != NULL )
     7dc:	b945      	cbnz	r5, 7f0 <xTaskCreate+0x44>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:916
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
     7de:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
     7e2:	e013      	b.n	80c <xTaskCreate+0x60>
xTaskCreate():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:786
					vPortFree( pxStack );
     7e4:	4638      	mov	r0, r7
     7e6:	f000 fb44 	bl	e72 <vPortFree>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:812
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
     7ea:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
     7ee:	e08c      	b.n	90a <xTaskCreate+0x15e>
     7f0:	1e6b      	subs	r3, r5, #1
     7f2:	f104 0234 	add.w	r2, r4, #52	; 0x34
     7f6:	350b      	adds	r5, #11
prvInitialiseNewTask():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:893
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
     7f8:	f813 1f01 	ldrb.w	r1, [r3, #1]!
     7fc:	f802 1b01 	strb.w	r1, [r2], #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:898
			if( pcName[ x ] == ( char ) 0x00 )
     800:	b109      	cbz	r1, 806 <xTaskCreate+0x5a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:891
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
     802:	429d      	cmp	r5, r3
     804:	d1f8      	bne.n	7f8 <xTaskCreate+0x4c>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:910
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
     806:	2300      	movs	r3, #0
     808:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:921
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
     80c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
     80e:	2d04      	cmp	r5, #4
     810:	bf28      	it	cs
     812:	2504      	movcs	r5, #4
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:934
		pxNewTCB->uxMutexesHeld = 0;
     814:	f04f 0800 	mov.w	r8, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:938
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
     818:	1d27      	adds	r7, r4, #4
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:930
	pxNewTCB->uxPriority = uxPriority;
     81a:	62e5      	str	r5, [r4, #44]	; 0x2c
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:933
		pxNewTCB->uxBasePriority = uxPriority;
     81c:	6425      	str	r5, [r4, #64]	; 0x40
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:938
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
     81e:	4638      	mov	r0, r7
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:934
		pxNewTCB->uxMutexesHeld = 0;
     820:	f8c4 8044 	str.w	r8, [r4, #68]	; 0x44
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:861
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
     824:	3e04      	subs	r6, #4
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:938
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
     826:	f7ff fce7 	bl	1f8 <vListInitialiseItem>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:946
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
     82a:	f1c5 0505 	rsb	r5, r5, #5
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:939
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
     82e:	f104 0018 	add.w	r0, r4, #24
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:861
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
     832:	445e      	add	r6, fp
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:939
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
     834:	f7ff fce0 	bl	1f8 <vListInitialiseItem>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:989
		pxNewTCB->ulNotifiedValue = 0;
     838:	f8c4 8048 	str.w	r8, [r4, #72]	; 0x48
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:943
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
     83c:	6124      	str	r4, [r4, #16]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:946
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
     83e:	61a5      	str	r5, [r4, #24]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:947
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
     840:	6264      	str	r4, [r4, #36]	; 0x24
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:990
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
     842:	f884 804c 	strb.w	r8, [r4, #76]	; 0x4c
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1053
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
     846:	4652      	mov	r2, sl
     848:	4649      	mov	r1, r9
     84a:	f026 0007 	bic.w	r0, r6, #7
     84e:	f000 fb53 	bl	ef8 <pxPortInitialiseStack>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1059
	if( pxCreatedTask != NULL )
     852:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1053
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
     854:	6020      	str	r0, [r4, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1059
	if( pxCreatedTask != NULL )
     856:	b103      	cbz	r3, 85a <xTaskCreate+0xae>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1063
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
     858:	601c      	str	r4, [r3, #0]
prvAddNewTaskToReadyList():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1076
	taskENTER_CRITICAL();
     85a:	f000 fb7b 	bl	f54 <vPortEnterCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1078
		uxCurrentNumberOfTasks++;
     85e:	4b32      	ldr	r3, [pc, #200]	; (928 <xTaskCreate+0x17c>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1079
		if( pxCurrentTCB == NULL )
     860:	4e32      	ldr	r6, [pc, #200]	; (92c <xTaskCreate+0x180>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1078
		uxCurrentNumberOfTasks++;
     862:	681a      	ldr	r2, [r3, #0]
     864:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 964 <xTaskCreate+0x1b8>
     868:	3201      	adds	r2, #1
     86a:	601a      	str	r2, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1079
		if( pxCurrentTCB == NULL )
     86c:	6832      	ldr	r2, [r6, #0]
     86e:	2a00      	cmp	r2, #0
     870:	d14e      	bne.n	910 <xTaskCreate+0x164>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1083
			pxCurrentTCB = pxNewTCB;
     872:	6034      	str	r4, [r6, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1085
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
     874:	681b      	ldr	r3, [r3, #0]
     876:	2b01      	cmp	r3, #1
     878:	d122      	bne.n	8c0 <xTaskCreate+0x114>
prvInitialiseTaskLists():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3552
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
     87a:	482d      	ldr	r0, [pc, #180]	; (930 <xTaskCreate+0x184>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3555
	vListInitialise( &xDelayedTaskList1 );
     87c:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 968 <xTaskCreate+0x1bc>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3556
	vListInitialise( &xDelayedTaskList2 );
     880:	4d2c      	ldr	r5, [pc, #176]	; (934 <xTaskCreate+0x188>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3552
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
     882:	f7ff fcae 	bl	1e2 <vListInitialise>
     886:	482c      	ldr	r0, [pc, #176]	; (938 <xTaskCreate+0x18c>)
     888:	f7ff fcab 	bl	1e2 <vListInitialise>
     88c:	482b      	ldr	r0, [pc, #172]	; (93c <xTaskCreate+0x190>)
     88e:	f7ff fca8 	bl	1e2 <vListInitialise>
     892:	482b      	ldr	r0, [pc, #172]	; (940 <xTaskCreate+0x194>)
     894:	f7ff fca5 	bl	1e2 <vListInitialise>
     898:	482a      	ldr	r0, [pc, #168]	; (944 <xTaskCreate+0x198>)
     89a:	f7ff fca2 	bl	1e2 <vListInitialise>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3555
	vListInitialise( &xDelayedTaskList1 );
     89e:	4648      	mov	r0, r9
     8a0:	f7ff fc9f 	bl	1e2 <vListInitialise>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3556
	vListInitialise( &xDelayedTaskList2 );
     8a4:	4628      	mov	r0, r5
     8a6:	f7ff fc9c 	bl	1e2 <vListInitialise>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3557
	vListInitialise( &xPendingReadyList );
     8aa:	4827      	ldr	r0, [pc, #156]	; (948 <xTaskCreate+0x19c>)
     8ac:	f7ff fc99 	bl	1e2 <vListInitialise>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3567
		vListInitialise( &xSuspendedTaskList );
     8b0:	4826      	ldr	r0, [pc, #152]	; (94c <xTaskCreate+0x1a0>)
     8b2:	f7ff fc96 	bl	1e2 <vListInitialise>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3573
	pxDelayedTaskList = &xDelayedTaskList1;
     8b6:	4b26      	ldr	r3, [pc, #152]	; (950 <xTaskCreate+0x1a4>)
     8b8:	f8c3 9000 	str.w	r9, [r3]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3574
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
     8bc:	4b25      	ldr	r3, [pc, #148]	; (954 <xTaskCreate+0x1a8>)
     8be:	601d      	str	r5, [r3, #0]
prvAddNewTaskToReadyList():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1119
		uxTaskNumber++;
     8c0:	4a25      	ldr	r2, [pc, #148]	; (958 <xTaskCreate+0x1ac>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1129
		prvAddTaskToReadyList( pxNewTCB );
     8c2:	4926      	ldr	r1, [pc, #152]	; (95c <xTaskCreate+0x1b0>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1119
		uxTaskNumber++;
     8c4:	6813      	ldr	r3, [r2, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1129
		prvAddTaskToReadyList( pxNewTCB );
     8c6:	6808      	ldr	r0, [r1, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1119
		uxTaskNumber++;
     8c8:	3301      	adds	r3, #1
     8ca:	6013      	str	r3, [r2, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1129
		prvAddTaskToReadyList( pxNewTCB );
     8cc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
     8ce:	2501      	movs	r5, #1
     8d0:	fa05 f302 	lsl.w	r3, r5, r2
     8d4:	4303      	orrs	r3, r0
     8d6:	600b      	str	r3, [r1, #0]
     8d8:	4b15      	ldr	r3, [pc, #84]	; (930 <xTaskCreate+0x184>)
     8da:	2014      	movs	r0, #20
     8dc:	fb00 3002 	mla	r0, r0, r2, r3
     8e0:	4639      	mov	r1, r7
     8e2:	f7ff fc8c 	bl	1fe <vListInsertEnd>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1133
	taskEXIT_CRITICAL();
     8e6:	f000 fb4f 	bl	f88 <vPortExitCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1135
	if( xSchedulerRunning != pdFALSE )
     8ea:	f8d8 3000 	ldr.w	r3, [r8]
     8ee:	b163      	cbz	r3, 90a <xTaskCreate+0x15e>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1139
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
     8f0:	6833      	ldr	r3, [r6, #0]
     8f2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
     8f4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
     8f6:	429a      	cmp	r2, r3
     8f8:	d207      	bcs.n	90a <xTaskCreate+0x15e>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1141
			taskYIELD_IF_USING_PREEMPTION();
     8fa:	4b19      	ldr	r3, [pc, #100]	; (960 <xTaskCreate+0x1b4>)
     8fc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
     900:	601a      	str	r2, [r3, #0]
     902:	f3bf 8f4f 	dsb	sy
     906:	f3bf 8f6f 	isb	sy
xTaskCreate():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:816
	}
     90a:	4628      	mov	r0, r5
     90c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
prvAddNewTaskToReadyList():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1102
			if( xSchedulerRunning == pdFALSE )
     910:	f8d8 3000 	ldr.w	r3, [r8]
     914:	2b00      	cmp	r3, #0
     916:	d1d3      	bne.n	8c0 <xTaskCreate+0x114>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1104
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
     918:	6833      	ldr	r3, [r6, #0]
     91a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
     91c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
     91e:	429a      	cmp	r2, r3
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1106
					pxCurrentTCB = pxNewTCB;
     920:	bf28      	it	cs
     922:	6034      	strcs	r4, [r6, #0]
     924:	e7cc      	b.n	8c0 <xTaskCreate+0x114>
     926:	bf00      	nop
     928:	100001dc 	.word	0x100001dc
     92c:	1000016c 	.word	0x1000016c
     930:	10000178 	.word	0x10000178
     934:	10000204 	.word	0x10000204
     938:	1000018c 	.word	0x1000018c
     93c:	100001a0 	.word	0x100001a0
     940:	100001b4 	.word	0x100001b4
     944:	100001c8 	.word	0x100001c8
     948:	10000224 	.word	0x10000224
     94c:	1000023c 	.word	0x1000023c
     950:	10000170 	.word	0x10000170
     954:	10000174 	.word	0x10000174
     958:	100001e8 	.word	0x100001e8
     95c:	100001ec 	.word	0x100001ec
     960:	e000ed04 	.word	0xe000ed04
     964:	10000238 	.word	0x10000238
     968:	100001f0 	.word	0x100001f0

0000096c <vTaskStartScheduler>:
vTaskStartScheduler():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1968
{
     96c:	b513      	push	{r0, r1, r4, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2001
		xReturn = xTaskCreate(	prvIdleTask,
     96e:	4b13      	ldr	r3, [pc, #76]	; (9bc <vTaskStartScheduler+0x50>)
     970:	9301      	str	r3, [sp, #4]
     972:	2400      	movs	r4, #0
     974:	9400      	str	r4, [sp, #0]
     976:	4623      	mov	r3, r4
     978:	2280      	movs	r2, #128	; 0x80
     97a:	4911      	ldr	r1, [pc, #68]	; (9c0 <vTaskStartScheduler+0x54>)
     97c:	4811      	ldr	r0, [pc, #68]	; (9c4 <vTaskStartScheduler+0x58>)
     97e:	f7ff ff15 	bl	7ac <xTaskCreate>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2023
	if( xReturn == pdPASS )
     982:	2801      	cmp	r0, #1
     984:	d114      	bne.n	9b0 <vTaskStartScheduler+0x44>
vPortRaiseBASEPRI():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:195
	__asm volatile
     986:	f04f 03ff 	mov.w	r3, #255	; 0xff
     98a:	f383 8811 	msr	BASEPRI, r3
     98e:	f3bf 8f6f 	isb	sy
     992:	f3bf 8f4f 	dsb	sy
vTaskStartScheduler():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2049
		xNextTaskUnblockTime = portMAX_DELAY;
     996:	4b0c      	ldr	r3, [pc, #48]	; (9c8 <vTaskStartScheduler+0x5c>)
     998:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
     99c:	601a      	str	r2, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2050
		xSchedulerRunning = pdTRUE;
     99e:	4b0b      	ldr	r3, [pc, #44]	; (9cc <vTaskStartScheduler+0x60>)
     9a0:	6018      	str	r0, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2051
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
     9a2:	4b0b      	ldr	r3, [pc, #44]	; (9d0 <vTaskStartScheduler+0x64>)
     9a4:	601c      	str	r4, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2086
}
     9a6:	b002      	add	sp, #8
     9a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2065
		if( xPortStartScheduler() != pdFALSE )
     9ac:	f000 bb58 	b.w	1060 <xPortStartScheduler>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2080
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
     9b0:	3001      	adds	r0, #1
     9b2:	d100      	bne.n	9b6 <vTaskStartScheduler+0x4a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2080 (discriminator 2)
     9b4:	e7fe      	b.n	9b4 <vTaskStartScheduler+0x48>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2086
}
     9b6:	b002      	add	sp, #8
     9b8:	bd10      	pop	{r4, pc}
     9ba:	bf00      	nop
     9bc:	10000218 	.word	0x10000218
     9c0:	0000186e 	.word	0x0000186e
     9c4:	000006d5 	.word	0x000006d5
     9c8:	1000021c 	.word	0x1000021c
     9cc:	10000238 	.word	0x10000238
     9d0:	10000250 	.word	0x10000250

000009d4 <vTaskSuspendAll>:
vTaskSuspendAll():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2106
	++uxSchedulerSuspended;
     9d4:	4a02      	ldr	r2, [pc, #8]	; (9e0 <vTaskSuspendAll+0xc>)
     9d6:	6813      	ldr	r3, [r2, #0]
     9d8:	3301      	adds	r3, #1
     9da:	6013      	str	r3, [r2, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2108
}
     9dc:	4770      	bx	lr
     9de:	bf00      	nop
     9e0:	100001e4 	.word	0x100001e4

000009e4 <xTaskIncrementTick>:
xTaskIncrementTick():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2666
{
     9e4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2675
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
     9e8:	4b38      	ldr	r3, [pc, #224]	; (acc <xTaskIncrementTick+0xe8>)
     9ea:	681b      	ldr	r3, [r3, #0]
     9ec:	2b00      	cmp	r3, #0
     9ee:	d166      	bne.n	abe <xTaskIncrementTick+0xda>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2679
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
     9f0:	4b37      	ldr	r3, [pc, #220]	; (ad0 <xTaskIncrementTick+0xec>)
     9f2:	681c      	ldr	r4, [r3, #0]
     9f4:	3401      	adds	r4, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2683
		xTickCount = xConstTickCount;
     9f6:	601c      	str	r4, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2685
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
     9f8:	b97c      	cbnz	r4, a1a <xTaskIncrementTick+0x36>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2687
			taskSWITCH_DELAYED_LISTS();
     9fa:	4b36      	ldr	r3, [pc, #216]	; (ad4 <xTaskIncrementTick+0xf0>)
     9fc:	681a      	ldr	r2, [r3, #0]
     9fe:	6812      	ldr	r2, [r2, #0]
     a00:	b102      	cbz	r2, a04 <xTaskIncrementTick+0x20>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2687 (discriminator 1)
     a02:	e7fe      	b.n	a02 <xTaskIncrementTick+0x1e>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2687 (discriminator 2)
     a04:	4a34      	ldr	r2, [pc, #208]	; (ad8 <xTaskIncrementTick+0xf4>)
     a06:	6819      	ldr	r1, [r3, #0]
     a08:	6810      	ldr	r0, [r2, #0]
     a0a:	6018      	str	r0, [r3, #0]
     a0c:	6011      	str	r1, [r2, #0]
     a0e:	4a33      	ldr	r2, [pc, #204]	; (adc <xTaskIncrementTick+0xf8>)
     a10:	6813      	ldr	r3, [r2, #0]
     a12:	3301      	adds	r3, #1
     a14:	6013      	str	r3, [r2, #0]
     a16:	f7ff fe71 	bl	6fc <prvResetNextTaskUnblockTime>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2698
		if( xConstTickCount >= xNextTaskUnblockTime )
     a1a:	4d31      	ldr	r5, [pc, #196]	; (ae0 <xTaskIncrementTick+0xfc>)
     a1c:	4f31      	ldr	r7, [pc, #196]	; (ae4 <xTaskIncrementTick+0x100>)
     a1e:	682b      	ldr	r3, [r5, #0]
     a20:	42a3      	cmp	r3, r4
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2669
BaseType_t xSwitchRequired = pdFALSE;
     a22:	f04f 0b00 	mov.w	fp, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2698
		if( xConstTickCount >= xNextTaskUnblockTime )
     a26:	d911      	bls.n	a4c <xTaskIncrementTick+0x68>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2781
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
     a28:	683a      	ldr	r2, [r7, #0]
     a2a:	4b2f      	ldr	r3, [pc, #188]	; (ae8 <xTaskIncrementTick+0x104>)
     a2c:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
     a2e:	2214      	movs	r2, #20
     a30:	434a      	muls	r2, r1
     a32:	589a      	ldr	r2, [r3, r2]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2783
				xSwitchRequired = pdTRUE;
     a34:	2a02      	cmp	r2, #2
     a36:	bf28      	it	cs
     a38:	f04f 0b01 	movcs.w	fp, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2822
		if( xYieldPending != pdFALSE )
     a3c:	4a2b      	ldr	r2, [pc, #172]	; (aec <xTaskIncrementTick+0x108>)
     a3e:	6812      	ldr	r2, [r2, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2824
			xSwitchRequired = pdTRUE;
     a40:	2a00      	cmp	r2, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2834
}
     a42:	bf0c      	ite	eq
     a44:	4658      	moveq	r0, fp
     a46:	2001      	movne	r0, #1
     a48:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2702
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
     a4c:	f8df a084 	ldr.w	sl, [pc, #132]	; ad4 <xTaskIncrementTick+0xf0>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2752
					prvAddTaskToReadyList( pxTCB );
     a50:	f8df 90a0 	ldr.w	r9, [pc, #160]	; af4 <xTaskIncrementTick+0x110>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2702
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
     a54:	f8da 2000 	ldr.w	r2, [sl]
     a58:	6812      	ldr	r2, [r2, #0]
     a5a:	b91a      	cbnz	r2, a64 <xTaskIncrementTick+0x80>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2709
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
     a5c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
     a60:	602a      	str	r2, [r5, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2710
					break;
     a62:	e7e1      	b.n	a28 <xTaskIncrementTick+0x44>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2718
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
     a64:	f8da 2000 	ldr.w	r2, [sl]
     a68:	68d2      	ldr	r2, [r2, #12]
     a6a:	68d6      	ldr	r6, [r2, #12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2719
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
     a6c:	6871      	ldr	r1, [r6, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2721
					if( xConstTickCount < xItemValue )
     a6e:	428c      	cmp	r4, r1
     a70:	d201      	bcs.n	a76 <xTaskIncrementTick+0x92>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2728
						xNextTaskUnblockTime = xItemValue;
     a72:	6029      	str	r1, [r5, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2729
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
     a74:	e7d8      	b.n	a28 <xTaskIncrementTick+0x44>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2737
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
     a76:	f106 0804 	add.w	r8, r6, #4
     a7a:	4640      	mov	r0, r8
     a7c:	f7ff fbe2 	bl	244 <uxListRemove>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2741
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
     a80:	6ab1      	ldr	r1, [r6, #40]	; 0x28
     a82:	b119      	cbz	r1, a8c <xTaskIncrementTick+0xa8>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2743
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
     a84:	f106 0018 	add.w	r0, r6, #24
     a88:	f7ff fbdc 	bl	244 <uxListRemove>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2752
					prvAddTaskToReadyList( pxTCB );
     a8c:	6af0      	ldr	r0, [r6, #44]	; 0x2c
     a8e:	f8d9 3000 	ldr.w	r3, [r9]
     a92:	2201      	movs	r2, #1
     a94:	fa02 f100 	lsl.w	r1, r2, r0
     a98:	4319      	orrs	r1, r3
     a9a:	4b13      	ldr	r3, [pc, #76]	; (ae8 <xTaskIncrementTick+0x104>)
     a9c:	f8c9 1000 	str.w	r1, [r9]
     aa0:	f04f 0c14 	mov.w	ip, #20
     aa4:	4641      	mov	r1, r8
     aa6:	fb0c 3000 	mla	r0, ip, r0, r3
     aaa:	f7ff fba8 	bl	1fe <vListInsertEnd>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2762
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
     aae:	6838      	ldr	r0, [r7, #0]
     ab0:	6af1      	ldr	r1, [r6, #44]	; 0x2c
     ab2:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2764
							xSwitchRequired = pdTRUE;
     ab4:	4291      	cmp	r1, r2
     ab6:	bf28      	it	cs
     ab8:	f04f 0b01 	movcs.w	fp, #1
     abc:	e7ca      	b.n	a54 <xTaskIncrementTick+0x70>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2809
		++uxPendedTicks;
     abe:	4a0c      	ldr	r2, [pc, #48]	; (af0 <xTaskIncrementTick+0x10c>)
     ac0:	6813      	ldr	r3, [r2, #0]
     ac2:	3301      	adds	r3, #1
     ac4:	6013      	str	r3, [r2, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2669
BaseType_t xSwitchRequired = pdFALSE;
     ac6:	f04f 0b00 	mov.w	fp, #0
     aca:	e7b7      	b.n	a3c <xTaskIncrementTick+0x58>
     acc:	100001e4 	.word	0x100001e4
     ad0:	10000250 	.word	0x10000250
     ad4:	10000170 	.word	0x10000170
     ad8:	10000174 	.word	0x10000174
     adc:	10000220 	.word	0x10000220
     ae0:	1000021c 	.word	0x1000021c
     ae4:	1000016c 	.word	0x1000016c
     ae8:	10000178 	.word	0x10000178
     aec:	10000254 	.word	0x10000254
     af0:	100001e0 	.word	0x100001e0
     af4:	100001ec 	.word	0x100001ec

00000af8 <xTaskResumeAll>:
xTaskResumeAll():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2175
{
     af8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2181
	configASSERT( uxSchedulerSuspended );
     afc:	4c2c      	ldr	r4, [pc, #176]	; (bb0 <xTaskResumeAll+0xb8>)
     afe:	6823      	ldr	r3, [r4, #0]
     b00:	b903      	cbnz	r3, b04 <xTaskResumeAll+0xc>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2181 (discriminator 1)
     b02:	e7fe      	b.n	b02 <xTaskResumeAll+0xa>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2188
	taskENTER_CRITICAL();
     b04:	f000 fa26 	bl	f54 <vPortEnterCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2190
		--uxSchedulerSuspended;
     b08:	6823      	ldr	r3, [r4, #0]
     b0a:	3b01      	subs	r3, #1
     b0c:	6023      	str	r3, [r4, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2192
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
     b0e:	6824      	ldr	r4, [r4, #0]
     b10:	b12c      	cbz	r4, b1e <xTaskResumeAll+0x26>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2177
BaseType_t xAlreadyYielded = pdFALSE;
     b12:	2400      	movs	r4, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2278
	taskEXIT_CRITICAL();
     b14:	f000 fa38 	bl	f88 <vPortExitCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2281
}
     b18:	4620      	mov	r0, r4
     b1a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2194
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
     b1e:	4b25      	ldr	r3, [pc, #148]	; (bb4 <xTaskResumeAll+0xbc>)
     b20:	681b      	ldr	r3, [r3, #0]
     b22:	2b00      	cmp	r3, #0
     b24:	d0f5      	beq.n	b12 <xTaskResumeAll+0x1a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2198
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
     b26:	4d24      	ldr	r5, [pc, #144]	; (bb8 <xTaskResumeAll+0xc0>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2203
					prvAddTaskToReadyList( pxTCB );
     b28:	4e24      	ldr	r6, [pc, #144]	; (bbc <xTaskResumeAll+0xc4>)
     b2a:	f8df 80a4 	ldr.w	r8, [pc, #164]	; bd0 <xTaskResumeAll+0xd8>
     b2e:	e01f      	b.n	b70 <xTaskResumeAll+0x78>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2200
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
     b30:	68eb      	ldr	r3, [r5, #12]
     b32:	68dc      	ldr	r4, [r3, #12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2202
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
     b34:	f104 0904 	add.w	r9, r4, #4
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2201
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
     b38:	f104 0018 	add.w	r0, r4, #24
     b3c:	f7ff fb82 	bl	244 <uxListRemove>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2202
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
     b40:	4648      	mov	r0, r9
     b42:	f7ff fb7f 	bl	244 <uxListRemove>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2203
					prvAddTaskToReadyList( pxTCB );
     b46:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
     b48:	6831      	ldr	r1, [r6, #0]
     b4a:	2701      	movs	r7, #1
     b4c:	fa07 f302 	lsl.w	r3, r7, r2
     b50:	2014      	movs	r0, #20
     b52:	430b      	orrs	r3, r1
     b54:	fb00 8002 	mla	r0, r0, r2, r8
     b58:	4649      	mov	r1, r9
     b5a:	6033      	str	r3, [r6, #0]
     b5c:	f7ff fb4f 	bl	1fe <vListInsertEnd>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2207
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
     b60:	4b17      	ldr	r3, [pc, #92]	; (bc0 <xTaskResumeAll+0xc8>)
     b62:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
     b64:	681b      	ldr	r3, [r3, #0]
     b66:	6adb      	ldr	r3, [r3, #44]	; 0x2c
     b68:	429a      	cmp	r2, r3
     b6a:	d301      	bcc.n	b70 <xTaskResumeAll+0x78>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2209
						xYieldPending = pdTRUE;
     b6c:	4b15      	ldr	r3, [pc, #84]	; (bc4 <xTaskResumeAll+0xcc>)
     b6e:	601f      	str	r7, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2198
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
     b70:	682b      	ldr	r3, [r5, #0]
     b72:	2b00      	cmp	r3, #0
     b74:	d1dc      	bne.n	b30 <xTaskResumeAll+0x38>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2217
				if( pxTCB != NULL )
     b76:	b10c      	cbz	r4, b7c <xTaskResumeAll+0x84>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2225
					prvResetNextTaskUnblockTime();
     b78:	f7ff fdc0 	bl	6fc <prvResetNextTaskUnblockTime>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2233
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
     b7c:	4d12      	ldr	r5, [pc, #72]	; (bc8 <xTaskResumeAll+0xd0>)
     b7e:	682c      	ldr	r4, [r5, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2235
					if( uxPendedCounts > ( UBaseType_t ) 0U )
     b80:	b144      	cbz	r4, b94 <xTaskResumeAll+0x9c>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2241
								xYieldPending = pdTRUE;
     b82:	4e10      	ldr	r6, [pc, #64]	; (bc4 <xTaskResumeAll+0xcc>)
     b84:	2701      	movs	r7, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2239
							if( xTaskIncrementTick() != pdFALSE )
     b86:	f7ff ff2d 	bl	9e4 <xTaskIncrementTick>
     b8a:	b100      	cbz	r0, b8e <xTaskResumeAll+0x96>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2241
								xYieldPending = pdTRUE;
     b8c:	6037      	str	r7, [r6, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2248
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
     b8e:	3c01      	subs	r4, #1
     b90:	d1f9      	bne.n	b86 <xTaskResumeAll+0x8e>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2250
						uxPendedTicks = 0;
     b92:	602c      	str	r4, [r5, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2258
				if( xYieldPending != pdFALSE )
     b94:	4b0b      	ldr	r3, [pc, #44]	; (bc4 <xTaskResumeAll+0xcc>)
     b96:	681b      	ldr	r3, [r3, #0]
     b98:	2b00      	cmp	r3, #0
     b9a:	d0ba      	beq.n	b12 <xTaskResumeAll+0x1a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2265
					taskYIELD_IF_USING_PREEMPTION();
     b9c:	4b0b      	ldr	r3, [pc, #44]	; (bcc <xTaskResumeAll+0xd4>)
     b9e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
     ba2:	601a      	str	r2, [r3, #0]
     ba4:	f3bf 8f4f 	dsb	sy
     ba8:	f3bf 8f6f 	isb	sy
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2262
						xAlreadyYielded = pdTRUE;
     bac:	2401      	movs	r4, #1
     bae:	e7b1      	b.n	b14 <xTaskResumeAll+0x1c>
     bb0:	100001e4 	.word	0x100001e4
     bb4:	100001dc 	.word	0x100001dc
     bb8:	10000224 	.word	0x10000224
     bbc:	100001ec 	.word	0x100001ec
     bc0:	1000016c 	.word	0x1000016c
     bc4:	10000254 	.word	0x10000254
     bc8:	100001e0 	.word	0x100001e0
     bcc:	e000ed04 	.word	0xe000ed04
     bd0:	10000178 	.word	0x10000178

00000bd4 <vTaskDelay>:
vTaskDelay():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1334
	{
     bd4:	b508      	push	{r3, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1338
		if( xTicksToDelay > ( TickType_t ) 0U )
     bd6:	b940      	cbnz	r0, bea <vTaskDelay+0x16>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1365
			portYIELD_WITHIN_API();
     bd8:	4b0a      	ldr	r3, [pc, #40]	; (c04 <vTaskDelay+0x30>)
     bda:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
     bde:	601a      	str	r2, [r3, #0]
     be0:	f3bf 8f4f 	dsb	sy
     be4:	f3bf 8f6f 	isb	sy
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1371
	}
     be8:	bd08      	pop	{r3, pc}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1340
			configASSERT( uxSchedulerSuspended == 0 );
     bea:	4b07      	ldr	r3, [pc, #28]	; (c08 <vTaskDelay+0x34>)
     bec:	6819      	ldr	r1, [r3, #0]
     bee:	b101      	cbz	r1, bf2 <vTaskDelay+0x1e>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1340 (discriminator 1)
     bf0:	e7fe      	b.n	bf0 <vTaskDelay+0x1c>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1341
			vTaskSuspendAll();
     bf2:	f7ff feef 	bl	9d4 <vTaskSuspendAll>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1352
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
     bf6:	f7ff fd93 	bl	720 <prvAddCurrentTaskToDelayedList>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1354
			xAlreadyYielded = xTaskResumeAll();
     bfa:	f7ff ff7d 	bl	af8 <xTaskResumeAll>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:1363
		if( xAlreadyYielded == pdFALSE )
     bfe:	2800      	cmp	r0, #0
     c00:	d0ea      	beq.n	bd8 <vTaskDelay+0x4>
     c02:	e7f1      	b.n	be8 <vTaskDelay+0x14>
     c04:	e000ed04 	.word	0xe000ed04
     c08:	100001e4 	.word	0x100001e4

00000c0c <vTaskSwitchContext>:
vTaskSwitchContext():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2948
{
     c0c:	b538      	push	{r3, r4, r5, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2949
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
     c0e:	4b1f      	ldr	r3, [pc, #124]	; (c8c <vTaskSwitchContext+0x80>)
     c10:	681a      	ldr	r2, [r3, #0]
     c12:	4b1f      	ldr	r3, [pc, #124]	; (c90 <vTaskSwitchContext+0x84>)
     c14:	b112      	cbz	r2, c1c <vTaskSwitchContext+0x10>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2953
		xYieldPending = pdTRUE;
     c16:	2201      	movs	r2, #1
     c18:	601a      	str	r2, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3017
}
     c1a:	bd38      	pop	{r3, r4, r5, pc}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2988
		taskCHECK_FOR_STACK_OVERFLOW();
     c1c:	4c1d      	ldr	r4, [pc, #116]	; (c94 <vTaskSwitchContext+0x88>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2957
		xYieldPending = pdFALSE;
     c1e:	601a      	str	r2, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2988
		taskCHECK_FOR_STACK_OVERFLOW();
     c20:	6823      	ldr	r3, [r4, #0]
     c22:	6b1b      	ldr	r3, [r3, #48]	; 0x30
     c24:	681a      	ldr	r2, [r3, #0]
     c26:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
     c2a:	d10b      	bne.n	c44 <vTaskSwitchContext+0x38>
     c2c:	685a      	ldr	r2, [r3, #4]
     c2e:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
     c32:	d107      	bne.n	c44 <vTaskSwitchContext+0x38>
     c34:	689a      	ldr	r2, [r3, #8]
     c36:	f1b2 3fa5 	cmp.w	r2, #2779096485	; 0xa5a5a5a5
     c3a:	d103      	bne.n	c44 <vTaskSwitchContext+0x38>
     c3c:	68db      	ldr	r3, [r3, #12]
     c3e:	f1b3 3fa5 	cmp.w	r3, #2779096485	; 0xa5a5a5a5
     c42:	d004      	beq.n	c4e <vTaskSwitchContext+0x42>
     c44:	6820      	ldr	r0, [r4, #0]
     c46:	6821      	ldr	r1, [r4, #0]
     c48:	3134      	adds	r1, #52	; 0x34
     c4a:	f7ff fabb 	bl	1c4 <vApplicationStackOverflowHook>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2999
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
     c4e:	4b12      	ldr	r3, [pc, #72]	; (c98 <vTaskSwitchContext+0x8c>)
     c50:	681b      	ldr	r3, [r3, #0]
ucPortCountLeadingZeros():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:134
		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
     c52:	fab3 f383 	clz	r3, r3
     c56:	b2db      	uxtb	r3, r3
vTaskSwitchContext():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:2999
     c58:	f1c3 031f 	rsb	r3, r3, #31
     c5c:	2214      	movs	r2, #20
     c5e:	490f      	ldr	r1, [pc, #60]	; (c9c <vTaskSwitchContext+0x90>)
     c60:	435a      	muls	r2, r3
     c62:	1888      	adds	r0, r1, r2
     c64:	588d      	ldr	r5, [r1, r2]
     c66:	b905      	cbnz	r5, c6a <vTaskSwitchContext+0x5e>
     c68:	e7fe      	b.n	c68 <vTaskSwitchContext+0x5c>
     c6a:	6845      	ldr	r5, [r0, #4]
     c6c:	3208      	adds	r2, #8
     c6e:	686d      	ldr	r5, [r5, #4]
     c70:	6045      	str	r5, [r0, #4]
     c72:	440a      	add	r2, r1
     c74:	4295      	cmp	r5, r2
     c76:	bf04      	itt	eq
     c78:	686a      	ldreq	r2, [r5, #4]
     c7a:	6042      	streq	r2, [r0, #4]
     c7c:	2214      	movs	r2, #20
     c7e:	fb02 1303 	mla	r3, r2, r3, r1
     c82:	685b      	ldr	r3, [r3, #4]
     c84:	68db      	ldr	r3, [r3, #12]
     c86:	6023      	str	r3, [r4, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3017
}
     c88:	e7c7      	b.n	c1a <vTaskSwitchContext+0xe>
     c8a:	bf00      	nop
     c8c:	100001e4 	.word	0x100001e4
     c90:	10000254 	.word	0x10000254
     c94:	1000016c 	.word	0x1000016c
     c98:	100001ec 	.word	0x100001ec
     c9c:	10000178 	.word	0x10000178

00000ca0 <vTaskPlaceOnEventList>:
vTaskPlaceOnEventList():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3021
{
     ca0:	b510      	push	{r4, lr}
     ca2:	460c      	mov	r4, r1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3022
	configASSERT( pxEventList );
     ca4:	b900      	cbnz	r0, ca8 <vTaskPlaceOnEventList+0x8>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3022 (discriminator 1)
     ca6:	e7fe      	b.n	ca6 <vTaskPlaceOnEventList+0x6>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3031
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
     ca8:	4b05      	ldr	r3, [pc, #20]	; (cc0 <vTaskPlaceOnEventList+0x20>)
     caa:	6819      	ldr	r1, [r3, #0]
     cac:	3118      	adds	r1, #24
     cae:	f7ff fab2 	bl	216 <vListInsert>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3033
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
     cb2:	4620      	mov	r0, r4
     cb4:	2101      	movs	r1, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3034
}
     cb6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3033
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
     cba:	f7ff bd31 	b.w	720 <prvAddCurrentTaskToDelayedList>
     cbe:	bf00      	nop
     cc0:	1000016c 	.word	0x1000016c

00000cc4 <xTaskRemoveFromEventList>:
xTaskRemoveFromEventList():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3095
{
     cc4:	b538      	push	{r3, r4, r5, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3112
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
     cc6:	68c3      	ldr	r3, [r0, #12]
     cc8:	68dc      	ldr	r4, [r3, #12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3113
	configASSERT( pxUnblockedTCB );
     cca:	b904      	cbnz	r4, cce <xTaskRemoveFromEventList+0xa>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3113 (discriminator 1)
     ccc:	e7fe      	b.n	ccc <xTaskRemoveFromEventList+0x8>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3114
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
     cce:	f104 0518 	add.w	r5, r4, #24
     cd2:	4628      	mov	r0, r5
     cd4:	f7ff fab6 	bl	244 <uxListRemove>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3116
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
     cd8:	4b11      	ldr	r3, [pc, #68]	; (d20 <xTaskRemoveFromEventList+0x5c>)
     cda:	681b      	ldr	r3, [r3, #0]
     cdc:	b9e3      	cbnz	r3, d18 <xTaskRemoveFromEventList+0x54>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3118
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
     cde:	1d25      	adds	r5, r4, #4
     ce0:	4628      	mov	r0, r5
     ce2:	f7ff faaf 	bl	244 <uxListRemove>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3119
		prvAddTaskToReadyList( pxUnblockedTCB );
     ce6:	490f      	ldr	r1, [pc, #60]	; (d24 <xTaskRemoveFromEventList+0x60>)
     ce8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
     cea:	6808      	ldr	r0, [r1, #0]
     cec:	2301      	movs	r3, #1
     cee:	4093      	lsls	r3, r2
     cf0:	4303      	orrs	r3, r0
     cf2:	600b      	str	r3, [r1, #0]
     cf4:	4b0c      	ldr	r3, [pc, #48]	; (d28 <xTaskRemoveFromEventList+0x64>)
     cf6:	2014      	movs	r0, #20
     cf8:	4629      	mov	r1, r5
     cfa:	fb00 3002 	mla	r0, r0, r2, r3
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3139
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
     cfe:	f7ff fa7e 	bl	1fe <vListInsertEnd>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3142
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
     d02:	4b0a      	ldr	r3, [pc, #40]	; (d2c <xTaskRemoveFromEventList+0x68>)
     d04:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
     d06:	681b      	ldr	r3, [r3, #0]
     d08:	6adb      	ldr	r3, [r3, #44]	; 0x2c
     d0a:	429a      	cmp	r2, r3
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3151
		xYieldPending = pdTRUE;
     d0c:	bf83      	ittte	hi
     d0e:	4b08      	ldrhi	r3, [pc, #32]	; (d30 <xTaskRemoveFromEventList+0x6c>)
     d10:	2001      	movhi	r0, #1
     d12:	6018      	strhi	r0, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3155
		xReturn = pdFALSE;
     d14:	2000      	movls	r0, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3159
}
     d16:	bd38      	pop	{r3, r4, r5, pc}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3139
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
     d18:	4629      	mov	r1, r5
     d1a:	4806      	ldr	r0, [pc, #24]	; (d34 <xTaskRemoveFromEventList+0x70>)
     d1c:	e7ef      	b.n	cfe <xTaskRemoveFromEventList+0x3a>
     d1e:	bf00      	nop
     d20:	100001e4 	.word	0x100001e4
     d24:	100001ec 	.word	0x100001ec
     d28:	10000178 	.word	0x10000178
     d2c:	1000016c 	.word	0x1000016c
     d30:	10000254 	.word	0x10000254
     d34:	10000224 	.word	0x10000224

00000d38 <vTaskInternalSetTimeOutState>:
vTaskInternalSetTimeOutState():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3211
	pxTimeOut->xOverflowCount = xNumOfOverflows;
     d38:	4b03      	ldr	r3, [pc, #12]	; (d48 <vTaskInternalSetTimeOutState+0x10>)
     d3a:	681b      	ldr	r3, [r3, #0]
     d3c:	6003      	str	r3, [r0, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3212
	pxTimeOut->xTimeOnEntering = xTickCount;
     d3e:	4b03      	ldr	r3, [pc, #12]	; (d4c <vTaskInternalSetTimeOutState+0x14>)
     d40:	681b      	ldr	r3, [r3, #0]
     d42:	6043      	str	r3, [r0, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3213
}
     d44:	4770      	bx	lr
     d46:	bf00      	nop
     d48:	10000220 	.word	0x10000220
     d4c:	10000250 	.word	0x10000250

00000d50 <xTaskCheckForTimeOut>:
xTaskCheckForTimeOut():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3217
{
     d50:	b570      	push	{r4, r5, r6, lr}
     d52:	460c      	mov	r4, r1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3220
	configASSERT( pxTimeOut );
     d54:	4605      	mov	r5, r0
     d56:	b900      	cbnz	r0, d5a <xTaskCheckForTimeOut+0xa>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3220 (discriminator 1)
     d58:	e7fe      	b.n	d58 <xTaskCheckForTimeOut+0x8>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3221
	configASSERT( pxTicksToWait );
     d5a:	b901      	cbnz	r1, d5e <xTaskCheckForTimeOut+0xe>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3221 (discriminator 2)
     d5c:	e7fe      	b.n	d5c <xTaskCheckForTimeOut+0xc>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3223
	taskENTER_CRITICAL();
     d5e:	f000 f8f9 	bl	f54 <vPortEnterCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3226
		const TickType_t xConstTickCount = xTickCount;
     d62:	4b0f      	ldr	r3, [pc, #60]	; (da0 <xTaskCheckForTimeOut+0x50>)
     d64:	6819      	ldr	r1, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3241
			if( *pxTicksToWait == portMAX_DELAY )
     d66:	6823      	ldr	r3, [r4, #0]
     d68:	1c5a      	adds	r2, r3, #1
     d6a:	d010      	beq.n	d8e <xTaskCheckForTimeOut+0x3e>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3251
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
     d6c:	480d      	ldr	r0, [pc, #52]	; (da4 <xTaskCheckForTimeOut+0x54>)
     d6e:	682e      	ldr	r6, [r5, #0]
     d70:	6800      	ldr	r0, [r0, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3227
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
     d72:	686a      	ldr	r2, [r5, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3251
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
     d74:	4286      	cmp	r6, r0
     d76:	d001      	beq.n	d7c <xTaskCheckForTimeOut+0x2c>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3251 (discriminator 1)
     d78:	428a      	cmp	r2, r1
     d7a:	d90f      	bls.n	d9c <xTaskCheckForTimeOut+0x4c>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3227
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
     d7c:	1a88      	subs	r0, r1, r2
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3260
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
     d7e:	4283      	cmp	r3, r0
     d80:	d90a      	bls.n	d98 <xTaskCheckForTimeOut+0x48>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3263
			*pxTicksToWait -= xElapsedTime;
     d82:	1a5b      	subs	r3, r3, r1
     d84:	4413      	add	r3, r2
     d86:	6023      	str	r3, [r4, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3264
			vTaskInternalSetTimeOutState( pxTimeOut );
     d88:	4628      	mov	r0, r5
     d8a:	f7ff ffd5 	bl	d38 <vTaskInternalSetTimeOutState>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3246
				xReturn = pdFALSE;
     d8e:	2400      	movs	r4, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3273
	taskEXIT_CRITICAL();
     d90:	f000 f8fa 	bl	f88 <vPortExitCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3276
}
     d94:	4620      	mov	r0, r4
     d96:	bd70      	pop	{r4, r5, r6, pc}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3269
			*pxTicksToWait = 0;
     d98:	2300      	movs	r3, #0
     d9a:	6023      	str	r3, [r4, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3258
			xReturn = pdTRUE;
     d9c:	2401      	movs	r4, #1
     d9e:	e7f7      	b.n	d90 <xTaskCheckForTimeOut+0x40>
     da0:	10000250 	.word	0x10000250
     da4:	10000220 	.word	0x10000220

00000da8 <vTaskMissedYield>:
vTaskMissedYield():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3281
	xYieldPending = pdTRUE;
     da8:	4b01      	ldr	r3, [pc, #4]	; (db0 <vTaskMissedYield+0x8>)
     daa:	2201      	movs	r2, #1
     dac:	601a      	str	r2, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3282
}
     dae:	4770      	bx	lr
     db0:	10000254 	.word	0x10000254

00000db4 <xTaskGetSchedulerState>:
xTaskGetSchedulerState():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3927
		if( xSchedulerRunning == pdFALSE )
     db4:	4b05      	ldr	r3, [pc, #20]	; (dcc <xTaskGetSchedulerState+0x18>)
     db6:	681b      	ldr	r3, [r3, #0]
     db8:	b133      	cbz	r3, dc8 <xTaskGetSchedulerState+0x14>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3933
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
     dba:	4b05      	ldr	r3, [pc, #20]	; (dd0 <xTaskGetSchedulerState+0x1c>)
     dbc:	681b      	ldr	r3, [r3, #0]
     dbe:	2b00      	cmp	r3, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3939
				xReturn = taskSCHEDULER_SUSPENDED;
     dc0:	bf0c      	ite	eq
     dc2:	2002      	moveq	r0, #2
     dc4:	2000      	movne	r0, #0
     dc6:	4770      	bx	lr
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3929
			xReturn = taskSCHEDULER_NOT_STARTED;
     dc8:	2001      	movs	r0, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:3944
	}
     dca:	4770      	bx	lr
     dcc:	10000238 	.word	0x10000238
     dd0:	100001e4 	.word	0x100001e4

00000dd4 <xTaskPriorityDisinherit>:
xTaskPriorityDisinherit():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4039
	{
     dd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4043
		if( pxMutexHolder != NULL )
     dd6:	4604      	mov	r4, r0
     dd8:	b908      	cbnz	r0, dde <xTaskPriorityDisinherit+0xa>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4041
	BaseType_t xReturn = pdFALSE;
     dda:	2000      	movs	r0, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4111
	}
     ddc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4049
			configASSERT( pxTCB == pxCurrentTCB );
     dde:	4b1a      	ldr	r3, [pc, #104]	; (e48 <xTaskPriorityDisinherit+0x74>)
     de0:	681b      	ldr	r3, [r3, #0]
     de2:	4283      	cmp	r3, r0
     de4:	d000      	beq.n	de8 <xTaskPriorityDisinherit+0x14>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4049 (discriminator 1)
     de6:	e7fe      	b.n	de6 <xTaskPriorityDisinherit+0x12>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4050
			configASSERT( pxTCB->uxMutexesHeld );
     de8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
     dea:	b903      	cbnz	r3, dee <xTaskPriorityDisinherit+0x1a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4050 (discriminator 2)
     dec:	e7fe      	b.n	dec <xTaskPriorityDisinherit+0x18>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4055
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
     dee:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
     df0:	6c02      	ldr	r2, [r0, #64]	; 0x40
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4051
			( pxTCB->uxMutexesHeld )--;
     df2:	3b01      	subs	r3, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4055
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
     df4:	4291      	cmp	r1, r2
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4051
			( pxTCB->uxMutexesHeld )--;
     df6:	6443      	str	r3, [r0, #68]	; 0x44
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4055
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
     df8:	d0ef      	beq.n	dda <xTaskPriorityDisinherit+0x6>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4058
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
     dfa:	2b00      	cmp	r3, #0
     dfc:	d1ed      	bne.n	dda <xTaskPriorityDisinherit+0x6>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4065
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
     dfe:	1d05      	adds	r5, r0, #4
     e00:	4628      	mov	r0, r5
     e02:	f7ff fa1f 	bl	244 <uxListRemove>
     e06:	4e11      	ldr	r6, [pc, #68]	; (e4c <xTaskPriorityDisinherit+0x78>)
     e08:	4a11      	ldr	r2, [pc, #68]	; (e50 <xTaskPriorityDisinherit+0x7c>)
     e0a:	b950      	cbnz	r0, e22 <xTaskPriorityDisinherit+0x4e>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4067
						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
     e0c:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
     e0e:	2114      	movs	r1, #20
     e10:	4379      	muls	r1, r7
     e12:	5873      	ldr	r3, [r6, r1]
     e14:	b92b      	cbnz	r3, e22 <xTaskPriorityDisinherit+0x4e>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4067 (discriminator 1)
     e16:	6813      	ldr	r3, [r2, #0]
     e18:	2001      	movs	r0, #1
     e1a:	40b8      	lsls	r0, r7
     e1c:	ea23 0300 	bic.w	r3, r3, r0
     e20:	6013      	str	r3, [r2, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4077
					pxTCB->uxPriority = pxTCB->uxBasePriority;
     e22:	6c23      	ldr	r3, [r4, #64]	; 0x40
     e24:	62e3      	str	r3, [r4, #44]	; 0x2c
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4082
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
     e26:	f1c3 0105 	rsb	r1, r3, #5
     e2a:	61a1      	str	r1, [r4, #24]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4083
					prvAddTaskToReadyList( pxTCB );
     e2c:	6811      	ldr	r1, [r2, #0]
     e2e:	2401      	movs	r4, #1
     e30:	fa04 f003 	lsl.w	r0, r4, r3
     e34:	4308      	orrs	r0, r1
     e36:	6010      	str	r0, [r2, #0]
     e38:	2014      	movs	r0, #20
     e3a:	fb00 6003 	mla	r0, r0, r3, r6
     e3e:	4629      	mov	r1, r5
     e40:	f7ff f9dd 	bl	1fe <vListInsertEnd>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4093
					xReturn = pdTRUE;
     e44:	4620      	mov	r0, r4
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/source/tasks.c:4110
		return xReturn;
     e46:	e7c9      	b.n	ddc <xTaskPriorityDisinherit+0x8>
     e48:	1000016c 	.word	0x1000016c
     e4c:	10000178 	.word	0x10000178
     e50:	100001ec 	.word	0x100001ec

00000e54 <pvPortMalloc>:
pvPortMalloc():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:59
#endif

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
     e54:	b510      	push	{r4, lr}
     e56:	4604      	mov	r4, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:62
void *pvReturn;

	vTaskSuspendAll();
     e58:	f7ff fdbc 	bl	9d4 <vTaskSuspendAll>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:64
	{
		pvReturn = malloc( xWantedSize );
     e5c:	4620      	mov	r0, r4
     e5e:	f000 fbf5 	bl	164c <malloc>
     e62:	4604      	mov	r4, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:67
		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
     e64:	f7ff fe48 	bl	af8 <xTaskResumeAll>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:71

	#if( configUSE_MALLOC_FAILED_HOOK == 1 )
	{
		if( pvReturn == NULL )
     e68:	b90c      	cbnz	r4, e6e <pvPortMalloc+0x1a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:74
		{
			extern void vApplicationMallocFailedHook( void );
			vApplicationMallocFailedHook();
     e6a:	f7ff f9b1 	bl	1d0 <vApplicationMallocFailedHook>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:80
		}
	}
	#endif

	return pvReturn;
}
     e6e:	4620      	mov	r0, r4
     e70:	bd10      	pop	{r4, pc}

00000e72 <vPortFree>:
vPortFree():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:84
/*-----------------------------------------------------------*/

void vPortFree( void *pv )
{
     e72:	b510      	push	{r4, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:85
	if( pv )
     e74:	4604      	mov	r4, r0
     e76:	b140      	cbz	r0, e8a <vPortFree+0x18>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:87
	{
		vTaskSuspendAll();
     e78:	f7ff fdac 	bl	9d4 <vTaskSuspendAll>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:89
		{
			free( pv );
     e7c:	4620      	mov	r0, r4
     e7e:	f000 fbed 	bl	165c <free>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:94
			traceFREE( pv, 0 );
		}
		( void ) xTaskResumeAll();
	}
}
     e82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:92
		( void ) xTaskResumeAll();
     e86:	f7ff be37 	b.w	af8 <xTaskResumeAll>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/memmang/heap_3.c:94
}
     e8a:	bd10      	pop	{r4, pc}

00000e8c <prvTaskExitError>:
prvTaskExitError():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:218
	return pxTopOfStack;
}
/*-----------------------------------------------------------*/

static void prvTaskExitError( void )
{
     e8c:	b082      	sub	sp, #8
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:219
volatile uint32_t ulDummy = 0;
     e8e:	2300      	movs	r3, #0
     e90:	9301      	str	r3, [sp, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:227
	its caller as there is nothing to return to.  If a task wants to exit it
	should instead call vTaskDelete( NULL ).

	Artificially force an assert() to be triggered if configASSERT() is
	defined, then stop here so application writers can catch the error. */
	configASSERT( uxCriticalNesting == ~0UL );
     e92:	4b09      	ldr	r3, [pc, #36]	; (eb8 <prvTaskExitError+0x2c>)
     e94:	681b      	ldr	r3, [r3, #0]
     e96:	3301      	adds	r3, #1
     e98:	d000      	beq.n	e9c <prvTaskExitError+0x10>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:227 (discriminator 1)
     e9a:	e7fe      	b.n	e9a <prvTaskExitError+0xe>
vPortRaiseBASEPRI():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:195
	__asm volatile
     e9c:	f04f 03ff 	mov.w	r3, #255	; 0xff
     ea0:	f383 8811 	msr	BASEPRI, r3
     ea4:	f3bf 8f6f 	isb	sy
     ea8:	f3bf 8f4f 	dsb	sy
prvTaskExitError():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:229 (discriminator 1)
	portDISABLE_INTERRUPTS();
	while( ulDummy == 0 )
     eac:	9b01      	ldr	r3, [sp, #4]
     eae:	2b00      	cmp	r3, #0
     eb0:	d0fc      	beq.n	eac <prvTaskExitError+0x20>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:239
		about code appearing after this function is called - making ulDummy
		volatile makes the compiler think the function could return and
		therefore not output an 'unreachable code' warning for code that appears
		after it. */
	}
}
     eb2:	b002      	add	sp, #8
     eb4:	4770      	bx	lr
     eb6:	bf00      	nop
     eb8:	10000000 	.word	0x10000000

00000ebc <prvPortStartFirstTask>:
prvPortStartFirstTask():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:267
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
     ebc:	4808      	ldr	r0, [pc, #32]	; (ee0 <prvPortStartFirstTask+0x24>)
     ebe:	6800      	ldr	r0, [r0, #0]
     ec0:	6800      	ldr	r0, [r0, #0]
     ec2:	f380 8808 	msr	MSP, r0
     ec6:	f04f 0000 	mov.w	r0, #0
     eca:	f380 8814 	msr	CONTROL, r0
     ece:	b662      	cpsie	i
     ed0:	b661      	cpsie	f
     ed2:	f3bf 8f4f 	dsb	sy
     ed6:	f3bf 8f6f 	isb	sy
     eda:	df00      	svc	0
     edc:	bf00      	nop
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:281
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
     ede:	0000      	.short	0x0000
     ee0:	e000ed08 	.word	0xe000ed08

00000ee4 <vPortEnableVFP>:
vPortEnableVFP():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:703
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
     ee4:	f8df 000c 	ldr.w	r0, [pc, #12]	; ef4 <vPortEnableVFP+0x10>
     ee8:	6801      	ldr	r1, [r0, #0]
     eea:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
     eee:	6001      	str	r1, [r0, #0]
     ef0:	4770      	bx	lr
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:712
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
     ef2:	0000      	.short	0x0000
     ef4:	e000ed88 	.word	0xe000ed88

00000ef8 <pxPortInitialiseStack>:
pxPortInitialiseStack():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:196
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
     ef8:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
     efc:	f840 3c04 	str.w	r3, [r0, #-4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:200
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
     f00:	4b07      	ldr	r3, [pc, #28]	; (f20 <pxPortInitialiseStack+0x28>)
     f02:	f840 3c0c 	str.w	r3, [r0, #-12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:198
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
     f06:	f021 0101 	bic.w	r1, r1, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:209
	*pxTopOfStack = portINITIAL_EXC_RETURN;
     f0a:	f06f 0302 	mvn.w	r3, #2
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:198
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
     f0e:	f840 1c08 	str.w	r1, [r0, #-8]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:204
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
     f12:	f840 2c20 	str.w	r2, [r0, #-32]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:209
	*pxTopOfStack = portINITIAL_EXC_RETURN;
     f16:	f840 3c24 	str.w	r3, [r0, #-36]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:214
}
     f1a:	3844      	subs	r0, #68	; 0x44
     f1c:	4770      	bx	lr
     f1e:	bf00      	nop
     f20:	00000e8d 	.word	0x00000e8d
     f24:	ffffffff 	.word	0xffffffff
     f28:	ffffffff 	.word	0xffffffff
     f2c:	ffffffff 	.word	0xffffffff

00000f30 <vPortSVCHandler>:
vPortSVCHandler():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:244
	__asm volatile (
     f30:	4b07      	ldr	r3, [pc, #28]	; (f50 <pxCurrentTCBConst2>)
     f32:	6819      	ldr	r1, [r3, #0]
     f34:	6808      	ldr	r0, [r1, #0]
     f36:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
     f3a:	f380 8809 	msr	PSP, r0
     f3e:	f3bf 8f6f 	isb	sy
     f42:	f04f 0000 	mov.w	r0, #0
     f46:	f380 8811 	msr	BASEPRI, r0
     f4a:	4770      	bx	lr
     f4c:	f3af 8000 	nop.w

00000f50 <pxCurrentTCBConst2>:
     f50:	1000016c 	.word	0x1000016c

00000f54 <vPortEnterCritical>:
vPortRaiseBASEPRI():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:195
     f54:	f04f 03ff 	mov.w	r3, #255	; 0xff
     f58:	f383 8811 	msr	BASEPRI, r3
     f5c:	f3bf 8f6f 	isb	sy
     f60:	f3bf 8f4f 	dsb	sy
vPortEnterCritical():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:406
	uxCriticalNesting++;
     f64:	4a06      	ldr	r2, [pc, #24]	; (f80 <vPortEnterCritical+0x2c>)
     f66:	6813      	ldr	r3, [r2, #0]
     f68:	3301      	adds	r3, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:413
	if( uxCriticalNesting == 1 )
     f6a:	2b01      	cmp	r3, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:406
	uxCriticalNesting++;
     f6c:	6013      	str	r3, [r2, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:413
	if( uxCriticalNesting == 1 )
     f6e:	d105      	bne.n	f7c <vPortEnterCritical+0x28>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:415
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
     f70:	4b04      	ldr	r3, [pc, #16]	; (f84 <vPortEnterCritical+0x30>)
     f72:	681b      	ldr	r3, [r3, #0]
     f74:	f013 0fff 	tst.w	r3, #255	; 0xff
     f78:	d000      	beq.n	f7c <vPortEnterCritical+0x28>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:415 (discriminator 1)
     f7a:	e7fe      	b.n	f7a <vPortEnterCritical+0x26>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:417
}
     f7c:	4770      	bx	lr
     f7e:	bf00      	nop
     f80:	10000000 	.word	0x10000000
     f84:	e000ed04 	.word	0xe000ed04

00000f88 <vPortExitCritical>:
vPortExitCritical():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:422
	configASSERT( uxCriticalNesting );
     f88:	4a04      	ldr	r2, [pc, #16]	; (f9c <vPortExitCritical+0x14>)
     f8a:	6813      	ldr	r3, [r2, #0]
     f8c:	b903      	cbnz	r3, f90 <vPortExitCritical+0x8>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:422 (discriminator 1)
     f8e:	e7fe      	b.n	f8e <vPortExitCritical+0x6>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:423
	uxCriticalNesting--;
     f90:	3b01      	subs	r3, #1
     f92:	6013      	str	r3, [r2, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:424
	if( uxCriticalNesting == 0 )
     f94:	b90b      	cbnz	r3, f9a <vPortExitCritical+0x12>
vPortSetBASEPRI():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:229
	__asm volatile
     f96:	f383 8811 	msr	BASEPRI, r3
vPortExitCritical():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:428
}
     f9a:	4770      	bx	lr
     f9c:	10000000 	.word	0x10000000

00000fa0 <xPortPendSVHandler>:
xPortPendSVHandler():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:435
	__asm volatile
     fa0:	f3ef 8009 	mrs	r0, PSP
     fa4:	f3bf 8f6f 	isb	sy
     fa8:	4b15      	ldr	r3, [pc, #84]	; (1000 <pxCurrentTCBConst>)
     faa:	681a      	ldr	r2, [r3, #0]
     fac:	f01e 0f10 	tst.w	lr, #16
     fb0:	bf08      	it	eq
     fb2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
     fb6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
     fba:	6010      	str	r0, [r2, #0]
     fbc:	e92d 0009 	stmdb	sp!, {r0, r3}
     fc0:	f04f 00ff 	mov.w	r0, #255	; 0xff
     fc4:	f380 8811 	msr	BASEPRI, r0
     fc8:	f3bf 8f4f 	dsb	sy
     fcc:	f3bf 8f6f 	isb	sy
     fd0:	f7ff fe1c 	bl	c0c <vTaskSwitchContext>
     fd4:	f04f 0000 	mov.w	r0, #0
     fd8:	f380 8811 	msr	BASEPRI, r0
     fdc:	bc09      	pop	{r0, r3}
     fde:	6819      	ldr	r1, [r3, #0]
     fe0:	6808      	ldr	r0, [r1, #0]
     fe2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
     fe6:	f01e 0f10 	tst.w	lr, #16
     fea:	bf08      	it	eq
     fec:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
     ff0:	f380 8809 	msr	PSP, r0
     ff4:	f3bf 8f6f 	isb	sy
     ff8:	4770      	bx	lr
     ffa:	bf00      	nop
     ffc:	f3af 8000 	nop.w

00001000 <pxCurrentTCBConst>:
    1000:	1000016c 	.word	0x1000016c

00001004 <xPortSysTickHandler>:
xPortSysTickHandler():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:489
{
    1004:	b508      	push	{r3, lr}
vPortRaiseBASEPRI():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:195
	__asm volatile
    1006:	f04f 03ff 	mov.w	r3, #255	; 0xff
    100a:	f383 8811 	msr	BASEPRI, r3
    100e:	f3bf 8f6f 	isb	sy
    1012:	f3bf 8f4f 	dsb	sy
xPortSysTickHandler():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:497
		if( xTaskIncrementTick() != pdFALSE )
    1016:	f7ff fce5 	bl	9e4 <xTaskIncrementTick>
    101a:	b118      	cbz	r0, 1024 <xPortSysTickHandler+0x20>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:501
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
    101c:	4b03      	ldr	r3, [pc, #12]	; (102c <xPortSysTickHandler+0x28>)
    101e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    1022:	601a      	str	r2, [r3, #0]
vPortSetBASEPRI():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/portmacro.h:229
	__asm volatile
    1024:	2300      	movs	r3, #0
    1026:	f383 8811 	msr	BASEPRI, r3
xPortSysTickHandler():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:505
}
    102a:	bd08      	pop	{r3, pc}
    102c:	e000ed04 	.word	0xe000ed04

00001030 <vPortSetupTimerInterrupt>:
vPortSetupTimerInterrupt():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:680
{
    1030:	b510      	push	{r4, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:692
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
    1032:	4a08      	ldr	r2, [pc, #32]	; (1054 <vPortSetupTimerInterrupt+0x24>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:691
	portNVIC_SYSTICK_CTRL_REG = 0UL;
    1034:	4c08      	ldr	r4, [pc, #32]	; (1058 <vPortSetupTimerInterrupt+0x28>)
    1036:	2300      	movs	r3, #0
    1038:	6023      	str	r3, [r4, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:692
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
    103a:	6013      	str	r3, [r2, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:695
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
    103c:	f000 f896 	bl	116c <clock__get_core_clock_hz>
    1040:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
    1044:	fbb0 f0f3 	udiv	r0, r0, r3
    1048:	4b04      	ldr	r3, [pc, #16]	; (105c <vPortSetupTimerInterrupt+0x2c>)
    104a:	3801      	subs	r0, #1
    104c:	6018      	str	r0, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:696
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
    104e:	2307      	movs	r3, #7
    1050:	6023      	str	r3, [r4, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:697
}
    1052:	bd10      	pop	{r4, pc}
    1054:	e000e018 	.word	0xe000e018
    1058:	e000e010 	.word	0xe000e010
    105c:	e000e014 	.word	0xe000e014

00001060 <xPortStartScheduler>:
xPortStartScheduler():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:296
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
    1060:	4b2a      	ldr	r3, [pc, #168]	; (110c <xPortStartScheduler+0xac>)
    1062:	4a2b      	ldr	r2, [pc, #172]	; (1110 <xPortStartScheduler+0xb0>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:288
{
    1064:	b513      	push	{r0, r1, r4, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:296
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
    1066:	6819      	ldr	r1, [r3, #0]
    1068:	4291      	cmp	r1, r2
    106a:	d100      	bne.n	106e <xPortStartScheduler+0xe>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:296 (discriminator 2)
    106c:	e7fe      	b.n	106c <xPortStartScheduler+0xc>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:297
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
    106e:	681a      	ldr	r2, [r3, #0]
    1070:	4b28      	ldr	r3, [pc, #160]	; (1114 <xPortStartScheduler+0xb4>)
    1072:	429a      	cmp	r2, r3
    1074:	d100      	bne.n	1078 <xPortStartScheduler+0x18>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:297 (discriminator 3)
    1076:	e7fe      	b.n	1076 <xPortStartScheduler+0x16>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:311
		ulOriginalPriority = *pucFirstUserPriorityRegister;
    1078:	4b27      	ldr	r3, [pc, #156]	; (1118 <xPortStartScheduler+0xb8>)
    107a:	781a      	ldrb	r2, [r3, #0]
    107c:	b2d2      	uxtb	r2, r2
    107e:	9201      	str	r2, [sp, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:315
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
    1080:	22ff      	movs	r2, #255	; 0xff
    1082:	701a      	strb	r2, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:318
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
    1084:	781b      	ldrb	r3, [r3, #0]
    1086:	b2db      	uxtb	r3, r3
    1088:	f88d 3003 	strb.w	r3, [sp, #3]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:321
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
    108c:	4b23      	ldr	r3, [pc, #140]	; (111c <xPortStartScheduler+0xbc>)
    108e:	f89d 2003 	ldrb.w	r2, [sp, #3]
    1092:	701a      	strb	r2, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:325
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
    1094:	4b22      	ldr	r3, [pc, #136]	; (1120 <xPortStartScheduler+0xc0>)
    1096:	2207      	movs	r2, #7
    1098:	601a      	str	r2, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:326
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
    109a:	2100      	movs	r1, #0
    109c:	f89d 0003 	ldrb.w	r0, [sp, #3]
    10a0:	0600      	lsls	r0, r0, #24
    10a2:	f102 34ff 	add.w	r4, r2, #4294967295	; 0xffffffff
    10a6:	d428      	bmi.n	10fa <xPortStartScheduler+0x9a>
    10a8:	b101      	cbz	r1, 10ac <xPortStartScheduler+0x4c>
    10aa:	601a      	str	r2, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:352
		ulMaxPRIGROUPValue <<= portPRIGROUP_SHIFT;
    10ac:	681a      	ldr	r2, [r3, #0]
    10ae:	0212      	lsls	r2, r2, #8
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:353
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
    10b0:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
    10b4:	601a      	str	r2, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:357
		*pucFirstUserPriorityRegister = ulOriginalPriority;
    10b6:	9b01      	ldr	r3, [sp, #4]
    10b8:	4a17      	ldr	r2, [pc, #92]	; (1118 <xPortStartScheduler+0xb8>)
    10ba:	b2db      	uxtb	r3, r3
    10bc:	7013      	strb	r3, [r2, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:362
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
    10be:	4b19      	ldr	r3, [pc, #100]	; (1124 <xPortStartScheduler+0xc4>)
    10c0:	681a      	ldr	r2, [r3, #0]
    10c2:	f442 027f 	orr.w	r2, r2, #16711680	; 0xff0000
    10c6:	601a      	str	r2, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:363
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
    10c8:	681a      	ldr	r2, [r3, #0]
    10ca:	f042 427f 	orr.w	r2, r2, #4278190080	; 0xff000000
    10ce:	601a      	str	r2, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:367
	vPortSetupTimerInterrupt();
    10d0:	f7ff ffae 	bl	1030 <vPortSetupTimerInterrupt>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:370
	uxCriticalNesting = 0;
    10d4:	4b14      	ldr	r3, [pc, #80]	; (1128 <xPortStartScheduler+0xc8>)
    10d6:	2400      	movs	r4, #0
    10d8:	601c      	str	r4, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:373
	vPortEnableVFP();
    10da:	f7ff ff03 	bl	ee4 <vPortEnableVFP>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:376
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
    10de:	4a13      	ldr	r2, [pc, #76]	; (112c <xPortStartScheduler+0xcc>)
    10e0:	6813      	ldr	r3, [r2, #0]
    10e2:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
    10e6:	6013      	str	r3, [r2, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:379
	prvPortStartFirstTask();
    10e8:	f7ff fee8 	bl	ebc <prvPortStartFirstTask>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:387
	vTaskSwitchContext();
    10ec:	f7ff fd8e 	bl	c0c <vTaskSwitchContext>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:388
	prvTaskExitError();
    10f0:	f7ff fecc 	bl	e8c <prvTaskExitError>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:392
}
    10f4:	4620      	mov	r0, r4
    10f6:	b002      	add	sp, #8
    10f8:	bd10      	pop	{r4, pc}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:329
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
    10fa:	f89d 2003 	ldrb.w	r2, [sp, #3]
    10fe:	0052      	lsls	r2, r2, #1
    1100:	b2d2      	uxtb	r2, r2
    1102:	f88d 2003 	strb.w	r2, [sp, #3]
    1106:	2101      	movs	r1, #1
    1108:	4622      	mov	r2, r4
    110a:	e7c7      	b.n	109c <xPortStartScheduler+0x3c>
    110c:	e000ed00 	.word	0xe000ed00
    1110:	410fc271 	.word	0x410fc271
    1114:	410fc270 	.word	0x410fc270
    1118:	e000e400 	.word	0xe000e400
    111c:	10000258 	.word	0x10000258
    1120:	1000025c 	.word	0x1000025c
    1124:	e000ed20 	.word	0xe000ed20
    1128:	10000000 	.word	0x10000000
    112c:	e000ef34 	.word	0xe000ef34

00001130 <vPortValidateInterruptPriority>:
vPortValidateInterruptPriority():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:723
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
    1130:	f3ef 8305 	mrs	r3, IPSR
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:726

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
    1134:	2b0f      	cmp	r3, #15
    1136:	d906      	bls.n	1146 <vPortValidateInterruptPriority+0x16>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:729
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
    1138:	4a08      	ldr	r2, [pc, #32]	; (115c <vPortValidateInterruptPriority+0x2c>)
    113a:	5c9b      	ldrb	r3, [r3, r2]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:754
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
    113c:	4a08      	ldr	r2, [pc, #32]	; (1160 <vPortValidateInterruptPriority+0x30>)
    113e:	7812      	ldrb	r2, [r2, #0]
    1140:	429a      	cmp	r2, r3
    1142:	d900      	bls.n	1146 <vPortValidateInterruptPriority+0x16>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:754 (discriminator 1)
    1144:	e7fe      	b.n	1144 <vPortValidateInterruptPriority+0x14>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:770
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
    1146:	4b07      	ldr	r3, [pc, #28]	; (1164 <vPortValidateInterruptPriority+0x34>)
    1148:	4a07      	ldr	r2, [pc, #28]	; (1168 <vPortValidateInterruptPriority+0x38>)
    114a:	681b      	ldr	r3, [r3, #0]
    114c:	6812      	ldr	r2, [r2, #0]
    114e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
    1152:	4293      	cmp	r3, r2
    1154:	d900      	bls.n	1158 <vPortValidateInterruptPriority+0x28>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:770 (discriminator 2)
    1156:	e7fe      	b.n	1156 <vPortValidateInterruptPriority+0x26>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l1_freertos/portable/gcc/arm_cm4f/port.c:771
	}
    1158:	4770      	bx	lr
    115a:	bf00      	nop
    115c:	e000e3f0 	.word	0xe000e3f0
    1160:	10000258 	.word	0x10000258
    1164:	e000ed0c 	.word	0xe000ed0c
    1168:	1000025c 	.word	0x1000025c

0000116c <clock__get_core_clock_hz>:
clock__get_core_clock_hz():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:12
 * Then, the Cortex-M4 port uses that reference to configure the RTOS tick rate.
 *
 * We use fixed CPU frequency because clock__initialize_system_clock_96mhz() configures
 * fixed CPU frequency. It is rare that anyone needs to change this (ever).
 */
uint32_t clock__get_core_clock_hz(void) { return (UINT32_C(96) * 1000 * 1000); }
    116c:	4800      	ldr	r0, [pc, #0]	; (1170 <clock__get_core_clock_hz+0x4>)
    116e:	4770      	bx	lr
    1170:	05b8d800 	.word	0x05b8d800

00001174 <clock__initialize_system_clock_96mhz>:
clock__initialize_system_clock_96mhz():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:18

void clock__initialize_system_clock_96mhz(void) {
  // Step 3 from UM: Write PLL new setup values to the PLL CFG register
  const uint8_t multiplier = 8; // 8 * 12Mhz = 96Mhz

  LPC_SC->PLL0CFG = ((multiplier - 1) << 0);
    1174:	4b0e      	ldr	r3, [pc, #56]	; (11b0 <clock__initialize_system_clock_96mhz+0x3c>)
    1176:	2207      	movs	r2, #7
    1178:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:22
  LPC_SC->PLL0CON = 1; // PLL enable

  // Necessary feed sequence to ensure the changes are intentional
  LPC_SC->PLL0FEED = 0xAA;
    117c:	21aa      	movs	r1, #170	; 0xaa
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:19
  LPC_SC->PLL0CON = 1; // PLL enable
    117e:	2201      	movs	r2, #1
    1180:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:22
  LPC_SC->PLL0FEED = 0xAA;
    1184:	f8c3 108c 	str.w	r1, [r3, #140]	; 0x8c
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:23
  LPC_SC->PLL0FEED = 0x55;
    1188:	2155      	movs	r1, #85	; 0x55
    118a:	f8c3 108c 	str.w	r1, [r3, #140]	; 0x8c
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:26

  // Step 4 from UM: Setup necessary clock dividers
  LPC_SC->PCLKSEL = 1; // APB peripherals receive clock/1 (divided by 1)
    118e:	f8c3 21a8 	str.w	r2, [r3, #424]	; 0x1a8
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:30 (discriminator 1)

  // Step 5 from UM: Wait for PLL to lock
  const uint32_t pll_lock_bit_mask = (1 << 10);
  while (!(LPC_SC->PLL0STAT & pll_lock_bit_mask)) {
    1192:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
    1196:	0552      	lsls	r2, r2, #21
    1198:	d5fb      	bpl.n	1192 <clock__initialize_system_clock_96mhz+0x1e>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:35
    ;
  }

  // Before we switch to the faster clock, we need to configure flash memory access properly with respect to core clock
  uint32_t flash_cfg = LPC_SC->FLASHCFG;
    119a:	681a      	ldr	r2, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:36
  flash_cfg &= ~(0xF << 12);
    119c:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:37
  flash_cfg |= (0x4 << 12); // 5 cpu clocks for use with up to 100Mhz
    11a0:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:38
  LPC_SC->FLASHCFG = flash_cfg;
    11a4:	601a      	str	r2, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:42

  // Step 6 from UM: Connect the PLL to the CPU
  const uint32_t cpu_on_pll_clock = (1 << 8) | (1 << 0);
  LPC_SC->CCLKSEL = cpu_on_pll_clock; // CPU uses PLL clock (Table 20)
    11a6:	f240 1201 	movw	r2, #257	; 0x101
    11aa:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/clock.c:43
}
    11ae:	4770      	bx	lr
    11b0:	400fc000 	.word	0x400fc000

000011b4 <ram__init_data>:
ram__init_data_sram_main():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:27
  extern void *_bdata_vma;
  extern void *_edata;

  uint8_t *src = (uint8_t *)&_bdata_lma;
  uint8_t *dest = (uint8_t *)&_bdata_vma;
  while (dest < (uint8_t *)&_edata) {
    11b4:	4a0a      	ldr	r2, [pc, #40]	; (11e0 <ram__init_data+0x2c>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:26
  uint8_t *dest = (uint8_t *)&_bdata_vma;
    11b6:	4b0b      	ldr	r3, [pc, #44]	; (11e4 <ram__init_data+0x30>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:27
  while (dest < (uint8_t *)&_edata) {
    11b8:	490b      	ldr	r1, [pc, #44]	; (11e8 <ram__init_data+0x34>)
    11ba:	428b      	cmp	r3, r1
    11bc:	d305      	bcc.n	11ca <ram__init_data+0x16>
    11be:	4a0b      	ldr	r2, [pc, #44]	; (11ec <ram__init_data+0x38>)
ram__init_data_sram_peripheral():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:40
  extern void *_bdata_lma_peripheral;
  extern void *_bdata_vma_peripheral;
  extern void *_edata_peripheral;

  uint8_t *src = (uint8_t *)&_bdata_lma_peripheral;
  uint8_t *dest = (uint8_t *)&_bdata_vma_peripheral;
    11c0:	4b0b      	ldr	r3, [pc, #44]	; (11f0 <ram__init_data+0x3c>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:41
  while (dest < (uint8_t *)&_edata_peripheral) {
    11c2:	490c      	ldr	r1, [pc, #48]	; (11f4 <ram__init_data+0x40>)
    11c4:	428b      	cmp	r3, r1
    11c6:	d305      	bcc.n	11d4 <ram__init_data+0x20>
ram__init_data():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:13
}
    11c8:	4770      	bx	lr
ram__init_data_sram_main():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:28
    *dest = *src;
    11ca:	f812 0b01 	ldrb.w	r0, [r2], #1
    11ce:	f803 0b01 	strb.w	r0, [r3], #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:30
    src++;
    11d2:	e7f2      	b.n	11ba <ram__init_data+0x6>
ram__init_data_sram_peripheral():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:42
    *dest = *src;
    11d4:	f812 0b01 	ldrb.w	r0, [r2], #1
    11d8:	f803 0b01 	strb.w	r0, [r3], #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:44
    dest++;
    src++;
    11dc:	e7f2      	b.n	11c4 <ram__init_data+0x10>
    11de:	bf00      	nop
    11e0:	000018a0 	.word	0x000018a0
    11e4:	10000000 	.word	0x10000000
    11e8:	1000016c 	.word	0x1000016c
    11ec:	000018a0 	.word	0x000018a0
    11f0:	20000000 	.word	0x20000000
    11f4:	20000000 	.word	0x20000000

000011f8 <ram__init_bss>:
ram__init_bss_sram_main():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:52

static void ram__init_bss_sram_main(void) {
  extern void *_bbss;
  extern void *_ebss;

  uint8_t *ptr = (uint8_t *)&_bbss;
    11f8:	4b08      	ldr	r3, [pc, #32]	; (121c <ram__init_bss+0x24>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:53
  while (ptr < (uint8_t *)&_ebss) {
    11fa:	4a09      	ldr	r2, [pc, #36]	; (1220 <ram__init_bss+0x28>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:54
    *ptr = 0U;
    11fc:	2100      	movs	r1, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:53
  while (ptr < (uint8_t *)&_ebss) {
    11fe:	4293      	cmp	r3, r2
    1200:	d305      	bcc.n	120e <ram__init_bss+0x16>
ram__init_bss_sram_peripheral():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:63

static void ram__init_bss_sram_peripheral(void) {
  extern void *_bbss_peripheral;
  extern void *_ebss_peripheral;

  uint8_t *ptr = (uint8_t *)&_bbss_peripheral;
    1202:	4b08      	ldr	r3, [pc, #32]	; (1224 <ram__init_bss+0x2c>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:64
  while (ptr < (uint8_t *)&_ebss_peripheral) {
    1204:	4a08      	ldr	r2, [pc, #32]	; (1228 <ram__init_bss+0x30>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:65
    *ptr = 0U;
    1206:	2100      	movs	r1, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:64
  while (ptr < (uint8_t *)&_ebss_peripheral) {
    1208:	4293      	cmp	r3, r2
    120a:	d303      	bcc.n	1214 <ram__init_bss+0x1c>
ram__init_bss():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:18
}
    120c:	4770      	bx	lr
ram__init_bss_sram_main():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:54
    *ptr = 0U;
    120e:	f803 1b01 	strb.w	r1, [r3], #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:55
    ptr++;
    1212:	e7f4      	b.n	11fe <ram__init_bss+0x6>
ram__init_bss_sram_peripheral():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:65
    *ptr = 0U;
    1214:	f803 1b01 	strb.w	r1, [r3], #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/ram.c:66
    ptr++;
    1218:	e7f6      	b.n	1208 <ram__init_bss+0x10>
    121a:	bf00      	nop
    121c:	1000016c 	.word	0x1000016c
    1220:	10000280 	.word	0x10000280
    1224:	20000000 	.word	0x20000000
    1228:	20000000 	.word	0x20000000

0000122c <startup__initialize_ram>:
startup__initialize_ram():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/startup.c:6
#include "startup.h"

#include "lpc40xx.h"
#include "ram.h"

void startup__initialize_ram(void) {
    122c:	b508      	push	{r3, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/startup.c:7
  ram__init_data();
    122e:	f7ff ffc1 	bl	11b4 <ram__init_data>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/startup.c:9
  ram__init_bss();
}
    1232:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/startup.c:8
  ram__init_bss();
    1236:	f7ff bfdf 	b.w	11f8 <ram__init_bss>
    123a:	Address 0x000000000000123a is out of bounds.


0000123c <startup__initialize_fpu>:
startup__initialize_fpu():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/startup.c:16
/**
 * References:
 * - http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.ddi0439b/BEHBJHIG.html
 */
void startup__initialize_fpu(void) {
  SCB->CPACR |= (0xF << 20); // Set [23:20]
    123c:	4a03      	ldr	r2, [pc, #12]	; (124c <startup__initialize_fpu+0x10>)
    123e:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
    1242:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
    1246:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/startup/startup.c:17
}
    124a:	4770      	bx	lr
    124c:	e000ed00 	.word	0xe000ed00

00001250 <_sbrk>:
_sbrk():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:16
 */
void *_sbrk(size_t requested_byte_count) {
  static const void *max_heap_ptr = (void *)&_eheap;
  static void *current_heap_base_ptr = NULL;

  if (current_heap_base_ptr == NULL) {
    1250:	4b06      	ldr	r3, [pc, #24]	; (126c <_sbrk+0x1c>)
    1252:	6819      	ldr	r1, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:12
void *_sbrk(size_t requested_byte_count) {
    1254:	4602      	mov	r2, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:16
  if (current_heap_base_ptr == NULL) {
    1256:	b909      	cbnz	r1, 125c <_sbrk+0xc>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:17
    current_heap_base_ptr = (void *)&_bheap;
    1258:	4905      	ldr	r1, [pc, #20]	; (1270 <_sbrk+0x20>)
    125a:	6019      	str	r1, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:20
  }

  void *next_heap_ptr = (uint8_t *)current_heap_base_ptr + requested_byte_count;
    125c:	6818      	ldr	r0, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:23
  void *ret_heap_ptr = NULL;

  if (next_heap_ptr < max_heap_ptr) {
    125e:	4905      	ldr	r1, [pc, #20]	; (1274 <_sbrk+0x24>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:20
  void *next_heap_ptr = (uint8_t *)current_heap_base_ptr + requested_byte_count;
    1260:	4402      	add	r2, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:23
  if (next_heap_ptr < max_heap_ptr) {
    1262:	428a      	cmp	r2, r1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:25
    ret_heap_ptr = current_heap_base_ptr;
    current_heap_base_ptr = next_heap_ptr;
    1264:	bf34      	ite	cc
    1266:	601a      	strcc	r2, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:21
  void *ret_heap_ptr = NULL;
    1268:	2000      	movcs	r0, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/newlib/syscall.c:29
  }

  return ret_heap_ptr;
}
    126a:	4770      	bx	lr
    126c:	10000260 	.word	0x10000260
    1270:	20000000 	.word	0x20000000
    1274:	20008000 	.word	0x20008000

00001278 <gpio__set_function>:
gpio__set_function():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio.c:44
  gpio_s gpio = gpio__construct(port, pin_number_0_to_31);
  gpio__set_function(gpio, function);
  return gpio;
}

void gpio__set_function(gpio_s gpio, gpio__function_e function) {
    1278:	b082      	sub	sp, #8
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio.c:51

  // Each port is offset by thirty-two 32-bit registers
  volatile uint32_t *port_offset = IOCON_base + (32 * gpio.port_number);

  // Each pin configuration is a single 32-bit
  volatile uint32_t *pin_config = (port_offset + gpio.pin_number);
    127a:	b2c3      	uxtb	r3, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio.c:44
void gpio__set_function(gpio_s gpio, gpio__function_e function) {
    127c:	f8ad 0004 	strh.w	r0, [sp, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio.c:51
  volatile uint32_t *pin_config = (port_offset + gpio.pin_number);
    1280:	f3c0 2007 	ubfx	r0, r0, #8, #8
    1284:	0080      	lsls	r0, r0, #2
    1286:	eb00 10c3 	add.w	r0, r0, r3, lsl #7
    128a:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
    128e:	f500 3030 	add.w	r0, r0, #180224	; 0x2c000
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio.c:56

  // Reference chapter 7: table 83
  const uint32_t config_mask = UINT32_C(7);
  *pin_config &= ~(config_mask << 0);
  *pin_config |= ((uint32_t)function & config_mask);
    1292:	f001 0107 	and.w	r1, r1, #7
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio.c:55
  *pin_config &= ~(config_mask << 0);
    1296:	6803      	ldr	r3, [r0, #0]
    1298:	f023 0307 	bic.w	r3, r3, #7
    129c:	6003      	str	r3, [r0, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio.c:56
  *pin_config |= ((uint32_t)function & config_mask);
    129e:	6803      	ldr	r3, [r0, #0]
    12a0:	4319      	orrs	r1, r3
    12a2:	6001      	str	r1, [r0, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio.c:57
}
    12a4:	b002      	add	sp, #8
    12a6:	4770      	bx	lr

000012a8 <gpio__construct_with_function>:
gpio__construct_with_function():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio.c:38
gpio_s gpio__construct_with_function(gpio__port_e port, uint8_t pin_number_0_to_31, gpio__function_e function) {
    12a8:	b537      	push	{r0, r1, r2, r4, r5, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio.c:40
  gpio__set_function(gpio, function);
    12aa:	f88d 1001 	strb.w	r1, [sp, #1]
    12ae:	f88d 0000 	strb.w	r0, [sp]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio.c:38
gpio_s gpio__construct_with_function(gpio__port_e port, uint8_t pin_number_0_to_31, gpio__function_e function) {
    12b2:	4604      	mov	r4, r0
    12b4:	460d      	mov	r5, r1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio.c:40
  gpio__set_function(gpio, function);
    12b6:	9800      	ldr	r0, [sp, #0]
    12b8:	4611      	mov	r1, r2
    12ba:	f7ff ffdd 	bl	1278 <gpio__set_function>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/gpio.c:42
}
    12be:	ea44 2005 	orr.w	r0, r4, r5, lsl #8
    12c2:	b003      	add	sp, #12
    12c4:	bd30      	pop	{r4, r5, pc}
    12c6:	Address 0x00000000000012c6 is out of bounds.


000012c8 <hw_timer__enable>:
hw_timer__enable():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:18
    {LPC_TIM1, LPC_PERIPHERAL__TIMER1},
    {LPC_TIM2, LPC_PERIPHERAL__TIMER2},
    {LPC_TIM3, LPC_PERIPHERAL__TIMER3},
};

void hw_timer__enable(lpc_timer_e timer, const uint32_t prescalar_divider, function__void_f isr_callback) {
    12c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:20
  // Peripheral must be turned on before accessing its registers
  lpc_peripheral__turn_on_power_to(hw_timers[timer].peripheral_id);
    12cc:	4c0b      	ldr	r4, [pc, #44]	; (12fc <hw_timer__enable+0x34>)
    12ce:	eb04 03c0 	add.w	r3, r4, r0, lsl #3
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:18
void hw_timer__enable(lpc_timer_e timer, const uint32_t prescalar_divider, function__void_f isr_callback) {
    12d2:	4690      	mov	r8, r2
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:20
  lpc_peripheral__turn_on_power_to(hw_timers[timer].peripheral_id);
    12d4:	791e      	ldrb	r6, [r3, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:18
void hw_timer__enable(lpc_timer_e timer, const uint32_t prescalar_divider, function__void_f isr_callback) {
    12d6:	4605      	mov	r5, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:20
  lpc_peripheral__turn_on_power_to(hw_timers[timer].peripheral_id);
    12d8:	4630      	mov	r0, r6
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:18
void hw_timer__enable(lpc_timer_e timer, const uint32_t prescalar_divider, function__void_f isr_callback) {
    12da:	460f      	mov	r7, r1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:20
  lpc_peripheral__turn_on_power_to(hw_timers[timer].peripheral_id);
    12dc:	f000 f83e 	bl	135c <lpc_peripheral__turn_on_power_to>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:25

  /* Interrupt can be enabled because we can assume the timer is not setup
   * for interrupt yet through hw_timer__enable_match_isr()
   */
  lpc_peripheral__enable_interrupt(hw_timers[timer].peripheral_id, isr_callback);
    12e0:	4641      	mov	r1, r8
    12e2:	4630      	mov	r0, r6
    12e4:	f000 f84c 	bl	1380 <lpc_peripheral__enable_interrupt>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:27

  hw_timers[timer].registers->TC = 0;
    12e8:	f854 3035 	ldr.w	r3, [r4, r5, lsl #3]
    12ec:	2200      	movs	r2, #0
    12ee:	609a      	str	r2, [r3, #8]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:28
  hw_timers[timer].registers->CTCR = 0;
    12f0:	671a      	str	r2, [r3, #112]	; 0x70
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:31

  hw_timers[timer].registers->PR = prescalar_divider;
  hw_timers[timer].registers->TCR = 1; // Enable
    12f2:	2201      	movs	r2, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:30
  hw_timers[timer].registers->PR = prescalar_divider;
    12f4:	60df      	str	r7, [r3, #12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:31
  hw_timers[timer].registers->TCR = 1; // Enable
    12f6:	605a      	str	r2, [r3, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:32
}
    12f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    12fc:	00001874 	.word	0x00001874

00001300 <hw_timer__enable_match_isr_and_reset>:
hw_timer__enable_match_isr_and_reset():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:38

void hw_timer__enable_match_isr_and_reset(lpc_timer_e timer, lpc_timer__mr_e mr_type, const uint32_t mr_value) {
  const uint32_t interrupt_on_match = (uint32_t)mr_type * 3; // 3 bits per MR
  const uint32_t reset_on_match = 1 + interrupt_on_match;

  hw_timers[timer].registers->MCR |= (1 << interrupt_on_match) | (1 << reset_on_match);
    1300:	4b09      	ldr	r3, [pc, #36]	; (1328 <hw_timer__enable_match_isr_and_reset+0x28>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:34
void hw_timer__enable_match_isr_and_reset(lpc_timer_e timer, lpc_timer__mr_e mr_type, const uint32_t mr_value) {
    1302:	b570      	push	{r4, r5, r6, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:38
  hw_timers[timer].registers->MCR |= (1 << interrupt_on_match) | (1 << reset_on_match);
    1304:	f853 0030 	ldr.w	r0, [r3, r0, lsl #3]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:35
  const uint32_t interrupt_on_match = (uint32_t)mr_type * 3; // 3 bits per MR
    1308:	eb01 0541 	add.w	r5, r1, r1, lsl #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:38
  hw_timers[timer].registers->MCR |= (1 << interrupt_on_match) | (1 << reset_on_match);
    130c:	2401      	movs	r4, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:36
  const uint32_t reset_on_match = 1 + interrupt_on_match;
    130e:	1c6b      	adds	r3, r5, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:38
  hw_timers[timer].registers->MCR |= (1 << interrupt_on_match) | (1 << reset_on_match);
    1310:	6946      	ldr	r6, [r0, #20]
    1312:	fa04 f303 	lsl.w	r3, r4, r3
    1316:	40ac      	lsls	r4, r5
    1318:	4323      	orrs	r3, r4
    131a:	4333      	orrs	r3, r6
    131c:	6143      	str	r3, [r0, #20]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:41

  // Four MR registers are contiguous and they start from &MR0
  volatile uint32_t *mr_base = &(hw_timers[timer].registers->MR0);
    131e:	3018      	adds	r0, #24
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:44
  volatile uint32_t *mr_register = mr_base + mr_type;

  *mr_register = mr_value;
    1320:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:45
}
    1324:	bd70      	pop	{r4, r5, r6, pc}
    1326:	bf00      	nop
    1328:	00001874 	.word	0x00001874

0000132c <hw_timer__acknowledge_interrupt>:
hw_timer__acknowledge_interrupt():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:48

void hw_timer__acknowledge_interrupt(lpc_timer_e timer, lpc_timer__mr_e mr_type) {
  hw_timers[timer].registers->IR = (1 << (uint32_t)mr_type);
    132c:	4b03      	ldr	r3, [pc, #12]	; (133c <hw_timer__acknowledge_interrupt+0x10>)
    132e:	f853 2030 	ldr.w	r2, [r3, r0, lsl #3]
    1332:	2301      	movs	r3, #1
    1334:	fa03 f101 	lsl.w	r1, r3, r1
    1338:	6011      	str	r1, [r2, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/hw_timer.c:49
}
    133a:	4770      	bx	lr
    133c:	00001874 	.word	0x00001874

00001340 <lpc_peripheral__halt_handler>:
lpc_peripheral__halt_handler():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/lpc_peripherals.c:26 (discriminator 1)
// clang-format on

/// An unregistered interrupt handler is a forever loop
static void lpc_peripheral__halt_handler(void) {
  while (1) {
  }
    1340:	e7fe      	b.n	1340 <lpc_peripheral__halt_handler>
    1342:	Address 0x0000000000001342 is out of bounds.


00001344 <lpc_peripheral__interrupt_dispatcher>:
lpc_peripheral__interrupt_dispatcher():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/lpc_peripherals.c:94
 */
void lpc_peripheral__interrupt_dispatcher(void) {
  /* Get the IRQ number we are in.  Note that ICSR's real ISR bits are offset by 16.
   * We can read ICSR register too, but let's just read 8-bits directly.
   */
  const uint8_t isr_num = (*((uint8_t *)0xE000ED04)) - 16; // (SCB->ICSR & 0xFF) - 16;
    1344:	4b03      	ldr	r3, [pc, #12]	; (1354 <lpc_peripheral__interrupt_dispatcher+0x10>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/lpc_peripherals.c:98

  /* Lookup the function pointer we want to call and make the call */
  function__void_f isr_to_service = lpc_peripheral__isr_registrations[isr_num];
  isr_to_service();
    1346:	4a04      	ldr	r2, [pc, #16]	; (1358 <lpc_peripheral__interrupt_dispatcher+0x14>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/lpc_peripherals.c:94
  const uint8_t isr_num = (*((uint8_t *)0xE000ED04)) - 16; // (SCB->ICSR & 0xFF) - 16;
    1348:	781b      	ldrb	r3, [r3, #0]
    134a:	3b10      	subs	r3, #16
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/lpc_peripherals.c:97
  function__void_f isr_to_service = lpc_peripheral__isr_registrations[isr_num];
    134c:	b2db      	uxtb	r3, r3
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/lpc_peripherals.c:98
  isr_to_service();
    134e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
    1352:	4718      	bx	r3
    1354:	e000ed04 	.word	0xe000ed04
    1358:	10000004 	.word	0x10000004

0000135c <lpc_peripheral__turn_on_power_to>:
lpc_peripheral__turn_on_power_to():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/lpc_peripherals.c:102
}

void lpc_peripheral__turn_on_power_to(lpc_peripheral_e peripheral) {
  if (peripheral < sizeof(lpc_peripheral_pconp_bit_map)) {
    135c:	2808      	cmp	r0, #8
    135e:	d809      	bhi.n	1374 <lpc_peripheral__turn_on_power_to+0x18>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/lpc_peripherals.c:103
    const uint32_t power_on_bit = (uint32_t)lpc_peripheral_pconp_bit_map[peripheral];
    1360:	4b05      	ldr	r3, [pc, #20]	; (1378 <lpc_peripheral__turn_on_power_to+0x1c>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/lpc_peripherals.c:104
    LPC_SC->PCONP |= (UINT32_C(1) << power_on_bit);
    1362:	4a06      	ldr	r2, [pc, #24]	; (137c <lpc_peripheral__turn_on_power_to+0x20>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/lpc_peripherals.c:103
    const uint32_t power_on_bit = (uint32_t)lpc_peripheral_pconp_bit_map[peripheral];
    1364:	5c18      	ldrb	r0, [r3, r0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/lpc_peripherals.c:104
    LPC_SC->PCONP |= (UINT32_C(1) << power_on_bit);
    1366:	f8d2 10c4 	ldr.w	r1, [r2, #196]	; 0xc4
    136a:	2301      	movs	r3, #1
    136c:	4083      	lsls	r3, r0
    136e:	430b      	orrs	r3, r1
    1370:	f8c2 30c4 	str.w	r3, [r2, #196]	; 0xc4
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/lpc_peripherals.c:106
  }
}
    1374:	4770      	bx	lr
    1376:	bf00      	nop
    1378:	00001894 	.word	0x00001894
    137c:	400fc000 	.word	0x400fc000

00001380 <lpc_peripheral__enable_interrupt>:
lpc_peripheral__enable_interrupt():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/lpc_peripherals.c:109

void lpc_peripheral__enable_interrupt(lpc_peripheral_e peripheral, function__void_f isr_callback) {
  lpc_peripheral__isr_registrations[peripheral] = isr_callback;
    1380:	4b07      	ldr	r3, [pc, #28]	; (13a0 <lpc_peripheral__enable_interrupt+0x20>)
    1382:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/lpc_peripherals.c:110
  NVIC_EnableIRQ(peripheral); // Use CMS API
    1386:	b243      	sxtb	r3, r0
__NVIC_EnableIRQ():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1681
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
    1388:	2b00      	cmp	r3, #0
    138a:	db08      	blt.n	139e <lpc_peripheral__enable_interrupt+0x1e>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l0_lowlevel/arm-software/cmsis/core/core_cm4.h:1684
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
    138c:	2201      	movs	r2, #1
    138e:	f000 001f 	and.w	r0, r0, #31
    1392:	fa02 f000 	lsl.w	r0, r2, r0
    1396:	095b      	lsrs	r3, r3, #5
    1398:	4a02      	ldr	r2, [pc, #8]	; (13a4 <lpc_peripheral__enable_interrupt+0x24>)
    139a:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
lpc_peripheral__enable_interrupt():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/lpc_peripherals.c:111
}
    139e:	4770      	bx	lr
    13a0:	10000004 	.word	0x10000004
    13a4:	e000e100 	.word	0xe000e100

000013a8 <uart__isr_common>:
uart__isr_common():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:154
    transmitter_empty = (1 << 0),
    receive_data_available = (2 << 0),
    receive_data_available_timeout = (6 << 0),
  } interrupt_reason_e;

  const interrupt_reason_e interrupt_reason = (interrupt_reason_e)((uart_type->registers->IIR & 0xE) >> 1);
    13a8:	6802      	ldr	r2, [r0, #0]
    13aa:	6893      	ldr	r3, [r2, #8]
    13ac:	f3c3 0342 	ubfx	r3, r3, #1, #3
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:156

  switch (interrupt_reason) {
    13b0:	2b02      	cmp	r3, #2
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:144
static void uart__isr_common(uart_s *uart_type) {
    13b2:	b573      	push	{r0, r1, r4, r5, r6, lr}
    13b4:	4606      	mov	r6, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:156
  switch (interrupt_reason) {
    13b6:	d023      	beq.n	1400 <uart__isr_common+0x58>
    13b8:	2b06      	cmp	r3, #6
    13ba:	d021      	beq.n	1400 <uart__isr_common+0x58>
    13bc:	2b01      	cmp	r3, #1
    13be:	d134      	bne.n	142a <uart__isr_common+0x82>
uart__load_pending_transmit_bytes():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:86
  char transmit_byte = 0;
    13c0:	2400      	movs	r4, #0
    13c2:	f88d 4003 	strb.w	r4, [sp, #3]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:88
  BaseType_t higher_priority_task_woke = 0;
    13c6:	9401      	str	r4, [sp, #4]
    13c8:	2510      	movs	r5, #16
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:91
    if (xQueueReceiveFromISR(uart_type->queue_transmit, &transmit_byte, &higher_priority_task_woke)) {
    13ca:	aa01      	add	r2, sp, #4
    13cc:	f10d 0103 	add.w	r1, sp, #3
    13d0:	6930      	ldr	r0, [r6, #16]
    13d2:	f7ff f93f 	bl	654 <xQueueReceiveFromISR>
    13d6:	b148      	cbz	r0, 13ec <uart__isr_common+0x44>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:92
      uart_type->registers->THR = transmit_byte;
    13d8:	6833      	ldr	r3, [r6, #0]
    13da:	f89d 2003 	ldrb.w	r2, [sp, #3]
    13de:	701a      	strb	r2, [r3, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:93
      if (higher_priority_task_woke) {
    13e0:	9b01      	ldr	r3, [sp, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:94
        context_switch_required = true;
    13e2:	2b00      	cmp	r3, #0
    13e4:	bf18      	it	ne
    13e6:	2401      	movne	r4, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:90
  for (size_t counter = 0; counter < hw_fifo_size; counter++) {
    13e8:	3d01      	subs	r5, #1
    13ea:	d1ee      	bne.n	13ca <uart__isr_common+0x22>
uart__isr_common():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:173
    (void)unused_to_clear_isr;
    break;
  }
  }

  portEND_SWITCHING_ISR(context_switch_required);
    13ec:	b30c      	cbz	r4, 1432 <uart__isr_common+0x8a>
    13ee:	4b12      	ldr	r3, [pc, #72]	; (1438 <uart__isr_common+0x90>)
    13f0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    13f4:	601a      	str	r2, [r3, #0]
    13f6:	f3bf 8f4f 	dsb	sy
    13fa:	f3bf 8f6f 	isb	sy
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:174
}
    13fe:	e018      	b.n	1432 <uart__isr_common+0x8a>
uart__clear_receive_fifo():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:108
  BaseType_t higher_priority_task_woke = 0;
    1400:	2400      	movs	r4, #0
    1402:	9401      	str	r4, [sp, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:114
  while ((uart_type->registers->LSR & char_available_bitmask)) {
    1404:	6833      	ldr	r3, [r6, #0]
    1406:	7d1a      	ldrb	r2, [r3, #20]
    1408:	07d2      	lsls	r2, r2, #31
    140a:	d5ef      	bpl.n	13ec <uart__isr_common+0x44>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:115
    const char received_byte = uart_type->registers->RBR;
    140c:	781b      	ldrb	r3, [r3, #0]
    140e:	f88d 3003 	strb.w	r3, [sp, #3]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:116
    xQueueSendFromISR(uart_type->queue_receive, &received_byte, &higher_priority_task_woke);
    1412:	aa01      	add	r2, sp, #4
    1414:	2300      	movs	r3, #0
    1416:	f10d 0103 	add.w	r1, sp, #3
    141a:	6970      	ldr	r0, [r6, #20]
    141c:	f7ff f8ca 	bl	5b4 <xQueueGenericSendFromISR>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:118
    if (higher_priority_task_woke) {
    1420:	9b01      	ldr	r3, [sp, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:119
      context_switch_required = true;
    1422:	2b00      	cmp	r3, #0
    1424:	bf18      	it	ne
    1426:	2401      	movne	r4, #1
    1428:	e7ec      	b.n	1404 <uart__isr_common+0x5c>
uart__isr_common():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:167
    volatile const uint32_t unused_to_clear_isr = uart_type->registers->LSR;
    142a:	7d13      	ldrb	r3, [r2, #20]
    142c:	b2db      	uxtb	r3, r3
    142e:	9301      	str	r3, [sp, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:168
    (void)unused_to_clear_isr;
    1430:	9b01      	ldr	r3, [sp, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:174
}
    1432:	b002      	add	sp, #8
    1434:	bd70      	pop	{r4, r5, r6, pc}
    1436:	bf00      	nop
    1438:	e000ed04 	.word	0xe000ed04

0000143c <uart3_isr>:
uart3_isr():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:142
static void uart3_isr(void) { uart__isr_common(&uarts[UART__3]); }
    143c:	4801      	ldr	r0, [pc, #4]	; (1444 <uart3_isr+0x8>)
    143e:	f7ff bfb3 	b.w	13a8 <uart__isr_common>
    1442:	bf00      	nop
    1444:	100000f0 	.word	0x100000f0

00001448 <uart2_isr>:
uart2_isr():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:141
static void uart2_isr(void) { uart__isr_common(&uarts[UART__2]); }
    1448:	4801      	ldr	r0, [pc, #4]	; (1450 <uart2_isr+0x8>)
    144a:	f7ff bfad 	b.w	13a8 <uart__isr_common>
    144e:	bf00      	nop
    1450:	100000d8 	.word	0x100000d8

00001454 <uart1_isr>:
uart1_isr():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:140
static void uart1_isr(void) { uart__isr_common(&uarts[UART__1]); }
    1454:	4801      	ldr	r0, [pc, #4]	; (145c <uart1_isr+0x8>)
    1456:	f7ff bfa7 	b.w	13a8 <uart__isr_common>
    145a:	bf00      	nop
    145c:	100000c0 	.word	0x100000c0

00001460 <uart0_isr>:
uart0_isr():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:139
static void uart0_isr(void) { uart__isr_common(&uarts[UART__0]); }
    1460:	4801      	ldr	r0, [pc, #4]	; (1468 <uart0_isr+0x8>)
    1462:	f7ff bfa1 	b.w	13a8 <uart__isr_common>
    1466:	bf00      	nop
    1468:	100000a8 	.word	0x100000a8

0000146c <uart__enable_receive_and_transmit_interrupts>:
uart__enable_receive_and_transmit_interrupts():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:126
void uart__enable_receive_and_transmit_interrupts(uart_s *uart_type) {
    146c:	b510      	push	{r4, lr}
    146e:	4604      	mov	r4, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:127
  lpc_peripheral__enable_interrupt(uart_type->peripheral_id, uart_type->isr_callback);
    1470:	6881      	ldr	r1, [r0, #8]
    1472:	7900      	ldrb	r0, [r0, #4]
    1474:	f7ff ff84 	bl	1380 <lpc_peripheral__enable_interrupt>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:132
  uart_type->registers->FCR = enable_rx_tx_fifo;
    1478:	6823      	ldr	r3, [r4, #0]
    147a:	2241      	movs	r2, #65	; 0x41
    147c:	721a      	strb	r2, [r3, #8]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:133
  uart_type->registers->FCR = reset_rx_tx_fifo;
    147e:	2206      	movs	r2, #6
    1480:	721a      	strb	r2, [r3, #8]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:136
  uart_type->registers->IER = enable_rx_tx_interrupts;
    1482:	2207      	movs	r2, #7
    1484:	605a      	str	r2, [r3, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:137
}
    1486:	bd10      	pop	{r4, pc}

00001488 <uart__init>:
uart__init():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:182
 *
 *                      P U B L I C    F U N C T I O N S
 *
 ******************************************************************************/

void uart__init(uart_e uart, uint32_t peripheral_clock, uint32_t baud_rate) {
    1488:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
uart__is_initialized():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:211

    uarts[uart].initialized = true;
  }
}

bool uart__is_initialized(uart_e uart) { return uarts[uart].initialized; }
    148c:	f8df 8058 	ldr.w	r8, [pc, #88]	; 14e8 <uart__init+0x60>
    1490:	2518      	movs	r5, #24
    1492:	4345      	muls	r5, r0
    1494:	eb08 0605 	add.w	r6, r8, r5
uart__init():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:182
void uart__init(uart_e uart, uint32_t peripheral_clock, uint32_t baud_rate) {
    1498:	460c      	mov	r4, r1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:183
  if (!uart__is_initialized(uart)) {
    149a:	7b33      	ldrb	r3, [r6, #12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:182
void uart__init(uart_e uart, uint32_t peripheral_clock, uint32_t baud_rate) {
    149c:	4617      	mov	r7, r2
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:183
  if (!uart__is_initialized(uart)) {
    149e:	bb0b      	cbnz	r3, 14e4 <uart__init+0x5c>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:184
    lpc_peripheral__turn_on_power_to(uarts[uart].peripheral_id);
    14a0:	7930      	ldrb	r0, [r6, #4]
    14a2:	f7ff ff5b 	bl	135c <lpc_peripheral__turn_on_power_to>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:187
    const uint16_t divider = (uint16_t)((peripheral_clock / (16 * baud_rate)) + roundup_offset);
    14a6:	013f      	lsls	r7, r7, #4
    14a8:	fbb4 f3f7 	udiv	r3, r4, r7
    14ac:	ee07 3a90 	vmov	s15, r3
    14b0:	eef8 7a67 	vcvt.f32.u32	s15, s15
    14b4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
    14b8:	ee77 7a87 	vadd.f32	s15, s15, s14
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:194
    lpc_uart *uart_regs = uarts[uart].registers;
    14bc:	f858 2005 	ldr.w	r2, [r8, r5]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:187
    const uint16_t divider = (uint16_t)((peripheral_clock / (16 * baud_rate)) + roundup_offset);
    14c0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:196
    uart_regs->LCR = dlab_bit; // Set DLAB bit to access DLM & DLL
    14c4:	2180      	movs	r1, #128	; 0x80
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:187
    const uint16_t divider = (uint16_t)((peripheral_clock / (16 * baud_rate)) + roundup_offset);
    14c6:	ee17 3a90 	vmov	r3, s15
    14ca:	b29b      	uxth	r3, r3
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:196
    uart_regs->LCR = dlab_bit; // Set DLAB bit to access DLM & DLL
    14cc:	7311      	strb	r1, [r2, #12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:197
    uart_regs->DLM = (divider >> 8) & 0xFF;
    14ce:	0a19      	lsrs	r1, r3, #8
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:198
    uart_regs->DLL = (divider >> 0) & 0xFF;
    14d0:	b2db      	uxtb	r3, r3
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:197
    uart_regs->DLM = (divider >> 8) & 0xFF;
    14d2:	7111      	strb	r1, [r2, #4]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:198
    uart_regs->DLL = (divider >> 0) & 0xFF;
    14d4:	7013      	strb	r3, [r2, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:204
    uart_regs->FDR = default_reset_fdr_value;
    14d6:	2310      	movs	r3, #16
    14d8:	f882 3028 	strb.w	r3, [r2, #40]	; 0x28
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:205
    uart_regs->LCR = eight_bit_datalen | stop_bits_is_2; // DLAB is reset back to zero also
    14dc:	2307      	movs	r3, #7
    14de:	7313      	strb	r3, [r2, #12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:207
    uarts[uart].initialized = true;
    14e0:	2301      	movs	r3, #1
    14e2:	7333      	strb	r3, [r6, #12]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:209
}
    14e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    14e8:	100000a8 	.word	0x100000a8

000014ec <uart__enable_queues>:
uart__is_initialized():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:211
bool uart__is_initialized(uart_e uart) { return uarts[uart].initialized; }
    14ec:	4b10      	ldr	r3, [pc, #64]	; (1530 <uart__enable_queues+0x44>)
uart__enable_queues():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:213

bool uart__enable_queues(uart_e uart, QueueHandle_t queue_receive, QueueHandle_t queue_transmit) {
    14ee:	b570      	push	{r4, r5, r6, lr}
uart__is_initialized():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:211
bool uart__is_initialized(uart_e uart) { return uarts[uart].initialized; }
    14f0:	2418      	movs	r4, #24
    14f2:	fb04 3400 	mla	r4, r4, r0, r3
    14f6:	7b25      	ldrb	r5, [r4, #12]
uart__enable_queues():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:218
  bool status = false;
  uart_s *uart_type = &uarts[uart];

  // We can only access UART registers after its power has been enabled
  if (uart__is_initialized(uart)) {
    14f8:	b915      	cbnz	r5, 1500 <uart__enable_queues+0x14>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:214
  bool status = false;
    14fa:	2500      	movs	r5, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:238
      uart__enable_receive_and_transmit_interrupts(uart_type);
    }
  }

  return status;
}
    14fc:	4628      	mov	r0, r5
    14fe:	bd70      	pop	{r4, r5, r6, pc}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:220
    if (!uart__is_receive_queue_enabled(uart) && NULL != queue_receive) {
    1500:	6966      	ldr	r6, [r4, #20]
    1502:	b90e      	cbnz	r6, 1508 <uart__enable_queues+0x1c>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:220 (discriminator 1)
    1504:	b101      	cbz	r1, 1508 <uart__enable_queues+0x1c>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:221
      uart_type->queue_receive = queue_receive;
    1506:	6161      	str	r1, [r4, #20]
uart__is_transmit_queue_enabled():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:62
static bool uart__is_transmit_queue_enabled(uart_e uart) { return (NULL != uarts[uart].queue_transmit); }
    1508:	2118      	movs	r1, #24
    150a:	fb01 3100 	mla	r1, r1, r0, r3
uart__enable_queues():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:225
    if (!uart__is_transmit_queue_enabled(uart) && NULL != queue_transmit) {
    150e:	690c      	ldr	r4, [r1, #16]
    1510:	b90c      	cbnz	r4, 1516 <uart__enable_queues+0x2a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:225 (discriminator 1)
    1512:	b102      	cbz	r2, 1516 <uart__enable_queues+0x2a>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:226
      uart_type->queue_transmit = queue_transmit;
    1514:	610a      	str	r2, [r1, #16]
uart__is_receive_queue_enabled():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:61
static bool uart__is_receive_queue_enabled(uart_e uart) { return (NULL != uarts[uart].queue_receive); }
    1516:	2218      	movs	r2, #24
    1518:	fb02 3000 	mla	r0, r2, r0, r3
uart__enable_queues():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:231
    status = uart__is_receive_queue_enabled(uart) && uart__is_transmit_queue_enabled(uart);
    151c:	6943      	ldr	r3, [r0, #20]
    151e:	2b00      	cmp	r3, #0
    1520:	d0eb      	beq.n	14fa <uart__enable_queues+0xe>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:232
    if (status) {
    1522:	6903      	ldr	r3, [r0, #16]
    1524:	2b00      	cmp	r3, #0
    1526:	d0e8      	beq.n	14fa <uart__enable_queues+0xe>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:233
      uart__enable_receive_and_transmit_interrupts(uart_type);
    1528:	f7ff ffa0 	bl	146c <uart__enable_receive_and_transmit_interrupts>
    152c:	e7e6      	b.n	14fc <uart__enable_queues+0x10>
    152e:	bf00      	nop
    1530:	100000a8 	.word	0x100000a8

00001534 <uart__put>:
uart__put():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:307
  }

  return status;
}

bool uart__put(uart_e uart, char output_byte, uint32_t timeout_ms) {
    1534:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    1538:	4604      	mov	r4, r0
uart__is_transmit_queue_enabled():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:62
static bool uart__is_transmit_queue_enabled(uart_e uart) { return (NULL != uarts[uart].queue_transmit); }
    153a:	4f17      	ldr	r7, [pc, #92]	; (1598 <uart__put+0x64>)
uart__put():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:307
bool uart__put(uart_e uart, char output_byte, uint32_t timeout_ms) {
    153c:	f88d 1007 	strb.w	r1, [sp, #7]
uart__is_transmit_queue_enabled():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:62
static bool uart__is_transmit_queue_enabled(uart_e uart) { return (NULL != uarts[uart].queue_transmit); }
    1540:	2518      	movs	r5, #24
    1542:	4365      	muls	r5, r4
    1544:	197e      	adds	r6, r7, r5
uart__put():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:307
bool uart__put(uart_e uart, char output_byte, uint32_t timeout_ms) {
    1546:	4690      	mov	r8, r2
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:309
  bool status = false;
  const bool rtos_is_running = taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
    1548:	f7ff fc34 	bl	db4 <xTaskGetSchedulerState>
uart__is_transmit_queue_enabled():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:62
static bool uart__is_transmit_queue_enabled(uart_e uart) { return (NULL != uarts[uart].queue_transmit); }
    154c:	6934      	ldr	r4, [r6, #16]
uart__put():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:311

  if (uart__is_transmit_queue_enabled(uart) && rtos_is_running) {
    154e:	b1ec      	cbz	r4, 158c <uart__put+0x58>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:311 (discriminator 1)
    1550:	2802      	cmp	r0, #2
    1552:	d11f      	bne.n	1594 <uart__put+0x60>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:313
    // Deposit to the transmit queue for now
    status = xQueueSend(uarts[uart].queue_transmit, &output_byte, uart__ms_to_os_ticks(timeout_ms));
    1554:	2300      	movs	r3, #0
    1556:	4642      	mov	r2, r8
    1558:	f10d 0107 	add.w	r1, sp, #7
    155c:	4620      	mov	r0, r4
    155e:	f7fe ff89 	bl	474 <xQueueGenericSend>
    1562:	1c04      	adds	r4, r0, #0
    1564:	bf18      	it	ne
    1566:	2401      	movne	r4, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:319

    /* 'Transmit Complete Interrupt' may have already fired when we get here, so if there is no further pending data
     * to be sent, it will not fire again to send any data. Hence, we check here in a critical section if transmit
     * holder register is empty, and kick-off the tranmisssion
     */
    portENTER_CRITICAL();
    1568:	f7ff fcf4 	bl	f54 <vPortEnterCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:321
    {
      lpc_uart *uart_regs = uarts[uart].registers;
    156c:	597d      	ldr	r5, [r7, r5]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:324
      const uint32_t uart_tx_is_idle = (1 << 6);

      if (uart_regs->LSR & uart_tx_is_idle) {
    156e:	7d2b      	ldrb	r3, [r5, #20]
    1570:	065b      	lsls	r3, r3, #25
    1572:	d509      	bpl.n	1588 <uart__put+0x54>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:328
        /* Receive oldest char from the queue to send
         * Since we are inside a critical section, we use FromISR() FreeRTOS API  variant
         */
        if (xQueueReceiveFromISR(uarts[uart].queue_transmit, &output_byte, NULL)) {
    1574:	2200      	movs	r2, #0
    1576:	f10d 0107 	add.w	r1, sp, #7
    157a:	6930      	ldr	r0, [r6, #16]
    157c:	f7ff f86a 	bl	654 <xQueueReceiveFromISR>
    1580:	b110      	cbz	r0, 1588 <uart__put+0x54>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:329
          uart_regs->THR = output_byte;
    1582:	f89d 3007 	ldrb.w	r3, [sp, #7]
    1586:	702b      	strb	r3, [r5, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:333
        }
      }
    }
    portEXIT_CRITICAL();
    1588:	f7ff fcfe 	bl	f88 <vPortExitCritical>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:337
  }

  return status;
}
    158c:	4620      	mov	r0, r4
    158e:	b002      	add	sp, #8
    1590:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:308
  bool status = false;
    1594:	2400      	movs	r4, #0
    1596:	e7f9      	b.n	158c <uart__put+0x58>
    1598:	100000a8 	.word	0x100000a8

0000159c <uart__polled_put>:
uart__polled_put():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:268
bool uart__polled_put(uart_e uart, char output_byte) {
    159c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:270
  lpc_uart *uart_regs = uarts[uart].registers;
    159e:	2318      	movs	r3, #24
    15a0:	4343      	muls	r3, r0
    15a2:	4a0f      	ldr	r2, [pc, #60]	; (15e0 <uart__polled_put+0x44>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:268
bool uart__polled_put(uart_e uart, char output_byte) {
    15a4:	4606      	mov	r6, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:270
  lpc_uart *uart_regs = uarts[uart].registers;
    15a6:	18d7      	adds	r7, r2, r3
    15a8:	58d4      	ldr	r4, [r2, r3]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:268
bool uart__polled_put(uart_e uart, char output_byte) {
    15aa:	460d      	mov	r5, r1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:272
  const bool rtos_is_running = taskSCHEDULER_RUNNING == xTaskGetSchedulerState();
    15ac:	f7ff fc02 	bl	db4 <xTaskGetSchedulerState>
    15b0:	4603      	mov	r3, r0
uart__is_initialized():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:211
bool uart__is_initialized(uart_e uart) { return uarts[uart].initialized; }
    15b2:	7b38      	ldrb	r0, [r7, #12]
uart__polled_put():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:275
  if (uart__is_initialized(uart)) {
    15b4:	b160      	cbz	r0, 15d0 <uart__polled_put+0x34>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:277
    if (rtos_is_running && queue_is_enabled) {
    15b6:	2b02      	cmp	r3, #2
    15b8:	d10b      	bne.n	15d2 <uart__polled_put+0x36>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:277 (discriminator 1)
    15ba:	693b      	ldr	r3, [r7, #16]
    15bc:	b14b      	cbz	r3, 15d2 <uart__polled_put+0x36>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:278
      status = uart__put(uart, output_byte, UINT32_MAX);
    15be:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    15c2:	4629      	mov	r1, r5
    15c4:	4630      	mov	r0, r6
    15c6:	f7ff ffb5 	bl	1534 <uart__put>
uart__wait_for_transmit_to_complete():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:66
  while (!(uart_regs->LSR & transmitter_empty)) {
    15ca:	7d23      	ldrb	r3, [r4, #20]
    15cc:	069b      	lsls	r3, r3, #26
    15ce:	d5fc      	bpl.n	15ca <uart__polled_put+0x2e>
uart__polled_put():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:290
}
    15d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
uart__wait_for_transmit_to_complete():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:66
  while (!(uart_regs->LSR & transmitter_empty)) {
    15d2:	7d23      	ldrb	r3, [r4, #20]
    15d4:	069a      	lsls	r2, r3, #26
    15d6:	d5fc      	bpl.n	15d2 <uart__polled_put+0x36>
uart__polled_put():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:282
      uart_regs->THR = output_byte;
    15d8:	7025      	strb	r5, [r4, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:269
  bool status = false;
    15da:	2000      	movs	r0, #0
uart__wait_for_transmit_to_complete():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l3_drivers/uart.c:66
  while (!(uart_regs->LSR & transmitter_empty)) {
    15dc:	e7f5      	b.n	15ca <uart__polled_put+0x2e>
    15de:	bf00      	nop
    15e0:	100000a8 	.word	0x100000a8

000015e4 <sys_time__1sec_isr>:
sys_time__1sec_isr():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/sys_time.c:13

static const uint32_t sys_time__us_per_sec = UINT32_C(1) * 1000 * 1000;
static uint32_t sys_time__sec_counter = 0;

static void sys_time__1sec_isr(void) {
  ++sys_time__sec_counter;
    15e4:	4a03      	ldr	r2, [pc, #12]	; (15f4 <sys_time__1sec_isr+0x10>)
    15e6:	6813      	ldr	r3, [r2, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/sys_time.c:14
  hw_timer__acknowledge_interrupt(sys_time__hw_timer, sys_time__hw_timer_mr);
    15e8:	2100      	movs	r1, #0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/sys_time.c:13
  ++sys_time__sec_counter;
    15ea:	3301      	adds	r3, #1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/sys_time.c:14
  hw_timer__acknowledge_interrupt(sys_time__hw_timer, sys_time__hw_timer_mr);
    15ec:	4608      	mov	r0, r1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/sys_time.c:13
  ++sys_time__sec_counter;
    15ee:	6013      	str	r3, [r2, #0]
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/sys_time.c:14
  hw_timer__acknowledge_interrupt(sys_time__hw_timer, sys_time__hw_timer_mr);
    15f0:	f7ff be9c 	b.w	132c <hw_timer__acknowledge_interrupt>
    15f4:	10000264 	.word	0x10000264

000015f8 <sys_time__init>:
sys_time__init():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/sys_time.c:23
 *
 *                      P U B L I C    F U N C T I O N S
 *
 ******************************************************************************/

void sys_time__init(uint32_t cpu_clock_hz) {
    15f8:	b510      	push	{r4, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/sys_time.c:27
  const uint32_t prescalar_for_1us = (cpu_clock_hz / sys_time__us_per_sec) - 1;

  // Enable the timer with 1uS resolution with an interrupt every one second
  hw_timer__enable(sys_time__hw_timer, prescalar_for_1us, sys_time__1sec_isr);
    15fa:	4a07      	ldr	r2, [pc, #28]	; (1618 <sys_time__init+0x20>)
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/sys_time.c:24
  const uint32_t prescalar_for_1us = (cpu_clock_hz / sys_time__us_per_sec) - 1;
    15fc:	4c07      	ldr	r4, [pc, #28]	; (161c <sys_time__init+0x24>)
    15fe:	fbb0 f1f4 	udiv	r1, r0, r4
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/sys_time.c:27
  hw_timer__enable(sys_time__hw_timer, prescalar_for_1us, sys_time__1sec_isr);
    1602:	2000      	movs	r0, #0
    1604:	3901      	subs	r1, #1
    1606:	f7ff fe5f 	bl	12c8 <hw_timer__enable>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/sys_time.c:28
  hw_timer__enable_match_isr_and_reset(sys_time__hw_timer, sys_time__hw_timer_mr, sys_time__us_per_sec);
    160a:	2100      	movs	r1, #0
    160c:	4622      	mov	r2, r4
    160e:	4608      	mov	r0, r1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/sys_time.c:29
}
    1610:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/sys_time.c:28
  hw_timer__enable_match_isr_and_reset(sys_time__hw_timer, sys_time__hw_timer_mr, sys_time__us_per_sec);
    1614:	f7ff be74 	b.w	1300 <hw_timer__enable_match_isr_and_reset>
    1618:	000015e5 	.word	0x000015e5
    161c:	000f4240 	.word	0x000f4240

00001620 <uart_puts__polled>:
uart_puts__polled():
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/uart_printf.c:51
  }

  return would_print;
}

void uart_puts__polled(uart_e uart, const char *message) {
    1620:	b570      	push	{r4, r5, r6, lr}
    1622:	4605      	mov	r5, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/uart_printf.c:52
  const size_t message_length = strlen(message);
    1624:	4608      	mov	r0, r1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/uart_printf.c:51
void uart_puts__polled(uart_e uart, const char *message) {
    1626:	460c      	mov	r4, r1
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/uart_printf.c:52
  const size_t message_length = strlen(message);
    1628:	f000 f8ee 	bl	1808 <strlen>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/uart_printf.c:53
  for (size_t byte = 0; byte < message_length; byte++) {
    162c:	1826      	adds	r6, r4, r0
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/uart_printf.c:53 (discriminator 1)
    162e:	42b4      	cmp	r4, r6
    1630:	d105      	bne.n	163e <uart_puts__polled+0x1e>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/uart_printf.c:56
    uart__polled_put(uart, message[byte]);
  }
  uart__polled_put(uart, '\n');
    1632:	4628      	mov	r0, r5
    1634:	210a      	movs	r1, #10
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/uart_printf.c:57
    1636:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/uart_printf.c:56
  uart__polled_put(uart, '\n');
    163a:	f7ff bfaf 	b.w	159c <uart__polled_put>
/home/rutuja/sjtwo-c/lpc40xx_freertos/l4_io/uart_printf.c:54 (discriminator 3)
    uart__polled_put(uart, message[byte]);
    163e:	f814 1b01 	ldrb.w	r1, [r4], #1
    1642:	4628      	mov	r0, r5
    1644:	f7ff ffaa 	bl	159c <uart__polled_put>
    1648:	e7f1      	b.n	162e <uart_puts__polled+0xe>
    164a:	Address 0x000000000000164a is out of bounds.


0000164c <malloc>:
malloc():
    164c:	4b02      	ldr	r3, [pc, #8]	; (1658 <malloc+0xc>)
    164e:	4601      	mov	r1, r0
    1650:	6818      	ldr	r0, [r3, #0]
    1652:	f000 b86f 	b.w	1734 <_malloc_r>
    1656:	bf00      	nop
    1658:	10000108 	.word	0x10000108

0000165c <free>:
free():
    165c:	4b02      	ldr	r3, [pc, #8]	; (1668 <free+0xc>)
    165e:	4601      	mov	r1, r0
    1660:	6818      	ldr	r0, [r3, #0]
    1662:	f000 b819 	b.w	1698 <_free_r>
    1666:	bf00      	nop
    1668:	10000108 	.word	0x10000108

0000166c <memcpy>:
memcpy():
    166c:	440a      	add	r2, r1
    166e:	4291      	cmp	r1, r2
    1670:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
    1674:	d100      	bne.n	1678 <memcpy+0xc>
    1676:	4770      	bx	lr
    1678:	b510      	push	{r4, lr}
    167a:	f811 4b01 	ldrb.w	r4, [r1], #1
    167e:	f803 4f01 	strb.w	r4, [r3, #1]!
    1682:	4291      	cmp	r1, r2
    1684:	d1f9      	bne.n	167a <memcpy+0xe>
    1686:	bd10      	pop	{r4, pc}

00001688 <memset>:
memset():
    1688:	4402      	add	r2, r0
    168a:	4603      	mov	r3, r0
    168c:	4293      	cmp	r3, r2
    168e:	d100      	bne.n	1692 <memset+0xa>
    1690:	4770      	bx	lr
    1692:	f803 1b01 	strb.w	r1, [r3], #1
    1696:	e7f9      	b.n	168c <memset+0x4>

00001698 <_free_r>:
_free_r():
    1698:	b538      	push	{r3, r4, r5, lr}
    169a:	4605      	mov	r5, r0
    169c:	2900      	cmp	r1, #0
    169e:	d045      	beq.n	172c <_free_r+0x94>
    16a0:	f851 3c04 	ldr.w	r3, [r1, #-4]
    16a4:	1f0c      	subs	r4, r1, #4
    16a6:	2b00      	cmp	r3, #0
    16a8:	bfb8      	it	lt
    16aa:	18e4      	addlt	r4, r4, r3
    16ac:	f000 f8b4 	bl	1818 <__malloc_lock>
    16b0:	4a1f      	ldr	r2, [pc, #124]	; (1730 <_free_r+0x98>)
    16b2:	6813      	ldr	r3, [r2, #0]
    16b4:	4610      	mov	r0, r2
    16b6:	b933      	cbnz	r3, 16c6 <_free_r+0x2e>
    16b8:	6063      	str	r3, [r4, #4]
    16ba:	6014      	str	r4, [r2, #0]
    16bc:	4628      	mov	r0, r5
    16be:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    16c2:	f000 b8af 	b.w	1824 <__malloc_unlock>
    16c6:	42a3      	cmp	r3, r4
    16c8:	d90c      	bls.n	16e4 <_free_r+0x4c>
    16ca:	6821      	ldr	r1, [r4, #0]
    16cc:	1862      	adds	r2, r4, r1
    16ce:	4293      	cmp	r3, r2
    16d0:	bf04      	itt	eq
    16d2:	681a      	ldreq	r2, [r3, #0]
    16d4:	685b      	ldreq	r3, [r3, #4]
    16d6:	6063      	str	r3, [r4, #4]
    16d8:	bf04      	itt	eq
    16da:	1852      	addeq	r2, r2, r1
    16dc:	6022      	streq	r2, [r4, #0]
    16de:	6004      	str	r4, [r0, #0]
    16e0:	e7ec      	b.n	16bc <_free_r+0x24>
    16e2:	4613      	mov	r3, r2
    16e4:	685a      	ldr	r2, [r3, #4]
    16e6:	b10a      	cbz	r2, 16ec <_free_r+0x54>
    16e8:	42a2      	cmp	r2, r4
    16ea:	d9fa      	bls.n	16e2 <_free_r+0x4a>
    16ec:	6819      	ldr	r1, [r3, #0]
    16ee:	1858      	adds	r0, r3, r1
    16f0:	42a0      	cmp	r0, r4
    16f2:	d10b      	bne.n	170c <_free_r+0x74>
    16f4:	6820      	ldr	r0, [r4, #0]
    16f6:	4401      	add	r1, r0
    16f8:	1858      	adds	r0, r3, r1
    16fa:	4282      	cmp	r2, r0
    16fc:	6019      	str	r1, [r3, #0]
    16fe:	d1dd      	bne.n	16bc <_free_r+0x24>
    1700:	6810      	ldr	r0, [r2, #0]
    1702:	6852      	ldr	r2, [r2, #4]
    1704:	605a      	str	r2, [r3, #4]
    1706:	4401      	add	r1, r0
    1708:	6019      	str	r1, [r3, #0]
    170a:	e7d7      	b.n	16bc <_free_r+0x24>
    170c:	d902      	bls.n	1714 <_free_r+0x7c>
    170e:	230c      	movs	r3, #12
    1710:	602b      	str	r3, [r5, #0]
    1712:	e7d3      	b.n	16bc <_free_r+0x24>
    1714:	6820      	ldr	r0, [r4, #0]
    1716:	1821      	adds	r1, r4, r0
    1718:	428a      	cmp	r2, r1
    171a:	bf04      	itt	eq
    171c:	6811      	ldreq	r1, [r2, #0]
    171e:	6852      	ldreq	r2, [r2, #4]
    1720:	6062      	str	r2, [r4, #4]
    1722:	bf04      	itt	eq
    1724:	1809      	addeq	r1, r1, r0
    1726:	6021      	streq	r1, [r4, #0]
    1728:	605c      	str	r4, [r3, #4]
    172a:	e7c7      	b.n	16bc <_free_r+0x24>
    172c:	bd38      	pop	{r3, r4, r5, pc}
    172e:	bf00      	nop
    1730:	10000268 	.word	0x10000268

00001734 <_malloc_r>:
_malloc_r():
    1734:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1736:	1ccd      	adds	r5, r1, #3
    1738:	f025 0503 	bic.w	r5, r5, #3
    173c:	3508      	adds	r5, #8
    173e:	2d0c      	cmp	r5, #12
    1740:	bf38      	it	cc
    1742:	250c      	movcc	r5, #12
    1744:	2d00      	cmp	r5, #0
    1746:	4606      	mov	r6, r0
    1748:	db01      	blt.n	174e <_malloc_r+0x1a>
    174a:	42a9      	cmp	r1, r5
    174c:	d903      	bls.n	1756 <_malloc_r+0x22>
    174e:	230c      	movs	r3, #12
    1750:	6033      	str	r3, [r6, #0]
    1752:	2000      	movs	r0, #0
    1754:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1756:	f000 f85f 	bl	1818 <__malloc_lock>
    175a:	4921      	ldr	r1, [pc, #132]	; (17e0 <_malloc_r+0xac>)
    175c:	680a      	ldr	r2, [r1, #0]
    175e:	4614      	mov	r4, r2
    1760:	b99c      	cbnz	r4, 178a <_malloc_r+0x56>
    1762:	4f20      	ldr	r7, [pc, #128]	; (17e4 <_malloc_r+0xb0>)
    1764:	683b      	ldr	r3, [r7, #0]
    1766:	b923      	cbnz	r3, 1772 <_malloc_r+0x3e>
    1768:	4621      	mov	r1, r4
    176a:	4630      	mov	r0, r6
    176c:	f000 f83c 	bl	17e8 <_sbrk_r>
    1770:	6038      	str	r0, [r7, #0]
    1772:	4629      	mov	r1, r5
    1774:	4630      	mov	r0, r6
    1776:	f000 f837 	bl	17e8 <_sbrk_r>
    177a:	1c43      	adds	r3, r0, #1
    177c:	d123      	bne.n	17c6 <_malloc_r+0x92>
    177e:	230c      	movs	r3, #12
    1780:	6033      	str	r3, [r6, #0]
    1782:	4630      	mov	r0, r6
    1784:	f000 f84e 	bl	1824 <__malloc_unlock>
    1788:	e7e3      	b.n	1752 <_malloc_r+0x1e>
    178a:	6823      	ldr	r3, [r4, #0]
    178c:	1b5b      	subs	r3, r3, r5
    178e:	d417      	bmi.n	17c0 <_malloc_r+0x8c>
    1790:	2b0b      	cmp	r3, #11
    1792:	d903      	bls.n	179c <_malloc_r+0x68>
    1794:	6023      	str	r3, [r4, #0]
    1796:	441c      	add	r4, r3
    1798:	6025      	str	r5, [r4, #0]
    179a:	e004      	b.n	17a6 <_malloc_r+0x72>
    179c:	6863      	ldr	r3, [r4, #4]
    179e:	42a2      	cmp	r2, r4
    17a0:	bf0c      	ite	eq
    17a2:	600b      	streq	r3, [r1, #0]
    17a4:	6053      	strne	r3, [r2, #4]
    17a6:	4630      	mov	r0, r6
    17a8:	f000 f83c 	bl	1824 <__malloc_unlock>
    17ac:	f104 000b 	add.w	r0, r4, #11
    17b0:	1d23      	adds	r3, r4, #4
    17b2:	f020 0007 	bic.w	r0, r0, #7
    17b6:	1ac2      	subs	r2, r0, r3
    17b8:	d0cc      	beq.n	1754 <_malloc_r+0x20>
    17ba:	1a1b      	subs	r3, r3, r0
    17bc:	50a3      	str	r3, [r4, r2]
    17be:	e7c9      	b.n	1754 <_malloc_r+0x20>
    17c0:	4622      	mov	r2, r4
    17c2:	6864      	ldr	r4, [r4, #4]
    17c4:	e7cc      	b.n	1760 <_malloc_r+0x2c>
    17c6:	1cc4      	adds	r4, r0, #3
    17c8:	f024 0403 	bic.w	r4, r4, #3
    17cc:	42a0      	cmp	r0, r4
    17ce:	d0e3      	beq.n	1798 <_malloc_r+0x64>
    17d0:	1a21      	subs	r1, r4, r0
    17d2:	4630      	mov	r0, r6
    17d4:	f000 f808 	bl	17e8 <_sbrk_r>
    17d8:	3001      	adds	r0, #1
    17da:	d1dd      	bne.n	1798 <_malloc_r+0x64>
    17dc:	e7cf      	b.n	177e <_malloc_r+0x4a>
    17de:	bf00      	nop
    17e0:	10000268 	.word	0x10000268
    17e4:	1000026c 	.word	0x1000026c

000017e8 <_sbrk_r>:
_sbrk_r():
    17e8:	b538      	push	{r3, r4, r5, lr}
    17ea:	4c06      	ldr	r4, [pc, #24]	; (1804 <_sbrk_r+0x1c>)
    17ec:	2300      	movs	r3, #0
    17ee:	4605      	mov	r5, r0
    17f0:	4608      	mov	r0, r1
    17f2:	6023      	str	r3, [r4, #0]
    17f4:	f7ff fd2c 	bl	1250 <_sbrk>
    17f8:	1c43      	adds	r3, r0, #1
    17fa:	d102      	bne.n	1802 <_sbrk_r+0x1a>
    17fc:	6823      	ldr	r3, [r4, #0]
    17fe:	b103      	cbz	r3, 1802 <_sbrk_r+0x1a>
    1800:	602b      	str	r3, [r5, #0]
    1802:	bd38      	pop	{r3, r4, r5, pc}
    1804:	10000270 	.word	0x10000270

00001808 <strlen>:
strlen():
    1808:	4603      	mov	r3, r0
    180a:	f813 2b01 	ldrb.w	r2, [r3], #1
    180e:	2a00      	cmp	r2, #0
    1810:	d1fb      	bne.n	180a <strlen+0x2>
    1812:	1a18      	subs	r0, r3, r0
    1814:	3801      	subs	r0, #1
    1816:	4770      	bx	lr

00001818 <__malloc_lock>:
__malloc_lock():
    1818:	4801      	ldr	r0, [pc, #4]	; (1820 <__malloc_lock+0x8>)
    181a:	f000 b809 	b.w	1830 <__retarget_lock_acquire_recursive>
    181e:	bf00      	nop
    1820:	10000278 	.word	0x10000278

00001824 <__malloc_unlock>:
__malloc_unlock():
    1824:	4801      	ldr	r0, [pc, #4]	; (182c <__malloc_unlock+0x8>)
    1826:	f000 b804 	b.w	1832 <__retarget_lock_release_recursive>
    182a:	bf00      	nop
    182c:	10000278 	.word	0x10000278

00001830 <__retarget_lock_acquire_recursive>:
__retarget_lock_acquire_recursive():
    1830:	4770      	bx	lr

00001832 <__retarget_lock_release_recursive>:
__retarget_lock_release_recursive():
    1832:	4770      	bx	lr
    1834:	0064656c 	.word	0x0064656c
    1838:	70704176 	.word	0x70704176
    183c:	6163696c 	.word	0x6163696c
    1840:	6e6f6974 	.word	0x6e6f6974
    1844:	6c6c614d 	.word	0x6c6c614d
    1848:	6146636f 	.word	0x6146636f
    184c:	64656c69 	.word	0x64656c69
    1850:	6b6f6f48 	.word	0x6b6f6f48
    1854:	63202928 	.word	0x63202928
    1858:	656c6c61 	.word	0x656c6c61
    185c:	6e203b64 	.word	0x6e203b64
    1860:	6f6d206f 	.word	0x6f6d206f
    1864:	6d206572 	.word	0x6d206572
    1868:	726f6d65 	.word	0x726f6d65
    186c:	0079      	.short	0x0079
    186e:	4449      	.short	0x4449
    1870:	ff00454c 	.word	0xff00454c

00001874 <hw_timers>:
    1874:	40004000 00000001 40008000 00000002     .@.@.......@....
    1884:	40090000 00000003 40094000 00000004     ...@.....@.@....

00001894 <lpc_peripheral_pconp_bit_map>:
    1894:	16020100 18040317 ffffff19              ............
